{
  "openapi": "3.0.1",
  "info": {
    "title": "Indexserver",
    "version": "20.0.0.111"
  },
  "servers": [
    {
      "url": "http://eloServer.com:6056/ix-Archive/rest",
      "description": "Nav20"
    }
  ],
  "paths": {
    "/BUtility/upload": {
      "summary": "Upload file.",
      "post": {
        "tags": [
          "BUtility"
        ],
        "operationId": "BUtility_upload",
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_BUtility_upload"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/ClientNotification/adminMode": {
      "summary": "Administration mode was changed.",
      "description": "Interface de.elo.ix.client.notify.ClientNotification, method adminMode",
      "post": {
        "tags": [
          "ClientNotification"
        ],
        "operationId": "ClientNotification_adminMode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_ClientNotification_adminMode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/ClientNotification/updateTask": {
      "summary": "Reserved.",
      "description": "Interface de.elo.ix.client.notify.ClientNotification, method updateTask",
      "post": {
        "tags": [
          "ClientNotification"
        ],
        "operationId": "ClientNotification_updateTask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_ClientNotification_updateTask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/DocumentEvents/beginDownload": {
      "summary": "Provide a document processor object for a stream being downloaded.",
      "description": "Return null, if this stream should not be\n processed.",
      "post": {
        "tags": [
          "DocumentEvents"
        ],
        "operationId": "DocumentEvents_beginDownload",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_DocumentEvents_beginDownload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_770771503"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/DocumentEvents/beginUpload": {
      "summary": "Provide a document processor object for a stream being uploaded.",
      "description": "Return null, if this stream should not be\n processed. If {@link UpDownloadEventInfo#preliminaryTest} is true, the returned document processor is only checked\n to be not null. It is not called to process a stream.",
      "post": {
        "tags": [
          "DocumentEvents"
        ],
        "operationId": "DocumentEvents_beginUpload",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_DocumentEvents_beginUpload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_770771503"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/DocumentProcessor/process": {
      "summary": "Process the given stream.",
      "description": "Interface de.elo.ix.client.devents.DocumentProcessor, method process",
      "post": {
        "tags": [
          "DocumentProcessor"
        ],
        "operationId": "DocumentProcessor_process",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_DocumentProcessor_process"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_190251704"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/FeedNotification/updateAction": {
      "summary": "Called when an action is created or updated.",
      "description": "Interface de.elo.ix.client.feed.FeedNotification, method updateAction",
      "post": {
        "tags": [
          "FeedNotification"
        ],
        "operationId": "FeedNotification_updateAction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedNotification_updateAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/FeedService/checkinAction": {
      "summary": "Create or update a document feed entry.",
      "description": "Interface de.elo.ix.client.feed.FeedService, method checkinAction",
      "post": {
        "tags": [
          "FeedService"
        ],
        "operationId": "FeedService_checkinAction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_checkinAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/FeedService/checkoutAction": {
      "summary": "Read a document feed entry.",
      "description": "Interface de.elo.ix.client.feed.FeedService, method checkoutAction",
      "post": {
        "tags": [
          "FeedService"
        ],
        "operationId": "FeedService_checkoutAction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_checkoutAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_736351635"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/FeedService/checkoutHashTag": {
      "summary": "Read a HashTag Object from Database",
      "description": "Interface de.elo.ix.client.feed.FeedService, method checkoutHashTag",
      "post": {
        "tags": [
          "FeedService"
        ],
        "operationId": "FeedService_checkoutHashTag",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_checkoutHashTag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1143177929"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/FeedService/createAction": {
      "summary": "Initialize a document feed item object. This function does not store the created action in the database.",
      "description": "Use\n {@link #checkinAction(ClientInfo, Action, ActionZ)} to make an Action object persistent. The returned object allows\n read access for everyone.",
      "post": {
        "tags": [
          "FeedService"
        ],
        "operationId": "FeedService_createAction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_createAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_736351635"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/FeedService/createHashTagSubscription": {
      "summary": "Creates a HashTag Subscription",
      "description": "Interface de.elo.ix.client.feed.FeedService, method createHashTagSubscription",
      "post": {
        "tags": [
          "FeedService"
        ],
        "operationId": "FeedService_createHashTagSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_createHashTagSubscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_323351719"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/FeedService/findFirstActions": {
      "summary": "Find actions of document feeds.",
      "description": "\u003cp\u003e\n In order to receive all actions for a document feed, call this function with {@link FindActionsInfo#objId} set to a\n Sord ID, GUID, etc. The results are returned in {@link FindResult#getActions()}. The Feed object associated to the\n Sord is returned in {@link FindResult#getFeeds()}.\n \u003c/p\u003e\n \u003cp\u003e\n Call IXServicePortIF.findClose to release internal resources when finished.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "FeedService"
        ],
        "operationId": "FeedService_findFirstActions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_findFirstActions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/FeedService/findFirstHashTagRelation": {
      "description": "Interface de.elo.ix.client.feed.FeedService, method findFirstHashTagRelation",
      "post": {
        "tags": [
          "FeedService"
        ],
        "operationId": "FeedService_findFirstHashTagRelation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_findFirstHashTagRelation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/FeedService/findFirstNotification": {
      "description": "Interface de.elo.ix.client.feed.FeedService, method findFirstNotification",
      "post": {
        "tags": [
          "FeedService"
        ],
        "operationId": "FeedService_findFirstNotification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_findFirstNotification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/FeedService/findHashTagByActions": {
      "summary": "Returns all HashTags which occurs in a given Array of Actions",
      "description": "Interface de.elo.ix.client.feed.FeedService, method findHashTagByActions",
      "post": {
        "tags": [
          "FeedService"
        ],
        "operationId": "FeedService_findHashTagByActions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_findHashTagByActions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1535847981"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/FeedService/findHashTags": {
      "summary": "Returns all HashTags.",
      "description": "FindHashTagInfo filter the result by, createDateIso, lastUsedIso and minCount",
      "post": {
        "tags": [
          "FeedService"
        ],
        "operationId": "FeedService_findHashTags",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_findHashTags"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1556767716"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/FeedService/findNextActions": {
      "summary": "Continue reading results from a search started with findFirstActions.",
      "description": "Interface de.elo.ix.client.feed.FeedService, method findNextActions",
      "post": {
        "tags": [
          "FeedService"
        ],
        "operationId": "FeedService_findNextActions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_findNextActions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/FeedService/findNextHashTagRelation": {
      "description": "Interface de.elo.ix.client.feed.FeedService, method findNextHashTagRelation",
      "post": {
        "tags": [
          "FeedService"
        ],
        "operationId": "FeedService_findNextHashTagRelation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_findNextHashTagRelation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/FeedService/findNextNotification": {
      "description": "Interface de.elo.ix.client.feed.FeedService, method findNextNotification",
      "post": {
        "tags": [
          "FeedService"
        ],
        "operationId": "FeedService_findNextNotification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_findNextNotification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/FeedService/findPostActions": {
      "summary": "Returns a Feedpost with all comments.",
      "description": "Interface de.elo.ix.client.feed.FeedService, method findPostActions",
      "post": {
        "tags": [
          "FeedService"
        ],
        "operationId": "FeedService_findPostActions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_findPostActions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2013723887"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/FeedService/internalInsertSystemAction": {
      "summary": "Reserved.",
      "description": "Interface de.elo.ix.client.feed.FeedService, method internalInsertSystemAction",
      "post": {
        "tags": [
          "FeedService"
        ],
        "operationId": "FeedService_internalInsertSystemAction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_internalInsertSystemAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_736351635"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/FeedService/registerNotify": {
      "summary": "Register a callback interface. The server calls functions of this interface if the document feed is modified.",
      "description": "Interface de.elo.ix.client.feed.FeedService, method registerNotify",
      "post": {
        "tags": [
          "FeedService"
        ],
        "operationId": "FeedService_registerNotify",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_registerNotify"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/FeedService/unregisterNotify": {
      "summary": "Unregister a callback interface. Remove callback interface from internal list.",
      "description": "Interface de.elo.ix.client.feed.FeedService, method unregisterNotify",
      "post": {
        "tags": [
          "FeedService"
        ],
        "operationId": "FeedService_unregisterNotify",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_unregisterNotify"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/FioService/finishExport": {
      "summary": "Reserved.",
      "description": "Interface de.elo.ix.client.fio.FioService, method finishExport",
      "post": {
        "tags": [
          "FioService"
        ],
        "operationId": "FioService_finishExport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FioService_finishExport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1700162512"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/FioService/startExport": {
      "summary": "Reserved.",
      "description": "Interface de.elo.ix.client.fio.FioService, method startExport",
      "post": {
        "tags": [
          "FioService"
        ],
        "operationId": "FioService_startExport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FioService_startExport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1700162512"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/FioService/startImport": {
      "summary": "Reserved.",
      "description": "Interface de.elo.ix.client.fio.FioService, method startImport",
      "post": {
        "tags": [
          "FioService"
        ],
        "operationId": "FioService_startImport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FioService_startImport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1700162512"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/HealthCheckService/computeDoubleValue": {
      "summary": "Compute value. This function computes a new value using the specified operation.",
      "description": "Example: \u003ccode\u003e\u003cpre\u003e\n IXConnection conn \u003d ...\n conn.getHealthCheckService().computeDoubleValue(\"valuename\", 1.2, HealthCheckValueOperation.ADD); \n \u003c/pre\u003e\u003c/code\u003e",
      "post": {
        "tags": [
          "HealthCheckService"
        ],
        "operationId": "HealthCheckService_computeDoubleValue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_HealthCheckService_computeDoubleValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/HealthCheckService/read": {
      "summary": "Read given health check values.",
      "description": "Interface de.elo.ix.client.health.HealthCheckService, method read",
      "post": {
        "tags": [
          "HealthCheckService"
        ],
        "operationId": "HealthCheckService_read",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_HealthCheckService_read"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_333475674"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/HealthCheckService/update": {
      "summary": "Update one value.",
      "description": "Example: \u003ccode\u003e\u003cpre\u003e\n IXConnection conn \u003d ...\n HealthCheckInfo hci \u003d new HealthCheckInfo();\n hci.setName(\"valuename\");\n hci.setStringValue(\"string1\");\n conn.getHealthCheckService().update(hci); \n \u003c/pre\u003e\u003c/code\u003e",
      "post": {
        "tags": [
          "HealthCheckService"
        ],
        "operationId": "HealthCheckService_update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_HealthCheckService_update"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/HealthCheckService/updateAll": {
      "summary": "Update given values.",
      "description": "Interface de.elo.ix.client.health.HealthCheckService, method updateAll",
      "post": {
        "tags": [
          "HealthCheckService"
        ],
        "operationId": "HealthCheckService_updateAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_HealthCheckService_updateAll"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/HealthCheckService/updateDoubleValue": {
      "summary": "Update one value. This function overwrites an existing value.",
      "description": "Example: \u003ccode\u003e\u003cpre\u003e\n IXConnection conn \u003d ...\n conn.getHealthCheckService().updateDoubleValue(\"valuename\", 1.2); \n \u003c/pre\u003e\u003c/code\u003e",
      "post": {
        "tags": [
          "HealthCheckService"
        ],
        "operationId": "HealthCheckService_updateDoubleValue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_HealthCheckService_updateDoubleValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/HealthCheckService/updateMeanValue": {
      "summary": "Update arithmetic mean. This function adds the given mean value to the already existing value in the database.",
      "description": "The\n new value is computed as: (db-meanValue * db-sampleSize + meanValue * sampleSize) / (db-sampleSize + sampleSize).\n Example: \u003ccode\u003e\u003cpre\u003e\n IXConnection conn \u003d ...\n double value \u003d (1.1 + 1.2 + 1.3) / 3;\n conn.getHealthCheckService().updateMeanValue(\"valuename\", 1.2, 3); \n \u003c/pre\u003e\u003c/code\u003e",
      "post": {
        "tags": [
          "HealthCheckService"
        ],
        "operationId": "HealthCheckService_updateMeanValue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_HealthCheckService_updateMeanValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/HealthCheckService/uploadAll": {
      "summary": "Force uploading health check data to web service. This function should only be used in test scenarios.",
      "description": "Indexserver\n automatically uploads health check data one time per month.",
      "post": {
        "tags": [
          "HealthCheckService"
        ],
        "operationId": "HealthCheckService_uploadAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_HealthCheckService_uploadAll"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_21"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXEventBusHandler/processEventBusEvents": {
      "description": "Interface de.elo.ix.client.IXEventBusHandler, method processEventBusEvents",
      "post": {
        "tags": [
          "IXEventBusHandler"
        ],
        "operationId": "IXEventBusHandler_processEventBusEvents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXEventBusHandler_processEventBusEvents"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/executeRegisteredFunction": {
      "summary": "This event is raised when the IXServicePortIF function executeRegisteredFunction is called.",
      "description": "Interface de.elo.ix.client.IXServerEvents, method executeRegisteredFunction",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_executeRegisteredFunction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_executeRegisteredFunction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1191976387"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/executeRegisteredFunctionString": {
      "summary": "This event is raised when the IXServicePortIF function executeRegisteredFunctionString is called.",
      "description": "Interface de.elo.ix.client.IXServerEvents, method executeRegisteredFunctionString",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_executeRegisteredFunctionString",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_executeRegisteredFunctionString"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/getAppInfo": {
      "summary": "This mandatory method returns information about the application that implements the interface.",
      "description": "It should return the\n application name and version and the implementors name. The returned String is printed into the log file and is\n added to error messages. This method is mandatory.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_getAppInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_getAppInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/getUserNames": {
      "summary": "Get lean user and group information.",
      "description": "This method is called to internally process the API function\n {@link IXServicePortIF#getUserNames(ClientInfo, String[], CheckoutUsersZ)}. This method should call\n {@link IXServicePortIF#getUserNames(ClientInfo, String[], CheckoutUsersZ)} internally and should only modify\n {@link UserName#flags2} or {@link UserName#flags2} in the returned array. E.g. {@link UserName#flags2} can be\n changed in order to hide particular users by removing the bit {@link AccessC#FLAG2_VISIBLE_USER}.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_getUserNames",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_getUserNames"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1001617329"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/hasMethod": {
      "summary": "This mandatory method tests, wether an interace method is implemented.",
      "description": "The Indexserver calls this function for each\n method, before the method is called the first time.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_hasMethod",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_hasMethod"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onAfterCheckinActivity": {
      "summary": "This event is raised asynchronously after an activity is written.",
      "description": "The event is invoked too, if the activity was\n deleted. An activity is called deleted, if member activity.backAt is not empty.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onAfterCheckinActivity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onAfterCheckinActivity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onAfterCheckinDocEnd": {
      "summary": "This asynchronous event is raised after a document or a document version has been checked in.",
      "description": "It is raised in\n checkinDocEnd, checkinDocsEnd, startImport.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onAfterCheckinDocEnd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onAfterCheckinDocEnd"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onAfterCheckinMap": {
      "summary": "This event is called after {@link IXServicePortIF#checkinMap(ClientInfo, String, String, int, KeyValue[], LockZ)}",
      "description": "has processed.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onAfterCheckinMap",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onAfterCheckinMap"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onAfterCheckinNotes": {
      "summary": "This asynchronous event is raised after a Note object has been written.",
      "description": "It is raised in",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onAfterCheckinNotes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onAfterCheckinNotes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onAfterCheckinReminder": {
      "summary": "This asynchronous event is raised after checkinReminder was called.",
      "description": "Interface de.elo.ix.client.IXServerEvents, method onAfterCheckinReminder",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onAfterCheckinReminder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onAfterCheckinReminder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onAfterCheckinSord": {
      "summary": "This asynchronous event is raised after a Sord object has been written.",
      "description": "It is raised in checkinSord, checkinDocEnd,\n checkinDocsEnd, checkinSordPath, startImport.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onAfterCheckinSord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onAfterCheckinSord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onAfterCheckinUsers": {
      "summary": "This event is called after {@link IXServicePortIF#checkinUsers(ClientInfo, UserInfo[], CheckinUsersZ, LockZ)} has",
      "description": "processed the supplied UserInfo objects. Indexserver invokes this event asynchronously after the users have been\n written.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onAfterCheckinUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onAfterCheckinUsers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onAfterDelegateWorkflowNode": {
      "summary": "This event is invoked after a workflow node has been delegated.",
      "description": "The implementor can use this function to notify\n other systems about the delegation. It is executed asynchronously after the API call delegateWorkflowNode has been\n successfully executed. Modifications to parameters or thrown exceptions are ignored.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onAfterDelegateWorkflowNode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onAfterDelegateWorkflowNode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onAfterDeleteMap": {
      "summary": "This event is called after {@link IXServicePortIF#deleteMap(ClientInfo, String, String, String[], LockZ)} has",
      "description": "processed.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onAfterDeleteMap",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onAfterDeleteMap"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onAfterDeleteSord": {
      "summary": "This asynchronous event is raised after a Sord is deleted. It is raised in deleteSord, cleanupStart.",
      "description": "Interface de.elo.ix.client.IXServerEvents, method onAfterDeleteSord",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onAfterDeleteSord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onAfterDeleteSord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onAfterEndEditWorkFlowNode": {
      "summary": "This asynchronous event is raised after a workflow node is forwarded by endEditWorkFlowNode.",
      "description": "Interface de.elo.ix.client.IXServerEvents, method onAfterEndEditWorkFlowNode",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onAfterEndEditWorkFlowNode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onAfterEndEditWorkFlowNode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onAfterLogin": {
      "summary": "This method is called asynchronously after a user has been successfully authenticated.",
      "description": "Interface de.elo.ix.client.IXServerEvents, method onAfterLogin",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onAfterLogin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onAfterLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onAfterRefSord": {
      "summary": "This asynchronous event is raised after a Sord is moved or a reference is created.",
      "description": "It is raised in refSord,\n copySord.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onAfterRefSord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onAfterRefSord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onAfterStartWorkFlow": {
      "summary": "This asynchronous event is raised after a workflow is started.",
      "description": "Interface de.elo.ix.client.IXServerEvents, method onAfterStartWorkFlow",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onAfterStartWorkFlow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onAfterStartWorkFlow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onBeforeCheckinActivity": {
      "summary": "This event is raised before an activity is written. The event is invoked too, if the activity is to be deleted.",
      "description": "An\n activity is called deleted, if member activity.backAt is not empty.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onBeforeCheckinActivity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onBeforeCheckinActivity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onBeforeCheckinDocEnd": {
      "summary": "This synchronous event is raised before a document or a document version is checked in.",
      "description": "It is raised in\n checkinDocEnd, checkinDocsEnd, startImport.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onBeforeCheckinDocEnd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onBeforeCheckinDocEnd"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onBeforeCheckinMap": {
      "summary": "This event is called before {@link IXServicePortIF#checkinMap(ClientInfo, String, String, int, KeyValue[], LockZ)}",
      "description": "is executed.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onBeforeCheckinMap",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onBeforeCheckinMap"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1826370901"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onBeforeCheckinNotes": {
      "summary": "This synchronous event is raised before a Note object is written.",
      "description": "It is raised in checkinNotes",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onBeforeCheckinNotes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onBeforeCheckinNotes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onBeforeCheckinSord": {
      "summary": "This synchronous event is raised before a Sord object is written.",
      "description": "It is raised in checkinSord, checkinDocEnd,\n checkinDocsEnd, startImport.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onBeforeCheckinSord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onBeforeCheckinSord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onBeforeCheckinUsers": {
      "summary": "This event is invoked before {@link IXServicePortIF#checkinUsers(ClientInfo, UserInfo[], CheckinUsersZ, LockZ)}",
      "description": "processes the supplied UserInfo objects.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onBeforeCheckinUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onBeforeCheckinUsers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1132956238"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onBeforeDelegateWorkflowNode": {
      "summary": "This event is invoked before a workflow node is delegated.",
      "description": "The implementor can use this function to perform\n additional checks on delegation before Indexserver performs its plausibility and access checks. Furthermore, it can\n be used to modify the members of the passed delegateNodeInfo obect. To deny delegation, throw an exception like:\n \n \u003cpre\u003e\n \u003ccode\u003e\n throw [ IXExceptionC.ACCESS_DENIED, \"Delegate workflow denied.\" ];\n \u003c/code\u003e\n \u003c/pre\u003e\n \n This event function is executed synchronously to the API call delegateWorkflowNode.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onBeforeDelegateWorkflowNode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onBeforeDelegateWorkflowNode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onBeforeDeleteMap": {
      "summary": "This event is called before {@link IXServicePortIF#deleteMap(ClientInfo, String, String, String[], LockZ)} is",
      "description": "executed.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onBeforeDeleteMap",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onBeforeDeleteMap"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1888107655"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onBeforeDeleteSord": {
      "summary": "This synchronous event is raised before a Sord is deleted. It is raised in deleteSord, cleanupStart.",
      "description": "Interface de.elo.ix.client.IXServerEvents, method onBeforeDeleteSord",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onBeforeDeleteSord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onBeforeDeleteSord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onBeforeFindSords": {
      "summary": "This event is fired before the FindInfo object passed in findFirstSords is evaluated.",
      "description": "The passed findInfo object\n can be modified.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onBeforeFindSords",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onBeforeFindSords"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onBeforeFindSordsInternalSQL": {
      "summary": "This event is fired before findFirstSords executes the search statement.",
      "description": "Be aware of the fact that there is no\n guaranty about the generated FindSql data. Subsequent IX versions can create different FindSql objects for the same\n FindInfo object. Hence, modifications of the FindSql data might not work in future releases. Prefer to use\n {@link IXServerEvents#onBeforeFindSords(IXServerEventsContext, FindInfo, SordZ)} wherever possible.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onBeforeFindSordsInternalSQL",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onBeforeFindSordsInternalSQL"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onBeforeLogin": {
      "summary": "Before a user is authenticated the IX calls this method. Use it to allow or deny the the login to the user.",
      "description": "If the\n user is not allowed to login according to the {@link LoginScriptOptions} opts, an exception has to be thrown.\n \u003cp\u003e\n Example code: \u003ccode\u003e\u003cpre\u003e\n function onBeforeLogin(ec, user, opts) {\n   if (username \u003d\u003d \"OnlyWithWebClient\" \u0026amp;\u0026amp; options.getClientName() !\u003d LoginScriptOptionsC.CLIENT_NAME_WEBCLIENT) {\n     throw \"User may login only with the WebClient\";\n   }\n }\n \u003c/pre\u003e\u003c/code\u003e\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onBeforeLogin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onBeforeLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onBeforeRefSord": {
      "summary": "This synchronous event is raised before a Sord is moved or a reference is created.",
      "description": "It is raised in refSord,\n copySord.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onBeforeRefSord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onBeforeRefSord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onBeforeStartWorkFlow": {
      "summary": "This synchronous event is raised before a workflow is started.",
      "description": "Interface de.elo.ix.client.IXServerEvents, method onBeforeStartWorkFlow",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onBeforeStartWorkFlow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onBeforeStartWorkFlow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onBeforeTakeWorkFlowNode": {
      "summary": "This event is fired before {@link IXServicePortIF#takeWorkFlowNode(ClientInfo, int, int, String, int, LockZ)} is",
      "description": "processed.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onBeforeTakeWorkFlowNode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onBeforeTakeWorkFlowNode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onCheckSordAccess": {
      "summary": "Check access to Sord object. Use this method to replace the internal access checking of the ACL for Sord objects.",
      "description": "In order to deny access to the given sord, return false, otherwise return true.\n \u003cp\u003e\n This method should not be implemented by services for performance reasons. It is frequently called and should\n perform as fast as possible.\n \u003c/p\u003e\n \u003cp\u003e\n The Indexserver\u0027s access check function can be called via class de.elo.ix.jscript.Access. Example code: \u003ccode\u003e\u003cpre\u003e\n function onCheckSordAccess(ec, sord, sordZ, lur, opts) {\n   var acc \u003d new Packages.de.elo.ix.jscript.Access();\n   var succ \u003d acc.checkAccess(sord, lur);\n   return succ;\n } \n \u003c/pre\u003e\u003c/code\u003e\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onCheckSordAccess",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onCheckSordAccess"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onCreateDoc": {
      "summary": "This event is triggered in createDoc.",
      "description": "If an onCreateDoc event is configured, the event onCreateSord is not\n triggered in onCreateSord.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onCreateDoc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onCreateDoc"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_820228328"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onCreateSord": {
      "summary": "This event is triggered in createSord, checkinSordPath and optionally in createDoc.",
      "description": "Use this event in order to\n customize the initialization of an EditInfo resp. Sord object. The script can call the\n {@link IXServicePortIF#createSord(ClientInfo, String, String, EditInfoZ)} function in order to get a new EditInfo\n object. The script can return null, if the standard initialization should be used. Before the EditInfo object\n created by this function is returned to the client application, the following mebers are overwritten:\n EditInfo.sord.id\u003d-1, EditInfo.sord.guid\u003d\u003crandom GUID\u003e. All members in EditInfo that are not assigned by this\n function but requested from the element selector editZ, are assigned (as far as possible) before the EditInfo\n object is returned to the client. Hint: Although this function is named createSord, it has to return an EditInfo\n object. This event is not triggered, if there is an onCreateDoc event customized.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onCreateSord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onCreateSord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_820228328"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onFileUploadBuildResponse": {
      "summary": "This event is raised after files has been uploaded by the JSON API to build the response message.",
      "description": "The response\n message depends on the file upload solution used by the client side JavaScript. This event can only be implemented\n as a JavaScript function. It is not possible to process it in a WEB-service like other events in this interface.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onFileUploadBuildResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onFileUploadBuildResponse"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onFindClose": {
      "summary": "This event is called when a search via findFirstSords/findNextSords is closed.",
      "description": "Interface de.elo.ix.client.IXServerEvents, method onFindClose",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onFindClose",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onFindClose"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onFindSordsResult": {
      "summary": "This event is called for find results found by findFirstSords and findNextSords.",
      "description": "Interface de.elo.ix.client.IXServerEvents, method onFindSordsResult",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onFindSordsResult",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onFindSordsResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onInheritKeywording": {
      "summary": "This event is called when index values are inherited.",
      "description": "\u003cp\u003e\n Example:\n \n \u003cpre\u003e\n \u003ccode class\u003d\"example\"\u003e\n function onInheritKeywording(ec, sord, parent, okeyNames, reserved) {\n   for (var i \u003d 0; i \u0026lt; okeyNames.length; i++) {\n     var key \u003d okeyNames[i];\n     var value \u003d getObjKey(parent, key);\n     log.info(\"inherit \" + key + \", value\u003d\" + value);\n     setObjKey(sord, key, value);\n   }\n   return InheritKeywordingResult.INHERITED;\n }\n \u003c/code\u003e\n \u003c/pre\u003e\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onInheritKeywording",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onInheritKeywording"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_892356058"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onReadSord": {
      "summary": "Modify the Sord information returned in checkoutSord, checkoutDoc, findFirstSords, etc.",
      "description": "This function is called,\n before a Sord object is returned to the client application. It can be used to modify or delete some of the\n transmitted data. But it must not change the members sord.id and sord.guid. Furthermore it cannot prevent the Sord\n object from being transmitted. This method cannot be implemented by services because of the output parameters. This\n method is frequently called and should perform as fast as possible.",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onReadSord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onReadSord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onSendFeedToISearch": {
      "summary": "Every time feed documents are send to the iSearch to add it to the iSearch index, this event is called.",
      "description": "Interface de.elo.ix.client.IXServerEvents, method onSendFeedToISearch",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onSendFeedToISearch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onSendFeedToISearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServerEvents/onSendSordToISearch": {
      "summary": "Every time a Sord is send to the iSearch to add it to the iSearch index, this event is called.",
      "description": "Interface de.elo.ix.client.IXServerEvents, method onSendSordToISearch",
      "post": {
        "tags": [
          "IXServerEvents"
        ],
        "operationId": "IXServerEvents_onSendSordToISearch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServerEvents_onSendSordToISearch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/activateSubstitution": {
      "summary": "Activate the submitted substitution.",
      "description": "\u003cp\u003e\n Activates a submitted substitution if it the substitution can be activated manually (Substitution\u0027s\n {@link SubstitutionSettings#canBeActivatedManually} must be set to \u003ccode\u003etrue\u003c/code\u003e) and it is outside of any\n substitution period (defined in {@link Substitution#substitutionPeriods}\n \u003c/p\u003e\n \n \u003cp\u003e\n A substitution can be activated by the current user, if:\n \u003cul\u003e\n \u003cli\u003eThe current user is the substitute ({@link Substitution#substituteId}\n \u003cli\u003eThe current user is member of the group who is the substitute\n \u003cli\u003eThe current user is sub administrator of the substitute\n \u003cli\u003eThe current user is the direct superior of the substitute (ignoring groups, {@link UserInfo#superiorId} of the\n substitute must be the current user)\n \u003cli\u003eThe current user has main administrator rights.\n \u003c/ul\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_activateSubstitution",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_activateSubstitution"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/addUrlParams": {
      "summary": "Adds additional params to an upload or download URL.",
      "description": "\u003cp\u003e\n Currently, additional params are only available for download URLs.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_addUrlParams",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_addUrlParams"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/adminMode": {
      "summary": "Queries, enters or leaves the administration mode.",
      "description": "\u003cp\u003e\n In administration mode, only main administrators can logon to the archive.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_adminMode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_adminMode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/alive": {
      "summary": "Extends the ticket lifetime.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method alive",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_alive",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_alive"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/applyForNotifications": {
      "summary": "Specify, which notifications should be sent by the server.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method applyForNotifications",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_applyForNotifications",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_applyForNotifications"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_77743605"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/beginEditWorkFlowNode": {
      "summary": "Locks a person task node of an active workflow inside the database and returns data needed to edit it.",
      "description": "If lockZ is\n not set to \u003ccode\u003eLockC.NO\u003c/code\u003e, \u003ccode\u003eWFNode.inUseDate\u003c/code\u003e will be set to now.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_beginEditWorkFlowNode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_beginEditWorkFlowNode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1822579866"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/beginForwardWorkflowNode": {
      "summary": "Prepare forwarding of a workflow node.",
      "description": "Use this function to lock a workflow and get the data required for\n forwarding a node.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_beginForwardWorkflowNode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_beginForwardWorkflowNode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1822579866"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/changeSordMask": {
      "summary": "Changes the storage mask of a archive entry.",
      "description": "\u003cp\u003e\n The function does not update the object in the database. The method \u003ccode\u003echeckinSord\u003c/code\u003e must be used to write\n the changes into the database.\n \u003c/p\u003e\n \u003cp\u003e\n For new Sord objects (Sord.id \u0026lt; 0), ACL items are replaced by the definitions of the mask. Existing objects keep\n the previous ACL setting.\n \u003c/p\u003e\n \u003cp\u003e\n ObjKeys with IDs \u0026lt; ID_LINK (\u003d50) are converted into the format of the new associated DocMaskLine. ObjKeys with\n IDs \u0026gt;\u003d ID_LINK are not changed.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_changeSordMask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_changeSordMask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_820228328"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkLicense": {
      "summary": "Check licensing information. This function checks the given license information using proprietary algorithms.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkLicense",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkLicense",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkLicense"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_545905411"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinActivity": {
      "summary": "This function inserts or updates an activity.",
      "description": "\u003cp\u003e\n The current session must have read access to the given Sord. In order to update an existing activity, the current\n session must be sender or receiver of the activity (Acitivty.senderId, Activity.receiverId).\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinActivity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinActivity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinActivityProject": {
      "summary": "This function writes an activity project into the database.",
      "description": "\u003cp\u003e\n The current session must have the permission AccessC.FLAG_EDITACT in order to call this\n function.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinActivityProject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinActivityProject"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinAspect": {
      "summary": "Update or insert an {@link Aspect} object. This function requires permission {@link AccessC#FLAG_EDITMASK}.",
      "description": "An\n exception is thrown, if access is denied or if the aspect does not exist. Note: The name and type of an aspect line\n is fixed with the initial value during the first check in and cannot be changed later.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinAspect",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinAspect"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinColors": {
      "summary": "Check-in the marker definitions (colors for the archive entries).",
      "description": "This method deletes the current markers and\n inserts the supplied ones in \u003ccode\u003ecolors\u003c/code\u003e. To insert a new color, set its Id to -1. If the supplied\n \u003ccode\u003ecolors\u003c/code\u003e array does not contain a system color (Id \u003d\u003d 0), a new system color object is created. The\n objects must have unique IDs (or -1) and unique names. Since the existing colors are entirely replaced by this\n function, use {@link #checkoutColors2(ClientInfo, int, LockZ)} with option {@link ColorDataC#ALL_COLORS} to obtain\n all existing colors to prepare a call to this function.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinColors",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinColors"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinConfigFiles": {
      "summary": "Uploads configuration files to the configuration directory on the server.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinConfigFiles",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinConfigFiles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinConfigFiles"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinConfigFilesBegin": {
      "summary": "Prepare ConfigFile objects with URLs to upload configuration or intray files. The \u003ccode\u003enames[.",
      "description": "]\u003c/code\u003e the must\n contain the destination directory and file name.\n \u003ctable border\u003d\"2\"\u003e\n \u003ctr\u003e\n \u003ctd\u003eexample for file names\u003c/td\u003e\n \u003ctd\u003edescription\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e\u003ccode\u003enames[.]\u003dpeter/postbox/file1.txt\u003c/code\u003e\u003c/td\u003e\n \u003ctd\u003ePrepares a \u003ccode\u003eConfigFile\u003c/code\u003e object to write file1.txt into peter s server side intray directory\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e\u003ccode\u003econfigFile[.].dir\u003deloscripts/file1.txt\u003c/code\u003e\u003c/td\u003e\n \u003ctd\u003ePrepares a \u003ccode\u003eConfigFile\u003c/code\u003e object to write file1.txt into the directory for scripts.\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e\n \n \u003cpre\u003e\n \u003ccode\u003e\n //Example for uploading a file into the server side intray of a user.\n IXConnection conn \u003d ...\n String userName \u003d ...\n File file \u003d ...\n String destFile \u003d userName + \"/\" + CONST.CONFIG_FILE.POSTBOX + \"/\" + file.getName();\n ConfigFile[] configFiles \u003d conn.ix().checkinConfigFilesBegin(new String[] {destFile});\n String uploadResult \u003d conn.upload(configFiles[0].url, file);\n configFiles[0].setUploadResult(uploadResult);\n configFiles \u003d conn.ix().checkinConfigFilesEnd(configFiles);\u003cbr/\u003e\n \u003c/code\u003e\n \u003c/pre\u003e\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinConfigFilesBegin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinConfigFilesBegin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1737266313"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinConfigFilesEnd": {
      "summary": "Finishes a check-in procedure for configuration files.",
      "description": "\u003cp\u003e\n For files that have been uploaded into the in-tray folder of other users, no \u003ccode\u003eConfigFile\u003c/code\u003e object can be\n returned, because the in-tray folders of other users are not readable.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinConfigFilesEnd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinConfigFilesEnd"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1737266313"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinCounters": {
      "summary": "Update counter values or create new counters.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinCounters",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinCounters",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinCounters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinCryptInfos": {
      "summary": "Write and optionally unlock encryption information.",
      "description": "\u003cp\u003e\n The passwords supplied in cryptInfos must be encrypted with the IXClient.encryptPassword function.\n \u003c/p\u003e\n \u003cp\u003e\n Administrators are allowed to alter internal keys and encryption set names.\n \u003ctable border\u003d\"2\"\u003e\n \u003ctr\u003e\n \u003ctd\u003ecryptInfos[.].keyInfo\u003c/td\u003e\n \u003ctd\u003eDescription\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e*\u003c/td\u003e\n \u003ctd\u003eGenerate new internal keys and set cryptInfos[.].pwd as external password.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eValue from another ELO system\u003c/td\u003e\n \u003ctd\u003eSet this value as internal and external key pair. cryptInfos[.].pwd is ignored.\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinCryptInfos",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinCryptInfos"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinDocBegin": {
      "summary": "Prepares the Indexserver to enable a document to be checked in.",
      "description": "\u003cp\u003e\n The check in procedure consists of three steps. First a call to \u003ccode\u003echeckinDocBegin\u003c/code\u003e prepares the\n Indexserver to upload a document. The function returns among other things the URL to which the document must be up\n loaded. In the second step the document is uploaded to this URL. The final step is to call\n \u003ccode\u003echeckinDocEnd\u003c/code\u003e with the result of the upload process. The upload result is interpreted by the\n Indexserver and the document is inserted into the database.\n \u003c/p\u003e\n \u003cp\u003e\n The upload URL accesses the ELODM (document manager service) directly due to performance reasons . The URL is valid\n as long as the session ticket is valid.\n \u003c/p\u003e\n \u003cp\u003e\n It is possible to insert more than one document or attachment versions and a signature file.\n \u003c/p\u003e\n \u003cp\u003e\n The parameter \u003ccode\u003edocument\u003c/code\u003e of \u003ccode\u003echeckinDocBegin\u003c/code\u003e must contain a minimum of one version in\n \u003ccode\u003edocument.docs\u003c/code\u003e, \u003ccode\u003edocument.atts\u003c/code\u003e or \u003ccode\u003edocument.sig\u003c/code\u003e. The minimum that must be set\n in the version object is the member \u003ccode\u003eDocVersion.ext\u003c/code\u003e.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinDocBegin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinDocBegin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_341056676"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinDocBegin2": {
      "summary": "Prepares the Indexserver to enable a document to be checked in.",
      "description": "\u003cp\u003e\n Retrieves path id and encryption set from the sord object and sets these values in document versions of this\n document. In case of limited release document, work version is set to false. Document id will not be set to 0, if\n \"keepIds\" is true in option \"opts\" (when no new document but only signature should be added for a version\n controlled document, up to this version clients had to reset the actual document id after running method\n checkinDocBegin)\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinDocBegin2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinDocBegin2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_341056676"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinDocDupl": {
      "summary": "Checks-in already existing documents again.",
      "description": "\u003cp\u003e\n This method is used to reduce transmission time as the document does not have to be checked-out.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinDocDupl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinDocDupl"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_341056676"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinDocEnd": {
      "summary": "Checks in an uploaded document.",
      "description": "\u003cp\u003e\n See \u003ccode\u003echeckinDocBegin\u003c/code\u003e, if you want to checkin new document or attachment version(s).\n \u003c/p\u003e\n \u003cp\u003e\n Changing the document or attachment work version, version number, comment, flags or status: \u003ccode\u003e\u003cbr/\u003e\u003cbr/\u003e\n Document doc \u003d new Document();\u003cbr/\u003e\n doc.objId \u003d an object ID or GUID\u003cbr/\u003e\n doc.docs \u003d new DocVersion[] {new DocVersion()};\u003cbr/\u003e\n doc.docs[0].id \u003d a document ID;\u003cbr/\u003e\n doc.docs[0].workVersion \u003d true;\u003cbr/\u003e\n doc.docs[0].version \u003d \"2.0\";\u003cbr/\u003e\n doc.docs[0].comment \u003d \"new comment\";\u003cbr/\u003e\n doc.docs[0].milestone \u003d true;\u003cbr/\u003e\n doc.docs[0].deleted \u003d false;\u003cbr/\u003e\n ix.checkinDocEnd(ci, null, null, doc, LOCK.NO);\u003cbr/\u003e\n \u003c/code\u003e\n \u003c/p\u003e\n \u003cp\u003e\n If the supplied sord has \u003ccode\u003esord.type\u003d\u003dLBT_DOCUMENT\u003c/code\u003e, sord.type will be detected from the file extension\n of the given work version.\n \u003c/p\u003e\n \u003cp\u003e\n If the document is only to be unlocked, see \u003ccode\u003echeckinSord\u003c/code\u003e.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinDocEnd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinDocEnd"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_341056676"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinDocMask": {
      "summary": "Writes a keywording form into the database. A new mask is inserted when \u003ccode\u003edocMask.no\u003c/code\u003e is less than 0.",
      "description": "\u003cp\u003e\n If an existing keywording form is written with modified group names (DocMaskLine.key), a background thread is\n started to update the existing index values (Sord.objKeys[.].name). Use collectJobState to watch the state of the\n background job. Its name is \u0026quot;Update existing index values for keywording form\u003d...\u0026quot;\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinDocMask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinDocMask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinDocMaskLineTemplate": {
      "summary": "Writes a keyword template into the database.",
      "description": "If this keyword template is already used in keywording forms, these\n keywording forms will be updated. This function requires ELO 10 license.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinDocMaskLineTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinDocMaskLineTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinDocsBegin": {
      "summary": "This method prepares the Index Server to allow multiple documents to be checked in at one time.",
      "description": "Utilized in the\n same manner as \u003ccode\u003echeckinDocBegin\u003c/code\u003e but is for multiple documents.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinDocsBegin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinDocsBegin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1047127860"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinDocsEnd": {
      "summary": "This method checks-in uploaded documents.",
      "description": "Utilized in the same manner as \u003ccode\u003echeckinDocEnd\u003c/code\u003e but for\n multiple documents and sords.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinDocsEnd",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinDocsEnd"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1047127860"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinEsSettings": {
      "summary": "Check in ElasticSearch settings for ESConfigPage only. \u003cb\u003e\u003ci\u003eNote: For internal use only.",
      "description": "Might change in the near\n future.\u003c/i\u003e\u003c/b\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinEsSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinEsSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_460462395"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinKeys": {
      "summary": "Writes or inserts key objects.",
      "description": "\u003cp\u003e\n If key data is only to be unlocked then the method should be called with \u003ccode\u003ekeyInfos\u003dnull\u003c/code\u003e and\n \u003ccode\u003elockZ\u003dlockZ.YES\u003c/code\u003e.\n \u003c/p\u003e\n \u003cp\u003e\n The key objects with \u003ccode\u003eKeyInfo[].id\u003d-1\u003c/code\u003e will be inserted in the database. Objects with\n \u003ccode\u003eKeyInfo[].id\u003e\u003d0\u003c/code\u003e will be updated.\n \u003c/p\u003e\n \u003cp\u003e\n Since the function requires an exclusive access to the user data, the data must be locked for the current user or\n must not be locked for anyone. To check in regardless of a lock supply \u003ccode\u003elockZ.FORCE\u003c/code\u003e in\n \u003ccode\u003elockZ\u003c/code\u003e.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinKeys",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinKeys"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_100361105"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinKeywordList": {
      "summary": "Write or insert a keyword list.",
      "description": "\u003cp\u003e\n This function internally calls checkinKeywords.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinKeywordList",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinKeywordList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinKeywords": {
      "summary": "Insert keywords and all their children. The keyword IDs specify whether to insert or update.",
      "description": "\u003cp\u003e\n \u003ctable border\u003d\"2\"\u003e\n \u003ctr\u003e\n \u003ctd\u003e\u003ccode\u003ekws[.].id\u003d{existing ID}\u003c/code\u003e\u003c/td\u003e\n \u003ctd\u003eUpdates the keyword tree branch below the keyword with \u003ccode\u003ekws[.].id\u003c/code\u003e. The keyword must exist.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e\u003ccode\u003ekws[.].id\u003d{new root ID}\u003c/code\u003e\u003c/td\u003e\n \u003ctd\u003eInserts or updates a new keyword list.\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e\n \u003c/p\u003e\n \u003cp\u003e\n \u003ctable border\u003d\"2\"\u003e\n \u003ctr\u003e\n \u003cth\u003eOperations\u003c/th\u003e\n \u003cth\u003eSolution\u003c/td\u003e\n \u003ctr\u003e\n \u003ctd\u003eInsert a new child into an existing parent keyword\u003c/td\u003e\n \u003ctd\u003eCheck-in the parent keyword with all current children plus the new child. Setting the text members and children\n arrays of the current children to \u003ccode\u003enull\u003c/code\u003e leaves them unchanged.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eDelete a child of an existing parent keyword\u003c/td\u003e\n \u003ctd\u003eCheck-in the parent keyword with all current children minus the child to be deleted. Setting the text members\n and children arrays of the current children to \u003ccode\u003enull\u003c/code\u003e leaves them unchanged.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eUpdate \u003ccode\u003etext, add, enabled\u003c/code\u003e of an existing keyword\u003c/td\u003e\n \u003ctd\u003eCheck-in the keyword with a non empty text member. Only when the text is not \u003ccode\u003enull\u003c/code\u003e and not an empty\n string will the members \u003ccode\u003eadd\u003c/code\u003e and \u003ccode\u003eenabled\u003c/code\u003e be written into the database.\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e\n \u003c/p\u003e\n \u003cp\u003e\n \u003cb\u003eIMPORTANT: This function assigns new IDs to all branches of the keyword trees below the parent keywords of the\n given keywords. The client program should read the parent keyword and all children below again to receive the new\n IDs. \u003c/b\u003e\n \u003c/p\u003e\n \u003cp\u003e\n The access rights \u003ccode\u003eAccessC.FLAG_EDITCONFIG\u003c/code\u003e and \u003ccode\u003eAccessC.FLAG_EDITSWL\u003c/code\u003e are required to\n check-in keywords.\n \u003cp\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinKeywords",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinKeywords"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinMap": {
      "summary": "Inserts or updates the given key-value-pairs in \u003ccode\u003edata\u003c/code\u003e in the map specified by",
      "description": "\u003ccode\u003eid\u003c/code\u003e.\n \u003cp\u003e\n The map can be associated to a Sord object by setting the parameter \u003ccode\u003eobjId\u003c/code\u003e to a valid Sord ID. This\n implies, that the map is deleted, if the Sord object is finally deleted. Furthermore, the map can be copied with\n the Sord object. Therefore, the map ID must be equal to the Sord ID and the map domain must be prepared to copy\n items by setting \u003ccode\u003eMapDomain.copy\u003dtrue\u003c/code\u003e.\n \u003c/p\u003e\n \u003cp\u003e\n If domainName is set to MapDomainC.DOMAIN_IX_OPTIONS, the Indexserver configuration options from table eloixopt can\n be written. Therefore the key items in \u003ccode\u003edata\u003c/code\u003e must be formatted as data[.].key \u003d \u0026qt;[\u0026qt; + ixid +\n \u0026qt;]\u0026qt; + optname. Whereby ixid is \u0026qt;_ALL\u0026qt; or the Indexserver ID specified in the web.xml or config.xml. The\n parameter \u003ccode\u003eid\u003c/code\u003e is ignored when reading Indexserver options. The \u003ccode\u003eunlockZ\u003c/code\u003e parameter is\n ignored too, because the options table does not support locking. Only Administrators are allowed to access the\n Indexserver options.\n \u003c/p\u003e\n \u003cp\u003e\n Since ELO10: Map items can be of type {@link MapValue} which allows to store a BLOB. The maximum BLOB size should\n be at most {@link FileDataC#MAX_BLOB_LENGTH}.\n \n \u003cpre\u003e\n \u003ccode\u003e\n InputStream istream \u003d new FileInputStream(new File(\"c:\\test.txt\")); // is closed in checkinMap\n FileData fileData \u003d new FileData();\n fileData.setContentType(\"text/plain\");\n fileData.setStream(istream);\n MapValue mapValue \u003d new MapValue();\n mapValue.setKey(\"myfile\");\n mapValue.setBlobValue(fileData);\n conn.ix().checkinMap( \"MyMapDomain\", \"1\", 0, new KeyValue[] { mapValue }, LockC.NO );\n \u003c/code\u003e\n \u003c/pre\u003e\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinMap",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinMap"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinMapDomain": {
      "summary": "Creates or updates a map domain.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinMapDomain",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinMapDomain",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinMapDomain"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinNoteTemplates": {
      "summary": "Writes the given stamp definition into the database.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinNoteTemplates",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinNoteTemplates",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinNoteTemplates"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_100361105"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinNotes": {
      "summary": "Write or insert Notes.",
      "description": "\u003cp\u003e\n Only Sord objects that reference documents can have notes. It is also possible to delete a Note:\n \u003ccode\u003enotes[.].setDeleted(true);\u003c/code\u003e.\n \u003c/p\u003e\n \u003cp\u003e\n NOTE: When checking changed notes of annotation in stamp type notes or annotations can only be checked in once.\n When attempting to check in stamp type notes that already exist an exception will be returned. Use\n \u003ccode\u003eMbOnlyLock\u003c/code\u003e to unlock notes and annotations.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinNotes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinNotes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_100361105"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinNotification": {
      "summary": "Inserts or updates a Notification object",
      "description": "if userGuid is null, the own Guid will be taken if userGuid is not the own Guid, admin rights are needed",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinNotification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinNotification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_494610451"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinOrgUnits": {
      "summary": "Inserts or updates organizational units.",
      "description": "\u003cp\u003e\n When inserting a new OU, \u003ccode\u003eOrgUnitInfo.id\u003d-1\u003c/code\u003e has to be set. More than one OU can be checked in with a\n single call of \u003ccode\u003echeckinOrgUnit\u003c/code\u003e. Therefore the names, IDs and GUIDs in the submitted\n \u003ccode\u003eOrgUnitInfo\u003c/code\u003e objects must be unique and cannot be used by other OUs in the archive database.\n \u003c/p\u003e\n \u003cp\u003e\n If only the user and OU data is to be unlocked then the method should be called with \u003ccode\u003eorgUnitInfos\u003dnull\u003c/code\u003e\n and \u003ccode\u003elockZ\u003dlockZ.YES\u003c/code\u003e.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinOrgUnits",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinOrgUnits"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_893011331"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinReminder": {
      "summary": "Inserts or updates a reminder object.",
      "description": "\u003cp\u003e\n \u003ccode\u003eReminder.receiverId \u003d -1\u003c/code\u003e should be set if receiverId is to be ignored.\n \u003ccode\u003eReminder.receiverName \u003d null\u003c/code\u003e should be set if the receiverName is to be ignored.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinReminder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinReminder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_100361105"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinReplNames": {
      "summary": "Writes replication set names.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinReplNames",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinReplNames",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinReplNames"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinReport": {
      "summary": "Inserts custom report entries.",
      "description": "\u003cp\u003e\n This function writes new entries into the report table. These entries always are appended to the report table. Once\n in the report table, no data will be overwritten by this function. The ReportInfo element must provide an action\n number {@link ReportInfo#actionNo} at least. The action number has to be within the range\n {@link ReportInfoC#ACT_CUSTOM_FIRST} and {@link ReportInfoC#ACT_CUSTOM_LAST}. Besides the action number, the report\n entry can hold custom data in the fields objId, extra1, extra2, text and extraInfo. If specified, the object in\n extraInfo must be Serializable. If the report entry to insert does not belong to a {@link Sord}, set the objId\n value to 0.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinReportOptions": {
      "summary": "Writes the report options.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinReportOptions",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinReportOptions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinReportOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinSord": {
      "summary": "Writes or inserts a archive entry into the database.",
      "description": "\u003cp\u003e\n A new object does not have to be created with \u003ccode\u003ecreateSord\u003c/code\u003e. If the object is missing a GUID then a new\n one is created.\n \u003c/p\u003e\n \u003cp\u003e\n If the Sord object is only to be unlocked \u003ccode\u003esordZ \u003d SordC.mbOnlyUnlock\u003c/code\u003e should be used and a minimum of\n \u003ccode\u003eSord.id\u003c/code\u003e or \u003ccode\u003eSord.guid\u003c/code\u003e must be set.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinSord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinSord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinSordPath": {
      "summary": "Checks the existence of an archive path and creates missing entries if necessary by traversing top-down through the",
      "description": "Sords array.\n \u003cp\u003e\n The folders are inserted inside the same database transaction. Thus either all folders are created or none.\n \u003c/p\u003e\n \u003cp\u003e\n This function allows only one process at a given time to create a structure. This prevents from creating the same\n archive path twice by two parallel working processes.\n \u003c/p\u003e\n \u003cp\u003e\n In order to write index values (Sord.objKeys), parameter sordZ has to contain SordC.mbObjKeys. If sord.objKeys \u003d\u003d\n null or sordZ does not contain SordC.mbObjKeys, the index values defaults defined by the keywording form are\n written.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinSordPath",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinSordPath"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_100361105"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinSordTypes": {
      "summary": "Write or insert sord type information.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinSordTypes",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinSordTypes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinSordTypes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinStorage": {
      "summary": "This method passes path information to the document manager.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinStorage",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinStorage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinStorage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_231031238"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinSubs": {
      "summary": "Insert deputy/substitute information.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinSubs",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinSubs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinSubs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinSubscription": {
      "summary": "Add a subscription.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinSubscription",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinSubscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_323351719"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinSubstitutions": {
      "summary": "Insert new substitutions or update existing ones.",
      "description": "\u003cp\u003e\n New substitutions are added if {@link Substitution#guid} is empty, existing ones are updated if\n {@link Substitution#guid} is set.\n \u003c/p\u003e\n \n \u003cp\u003e\n The current user is allowed to create a substitution where Substitution.user is user A, if:\n \u003c/p\u003e\n \u003cul\u003e\n \u003cli\u003eThe current user is user A\n \u003cli\u003eThe current user is a sub administrator of A\n \u003cli\u003eThe current user is a direct superior of A (ignoring groups, {@link UserInfo#superiorId} of A must be the\n current user)\n \u003cli\u003eThe current user has main administrator rights.\n \u003c/ul\u003e\n \n \u003cp\u003e\n The current user is allowed to change a substitution where Substitution.user is user A, if:\n \u003c/p\u003e\n \u003cul\u003e\n \u003cli\u003eThe current user is a sub administrator of A\n \u003cli\u003eThe current user is a direct superior of A (ignoring groups, {@link UserInfo#superiorId} of A must be the\n current user)\n \u003cli\u003eThe current user has main administrator rights.\n \u003cli\u003eThe current user created the substitution ({@link Substitution#creatorId}\n \u003c/ul\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinSubstitutions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinSubstitutions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_954316611"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinTranslateTerms": {
      "summary": "Write or insert terms into the translation table.",
      "description": "\u003cp\u003e\n This function should not be called frequently, because it causes the translation cache to be\n reloaded.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinTranslateTerms",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinTranslateTerms"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1888107655"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinUser": {
      "summary": "Update or insert a user or group.",
      "description": "This function internally calls\n {@link #checkinUsers(ClientInfo, UserInfo[], CheckinUsersZ, LockZ)} for one user object.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinUserProfile": {
      "summary": "Write (add) user profile options.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinUserProfile",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinUserProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinUserProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinUsers": {
      "summary": "Updates or inserts users or groups.",
      "description": "\u003cp\u003e\n When inserting users or groups either \u003ccode\u003eUserInfo.id\u003d-1\u003c/code\u003e should be set or the bit\n \u003ccode\u003eCheckinUsersC.NEW_USER\u003c/code\u003e in \u003ccode\u003echeckinUsersC\u003c/code\u003e should be used. The second case allows a complete\n user and group structure to be checked in with a single call of \u003ccode\u003echeckinUsers\u003c/code\u003e. Therefore the IDs in the\n submitted \u003ccode\u003eUserInfo\u003c/code\u003e objects must be unique and cannot be used by other users or groups in the archive\n database.\n \u003c/p\u003e\n \u003cp\u003e\n If only the user data is to be unlocked then the method should be called with \u003ccode\u003euserInfos\u003dnull\u003c/code\u003e and\n \u003ccode\u003elockZ\u003dlockZ.YES\u003c/code\u003e.\n \u003c/p\u003e\n \u003cp\u003e\n If the user of the current session is a sub-administrator (has right AccessC.FLAG_SUBADMIN) the\n \u003ccode\u003eUserInfo.parent\u003c/code\u003e members of the users in \u003ccode\u003euserInfos\u003c/code\u003e are internally set to the current users\n ID. In other words: sub-administrators are not free to define the parent of the users or groups.\n \u003c/p\u003e\n \u003cp\u003e\n The method checks whether the users or groups to be checked-in have more rights than their parents\n (administrators).\n \u003c/p\u003e\n \u003cp\u003e\n Since the function requires an exclusive access to the user data, the data must be locked for the current user or\n must not be locked for anyone. To check in regardless of a lock \u003ccode\u003elockZ.FORCE\u003c/code\u003e must be supplied in\n \u003ccode\u003elockZ\u003c/code\u003e.\n \u003c/p\u003e\n \u003cp\u003e\n The users password is only written for new users or if \u003ccode\u003eCheckinUsersC.PASSWORD\u003c/code\u003e for the parameter\n \u003ccode\u003echeckinUsersZ\u003c/code\u003e is supplied along with the password member \u003ccode\u003eUserInfo.pwd!\u003dnull\u003c/code\u003e. In this\n case, the userInfos array must be of length\u003d1. The user does not need to have the right AccessC.FLAG_SUBADMIN, but\n must have the right AccessC.FLAG_CHANGEPW. Only the members UserInfo.id and UserInfo.pwd are taken into account.\n This is how to change a password: \u003ccode\u003eUserInfo ui \u003d new UserInfo();\u003c/code\u003e\u003cbr/\u003e\n \u003ccode\u003eui.id \u003d current user id;\u003c/code\u003e\u003cbr/\u003e\n \u003ccode\u003eui.pwd \u003d new password;\u003c/code\u003e\u003cbr/\u003e\n \u003ccode\u003eix.checkinUsers(ci, new UserInfo[] {ui}, CheckinUsersC.PASSWORD, LockC.NO);\u003c/code\u003e\n \u003c/p\u003e\n \u003cp\u003e\n Password rules are checked, if the user changes the password or if a new user is stored. The password rules are\n defined in the user profile value at key UserProfileC.KEY_PASSWORD_RULES. If the password violates the password\n rules, an exception is throw with message \"[ELOIX:3007]...\". The error number (3007) is defined in\n IXExceptionC.PASSWORD_DENIED.\n \u003c/p\u003e\n \u003cp\u003e\n The password expiring date is handled. If the password is changed, the expiring date in the user data is updated:\n UserInfo.userProps[UserInfoC.PROP_ACTION] \u003d \"EX{iso-date-without-time}\". Interactive client applications should\n check the action field in order display a dialog, if the password has to be changed. They do not need to check the\n \"EX\u0026lt;iso-date\u0026gt;\", because it is replaced by \"PWf\" (must change password) for the UserInfo object in the\n LoginResult object return by the login() functions, resp. the create() functions of IXConnFactory. The following\n code is recommended: \u003ccode\u003eIXConnection conn \u003d ...\u003c/code\u003e\u003cbr/\u003e\n \u003ccode\u003eString action \u003d conn.getLoginResult().getUser().userProps[UserInfoC.PROP_ACTION];\u003c/code\u003e\u003cbr/\u003e\n \u003ccode\u003eboolean userShouldChangePassword \u003d action.indexOf(UserInfoC.PROP_ACTION_USER_SHOULD_CHANGE_PASSWORD) \u003e\u003d 0;\u003c/code\u003e\u003cbr/\u003e\n \u003ccode\u003eboolean userMustChangePassword \u003d action.indexOf(UserInfoC.PROP_ACTION_USER_MUST_CHANGE_PASSWORD) \u003e\u003d 0;\u003c/code\u003e\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinUsers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_100361105"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinWorkFlow": {
      "summary": "Write/create a workflow.",
      "description": "\u003cp\u003e\n In case of a new workflow object of type WFTypeC.ACTIVE, the workflow is immediately started after written into\n database. This requires a valid WFDiagram.getObjId().\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinWorkFlow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinWorkFlow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkinWorkflowTemplate": {
      "summary": "Check in a workflow template as a new version or overwrite an existing version.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinWorkflowTemplate",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkinWorkflowTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinWorkflowTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_100361105"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutActivity": {
      "summary": "This function reads and optionally locks an activity.",
      "description": "\u003cp\u003e\n The current session must be sender or receiver of the activity (Acitivty.senderId,\n Activity.receiverId).\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutActivity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutActivity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_460199434"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutActivityProject": {
      "summary": "This function reads and optionally locks an activity project.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutActivityProject",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutActivityProject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutActivityProject"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2121298555"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutAspect": {
      "summary": "Read and maybe lock an {@link Aspect} object.",
      "description": "An exception is thrown, if access is denied or if the aspect does not\n exist.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutAspect",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutAspect"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_382788180"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutColors": {
      "summary": "Checkout the markers definitions (colors of archive entries).",
      "description": "This function returns only visible and non-deleted\n colors. It returns the same result as {@link #checkoutColors2(ClientInfo, int, LockZ)} passing\n {@link ColorDataC#SORD_COLORS} in options parameter. In order to receive all colors, call function\n {@link #checkoutColors2(ClientInfo, int, LockZ)}.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutColors",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutColors"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1870182600"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutColors2": {
      "summary": "Checkout the markers definitions (colors of archive entries) for administration purposes.",
      "description": "This function returns all\n colors, inclusive hidden and deleted colors.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutColors2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutColors2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1870182600"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutConfigFiles": {
      "summary": "Read config file names and file data.",
      "description": "\u003cp\u003e\n The \u003ccode\u003enames\u003c/code\u003e parameter selects the config files. Each element in this array contains the virtual path to\n a file. A path private to a user starts with the user s name. Paths may contain the wildcard \u003ccode\u003e*\u003c/code\u003e instead\n of a file name. In this case all files in the directory are returned.\n \u003c/p\u003e\n \u003cp\u003e\n \u003ctable border\u003d\"2\"\u003e\n \u003ctr\u003e\n \u003ctd\u003eExample\u003c/td\u003e\n \u003ctd\u003eDescription\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e\u003ccode\u003ename[.]\u003dpeter/template/*\u003c/code\u003e\u003c/td\u003e\n \u003ctd\u003eSelects all private document templates of user peter (document templates are currently not supported!)\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e\u003ccode\u003ename[.]\u003dpeter/postbox/*\u003c/code\u003e\u003c/td\u003e\n \u003ctd\u003eSelects peters server side postbox files\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e\u003ccode\u003ename[.]\u003dtemplate/*\u003c/code\u003e\u003c/td\u003e\n \u003ctd\u003eSelects all document templates available for all users (document templates are currently not supported!)\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e\u003ccode\u003ename[.]\u003deloscripts/*\u003c/code\u003e\u003c/td\u003e\n \u003ctd\u003eSelects all scripts\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutConfigFiles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutConfigFiles"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1737266313"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutCounters": {
      "summary": "Get counter information.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutCounters",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutCounters",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutCounters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1698110251"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutCryptInfos": {
      "summary": "Read and optionally lock the password information for document encryption.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutCryptInfos",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutCryptInfos",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutCryptInfos"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_809229049"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutDoc": {
      "summary": "Reads the indexing information and the download URL of a document.",
      "description": "\u003c/p\u003e\n \u003cp\u003e\n At least one of the parameters \u003ccode\u003eobjId\u003c/code\u003e and \u003ccode\u003edocId\u003c/code\u003e must be supplied. If only\n \u003ccode\u003eobjId\u003c/code\u003e is supplied, the function reads the information for the current work version of the document. If\n \u003ccode\u003edocId\u003c/code\u003e is supplied, the function reads the information for a specific document or attachment version.\n All versions are returned if \u003ccode\u003edocId\u003d\"-1\"\u003c/code\u003e is supplied.\n \u003c/p\u003e\n \u003cp\u003e\n The document member of the returned object contains the URL from where the document file can be read. Use raw HTTP\n functions to download the file.\n \u003c/p\u003e\n \u003cp\u003e\n If the document is only to be unlocked, see \u003ccode\u003echeckinSord\u003c/code\u003e.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutDoc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutDoc"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_820228328"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutDocMask": {
      "summary": "Reads a storage mask from the database.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutDocMask",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutDocMask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutDocMask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2054753789"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutDocMaskLineTemplates": {
      "summary": "Check out keyword templates. This function requires ELO 10 license.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutDocMaskLineTemplates",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutDocMaskLineTemplates",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutDocMaskLineTemplates"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1107316733"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutEsInfo": {
      "summary": "Check out the ElasticSearch informations for ESConfigPage only. \u003cb\u003e\u003ci\u003eNote: For internal use only.",
      "description": "Might change in\n the near future.\u003c/i\u003e\u003c/b\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutEsInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutEsInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_736983867"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutEsSettings": {
      "summary": "Check out the ElasticSearch settings for ESConfigPage only. \u003cb\u003e\u003ci\u003eNote: For internal use only.",
      "description": "Might change in the\n near future.\u003c/i\u003e\u003c/b\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutEsSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutEsSettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_460462395"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutEsStatus": {
      "summary": "Checkout status of iSearch and updaters and reindexers, for ESConfigPage only.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutEsStatus",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutEsStatus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutEsStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_202623104"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutKeys": {
      "summary": "Reads a list of key objects.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutKeys",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutKeys",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutKeys"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1112009864"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutKeywordList": {
      "summary": "Reads a keyword list.",
      "description": "\u003cp\u003e\n This function internally calls checkoutKeywords.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutKeywordList",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutKeywordList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1495731174"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutKeywords": {
      "summary": "Collects keywords and their children.",
      "description": "\u003cp\u003e\n The keyword objects with the given \u003ccode\u003ekwids[.]\u003c/code\u003e will be read.\n \u003ctable border\u003d\"2\"\u003e\n \u003ctr\u003e\n \u003ctd rowspan\u003d4\u003e\u003ccode\u003ekwids[.]\u003d\u003c/code\u003e\u003c/td\u003e\n \u003ctd\u003e\u003ccode\u003eKeywordC.KWID_*\u003c/code\u003e,\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003ean index row name,\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003ean ID of a previously read keyword.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003enull, to read all toplevel keyword lists. Parameter \u003ccode\u003emax\u003c/code\u003e is ignored.\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e\n \u003c/p\u003e\n \u003cp\u003e\n The parameter \u003ccode\u003emax\u003c/code\u003e controls how many keywords will be read.\n \u003ctable border\u003d\"2\"\u003e\n \u003ctr\u003e\n \u003ctd\u003emax \u003d 0\u003c/td\u003e\n \u003ctd\u003eOnly the first level directly below the given \u003ccode\u003ekwids[.]\u003c/code\u003e is read (up to 676 keywords). The children\n of the returned keywords are \u003ccode\u003enull\u003c/code\u003e\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e\u003ccode\u003emax\u003c/code\u003e \u003d -1\u003c/td\u003e\n \u003ctd\u003eEntire tree below \u003ccode\u003ekwid\u003c/code\u003e is read.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e\u003ccode\u003emax\u003c/code\u003e \u0026gt; 0\u003c/td\u003e\n \u003ctd\u003eApproximately up to this number of keywords are read. The children of a keyword are always read completely or\n they are \u003ccode\u003enull\u003c/code\u003e. Thus up to \u003ccode\u003emax\u003c/code\u003e+675 keywords could be returned.\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e\n \u003c/p\u003e\n \u003cp\u003e\n Hint: if \u003ccode\u003emax\u003c/code\u003e \u0026gt;\u003d 0 and the \u003ccode\u003eKeyword.children\u003c/code\u003e of a keyword is an empty array (not\n \u003ccode\u003enull\u003c/code\u003e), the keyword has definitely no children. If \u003ccode\u003eKeyword.children \u003d null\u003c/code\u003e, query the\n children with a further call to \u003ccode\u003ecollectKeywords\u003c/code\u003e.\n \u003c/p\u003e\n \u003cp\u003e\n Before one of the returned keywords can be used as an index value the members \u003ccode\u003eKeyword.enabled\u003c/code\u003e and\n \u003ccode\u003eKeyword.raw\u003c/code\u003e must be analyzed, see \u003ccode\u003eKeyword\u003c/code\u003e documentation.\n \u003c/p\u003e\n \u003cp\u003e\n You need the access right \u003ccode\u003eAccessC.FLAG_EDITCONFIG\u003c/code\u003e to lock keywords against concurrent modification.\n \u003cp\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutKeywords",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutKeywords"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_206201524"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutKeywordsDynamic": {
      "summary": "Queries dynamic keyword lists.",
      "description": "\u003cp\u003e\n A server script generates the data of dynamic keyword lists from external resources. Such resources may be\n databases of CRMs, webservices like twitter, an e-M@il provider, etc. The default installation does not provide any\n server scripts. They must be implemented by the end-user.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutKeywordsDynamic",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutKeywordsDynamic"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1552114559"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutMap": {
      "summary": "Reads a map or parts of a map.",
      "description": "\u003cp\u003e\n Since ELO10: In order to access BLOB values, lookup the value in the returned element {@link MapData#mapItems} or\n cast the related object in {@link MapData#items} to {@link MapValue}.\n \n \u003cpre\u003e\n \u003ccode\u003e\n MapData map \u003d conn.ix().checkoutMap( mapDomainName, \"1\", new String[] {\"myfile\"}, LockC.NO );\n MapValue mapValue \u003d map.getMapItems().get(\"myfile\");\n InputStream istream \u003d mapValueR.getBlobValue().getStream();\n try {\n   ...\n } finally {\n   istream.close();\n }\n \u003c/code\u003e\n \u003c/pre\u003e\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutMap",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutMap"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2011132580"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutMapDomain": {
      "summary": "Reads the data of a map domain.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutMapDomain",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutMapDomain",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutMapDomain"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_42339713"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutMapHistory": {
      "summary": "Reads the history entries for the given map.",
      "description": "\u003cp\u003e\n History entries are only written for MapDomain objects with {@link MapDomain#history}\u003dtrue. For MapDomain objects\n with {@link MapDomain#history}\u003dfalse, an empty array is returned. If no history entries exist for the given\n domainName and mapId, an empty array is returned.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutMapHistory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutMapHistory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1756288553"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutNoteTemplates": {
      "summary": "Read the stamp definitions from the users options.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutNoteTemplates",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutNoteTemplates",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutNoteTemplates"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1443841819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutNotes": {
      "summary": "Read notes of a given Sord.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutNotes",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutNotes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutNotes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_776454091"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutNotification": {
      "summary": "Reads Notification for a watchGuid / userGuid combination",
      "description": "if userGuid is null, the own Guid will be taken if userGuid is not the own Guid, admin rights are needed",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutNotification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutNotification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_494610451"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutOrgUnits": {
      "summary": "Read the data of all OUs.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutOrgUnits",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutOrgUnits",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutOrgUnits"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_893011331"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutPreviewImageURLs": {
      "summary": "Generates URLs for preview images of documents.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutPreviewImageURLs",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutPreviewImageURLs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutPreviewImageURLs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_661820173"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutReminders": {
      "summary": "Reads and locks a reminder object.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutReminders",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutReminders",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutReminders"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1701141707"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutReplNames": {
      "summary": "Reads replication set names.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutReplNames",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutReplNames",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutReplNames"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_884364631"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutReportOptions": {
      "summary": "Reads the report options.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutReportOptions",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutReportOptions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutReportOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1057373949"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutSord": {
      "summary": "Reads the data needed to edit an existing archive entry.",
      "description": "\u003ctable border\u003d\"2\"\u003e\n \u003ctr\u003e\n \u003ctd\u003ePossible object identifiers (parameter objId)\u003c/td\u003e\n \u003ctd\u003eUsage\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eID\u003c/td\u003e\n \u003ctd\u003eA numeric object number corresponding to Sord.getId() converted to string\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eGUID\u003c/td\u003e\n \u003ctd\u003eA GUID corresponding to Sord.getGuid()\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eIndex value\u003c/td\u003e\n \u003ctd\u003eUse \"OKEY:\u0026lt;index-group-name\u0026gt;\u003d\u0026lt;index-value\u0026gt;\" to select an object by an index value, example:\n \"OKEY:SAPPATH\u003d123124109824123/data\". The wildcards \u0026quot;%\u0026quot; or \u0026quot;*\u0026quot; can be used in\n \u0026lt;index-group-name\u0026gt; or \u0026lt;index-value\u0026gt; to return all or any data that matches.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eIndex match value\u003c/td\u003e\n \u003ctd\u003eUse \"LMATCH:\u0026lt;index-group-name\u0026gt;\u003d\u0026lt;fix-value\u0026gt;%\u0026lt;match-value\u0026gt;\" to select an object by an index\n value that starts with \u0026lt;fix-value\u0026gt; and might be followed by \u0026lt;match-value\u0026gt;. The object that fits most\n characters in \u0026lt;match-value\u0026gt; is selected. Example: \"LMATCH:ELOINDEX\u003dS%CH\". The wildcards \u0026quot;%\u0026quot; or\n \u0026quot;*\u0026quot; can be used in \u0026lt;index-group-name\u0026gt; or \u0026lt;match-value\u0026gt; to return all or any data that\n matches. This selection mode only be utilized on non-deleted Sords.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eArchive path\u003c/td\u003e\n \u003ctd\u003eUse \"ARCPATH:\u0026lt;delim-char\u0026gt;\u0026lt;SordName1\u0026gt;\u0026lt;delim-char\u0026gt;\u0026lt;SordName2\u0026gt;...\" to select an object by\n an archive path. This selection mode only be utilized on non-deleted Sords.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eArchive path with base ID\u003c/td\u003e\n \u003ctd\u003eUse \"ARCPATH[\u0026lt;ID\u0026gt;]:\u0026lt;delim-char\u0026gt;\u0026lt;SordName1\u0026gt;\u0026lt;delim-char\u0026gt;\u0026lt;SordName2\u0026gt;...\" to select\n an object by an archive path\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eMD5 hash\u003c/td\u003e\n \u003ctd\u003eUse \"MD5:\u0026lt;MD5-hash-hex-string\u0026gt;\" to select an object by an MD5 hash. Use upper case letters for\n hexadecimal characters for the hash value.\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e\n \u003cp\u003e\n The object can be locked against concurrent modification if \u003ccode\u003elockZ\u003c/code\u003e is set to \u003ccode\u003elockZ.YES\u003c/code\u003e.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutSord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutSord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_820228328"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutSordHistory": {
      "summary": "\u003ccode\u003echeckoutSordHistory\u003c/code\u003e retrieves all history entries related to a given object.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutSordHistory",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutSordHistory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutSordHistory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_491352407"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutSordPath": {
      "summary": "Gets the list of Sord object which are the predecessors of the sord given by the objId.",
      "description": "\u003cp\u003e\n If csi.inclRefPaths is set, all the sord of the referenced paths are also returned.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutSordPath",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutSordPath"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1835331414"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutSordTypes": {
      "summary": "Get sord type information.",
      "description": "\u003cp\u003e\n SordType objects give access to labels, icons and extensions corresponding to \u003ccode\u003eSord.type.\u003c/code\u003e\n \u003c/p\u003e\n \u003cp\u003e\n Parameter \u003ccode\u003esordTypes\u003c/code\u003e can be:\n \u003ctable border\u003d\"2\"\u003e\n \u003ctr\u003e\n \u003cth\u003esordType\u003c/th\u003e\n \u003cth\u003ereturn\u003c/th\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eArray of type numbers or names\u003c/td\u003e\n \u003ctd\u003eReturns for each type number (resp. name) the associated SordType information\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003enull\u003c/td\u003e\n \u003ctd\u003eReturns SordType information for all types\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e\n \u003c/p\u003e\n \u003cp\u003e\n Parameter \u003ccode\u003esordTypeZ\u003c/code\u003e specifies which members of the returned objects should be filled. It also contains\n the content type of the image data to be returned. This content type correspond to directories named \"jpg\", \"ico\"\n resp. \"bmp\" below \".../am-eloam/configuration/initdata/images/sordtypes/\". Use ELO CLIENT to fill the directories\n with images of the required type.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutSordTypes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutSordTypes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_133130047"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutStorage": {
      "summary": "checkoutStorage retrieves an array of configured paths from the Document Manager.",
      "description": "The contents matches the table\n \u0026lt;elodmpath\u0026gt;.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutStorage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutStorage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_231031238"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutSubs": {
      "summary": "Read the substitute information for the given user.",
      "description": "\u003cp\u003e\n The returned array contains the relations/users for which the given user is the substituted person or the\n substitute.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutSubs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutSubs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_105830886"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutSubstitutions": {
      "summary": "Checkout substitutions.",
      "description": "\u003cp\u003e\n Substitutions are checked out by the provided {@link CheckoutSubstitutionsInfo} and the selected members in\n {@link SubscriptionZ} are returned.\n \u003c/p\u003e\n \n \u003cp\u003e\n Every user is allowed to checkout any substitution.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutSubstitutions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutSubstitutions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_954316611"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutTranslateTerms": {
      "summary": "Read terms from translation table for viewing or editing.",
      "description": "\u003cp\u003e\n It can also be used to retrieve the supported languages. Use this function, if only a few terms should be returned.\n Otherwise call \u003ccode\u003efindFirstTranslateTerms\u003c/code\u003e.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutTranslateTerms",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutTranslateTerms"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1088095067"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutUser": {
      "summary": "Reads the user data for a user or group.",
      "description": "This function internally calls\n {@link #checkoutUsers(ClientInfo, String[], CheckoutUsersZ, LockZ)}",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1485735592"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutUserProfile": {
      "summary": "Read user profile options.",
      "description": "\u003cp\u003e\n Set \u003ccode\u003euserProfile.userId\u003c/code\u003e to the current user, to read her or his entire option set. This means that the\n default values for all users and the options inherited from the users groups are included too.\n \u003c/p\u003e\n \u003cp\u003e\n In order to read the user specific options without defaults and group options, set\n \u003ccode\u003euserProfile.excludeDefaultValues\u003dtrue\u003c/code\u003e and \u003ccode\u003euserProfile.excludeGroupValues\u003dtrue\u003c/code\u003e.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutUserProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutUserProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1401065069"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutUsers": {
      "summary": "Reads the user data for users or groups.",
      "description": "\u003cp\u003e\n The function has various options for specifying which users are to read, e. g. all users, users of a specific group\n or groups of a specific user. The options are controlled with the bit-mask parameter \u003ccode\u003echeckoutUsersC\u003c/code\u003e.\n Possible values are combinations of \u003ccode\u003eCheckoutUsersC\u003c/code\u003e values.\n \u003c/p\u003e\n \u003cp\u003e\n Supplying \u003ccode\u003elockZ.YES\u003c/code\u003e or \u003ccode\u003elockZ.FORCE\u003c/code\u003e for the parameter \u003ccode\u003elockZ\u003c/code\u003e locks the user\n data against concurrent modification. The lock can be released with \u003ccode\u003echeckinUsers\u003c/code\u003e or\n \u003ccode\u003edeleteUsers\u003c/code\u003e.\n \u003c/p\u003e\n \u003cp\u003e\n All returned \u003ccode\u003eUserInfo\u003c/code\u003e objects have empty passwords because the passwords cannot be read from the\n archive database.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutUsers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1132956238"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutWorkFlow": {
      "summary": "Reads a workflow definition.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutWorkFlow",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutWorkFlow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutWorkFlow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1663767661"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutWorkflowHistory": {
      "summary": "Reads the histories of a node or a whole workflow.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutWorkflowHistory",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutWorkflowHistory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutWorkflowHistory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1754570852"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/checkoutWorkflowTemplate": {
      "summary": "Check out versions of a workflow template.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutWorkflowTemplate",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_checkoutWorkflowTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutWorkflowTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1663767661"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/cleanupStart": {
      "summary": "\u003ccode\u003ecleanupStart(ClientInfo ci)\u003c/code\u003e removes all deleted objects and related entries from the archive database.",
      "description": "\u003cp\u003e\n Once started the call returns immediately, while the unique background thread cleans the archive until it finishes\n or \u003ccode\u003ecleanupStart(ClientInfo ci)\u003c/code\u003e is called. Only users owning main administrator rights may clean up\n archives.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_cleanupStart",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_cleanupStart"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/cleanupState": {
      "summary": "\u003ccode\u003ecleanupState(ClientInfo ci)\u003c/code\u003e returns state information in a \u003ccode\u003eBackgroundThreadInfo\u003c/code\u003e.",
      "description": "\u003cp\u003e\n \u003ctable\u003e\n \u003ctr\u003e\n \u003ctd\u003eIsRunning\u003c/td\u003e\n \u003ctd\u003etrue/false;\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eThreadStart\u003c/td\u003e\n \u003ctd\u003eISO date containing the cleaner s start;\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eCountProcessed\u003c/td\u003e\n \u003ctd\u003evisited archive entries\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eCountErrors\u003c/td\u003e\n \u003ctd\u003eerroneous entries\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eLastID\u003c/td\u003e\n \u003ctd\u003eobject ID of the last visited entry\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eLastGUID\u003c/td\u003e\n \u003ctd\u003eobject GUID of the last visited entry\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_cleanupState",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_cleanupState"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1436376940"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/cleanupStop": {
      "summary": "\u003ccode\u003ecleanupStop(ClientInfo ci)\u003c/code\u003e stops the cleaning as soon as possible finishing open transactions first.",
      "description": "\u003cp\u003e\n The call returns, when the background cleaner has been stopped. Only users owning main administrative rights may\n clean up archives.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_cleanupStop",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_cleanupStop"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/closeEventBus": {
      "summary": "Close an event bus opened by \u003ccode\u003eopenEventBus\u003c/code\u003e.",
      "description": "\u003cp\u003e\n Any subscriber that knows the bus ID can close this event bus. When a bus is closed, all outstanding events in the\n ELOix are deleted. After a bus is closed, neither listener will receive anymore events from this bus. This function\n ignores unknown or already closed bus IDs or bus IDs defined in \u003ccode\u003eEventBusC\u003c/code\u003e.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_closeEventBus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_closeEventBus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/collectJobStates": {
      "summary": "\u003ccode\u003ecollectJobStates\u003c/code\u003e lists all the states of currently existing jobs from the IX backround job pool",
      "description": "running or finished, but still listed.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_collectJobStates",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_collectJobStates"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1788243283"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/collectMapDomains": {
      "summary": "Collects the existing map domains.",
      "description": "\u003cp\u003e\n This function does not return the special domain MapDomainC.DOMAIN_IX_OPTIONS.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_collectMapDomains",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_collectMapDomains"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1963952629"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/collectWorkFlowNodes": {
      "summary": "Collect workflow nodes.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method collectWorkFlowNodes",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_collectWorkFlowNodes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_collectWorkFlowNodes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2006133032"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/collectWorkFlows": {
      "summary": "Collects workflow names.",
      "description": "\u003cp\u003e\n \u003cb\u003eThis method will be deprecated in future versions of the ELO Indexserver\u003c/b\u003e. It is recommended that the\n findFirstTasks() and findNextTasks() methods are used for retrieving workflow information from the Indexserver.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_collectWorkFlows",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_collectWorkFlows"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_755261279"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/combineAcl": {
      "summary": "Compares the given ACLs and computes the sum, difference and intersection.",
      "description": "\u003cp\u003e\n To remove the duplicate entries in an ACL, call this function with a null value for the rhs parameter. The\n CombineAclResult.sum contains the ACL without duplicates.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_combineAcl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_combineAcl"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1034263904"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/computeDocumentHash": {
      "summary": "Compute the hash value of an archived document.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method computeDocumentHash",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_computeDocumentHash",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_computeDocumentHash"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_847213937"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/configureBackup": {
      "summary": "Query or send backup profile information of the ELOdm.",
      "description": "\u003cp\u003e\n The user calling this method must have the main administrator right (AccessC.FLAG_ADMIN).\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_configureBackup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_configureBackup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1233469422"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/configureFulltext": {
      "summary": "Get or set the fulltext configuration.",
      "description": "Note: deprecated. Use checkinEsSettings and checkoutEsSettings instead.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_configureFulltext",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_configureFulltext"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_239574905"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/configureLicense": {
      "summary": "Read or update license information.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method configureLicense",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_configureLicense",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_configureLicense"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1330120264"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/configurePurge": {
      "summary": "Query or send the purge task settings of the ELOdm.",
      "description": "\u003cp\u003e\n The user calling this method must have the main administrator right (AccessC.FLAG_ADMIN).\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_configurePurge",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_configurePurge"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1576340510"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/controlBackgroundThread": {
      "summary": "Query the status of the job and control its state.",
      "description": "\u003cp\u003e\n Using this method the job can be cancelled. The user calling this method must have started the job or must have the\n administrator right (AccessC.FLAG_ADMIN).\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_controlBackgroundThread",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_controlBackgroundThread"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1436376940"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/controlBackup": {
      "summary": "Query the status of the backup and purge tasks of the ELOdm.",
      "description": "\u003cp\u003e\n In addition, the backup and purge tasks can be started or stopped. The user calling this method must have the main\n administrator right (AccessC.FLAG_ADMIN).\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_controlBackup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_controlBackup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_52201250"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/cookKeyword": {
      "summary": "Replaces control sequences in the text of a keyword.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method cookKeyword",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_cookKeyword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_cookKeyword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/copySord": {
      "summary": "Moves an archive entry or creates a relation (logical copy).",
      "description": "\u003cp\u003e\n \u003cb\u003e1. Move\u003c/b\u003e\u003cbr/\u003e\n To move an archive entry into another parent set bit \u003ccode\u003eCopySordC.MOVE\u003c/code\u003e in \u003ccode\u003ecopySordC\u003c/code\u003e. Put the\n ID or GUID of the new parent into \u003ccode\u003enewParentId\u003c/code\u003e. If a reference shold be moved instead of an original,\n parameter \u003ccode\u003ecopyInfo\u003c/code\u003e has to be passed with {@link CopyInfo#oldParentId} set to the current parent ID of\n the relation. In order to control the manual sort order, supply a \u003ccode\u003ecopyInfo\u003c/code\u003e object with\n {@link CopyInfo#manSortIdx}.\n \u003c/p\u003e\n \u003cp\u003e\n \u003cb\u003e2. Relation\u003c/b\u003e\u003cbr/\u003e\n Bit \u003ccode\u003eCopySordC.REFERENCE\u003c/code\u003e in \u003ccode\u003ecopySordC\u003c/code\u003e should be used to create a logical copy of the\n archive entry in \u003ccode\u003enewParentId\u003c/code\u003e. \u003cbr/\u003e\n Set \u003ccode\u003ecopyInfo\u003dnull\u003c/code\u003e or supply an object and set the \u003ccode\u003eCopyInfo.manSortIdx\u003c/code\u003e to control the\n manual sort order. \u003cbr/\u003e\n \u003cp\u003e\n References can be deleted with \u003ccode\u003edeleteSord\u003c/code\u003e\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_copySord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_copySord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createActivity": {
      "summary": "This function creates an activity in memory based on the given project and assigned to the",
      "description": "given object.\n \u003cp\u003e\n The current session must have read access to the Sord, if parameter objId is specified.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createActivity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createActivity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_460199434"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createActivityProject": {
      "summary": "This function creates an activity project in memory.",
      "description": "\u003cp\u003e\n If projectName is not null and not empty, the function checks whether the name is already used. The current session\n must have the permission AccessC.FLAG_EDITACT in order to call this function.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createActivityProject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createActivityProject"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2121298555"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createAspect": {
      "summary": "Initialize an {@link Aspect} object.",
      "description": "Note: The name and type of an aspect line is fixed with the initial value\n during the first check in and cannot be changed later.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createAspect",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createAspect"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_382788180"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createAspectAssoc": {
      "summary": "Initializes an {@link AspectAssoc} object. All parameters are mandatory.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method createAspectAssoc",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createAspectAssoc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createAspectAssoc"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1696936442"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createAspectMask": {
      "summary": "Initializes a {@link DocMask} object as a keywording form for aspects.",
      "description": "Use\n {@link #checkinDocMask(ClientInfo, DocMask, DocMaskZ, LockZ)} to store the keywording form in the database. Note\n that the name of an aspect association can be set only initially. Aspect associations cannot be renamed via\n checkinDocMask.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createAspectMask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createAspectMask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2054753789"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createDoc": {
      "summary": "Creates a new document with indexing information.",
      "description": "\u003c/p\u003e\n \u003cp\u003e\n Currently the same as \u003ccode\u003ecreateSord\u003c/code\u003e but the type member of the returned indexing information (if any) is\n set to \u003ccode\u003eSordC.LBT_DOCUMENT\u003c/code\u003e.\n \u003c/p\u003e\n \u003cp\u003e\n If \u003ccode\u003emaskId\u003c/code\u003e is null or empty, the function tries to assign the mask defined in the configuration options\n of the Windows CLIENT. If this mask cannot be found, the behavior is unpredictable and -1 might be returned in\n sord.mask.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createDoc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createDoc"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_820228328"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createDocMask": {
      "summary": "Creates a storage mask object and assigns default values.",
      "description": "\u003cp\u003e\n This function does not insert the mask object into the database. Initial values can be copied from the mask\n specified with \u003ccode\u003emaskId\u003c/code\u003e.\n \u003cp\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createDocMask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createDocMask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2054753789"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createEventBusListener": {
      "summary": "Creates an event bus listener.",
      "description": "\u003cp\u003e\n This function creates an event bus listener that filters events from the event bus as described in the filter list\n of the \u003ccode\u003eeventListener\u003c/code\u003e parameter. Event bus listeners have to be deleted by either\n \u003ccode\u003edeleteEventBusListener\u003c/code\u003e or by deleting the subscriber with \u003ccode\u003edeleteEventBusSubscriber\u003c/code\u003e.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createEventBusListener",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createEventBusListener"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_6"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createEventBusSubscriber": {
      "summary": "Create an event bus subscriber.",
      "description": "\u003cp\u003e\n A subscriber sends events to an event bus or receives events from an event bus. An application resp. an\n \u003ccode\u003eIXConnection\u003c/code\u003e can open any number of subscribers. A subscriber has to be deleted with\n \u003ccode\u003edeleteEventBusSubscriber\u003c/code\u003e when it is no more needed. A bus is also deleted, if the last event listener\n is deleted. This might happen when \u003ccode\u003edeleteEventBusSubscriber\u003c/code\u003e or \u003ccode\u003edeleteEventBusListener\u003c/code\u003e is\n called. In this case, it is not necessary to call \u003ccode\u003edeleteEventBusSubscriber\u003c/code\u003e.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createEventBusSubscriber",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createEventBusSubscriber"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_6"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createKey": {
      "summary": "Creates and initializes a key object.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method createKey",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createKey"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1537059480"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createNewEncryptionSet": {
      "summary": "ToBeFilled",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method createNewEncryptionSet",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createNewEncryptionSet",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createNewEncryptionSet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createNote": {
      "summary": "Returns an initialized, temporary Note object.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method createNote",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createNote",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createNote"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_937420667"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createNote2": {
      "summary": "Returns an initialized, temporary Note object.",
      "description": "\u003cp\u003e\n The object is initialized by the given note template. Placeholders are replaced by the current values.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createNote2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createNote2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_937420667"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createNoteTemplate": {
      "summary": "Initializes a new NoteTemplate object.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method createNoteTemplate",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createNoteTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createNoteTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1995912373"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createReminder": {
      "summary": "Creates a reminder for the Sord specified by objId.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method createReminder",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createReminder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createReminder"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_256674679"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createRsaKeys": {
      "summary": "Helper function to create a RSA key pair.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method createRsaKeys",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createRsaKeys",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createRsaKeys"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1888107655"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createSord": {
      "summary": "Creates an object containing all the data needed to edit the indexing information of a new archive entry.",
      "description": "\u003cp\u003e\n The function does not insert the new object into the database. \u003ccode\u003echeckinSord\u003c/code\u003e is used to insert a new\n object in the database.\n \u003c/p\u003e\n \u003cp\u003e\n This function can also be used to retrieve the lists of storage masks, markers (colours) etc. For this purpose\n parameter \u003ccode\u003eparentId\u003dnull\u003c/code\u003e must be set along with \u003ccode\u003emaskId\u003dnull\u003c/code\u003e and supply\n \u003ccode\u003eEditInfoC.mbBasicData\u003c/code\u003e for \u003ccode\u003eeditInfoZ\u003c/code\u003e.\n \u003c/p\u003e\n \u003cp\u003e\n To create and initialize an object for indexing information, parameter \u003ccode\u003eeditInfoZ\u003c/code\u003e must include bit\n \u003ccode\u003eEditInfoZ.mbSordMembers\u003c/code\u003e, e. g. \u003ccode\u003eEditInfoZ.mbSord\u003c/code\u003e. Parameter \u003ccode\u003eparentId\u003c/code\u003e can\n specify the ID or GUID of the parent entry in the archive hierarchy. Access rights and replication information are\n initialized from the parent.\n \u003c/p\u003e\n \u003cp\u003e\n The \u003ccode\u003emaskId\u003c/code\u003e parameter is the name or ID of a storage mask that defines a template for the indexing\n information. If \u003ccode\u003emaskId\u003c/code\u003e is null or empty, the function tries to assign the mask with GUID\n \u003ccode\u003eDocMaskC.GUID_FOLDER\u003c/code\u003e. If this mask cannot be found, the default folder mask defined in the\n configuration options of the Windows CLIENT is used. If this mask is also not found, the behavior is unpredictable\n and a -1 might be returned in sord.mask.\n \u003c/p\u003e\n \u003cp\u003e\n The parameters \u003ccode\u003eparentId\u003c/code\u003e and \u003ccode\u003emaskId\u003c/code\u003e are unchecked if an event script\n {@link IXServerEvents#onCreateSord(IXServerEventsContext, String, String, EditInfoZ)} is configured. In this case,\n both can have arbitrary values.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createSord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createSord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_820228328"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createSubscription": {
      "summary": "Initialize a subscription object.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method createSubscription",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createSubscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_323351719"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createSuperiorSubstitution": {
      "summary": "Create a Substitution as a superior.",
      "description": "\u003cp\u003e\n A superior is able to substitute any of his users (he must be the direct superior (ignoring groups,\n {@link UserInfo#superiorId} of the user to be substituted must be the current user).\n \u003c/p\u003e\n \u003cp\u003e\n The created substitution grants the superior access to the user\u0027s postbox, can be forwarded and can be activated\n manually, but does not have any SubstitutionPeriods set. It also contains a flag to show its a superior substituion\n ({@link SubstitutionSettings#superiorSubstitution} is set to true.\n \u003c/p\u003e\n \u003cp\u003e\n The created substitution is saved, but is not yet active. It can be activated by adding {@link SubstitutionPeriod}\n or calling {@link #activateSubstitution}.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createSuperiorSubstitution",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createSuperiorSubstitution"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createUser": {
      "summary": "Creates an object for user data.",
      "description": "\u003cp\u003e\n The returned \u003ccode\u003eUserInfo\u003c/code\u003e object is initialized with default values. User rights and keys are copied from\n the user \u003ccode\u003erightsAsUserId\u003c/code\u003e.\n \u003c/p\u003e\n\n \u003cp\u003e\n This function does not create a new user in the archive database. To insert a new user into the database the\n function \u003ccode\u003echeckinUsers\u003c/code\u003e must be used after the user has been created with\u003ccode\u003ecreateUser\u003c/code\u003e.\n \u003c/p\u003e\n\n \u003cp\u003e\n If the user calling this function is a main administrator (has right AccessC.FLAG_ADMIN), the created user will\n have the same \u003ccode\u003eUserInfo.parent\u003c/code\u003e as the user specified in \u003ccode\u003erightsAsUserId\u003c/code\u003e. If the user\n calling this function is a sub-administrator (has right AccessC.FLAG_SUBADMIN), the parent of the created user is\n the id of the calling user.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1485735592"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createWFNode": {
      "summary": "Initalizes a WFNode object.",
      "description": "\u003cp\u003e\n WFNode.userId is set to WFNodeC.USERID_OWNER if the supplied type is a person node.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createWFNode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createWFNode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2015686193"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/createWorkFlow": {
      "summary": "Prepares a WFDiagram structure.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method createWorkFlow",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_createWorkFlow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createWorkFlow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1663767661"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deactivateSubstitution": {
      "summary": "Deactivate the submitted substitution.",
      "description": "\u003cp\u003e\n Deactivates a submitted substitution if the substitution was activated manually (Substitution\u0027s\n {@link SubstitutionSettings#canBeActivatedManually} must be set to \u003ccode\u003etrue\u003c/code\u003e) and it is outside of any\n substitution period (defined in {@link Substitution#substitutionPeriods}\n \u003c/p\u003e\n \n \u003cp\u003e\n A substitution can be deactivated by the current user, if:\n \u003cul\u003e\n \u003cli\u003eThe current user is the substitute ({@link Substitution#substituteId}\n \u003cli\u003eThe current user is member of the group who is the substitute\n \u003cli\u003eThe current user is sub administrator of the substitute\n \u003cli\u003eThe current user is the direct superior of the substitute (ignoring groups, {@link UserInfo#superiorId} of the\n substitute must be the current user)\n \u003cli\u003eThe current user has main administrator rights.\n \u003c/ul\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deactivateSubstitution",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deactivateSubstitution"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deferWorkFlowNode": {
      "summary": "\u003cp\u003e",
      "description": "Sets the value userDelayDateIso of the given node.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deferWorkFlowNode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deferWorkFlowNode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/delegateWorkFlowNode": {
      "summary": "Delegates the specified workflow node to another user.",
      "description": "\u003cp\u003e\n An additional person node is inserted into the workflow for the given user and the workflow is forwarded to this\n node. If {@link WFDelegateNodeInfo#backNodeName} is set, a further node is added after the delegation node for the\n current user.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_delegateWorkFlowNode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_delegateWorkFlowNode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteActivity": {
      "summary": "This function deletes an activity.",
      "description": "\u003cp\u003e\n The current session must be sender or receiver of the activity (Acitivty.senderId,\n Activity.receiverId).\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteActivity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteActivity"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteActivityProject": {
      "summary": "This function deletes an activity project from the database.",
      "description": "\u003cp\u003e\n The current session must have the permission AccessC.FLAG_EDITACT in order to call this\n function.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteActivityProject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteActivityProject"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteAspect": {
      "summary": "Delete an {@link Aspect} object. This function requires permission {@link AccessC#FLAG_EDITMASK}.",
      "description": "An exception is\n thrown, if access is denied or if the aspect does not exist.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteAspect",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteAspect"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteConfigFiles": {
      "summary": "Deletes configuration files.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteConfigFiles",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteConfigFiles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteConfigFiles"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteCounters": {
      "summary": "Delete counters.",
      "description": "\u003cp\u003e\n This function is currently not implemented and always throws an exception. Counters cannot be deleted.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteCounters",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteCounters"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteDocMask": {
      "summary": "Deletes a storage mask.",
      "description": "\u003c/p\u003e\n \u003cp\u003e\n If archive entries connected to the mask still exist in the database, another mask \u003ccode\u003eassignMaskId\u003c/code\u003e can be\n assigned to them.\n \u003c/p\u003e\n \u003cp\u003e\n If \u003ccode\u003eassignMaskId\u003c/code\u003e is not defined and there are objects connected to the mask in the database the method\n throws an exception.\n \u003c/p\u003e\n \u003cp\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteDocMask",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteDocMask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteDocMaskLineTemplates": {
      "summary": "Delete keyword templates This function requires ELO 10 license.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteDocMaskLineTemplates",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteDocMaskLineTemplates",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteDocMaskLineTemplates"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteEventBusListener": {
      "summary": "Deletes an event bus listener.",
      "description": "\u003cp\u003e\n This function deletes an event bus listener that was created by a call to \u003ccode\u003ecreateEventBusListener\u003c/code\u003e. The\n function does not throw an exception, if the Listener ID does not exist.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteEventBusListener",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteEventBusListener"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteEventBusSubscriber": {
      "summary": "Deletes an event bus subscriber.",
      "description": "\u003cp\u003e\n This function deletes a subscriber an all its event listeners.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteEventBusSubscriber",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteEventBusSubscriber"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteKeys": {
      "summary": "Deletes keys.",
      "description": "\u003cp\u003e\n Since the function requires an exclusive access to the user data, the data must be locked for the current user or\n must not be locked for anyone. To check in regardless of a lock supply \u003ccode\u003elockZ.FORCE\u003c/code\u003e in\n \u003ccode\u003elockZ\u003c/code\u003e.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteKeys",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteKeys"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteKeywordList": {
      "summary": "Deletes a keyword list.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteKeywordList",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteKeywordList",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteKeywordList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteKeywords": {
      "summary": "Deletes the keywords with the given IDs.",
      "description": "\u003cp\u003e\n \u003cb\u003eIMPORTANT: This function assigns new IDs to all branches of the keyword trees below the parent keywords of the\n given IDs. The client program should read the parent keyword and all children below again to receive the new IDs.\n \u003c/b\u003e\n \u003c/p\u003e\n \u003cp\u003e\n The access rights \u003ccode\u003eAccessC.FLAG_EDITCONFIG\u003c/code\u003e and \u003ccode\u003eAccessC.FLAG_EDITSWL\u003c/code\u003e are required to delete\n keywords.\n \u003cp\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteKeywords",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteKeywords"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteMap": {
      "summary": "Delete map items.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteMap",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteMap",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteMap"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteMapDomain": {
      "summary": "Deletes a map domain and removes the associated database tables.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteMapDomain",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteMapDomain",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteMapDomain"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteNoteTemplates": {
      "summary": "Delete the stamp definition with the given ID.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteNoteTemplates",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteNoteTemplates",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteNoteTemplates"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteNotes": {
      "summary": "Deletes notes.",
      "description": "\u003cp\u003e\n After a note or annotation has been deleted it should not be checked in again with MbAll. In this case the\n isDeleted() value is overwritten and the note or annotation will no longer be deleted. In this case MbOnlyLock\n should be used to remove the lock on the notes.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteNotes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteNotes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteNotification": {
      "summary": "Deleting the Notification identified by objGuid / userGuid combination if the Notification has child Notifications,",
      "description": "they will be deleted as well.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteNotification",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteNotification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteOrgUnits": {
      "summary": "Delete OUs.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteOrgUnits",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteOrgUnits",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteOrgUnits"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteReminders": {
      "summary": "Deletes the reminders (logically) with the the given IDs.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteReminders",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteReminders",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteReminders"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteReport": {
      "summary": "Deletes report entries until \u003ccode\u003eendDateISO\u003c/code\u003e.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteReport",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteSord": {
      "summary": "Deletes an archive entry and all child entries or deletes a relation (logical copy).",
      "description": "\u003c/p\u003e\n \u003cp\u003e\n A reference is deleted if \u003ccode\u003eparentId\u003c/code\u003e specifies an entry which is not the main parent of\n \u003ccode\u003eobjId\u003c/code\u003e. The main parent can be found in \u003ccode\u003eSord.parent\u003c/code\u003e after reading the indexing information\n for \u003ccode\u003eobjId\u003c/code\u003e using \u003ccode\u003echeckoutSord\u003c/code\u003e. References are never deleted physically.\n \u003c/p\u003e\n \u003cp\u003e\n A archive entry is deleted if \u003ccode\u003eparentId\u003c/code\u003e is set to \u003ccode\u003enull\u003c/code\u003e or the id of its main parent.\n \u003c/p\u003e\n \u003cp\u003e\n If \u003ccode\u003edeleteFinally\u003dtrue\u003c/code\u003e, all already logically deleted objects in the subtree of objId will be deleted\n physically. All related data (document versions, attachments, workflows, etc.) will also be physically deleted. Use\n this parameter with caution, since a reverse operation does not exist.\n \u003c/p\u003e\n \u003cp\u003e\n To delete logically set \u003ccode\u003edeleteFinally\u003dfalse\u003c/code\u003e, which only sets the the delete flag within the database.\n \u003c/p\u003e\n \u003cp\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteSord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteSord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteSordTypes": {
      "summary": "Write or insert sord type information.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteSordTypes",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteSordTypes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteSordTypes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteSubs": {
      "summary": "Delete deputy information.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteSubs",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteSubs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteSubs"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteSubscription": {
      "summary": "Delete a subscription.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteSubscription",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteSubscription",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteSubscription"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteSubstitutions": {
      "summary": "Delete substitutions by its GUIDs.",
      "description": "\u003cp\u003e\n The current user is allowed to delete a substitution where Substitution.user is user A, if:\n \u003c/p\u003e\n \u003cul\u003e\n \u003cli\u003eThe current user created the substitution ({@link Substitution#creatorId}\n \u003cli\u003eThe current user is a sub administrator of A\n \u003cli\u003eThe current user is a direct superior of A (ignoring groups, {@link UserInfo#superiorId} of A must be the\n current user)\n \u003cli\u003eThe current user has main administrator rights.\n \u003c/ul\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteSubstitutions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteSubstitutions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteTranslateTerms": {
      "summary": "Delete terms from the translation table.",
      "description": "\u003cp\u003e\n This function should not be called frequently, because it causes the translation cache to be\n reloaded.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteTranslateTerms",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteTranslateTerms"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteUser": {
      "summary": "Deletes user or group.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteUser",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteUserProfile": {
      "summary": "Deletes profile options.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteUserProfile",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteUserProfile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteUserProfile"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteUsers": {
      "summary": "Deletes users or groups.",
      "description": "\u003c/p\u003e\n \u003cp\u003e\n Since this function requires exclusive access to the user data, the data must be locked for the current user or\n must not be locked for anyone. To check in regardless of a lock \u003ccode\u003elockZ.FORCE\u003c/code\u003e in \u003ccode\u003elockZ\u003c/code\u003e must\n be supplied.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteUsers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteWorkFlow": {
      "summary": "Deletes a workflow.",
      "description": "\u003cp\u003e\n WOrkflows that are deleted are not physically deleted and can be retrieved using checkoutWorkFlow(). Deleted\n workflows return true when the WFDiagram.isDeleted() method is called.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteWorkFlow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteWorkFlow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/deleteWorkflowTemplate": {
      "summary": "Deletes a workflow template version.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteWorkflowTemplate",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_deleteWorkflowTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteWorkflowTemplate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/editPublicDownloadUrls": {
      "summary": "Edits the public downloads",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method editPublicDownloadUrls",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_editPublicDownloadUrls",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_editPublicDownloadUrls"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/encryptStringRsa": {
      "summary": "Encrypt or decrypt a string using the RSA algorithm.",
      "description": "\u003cp\u003e\n This function encrypts or decrypts the string \u003ccode\u003edata\u003c/code\u003e using the RSA algorithm. The string must not be\n longer than 768 characters. Pass the public RSA key in \u003ccode\u003ekey\u003c/code\u003e, if the string should be encrypted. In\n order to decrypt the string, the private key has to be passed. Both keys must be created with\n \u003ccode\u003ecreateRsaKeys\u003c/code\u003e.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_encryptStringRsa",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_encryptStringRsa"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/endEditWorkFlowNode": {
      "summary": "Stores an edited person node of an active workflow into the database and unlocks the workflow.",
      "description": "\u003cp\u003e\n The workflow is forwarded to the successor nodes as passed in parameter \u003ccode\u003earrEnterNodesIds\u003c/code\u003e.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_endEditWorkFlowNode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_endEditWorkFlowNode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/evalAutoFiling": {
      "summary": "Evaluate the destination archive path based on filing definitions of a keywording from.",
      "description": "\u003cp\u003e\n This function evaluates the parent folder of a Sord object based on the filing definition of a keywording form\n WITHOUT storing the Sord object. This is in contrast to the checkinSord and checkinDocEnd functions which store the\n Sord object in the resulting parent.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_evalAutoFiling",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_evalAutoFiling"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1881161566"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/executeRegisteredFunction": {
      "summary": "Execute a registered function defined in a JavaScript or in an event handler.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method executeRegisteredFunction",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_executeRegisteredFunction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_executeRegisteredFunction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1191976387"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/executeRegisteredFunctionString": {
      "summary": "Execute a registered function defined in a JavaScript or in an event handler.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method executeRegisteredFunctionString",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_executeRegisteredFunctionString",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_executeRegisteredFunctionString"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/executeScript": {
      "summary": "Execute a script.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method executeScript",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_executeScript",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_executeScript"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_63967077"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/exportWorkflow": {
      "summary": "Exports the workflow-version.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method exportWorkflow",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_exportWorkflow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_exportWorkflow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_888671717"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findActivityProjects": {
      "summary": "This function reads all activity projects.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findActivityProjects",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findActivityProjects",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findActivityProjects"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_607287445"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findBackgroundThreads": {
      "summary": "Query all jobs executed in the background.",
      "description": "\u003cp\u003e\n The method returns all jobs started by the calling user. If the user has the administrator right\n (AccessC.FLAG_ADMIN) the findBackgroundThreadOptions parameter can filter for users.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findBackgroundThreads",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findBackgroundThreads"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findClose": {
      "summary": "Deletes the search results explicitly in the Indexserver process to save memory.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findClose",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findClose",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findClose"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findCompletion": {
      "summary": "Autocompletion/ Type as you search\u003cbr\u003e",
      "description": "Use {@link de.elo.ix.client.esearch.CompletionOptions} in findInfo.indByElastic.eSearchOptions.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findCompletion",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findCompletion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findContextTerms": {
      "summary": "Find terms for faceted search.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findContextTerms",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findContextTerms",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findContextTerms"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findFirstActivities": {
      "summary": "This function reads the activities of an object.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findFirstActivities",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findFirstActivities",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findFirstActivities"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findFirstConfigFiles": {
      "summary": "Finds configuration or postbox files.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findFirstConfigFiles",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findFirstConfigFiles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findFirstConfigFiles"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findFirstNotes": {
      "summary": "Find first notes.",
      "description": "This function starts a search for Note object and returns the first objects found in\n {@link FindResult#notes}. At least {@link FindInfo#findByNotes} must be set. The member\n {@link FindInfo#findChildren} optionally constrain the results to a folder. The search must be closed with\n {@link #findClose(ClientInfo, String)} in order to release internally cached data.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findFirstNotes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findFirstNotes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findFirstReportInfos": {
      "summary": "Finds report entries.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findFirstReportInfos",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findFirstReportInfos",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findFirstReportInfos"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findFirstSords": {
      "summary": "Find archive entries and retrieve the first \u003ccode\u003emax\u003c/code\u003e objects.",
      "description": "\u003cp\u003e\n This function performs a search over indexing information, full text, or hierarchy (child lists).\n \u003c/p\u003e\n \u003cp\u003e\n It returns either an ID array or a \u003ccode\u003eSord\u003c/code\u003e object array. The maximum array length is restricted to the\n value of the \u003ccode\u003emax\u003c/code\u003e parameter. Further results can be read with \u003ccode\u003efindNextSords\u003c/code\u003e using the\n search ID \u003ccode\u003eFindResult.searchId\u003c/code\u003e returned by this function. The search ID has a limited lifetime which\n can be configured. The default value is 5 minutes. The search results can be explicitly deleted with\n \u003ccode\u003efindClose\u003c/code\u003e to save memory on the server side.\n \u003c/p\u003e\n \u003cp\u003e\n This function does not write report entries ReportInfoC.ACT_IX_CHECKOUT_SORD for the results although it can return\n as much indexing information as checkoutSord does.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findFirstSords",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findFirstSords"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findFirstSubscriptions": {
      "summary": "Find first max subscriptions. This function finds the subscriptions of the current user.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findFirstSubscriptions",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findFirstSubscriptions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findFirstSubscriptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findFirstTasks": {
      "summary": "Finds reminders, activities and active workflow nodes.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findFirstTasks",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findFirstTasks",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findFirstTasks"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findFirstTranslateTerms": {
      "summary": "Find terms for which a translation is available.",
      "description": "\u003cp\u003e\n Close the search results with a call to findClose.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findFirstTranslateTerms",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findFirstTranslateTerms"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findFirstUsers": {
      "summary": "Find user data. This function allows to find users by their name, description, or one of their properties.",
      "description": "Wildcards can be used as defined in the session options, see {@link SessionOptionsC#DB_WILDCARDS}.\n \u003cp\u003e\n Example:\n \n \u003cpre\u003e\n \u003ccode class\u003d\"example\"\u003e\n FindUserInfo findUserInfo \u003d new FindUserInfo();\n findUserInfo.setName(\"testFind?sers-*\");\n int idx \u003d 0, max \u003d 100;\n FindResult fr \u003d conn.ix().findFirstUsers(findUserInfo, max);\n try {\n   while (true) {\n     for (UserName userName : fr.getUserNames().values()) {\n       // process userName object\n     }\n    \n     if (!fr.isMoreResults()) break;\n   \n     idx +\u003d fr.getUserNames().length;\n     fr \u003d conn.ix().findNextUsers(fr.getSearchId(), idx, max);\n   }\n }\n catch (RemoteException e) {\n   // process exception\n   throw e;\n }\n finally {\n   conn.ix().findClose(fr.getSearchId());\n }\n \u003c/code\u003e\n \u003c/pre\u003e\n \u003c/p\u003e\n Additionally, FindResult#sortedResult returns a sorted list of either UserInfo or UserName objects, depending on\n {@link FindUserInfo#returnUserInfoMap}.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findFirstUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findFirstUsers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findFirstWorkflows": {
      "summary": "Finds active workflows.",
      "description": "\u003cp\u003e\n This method returns all active workflows for the current user.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findFirstWorkflows",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findFirstWorkflows"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findNextActivities": {
      "summary": "This function reads the next activites of an object.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findNextActivities",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findNextActivities",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findNextActivities"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findNextConfigFiles": {
      "summary": "Finds next configuration files.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findNextConfigFiles",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findNextConfigFiles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findNextConfigFiles"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findNextNotes": {
      "summary": "Find next notes.",
      "description": "This function continues a search for Note objects startet with function\n {@link #findFirstNotes(ClientInfo, FindInfo, int, NoteZ)}.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findNextNotes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findNextNotes"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findNextReportInfos": {
      "summary": "Finds report entries.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findNextReportInfos",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findNextReportInfos",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findNextReportInfos"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findNextSords": {
      "summary": "Retrieves further results of a previous search with \u003ccode\u003efindFirstSords\u003c/code\u003e.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findNextSords",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findNextSords",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findNextSords"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findNextSubscriptions": {
      "summary": "Find next max subscriptions beginning at index idx.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findNextSubscriptions",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findNextSubscriptions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findNextSubscriptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findNextTasks": {
      "summary": "Continues the find process started with findFirstTasks.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findNextTasks",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findNextTasks",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findNextTasks"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findNextTranslateTerms": {
      "summary": "Find next terms.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findNextTranslateTerms",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findNextTranslateTerms",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findNextTranslateTerms"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findNextUsers": {
      "summary": "Find next user data.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findNextUsers",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findNextUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findNextUsers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findNextWorkflows": {
      "summary": "Finds more active workflows.",
      "description": "\u003cp\u003e\n This method returns all active workflows for the current user.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findNextWorkflows",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findNextWorkflows"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/findSearchTerms": {
      "summary": "Corrections and synonyms.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findSearchTerms",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_findSearchTerms",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findSearchTerms"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/finishExport": {
      "summary": "Removes temp-files after an export.",
      "description": "\u003cp\u003e\n This method should be called, after the generated ZIP-archive has been successfully downloaded.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_finishExport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_finishExport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/forwardSubstitution": {
      "summary": "Forward or transfer a substitution to an other user.",
      "description": "\u003cp\u003e\n A substitution can be forwarded or transfered to an other user if {@link SubstitutionSettings#canBeForwarded} is\n set to true and the current user is allowed to forward the substitution.\n \u003c/p\u003e\n \u003cp\u003e\n Define how the substitution is forwarded by setting the corresponding parameters in\n {@link ForwardSubstitutionInfo}.\n \u003c/p\u003e\n \n \u003cp\u003e\n The current user is allowed to forward a substitution, if:\n \u003c/p\u003e\n \u003cul\u003e\n \u003cli\u003eThe current user is the substitute ({@link Substitution#substituteId}\n \u003cli\u003eThe current user is member of the group who is the substitute\n \u003cli\u003eThe current user is sub administrator of the substitute\n \u003cli\u003eThe current user is the direct superior of the substitute (ignoring groups, {@link UserInfo#superiorId} of the\n substitute must be the current user)\n \u003cli\u003eThe current user has main administrator rights.\n \u003c/ul\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_forwardSubstitution",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_forwardSubstitution"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/forwardWorkflowNode": {
      "summary": "Forward a workflow node, terminate a workflow or modify node data.",
      "description": "\u003ch2\u003eExample 1: Forward a workflow node:\u003c/h2\u003e\n \u003cp\u003e\n \n \u003cpre\u003e\n \u003ccode class\u003d\"example\"\u003e\n // Lock workflow and read node data\n WFEditNode editNode \u003d conn.ix().beginForwardWorkflowNode(flowId, nodeId, null, LockC.IF_FREE);\n // Select successor nodes to be activated\n // Make sure to select only one successor if: (editNode.getNode().getFlags() \u0026amp; WFNodeC.FLAG_ONE_SUCCESSOR) !\u003d 0\n List\u003cInteger\u003e succNodes \u003d Arrays.asList(editNode.getSuccNodes()[0].getId());\n // Optionally: change node name and comment\n WFNode activeNode \u003d editNode.getNode();\n activeNode.setName(\"new name\");\n activeNode.setComment(\"new comment\");\n // Forward\n ForwardWorkflowNodeInfo fwdInfo \u003d new ForwardWorkflowNodeInfo();\n fwdInfo.setNode(activeNode);\n fwdInfo.setSuccessorNodesToActivate(succNodes); \n connU.ix().forwardWorkflowNode(flowId, nodeId, fwdInfo, LockC.YES);\n \u003c/code\u003e\n \u003c/pre\u003e\n \u003c/p\u003e\n \u003ch2\u003eExample 2: Cancel forwarding after beginForwardWorkflowNode has locked the workflow\u003c/h2\u003e\n \u003cp\u003e\n \n \u003cpre\u003e\n \u003ccode class\u003d\"example\"\u003e\n // Lock workflow and read node data\n WFEditNode editNode \u003d conn.ix().beginForwardWorkflowNode(flowId, nodeId, null, LockC.IF_FREE);\n // Cancel forward\n ForwardWorkflowNodeInfo fwdInfo \u003d null;\n connU.ix().forwardWorkflowNode(flowId, nodeId, fwdInfo, LockC.YES);\n \u003c/code\u003e\n \u003c/pre\u003e\n \u003c/p\u003e\n \u003ch2\u003eExample 3: Change node priority, name and comment\u003c/h2\u003e\n \u003cp\u003e\n \n \u003cpre\u003e\n \u003ccode class\u003d\"example\"\u003e\n \u003c/p\u003e\n // Lock workflow \n WFEditNode editNode \u003d conn.ix().beginForwardWorkflowNode(flowId, nodeId, null, LockC.IF_FREE);\n // Change node priority, name and comment\n WFNode activeNode \u003d editNode.getNode();\n activeNode.setPrio(UserTaskPriorityC.HIGHEST);\n activeNode.setName(\"new name\");\n activeNode.setComment(\"new comment\");\n // Update node and unlock\n ForwardWorkflowNodeInfo fwdInfo \u003d new ForwardWorkflowNodeInfo();\n fwdInfo.setNode(activeNode);\n connU.ix().forwardWorkflowNode(flowId, nodeId, fwdInfo, LockC.YES);\n \u003c/code\u003e\n \u003c/pre\u003e\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_forwardWorkflowNode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_forwardWorkflowNode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1699606509"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getAclAccess": {
      "summary": "Returns the access of the given ACL.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getAclAccess",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getAclAccess",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getAclAccess"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_200528028"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getArchiveStatistics": {
      "summary": "Read characteristical properties of the archive.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getArchiveStatistics",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getArchiveStatistics",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getArchiveStatistics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2056457945"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getCompiledScripts": {
      "summary": "This function returns a map containing information of all compiled scripts.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getCompiledScripts",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getCompiledScripts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getCompiledScripts"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_498630295"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getConstants": {
      "summary": "Retrieves the constants.",
      "description": "\u003cp\u003e\n Constants are provided as objects to provide the advantage of type checking. (Java 1.4 does not support enumeration\n types).\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getConstants",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getConstants"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1264954948"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getContextTerms": {
      "summary": "Find terms for faceted search.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getContextTerms",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getContextTerms",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getContextTerms"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1005790586"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getDebuggerPort": {
      "summary": "This function returns debugger\u0027s port.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getDebuggerPort",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getDebuggerPort",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getDebuggerPort"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getDistinctValuesOfObjKey": {
      "summary": "Read all distinct values from the database that are used for the given ObjKey name, potentionally causing an",
      "description": "enormous database load.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getDistinctValuesOfObjKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getDistinctValuesOfObjKey"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1153931872"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getESWFromEditInfo": {
      "summary": "Returns the FileData-Objects from the EditInfo-Objects.",
      "description": "\u003cp\u003e\n Caution: sord.XDateIso and sord.IDateIso have to contain a value related to the servers timezone.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getESWFromEditInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getESWFromEditInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1078168929"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getEditInfoFromESW": {
      "summary": "Returns the EditInfo-Objects from the FileData-Objects.",
      "description": "\u003cp\u003e\n The rows \"IXDTEXT\", \"ISCRYPT\", \"ATTACHID\" and \"SIGID\" in the esw-file are not supported in this version.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getEditInfoFromESW",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getEditInfoFromESW"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_785380175"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getExportZipUrl": {
      "summary": "Gets the URL for downloading the generated ZIP-archive of this export.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getExportZipUrl",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getExportZipUrl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getExportZipUrl"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getImportZipUrl": {
      "summary": "Retrieves the URL for uploading the ZIP-archive for this import.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getImportZipUrl",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getImportZipUrl",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getImportZipUrl"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getPublicDownloads": {
      "summary": "Gets the public downloads.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getPublicDownloads",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getPublicDownloads",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getPublicDownloads"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_881442092"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getScriptsToDebug": {
      "summary": "This function returns the list of the scripts which are currently debugged, i.e. the property \"scriptsToDebug\".",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getScriptsToDebug",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getScriptsToDebug",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getScriptsToDebug"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getSearchTerms": {
      "summary": "Get alternative terms for an iSearch search.",
      "description": "\u003cp\u003e\n This function can be used to list all index values currently used for a given index group. To achieve this, pass\n termType\u003dSearchTermsC.TERMS and set findInfo.findDirect.query \u003d \"LINE.\" + indexgroup + \":\" + valueprefix. If more\n than 10 values shoud be returned, set findInfo.findOptions.totalCount to the maximum values to be returned.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getSearchTerms",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getSearchTerms"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1888107655"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getServerInfo": {
      "summary": "Retrieves configurational information, e.g. license key, additional Indexservers, etc.",
      "description": "In order to update the\n current license information call {@link #configureLicense(ClientInfo, String)}.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getServerInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getServerInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1701204890"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getServerInfoDM": {
      "summary": "Gets DM configuration information.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getServerInfoDM",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getServerInfoDM",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getServerInfoDM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1425760760"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getSessionFromTicket": {
      "summary": "Returns the LoginResult object that represents the session of the ticket contained in the given ClientInfo object.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getSessionFromTicket",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getSessionFromTicket",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getSessionFromTicket"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_777531606"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getSessionInfos": {
      "summary": "Returns the SessionInfo-Objects about all the active connections.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getSessionInfos",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getSessionInfos",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getSessionInfos"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1376733713"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getSessionOptions": {
      "summary": "Retrieve the current session options.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getSessionOptions",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getSessionOptions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getSessionOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1197100286"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getUserNames": {
      "summary": "Reads user or group names and IDs.",
      "description": "\u003cp\u003e\n The method performs an internal call to \u003ccode\u003echeckoutUsers\u003c/code\u003e. \u003cb\u003eNote:\u003c/b\u003e Only the names and IDs are\n returned and not the complete user data.\n \u003c/p\u003e\n \u003cp\u003e\n If the current user is assigned to organisation units, the function returns only users and groups assigned to at\n least one of the users organisation units.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getUserNames",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getUserNames"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1001617329"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getWebDAVPathFromObjID": {
      "summary": "Returns the WebDAV path from an Object ID.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getWebDAVPathFromObjID",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getWebDAVPathFromObjID",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getWebDAVPathFromObjID"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getWebDAVPathFromObjID2": {
      "summary": "Returns the WebDAV path from an Object ID.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getWebDAVPathFromObjID2",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getWebDAVPathFromObjID2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getWebDAVPathFromObjID2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_148564345"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/getWorkflowTemplateVersions": {
      "summary": "Reads the version information of all versions of the given workflow.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getWorkflowTemplateVersions",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_getWorkflowTemplateVersions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getWorkflowTemplateVersions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1768472140"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/importWorkFlow": {
      "summary": "Imports a workflow template from a file.",
      "description": "\u003cp\u003e\n To export a workflow template into a file, use the workflow design dialogue in ELO-CLIENT.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_importWorkFlow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_importWorkFlow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/importWorkFlow2": {
      "summary": "Imports a workflow template from a file.",
      "description": "\u003cp\u003e\n To export a workflow template into a file, use the workflow design dialogue in ELO-CLIENT.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_importWorkFlow2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_importWorkFlow2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/insertPublicDownload": {
      "summary": "Creates and inserts a new public download",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method insertPublicDownload",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_insertPublicDownload",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_insertPublicDownload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2062827124"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/internalReceiveEvents": {
      "summary": "Read events from the server.",
      "description": "\u003cp\u003e\n This function should not be called directly. It is used internally by the event bus helper object of\n \u003ccode\u003eIXConnection\u003c/code\u003e.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_internalReceiveEvents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_internalReceiveEvents"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_910482075"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/invalidateCache": {
      "summary": "Invalidate the internally used caches for users, storage masks, etc.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method invalidateCache",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_invalidateCache",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_invalidateCache"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/invalidateCache2": {
      "summary": "Invalidate the internally used caches.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method invalidateCache2",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_invalidateCache2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_invalidateCache2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1712381166"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/linkSords": {
      "summary": "Links archive entries.",
      "description": "\u003cp\u003e\n Links are associations between archive entries and are independent from the archive hierarchy.\n \u003c/p\u003e\n \u003cp\u003e\n The links to or from an archive entry are listed in \u003ccode\u003eSord.linksGoOut\u003c/code\u003e and \u003ccode\u003eSord.linksComeIn\u003c/code\u003e.\n In the database structure and in the Indexserver API, links are vectors that point from one Sord to one or more\n other Sords. But the client applications usually do not take care of the direction. They add the links found in\n Sord.linksGoOut and Sord.linksComeIn in order to show the liked objects.\n \u003c/p\u003e\n \u003cp\u003e\n There are two different types of links: pairs and cross-links. A pair connects exactly two Sord objects. Each pair\n has its own link-ID in the database. A cross-link connects a group of objects under the same link-ID. At the first\n glance it seems, that each object has a pair-link to each other object. But there is a significant difference when\n deleting links. E.g. if the Sord objects sord1, sord2, sord3 are connected with a cross-link, function checkoutSord\n will return for sord1: {sord2, sord3}, sord2: {sord1, sord3} and sord3: {sord1, sord2}. If function unlinkSords is\n called for the link sord1-sord2 (fromSord\u003dsord1, toSords\u003d[sord2]), the next calls to checkoutSord will return for\n sord1: {sord3}, sord2: {}, sord3: {sord1}. If the objects were connected by pair-links, the result would be sord1:\n {sord3}, sord2: {sord3}, sord3: {sord1, sord2}.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_linkSords",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_linkSords"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/linkSords2": {
      "summary": "Links archive entries like {@link #linkSords}.",
      "description": "\u003cp\u003e\n This method provides the additional parameter {@link LinkSordInfo} to specify more options for linking sords\n together.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_linkSords2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_linkSords2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/lockArchive": {
      "summary": "Locks the archive for users or retrieves the lock on the archive.",
      "description": "The behavior of this function has changed with\n ELO11 since the security concept of keys is no more supported. In order to prevent particular users from using the\n archive, constrain the usage to members of a group. If all users should be able to login, pass\n {@link UserInfoC#UNLOCK_ARCHIVE}.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_lockArchive",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_lockArchive"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/login": {
      "summary": "Log on to Indexserver.",
      "description": "\u003cp\u003e\n If the function succeeds, the return value is an object containing a ticket that allows access to all the other\n interface functions.\n \u003c/p\u003e\n \u003cp\u003e\n This ticket has a limited lifetime as returned in \u003ccode\u003eLoginResult.ticketDuration\u003c/code\u003e. The life time can be\n extended by calling \u003ccode\u003ealive\u003c/code\u003e.\n \u003c/p\u003e\n \u003cp\u003e\n The \u003ccode\u003erunAsUser\u003c/code\u003e parameter is used in Single-Sign-On environments. The login is performed for every user\n with the same SSO account specific to the application and the \u003crunAsUser\u003e parameter specifies the security context\n for the Indexserver connection. The SSO account must have administrator privileges.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_login"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_777531606"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/loginAdmin": {
      "summary": "Login any user as an administrator.",
      "description": "\u003cp\u003e\n This function logs on the user given in \u003ccode\u003ereportAsUser\u003c/code\u003e as an administrator. The effective rights of the\n resulting session are not constrained to the rights of the given user. The client application is responsible for\n access checking.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_loginAdmin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_loginAdmin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_777531606"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/loginEloProf": {
      "summary": "This login is used by ELOprofessional applications if the Indexserver is used to forward workflows",
      "description": "(WorkflowServer).\n \u003cp\u003e\n This login returns a limited connection to the Indexserver. It is not possible to access documents or user data.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_loginEloProf",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_loginEloProf"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_777531606"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/loginKerberos": {
      "summary": "Login using Kerberos ticket.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method loginKerberos",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_loginKerberos",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_loginKerberos"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_777531606"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/logout": {
      "summary": "Log out user.",
      "description": "\u003cp\u003e\n The ticket contained in \u003ccode\u003eci\u003c/code\u003e becomes invalid.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_logout",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_logout"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/moveDocuments": {
      "summary": "Move documents from one storage path to another storage path.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method moveDocuments",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_moveDocuments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_moveDocuments"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1436376940"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/notifyServer": {
      "summary": "This function notifies the Indexserver about an operation of the client program.",
      "description": "\u003cp\u003e\n Use this function in order to notify the license management, when a write access has been processed, e.g. scan a\n document or perform OCR analysis on a document.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_notifyServer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_notifyServer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_810727301"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/openEventBus": {
      "summary": "Open a new event bus.",
      "description": "\u003cp\u003e\n Caution: the event bus API functions cannot be used with SOAP communication.\n \u003c/p\u003e\n \u003cp\u003e\n An event bus is like a communication channel between two or more subscribers. One subscriber sends an event and the\n bus dispatches it to the subscribers that are listening.\n \u003c/p\u003e\n \u003cp\u003e\n Before an application can send events, it has to call the function \u003ccode\u003ecreateEventBusSubscriber\u003c/code\u003e in order\n to create a subscriber ID. A subscriber can send events to an event bus or listen to events from an event bus. To\n send an event, the function \u003ccode\u003esendEvents\u003c/code\u003e has to be called.\u003cbr\u003e\n In order to revive events from event busses, event listeners have to be registered with the event busses first. An\n event listener specifies a list of \u003ccode\u003eEventFilter\u003c/code\u003e objects which describe the requested event types and\n busses from which to receive events. A subscriber can register any number of event listeners to potentially\n different event busses with a single call to \u003ccode\u003ecreateEventBusListener\u003c/code\u003e. Further event listeners can be\n added by this function or deleted with \u003ccode\u003edeleteEventBusListener\u003c/code\u003e at any time.\n \u003c/p\u003e\n \u003cp\u003e\n A helper object of \u003ccode\u003eIXConnection\u003c/code\u003e, which can be obtained by \u003ccode\u003eIXConnection.getEventBusApi()\u003c/code\u003e,\n listens for incoming events and forwards them to an object that implements the \u003ccode\u003eIXEventBusHandler\u003c/code\u003e\n interface. This object has to be provided by the client application and must be passed in a call to\n \u003ccode\u003eIXConnection.getEventBusApi().setHandler(...)\u003c/code\u003e.\n \u003c/p\u003e\n \u003cp\u003e\n Normally, client applications will use the predefined busses listed in \u003ccode\u003eEventBusC\u003c/code\u003e. This class defines a\n broadcast bus and busses related to users. Any subscriber can receive events from the broadcast bus. In difference\n to that, user busses can be listened only by the owner - a user bus acts somewhat like a mailbox.\n \u003cp\u003e\n \u003c/p\u003e\n There is no constraint to subscribers for sending events to busses. A subscriber can send any event to a bus, if it\n knows the bus ID.\n \u003cp\u003e\n \u003c/p\u003e\n In some circumstances, it is useful to work with a private channel between particular subscribers. This could be a\n channel used for chat messages between users. Another example is a channel between separated components of an\n application that share the same ticket an have to synchronize the user interfaces.\n \u003cp\u003e\n \u003c/p\u003e\n Use this function to open an event bus e.g. to establish a private communication channel between two or more\n applications. The returned bus ID is built upon the given information in \u003ccode\u003eparams\u003c/code\u003e. Two applications,\n that supply equal params objects, will receive equal bus IDs. At least one of the applications has to close the bus\n with \u003ccode\u003ecloseEventBus\u003c/code\u003e if it is needed no more.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_openEventBus",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_openEventBus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_6"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/parseException": {
      "summary": "Parses the given string of an exception into a structured IXExceptionData object.",
      "description": "\u003cp\u003e\n If the given string does not represent an IXException, the exceptionType NOT_IX is returned (value -1) and the\n given exception string can be found in \"message\".",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_parseException",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_parseException"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_784089396"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/processFindResult": {
      "summary": "Executes the processing information given by \u003ccode\u003eprocessInfo\u003c/code\u003e for all objects found by a",
      "description": "\u003ccode\u003efindFirstSords\u003c/code\u003e call.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_processFindResult",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_processFindResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1436376940"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/processOcr": {
      "summary": "Compute OCR on the given image data or on an archived document.",
      "description": "\u003cp\u003e\n \u003ci\u003eIn order to use this function, the ELO OCR Service 8.0 has to be installed somewhere on the network and has to\n be configured for Indexserver access.\u003c/i\u003e\n \u003c/p\u003e\n \u003cp\u003e\n The request can be performed synchronously or asynchronously. In asynchronous processing, the result is sent via\n the Indexserver Event API. In order to receive the result, the client application has to register a listener for\n the event type EventBusC.EVENT_OCR_RESULT.\n \u003c/p\u003e\n \u003cp\u003e\n Use an empty OcrInfo object to check, whether OCR is available.\n \u003c/p\u003e\n \u003cp\u003e\n This is a simple example for synchronous OCR processing:\n \n \u003cpre\u003e\n \u003ccode class\u003d\"example\"\u003e\n IXConnection conn \u003d ...\n String imageFile \u003d ... // Input file in TIFF, etc. format\n String textFile \u003d ... // Output file in text format\n \u003cbr/\u003e\n // Is OCR via IX available? - Pass an empty OcrInfo object to processOcr in order to find it out. \n OcrInfo ocrInfo \u003d new OcrInfo();\n bool isOcrAvail \u003d conn.Ix.processOcr(ocrInfo) !\u003d null;\n if (!isOcrAvail) return;\n \u003cbr/\u003e\n // Query the languages supported by the OCR Engine\n OcrInfo ocrInfoLangs \u003d new OcrInfo();\n ocrInfoLangs.queryLanguages \u003d new OcrInfoQueryLanguages();\n OcrResult ocrResultLangs \u003d conn.Ix.processOcr(ocrInfoLangs);\n \u003cbr/\u003e\n // Anaylze file\n // Load entire image into memory\n OcrInfo ocrInfo \u003d new OcrInfo();\n ocrInfo.recognizeFile \u003d new OcrInfoRecognizeFile();\n ocrInfo.recognizeFile.imageData \u003d new FileData();\n ocrInfo.recognizeFile.imageData.data \u003d File.ReadAllBytes(imageFile);\n ocrInfo.recognizeFile.imageData.contentType \u003d Path.GetExtension(imageFile);\n ocrInfo.recognizeFile.pageNo \u003d -1; // analyze all pages\n ocrInfo.recognizeFile.outputFormat \u003d OcrInfoC.TEXT; // return result as String\n ocrInfo.recognizeFile.recognizeLangs \u003d new String[] {\"German\", \"Czech\"}; // Choosen from ocrResultLangs.internalLangs  \n \u003cbr/\u003e\n // Process OCR\n OcrResult ocrResult \u003d conn.Ix.processOcr(ocrInfo);\n \u003cbr/\u003e\n // Write text output to file\n File.WriteAllText(textFile, ocrResult.recognizeFile.text, Encoding.UTF8);\n \u003c/code\u003e\n \u003c/pre\u003e\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_processOcr",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_processOcr"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_998509414"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/processTrees": {
      "summary": "\u003ccode\u003eprocessTrees\u003c/code\u003e extends ValueClass implements a generic tree walk for all subtrees specified in",
      "description": "\u003ccode\u003enavInfo\u003c/code\u003e.\n \u003cp\u003e\n Specific operations for each node are queued in \u003ccode\u003eprocInfo\u003c/code\u003e and will be applied in order of appearance.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_processTrees",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_processTrees"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1436376940"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/provideCryptPassword": {
      "summary": "Provide a password to be used in the current session for encrypting and decrypting of documents.",
      "description": "\u003cp\u003e\n The given password must be encrypted with the IXClient.encryptPassword function to hide it from administrators. An\n unencrypted password will cause an exception.\n \u003c/p\u003e\n \u003cp\u003e\n To use the encryption/decryption functionality of Indexserver, the session option \u0026lt;ix.encryptDocuments\u0026gt; resp.\n \u0026lt;ix.decryptDocuments\u0026gt; has to be \u0026lt;true\u0026gt;. Then, Indexserver generates special URLs that cause it to\n encrypt documents on upload and decrypt documents on download.\n \u003c/p\u003e\n Be aware of the fact that encryption/decryption happens between Indexserver and Document Manager communication and\n not between Indexserver and the client application. Thus it is strongly recommended to use HTTPS between the client\n application and Indexserver. The Indexserver configuration option \u0026quot;ixUrlBase\u0026quot; can be helpful to achieve\n this.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_provideCryptPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_provideCryptPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/provideSystemCryptPassword": {
      "summary": "Provide a system password to be used in the current session for encrypting and decrypting of documents.",
      "description": "\u003cp\u003e\n The given password must be encrypted with the IXClient.encryptPassword function. An unencrypted password will cause\n an exception.\n \u003c/p\u003e\n \u003cp\u003e\n To use the encryption/decryption functionality of Indexserver, the session option \u0026lt;ix.encryptDocuments\u0026gt; resp.\n \u0026lt;ix.decryptDocuments\u0026gt; has to be \u0026lt;true\u0026gt;. Then, Indexserver generates special URLs that cause it to\n encrypt documents on upload and decrypt documents on download.\n \u003c/p\u003e\n Be aware of the fact that encryption/decryption happens between Indexserver and Document Manager communication and\n not between Indexserver and the client application. Thus it is strongly recommended to use HTTPS between the client\n application and Indexserver. The Indexserver configuration option \u0026quot;ixUrlBase\u0026quot; can be helpful to achieve\n this.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_provideSystemCryptPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_provideSystemCryptPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/queryJobProtocol": {
      "summary": "Query the protocol of a background thread.",
      "description": "\u003cp\u003e\n The method returns all log messages that matches the restrictions given by the parameter queryJobProtocolInfo, and\n that are cached at the Indexserver. The amount of cached entries is configurable at the log4j configuration file.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_queryJobProtocol",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_queryJobProtocol"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_222450704"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/queryJobState": {
      "summary": "Returns the job state for a given job GUID.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method queryJobState",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_queryJobState",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_queryJobState"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1436376940"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/refSord": {
      "summary": "Creates a new object relationship.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method refSord",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_refSord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_refSord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/registerOcrWorker": {
      "summary": "This function is called from an OCR worker process to notify Indexserver about its state.",
      "description": "\u003cp\u003e\n The behavior of a OCR worker process is beyond the API documentation. Contact ELO support, if a different OCR has\n to be integrated.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_registerOcrWorker",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_registerOcrWorker"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_730157667"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/reload": {
      "summary": "This function reloads all internal objects.",
      "description": "\u003cp\u003e\n Call this function with administrator privileges, if configuration options, scripts or configuration files are\n modified. Current sessions and processes are tried to be kept alive. But under some conditions, sessions get lost\n and running processes terminate with an exception!\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_reload",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_reload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/reloadScripts": {
      "summary": "This function reloads all scripts.",
      "description": "\u003cp\u003e\n Call this function with administrator privileges,\n \u003c/p\u003e\n if some scripts are modified.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_reloadScripts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_reloadScripts"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/resolveRights": {
      "summary": "Resolves the rights of a user.",
      "description": "\u003cp\u003e\n This function calculates the effective rights of a given user. Hereby, the given parameter userInfo will not be\n checked in. This way it is possible to set hypothetical groups for the user and retrieve the results of the change\n without applying them. The effective rights always are calculated for every right.\n \u003c/p\u003e\n \u003cp\u003e\n The groups of the given users will be combined with the groups he already is a member of. This combination works\n like the logical \"or\" function. If you want the result without a specific group, ignore the corresponding\n {@link ResolveRightsResult} which has set {@link ResolveRightsResult#type}\u003d {@link ResolveRightsResultC#DIRECT}.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_resolveRights",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_resolveRights"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_907729609"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/restoreSord": {
      "summary": "Restores an archive entry, its references and notes.",
      "description": "\u003cp\u003e\n Passing true for \u003ccode\u003esingleObject\u003c/code\u003e restores only the object represented by \u003ccode\u003eobjId\u003c/code\u003e.\u003cbr/\u003e\n Otherwise, the complete subtree beginning at \u003ccode\u003eobjId\u003c/code\u003e will be restored.\n \u003c/p\u003e\n \u003cp\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_restoreSord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_restoreSord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/runEsProcess": {
      "summary": "Run a iSearch process now (if it is not running) or interrupt it if its running.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method runEsProcess",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_runEsProcess",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_runEsProcess"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/sendEvents": {
      "summary": "Send events to event busses.",
      "description": "\u003cp\u003e\n Call this function to send events to event busses.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_sendEvents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_sendEvents"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/setScriptsToDebug": {
      "summary": "This function allows to set the the property \"scriptsToDebug\".",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method setScriptsToDebug",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_setScriptsToDebug",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_setScriptsToDebug"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/setServerInfo": {
      "summary": "Sets the writable members of ServerInfo.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method setServerInfo",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_setServerInfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_setServerInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/setServerInfoDM": {
      "summary": "Sets the writable members of the DM configuration.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method setServerInfoDM",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_setServerInfoDM",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_setServerInfoDM"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/setSessionOptions": {
      "summary": "This function sets options related to the session identified by the given ticket.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method setSessionOptions",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_setSessionOptions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_setSessionOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/startAdHocWorkFlow": {
      "summary": "Starts an Ad Hoc Workflow.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method startAdHocWorkFlow",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_startAdHocWorkFlow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_startAdHocWorkFlow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/startAdHocWorkFlow2": {
      "summary": "Starts an Ad Hoc Workflow.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method startAdHocWorkFlow2",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_startAdHocWorkFlow2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_startAdHocWorkFlow2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/startAdHocWorkFlow3": {
      "summary": "Starts an Ad Hoc Workflow.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method startAdHocWorkFlow3",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_startAdHocWorkFlow3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_startAdHocWorkFlow3"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/startExport": {
      "summary": "Starts an export-job.",
      "description": "\u003cp\u003e\n The given IDs and their children will be exported as specified in the options.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_startExport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_startExport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/startExportExt": {
      "summary": "Starts an export-job.",
      "description": "\u003cp\u003e\n This is an enhanced version which works with the same options as the ones in Windows Client\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_startExportExt",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_startExportExt"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/startImport": {
      "summary": "Starts an import-job.",
      "description": "\u003cp\u003e\n The given IDs and their children will be imported as specified in the options.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_startImport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_startImport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/startWorkFlow": {
      "summary": "Starts a workflow from a workflow template.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method startWorkFlow",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_startWorkFlow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_startWorkFlow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/startWorkFlow2": {
      "summary": "Starts a workflow from a workflow template.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method startWorkFlow2",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_startWorkFlow2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_startWorkFlow2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/takeWorkFlowNode": {
      "summary": "Assign a node to a user.",
      "description": "\u003cp\u003e\n This function is useful in two situations:\u003cbr/\u003e\n 1. A user calls this function to assume a task for exclusive use. The task must be assigned to one of the user s\n groups or to a user substituted by the current user. Supply an empty \u003ccode\u003esUserId\u003c/code\u003e.\u003cbr/\u003e\n 2. A user calls this function to pass the task to another user. The task must be assigned to the current user.\n Supply any user name or ID in sUserId.\n \u003c/p\u003e\n The function assigns in addition to the given node all nodes with the same {@link WFNode#departmentGroup}.",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_takeWorkFlowNode",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_takeWorkFlowNode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/terminatePublicDownloadUrls": {
      "summary": "Deletes the public downloads",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method terminatePublicDownloadUrls",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_terminatePublicDownloadUrls",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_terminatePublicDownloadUrls"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/terminateWorkFlow": {
      "summary": "Terminates a workflow.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method terminateWorkFlow",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_terminateWorkFlow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_terminateWorkFlow"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/testAdapter": {
      "summary": "This function is used for testing.",
      "description": "\u003cp\u003e\n In productive environments it always throws an exception.\n \u003c/p\u003e",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_testAdapter",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_testAdapter"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1888107655"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/IXServicePortIF/unlinkSords": {
      "summary": "Remove links between archive entries.",
      "description": "Interface de.elo.ix.client.IXServicePortIF, method unlinkSords",
      "post": {
        "tags": [
          "IXServicePortIF"
        ],
        "operationId": "IXServicePortIF_unlinkSords",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_unlinkSords"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/LdapService/configure": {
      "summary": "Get or set LDAP configuration from plugin.",
      "description": "Interface de.elo.ix.client.ldap.LdapService, method configure",
      "post": {
        "tags": [
          "LdapService"
        ],
        "operationId": "LdapService_configure",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_LdapService_configure"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_944564842"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/LdapService/createConfig": {
      "summary": "Create an empty LDAP configuration with initialized members.",
      "description": "Interface de.elo.ix.client.ldap.LdapService, method createConfig",
      "post": {
        "tags": [
          "LdapService"
        ],
        "operationId": "LdapService_createConfig",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_LdapService_createConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_944564842"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/MyELOService/checkState": {
      "description": "Interface de.elo.ix.client.myelo.MyELOService, method checkState",
      "post": {
        "tags": [
          "MyELOService"
        ],
        "operationId": "MyELOService_checkState",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_MyELOService_checkState"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1426941339"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/MyELOService/cleanUpNotifications": {
      "summary": "Delete Notifications of a user.",
      "description": "Interface de.elo.ix.client.myelo.MyELOService, method cleanUpNotifications",
      "post": {
        "tags": [
          "MyELOService"
        ],
        "operationId": "MyELOService_cleanUpNotifications",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_MyELOService_cleanUpNotifications"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/MyELOService/readContent": {
      "description": "Interface de.elo.ix.client.myelo.MyELOService, method readContent",
      "post": {
        "tags": [
          "MyELOService"
        ],
        "operationId": "MyELOService_readContent",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_MyELOService_readContent"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1585309177"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/MyELOService/readHashTagCloud": {
      "summary": "Returns HashTagCloud informations.",
      "description": "Currently HtCloudInfo is not used. Set null instead. Default values for HashTagCloud: Timeperiod: 8 Weeks.\n HashTagCount: 20.",
      "post": {
        "tags": [
          "MyELOService"
        ],
        "operationId": "MyELOService_readHashTagCloud",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_MyELOService_readHashTagCloud"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1698025638"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/PluginService/configure": {
      "summary": "Read and/or modify plugin configuration.",
      "description": "If the plugin does not support configuration, an exception with code\n {@link IXExceptionC#UNSUPPORTED_FUNCTION} is thrown. This function internally calls the interface\n de.elo.ix.plugin.ConfigurePlugin.configure().",
      "post": {
        "tags": [
          "PluginService"
        ],
        "operationId": "PluginService_configure",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PluginService_configure"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/PluginService/getHistory": {
      "summary": "Get the history of a plugin.",
      "description": "Interface de.elo.ix.client.plugin.PluginService, method getHistory",
      "post": {
        "tags": [
          "PluginService"
        ],
        "operationId": "PluginService_getHistory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PluginService_getHistory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1159353819"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/PluginService/getPlugin": {
      "summary": "Return the plugin with the given symbolic name.",
      "description": "If no plugin with the given name is running, an exception with code\n IXExceptionC#NOT_FOUND is thrown.",
      "post": {
        "tags": [
          "PluginService"
        ],
        "operationId": "PluginService_getPlugin",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PluginService_getPlugin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1597637633"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/PluginService/getPlugins": {
      "summary": "Return a list of installed plugins.",
      "description": "Interface de.elo.ix.client.plugin.PluginService, method getPlugins",
      "post": {
        "tags": [
          "PluginService"
        ],
        "operationId": "PluginService_getPlugins",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PluginService_getPlugins"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1118179461"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/PluginService/install": {
      "summary": "Install a plugin from the location of a JAR file.",
      "description": "Interface de.elo.ix.client.plugin.PluginService, method install",
      "post": {
        "tags": [
          "PluginService"
        ],
        "operationId": "PluginService_install",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PluginService_install"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_6"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/PluginService/send": {
      "summary": "Send a message to a plugin.",
      "description": "This function directs the message to the {@link ConfigurePlugin} interface of the\n plugin.",
      "post": {
        "tags": [
          "PluginService"
        ],
        "operationId": "PluginService_send",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PluginService_send"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1652390957"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/PluginService/start": {
      "summary": "Start plugin with given ID.",
      "description": "Interface de.elo.ix.client.plugin.PluginService, method start",
      "post": {
        "tags": [
          "PluginService"
        ],
        "operationId": "PluginService_start",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PluginService_start"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/PluginService/stop": {
      "summary": "Stop plugin with given ID.",
      "description": "Interface de.elo.ix.client.plugin.PluginService, method stop",
      "post": {
        "tags": [
          "PluginService"
        ],
        "operationId": "PluginService_stop",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PluginService_stop"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/PluginService/uninstall": {
      "summary": "Uninstall plugin with given ID.",
      "description": "Interface de.elo.ix.client.plugin.PluginService, method uninstall",
      "post": {
        "tags": [
          "PluginService"
        ],
        "operationId": "PluginService_uninstall",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PluginService_uninstall"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/PluginService/upload": {
      "summary": "Install a plugin which JAR is uploaded from a stream.",
      "description": "Interface de.elo.ix.client.plugin.PluginService, method upload",
      "post": {
        "tags": [
          "PluginService"
        ],
        "operationId": "PluginService_upload",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PluginService_upload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_6"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/RawStreamService/download": {
      "summary": "Download a stream",
      "description": "Interface de.elo.ix.client.compatibility.RawStreamService, method download",
      "post": {
        "tags": [
          "RawStreamService"
        ],
        "operationId": "RawStreamService_download",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_RawStreamService_download"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_15"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/RawStreamService/upload": {
      "summary": "Upload a stream.",
      "description": "Interface de.elo.ix.client.compatibility.RawStreamService, method upload",
      "post": {
        "tags": [
          "RawStreamService"
        ],
        "operationId": "RawStreamService_upload",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_RawStreamService_upload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/SystemInformation/archivReport": {
      "summary": "Not used anymore and not implemented.",
      "description": "Interface de.elo.ix.client.system.SystemInformation, method archivReport",
      "post": {
        "tags": [
          "SystemInformation"
        ],
        "operationId": "SystemInformation_archivReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_SystemInformation_archivReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1383534582"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/SystemInformation/countDocsInStorePath": {
      "summary": "Counts the documents defined by SystemInfo.",
      "description": "Interface de.elo.ix.client.system.SystemInformation, method countDocsInStorePath",
      "post": {
        "tags": [
          "SystemInformation"
        ],
        "operationId": "SystemInformation_countDocsInStorePath",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_SystemInformation_countDocsInStorePath"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_276702696"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/SystemInformation/licenseReport": {
      "summary": "Delegeates the AM license report.",
      "description": "Interface de.elo.ix.client.system.SystemInformation, method licenseReport",
      "post": {
        "tags": [
          "SystemInformation"
        ],
        "operationId": "SystemInformation_licenseReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_SystemInformation_licenseReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1320348587"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    },
    "/SystemInformation/userReport": {
      "summary": "Implementation for AdminConsoles user statistics.",
      "description": "Interface de.elo.ix.client.system.SystemInformation, method userReport",
      "post": {
        "tags": [
          "SystemInformation"
        ],
        "operationId": "SystemInformation_userReport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_SystemInformation_userReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_18214274"
                }
              }
            }
          }
        },
        "security": [
          {
            "apiKey": [],
            "basic": [],
            "bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "BRequest_IXServicePortIF_createAspect": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "name": {
            "type": "string"
          },
          "lines": {
            "$ref": "#/components/schemas/ListOfAspectLine"
          }
        }
      },
      "FulltextConfig": {
        "type": "object",
        "properties": {
          "source": {
            "type": "integer",
            "description": "One of the FulltextConfigC.SOURCE_* constants.",
            "format": "int32"
          },
          "flags": {
            "type": "integer",
            "description": "A combination of FulltextConfigC.FLAG_* constants.",
            "format": "int32"
          },
          "knowlegeMapUrl": {
            "type": "string",
            "description": "URL of the Knowlege Map service. Only valid for iSearch."
          },
          "indexerConfig": {
            "$ref": "#/components/schemas/SearchIndexerConfig"
          }
        },
        "description": "This class provides information about the configuration of the fulltext database."
      },
      "Server": {
        "type": "object",
        "properties": {
          "ldapUrl": {
            "type": "string",
            "description": "URL to access the LDAP directory."
          },
          "priority": {
            "type": "number",
            "description": "Priority for using this URL compared to others. Higher value means more preferred.",
            "format": "double"
          },
          "lastLoginDurationMillis": {
            "type": "string",
            "description": "Duration of last login. Read only."
          },
          "lastException": {
            "type": "string",
            "description": "An exception message if connection to {@link #ldapUrl} failed."
          }
        },
        "description": "This class represents a LDAP server."
      },
      "ArrayOfArcPath": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ArcPath"
        }
      },
      "BRequest_IXServicePortIF_checkinReportOptions": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "options": {
            "$ref": "#/components/schemas/ReportOptions"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "WFVersion": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Version ID. Set this member -1, to check in a new workflow template version.\nA value of 0 indicates the current\n working version.",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "description": "Version comment."
          },
          "userId": {
            "type": "integer",
            "description": "ID of the user who created the version.",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "Name of the user who created the version."
          },
          "version": {
            "type": "string",
            "description": "Version number."
          },
          "createDateIso": {
            "type": "string",
            "description": "Create date in ISO format."
          }
        },
        "description": "Version information for a workflow template."
      },
      "ListOfWFCacheSyncInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WFCacheSyncInfo"
        }
      },
      "NoteImage": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "description": "Image file name."
          },
          "fileData": {
            "description": "Image file content. Read only.",
            "$ref": "#/components/schemas/FileData"
          }
        },
        "description": "This class contains additional information for image stamps."
      },
      "SubstitutionsResult": {
        "type": "object",
        "properties": {
          "substitutions": {
            "description": "List of substitutions",
            "$ref": "#/components/schemas/ListOfSubstitution"
          },
          "substitutionGuids": {
            "description": "List of substitution GUIDs",
            "$ref": "#/components/schemas/ListOfString"
          }
        },
        "description": "Object returned by {@link IXServicePortIF#checkinSubstitutions}() and\n{@link IXServicePortIF#checkoutSubstitutions}()."
      },
      "ListOfAspectAssoc": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AspectAssoc"
        }
      },
      "IntRangeValue": {
        "type": "object",
        "properties": {
          "from": {
            "$ref": "#/components/schemas/IntSingleValue"
          },
          "to": {
            "$ref": "#/components/schemas/IntSingleValue"
          }
        },
        "description": "\u003cp\u003e\nClass to commit a range filter of integer values.\n \u003c/p\u003e\n \n \u003cp\u003e\n To perform an open range query (e.g. from now to infinite), only submit either a value for from or to\n \u003c/p\u003e"
      },
      "ListOfStringValue": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/StringValue"
        }
      },
      "SordType": {
        "type": "object",
        "properties": {
          "disabledIcon": {
            "description": "File data of disabled icon.",
            "$ref": "#/components/schemas/FileData"
          },
          "extensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "icon": {
            "description": "File data of normal icon.",
            "$ref": "#/components/schemas/FileData"
          },
          "id": {
            "type": "integer",
            "description": "Sord type ID.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Type name."
          },
          "workflowIcon": {
            "description": "File data of workflow icon.",
            "$ref": "#/components/schemas/FileData"
          },
          "packageName": {
            "type": "string",
            "description": "Package name of SordType"
          }
        },
        "description": "Each file structure element is assigned a SordType.\nThis SordType has three icons , which are used in the different\n view in the client: a standard icon, a disabled icon (empty folders or references) and a workflow icon.\u003cbr\u003e\n The icons are available in BMP, ICO and JPEG format.\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e\n \n see@ SordTypeC SordTypeC"
      },
      "BResult_907729609": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ListOfResolveRightsResult"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "EloDmOptDataC": {
        "type": "object",
        "properties": {
          "mbId": {
            "type": "string",
            "description": "DB column: optno"
          },
          "mbValue": {
            "type": "string",
            "description": "DB column: optval"
          },
          "lnValue": {
            "type": "integer",
            "description": "DB column: optval",
            "format": "int32"
          },
          "mbRemark": {
            "type": "string",
            "description": "DB column: remark"
          },
          "lnRemark": {
            "type": "integer",
            "description": "DB column: remark",
            "format": "int32"
          },
          "mbInstanceName": {
            "type": "string",
            "description": "Member bit: DB column: instance DB column: instancename"
          },
          "lnInstanceName": {
            "type": "integer",
            "description": "Column length: DB column: instance DB column: instancename",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of EloDmOpt\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "SearchIndexerConfig": {
        "type": "object",
        "properties": {
          "updaterConfig": {
            "$ref": "#/components/schemas/UpdaterConfig"
          },
          "optimizerConfig": {
            "$ref": "#/components/schemas/OptimizerConfig"
          },
          "reindexerConfig": {
            "$ref": "#/components/schemas/ReindexerConfig"
          },
          "languageConfig": {
            "$ref": "#/components/schemas/LanguageConfig"
          }
        }
      },
      "AclAccessInfo": {
        "type": "object",
        "properties": {
          "acl": {
            "type": "string"
          },
          "aclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "objId": {
            "type": "string"
          },
          "parentId": {
            "type": "string",
            "description": "Parent\u0027s ID of the current object. (Useful to get the inherited ACLs of objects which haven\u0027t any ID yet, i.e.\nthe\n ones being just added in archive.)"
          }
        },
        "description": "This class contains the option for the methode getAclAccess"
      },
      "EventBusParams": {
        "type": "object",
        "properties": {
          "ticket": {
            "type": "string",
            "description": "Create event bus ID based on this ticket."
          },
          "userId": {
            "type": "string",
            "description": "Get the event bus ID for this user. A numeric ID, GUID or user name can be specified.\nThe returned bus ID is\n computed as EventBusC.BUSID_USER + uid, where uid is the numeric user ID."
          },
          "channelId": {
            "type": "string",
            "description": "Create an event bus ID based on this string. An arbitary string can be supplied."
          },
          "noForwardToOtherIxs": {
            "type": "boolean",
            "description": "Do not open this bus on other Indexservers.\nIn load balancing environments, event busses are opened on each\n Indexserver by default. Set this option to true to open this event bus only on the currently attached Indexserver."
          }
        },
        "description": "This class supplies params to control the creation of an event bus ID.\nOnly one of the members ticket, userId and\n channelId should be set."
      },
      "BRequest_IXServerEvents_onBeforeCheckinUsers": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "userInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserInfo"
            }
          },
          "checkinUsersZ": {
            "$ref": "#/components/schemas/CheckinUsersZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "PublicDownloadDataC": {
        "type": "object",
        "properties": {
          "mbId": {
            "type": "string",
            "description": "DB column: guid"
          },
          "lnId": {
            "type": "integer",
            "description": "DB column: guid",
            "format": "int32"
          },
          "mbTimeStamp": {
            "type": "string",
            "description": "DB column: tstamp"
          },
          "lnTimeStamp": {
            "type": "integer",
            "description": "DB column: tstamp",
            "format": "int32"
          },
          "mbRemaining": {
            "type": "string",
            "description": "DB column: remaining"
          },
          "mbExpiration": {
            "type": "string",
            "description": "DB column: expiration"
          },
          "lnExpiration": {
            "type": "integer",
            "description": "DB column: expiration",
            "format": "int32"
          },
          "mbDocId": {
            "type": "string",
            "description": "DB column: docid"
          },
          "mbUserId": {
            "type": "string",
            "description": "DB column: userid"
          },
          "mbObjId": {
            "type": "string",
            "description": "DB column: objid"
          },
          "mbFileName": {
            "type": "string",
            "description": "Member bit: The fileName in the download url. It is readonly.\nDB column: fname"
          },
          "lnFileName": {
            "type": "integer",
            "description": "Column length: The fileName in the download url. It is readonly.\nDB column: fname",
            "format": "int32"
          },
          "mbAttachmentCode": {
            "type": "string",
            "description": "Member bit: Indicates whether the download is inline or as attachment.\nDB column: acode"
          },
          "lnAttachmentCode": {
            "type": "integer",
            "description": "Column length: Indicates whether the download is inline or as attachment.\nDB column: acode",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of PublicDownload\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "JobState": {
        "type": "object",
        "properties": {
          "countErrors": {
            "type": "string",
            "description": "Error status information."
          },
          "countEstimatedMax": {
            "type": "string",
            "description": "Estimated maximum amount."
          },
          "countProcessed": {
            "type": "string",
            "description": "Progress status information."
          },
          "expires": {
            "type": "string",
            "description": "When the information expires (milliseconds): (jobEnd + expires \u0026lt; current-date)."
          },
          "jobEnd": {
            "type": "string",
            "description": "End or termination of the job."
          },
          "jobGuid": {
            "type": "string",
            "description": "Job identifier."
          },
          "jobName": {
            "type": "string",
            "description": "Thread name."
          },
          "jobRunning": {
            "type": "boolean",
            "description": "Set to true while the job is being executed."
          },
          "jobStart": {
            "type": "string",
            "description": "Start of job."
          },
          "lastGuid": {
            "type": "string",
            "description": "Status information for GUIDs."
          },
          "lastID": {
            "type": "integer",
            "description": "Status information for integer IDs.",
            "format": "int32"
          },
          "procInfo": {
            "description": "The standard process-by-SORD job list.",
            "$ref": "#/components/schemas/ProcessInfo"
          },
          "countResult": {
            "description": "Result of the count process.",
            "$ref": "#/components/schemas/CountResult"
          },
          "strMsg": {
            "type": "string",
            "description": "Job-defined message string."
          },
          "doCancelJob": {
            "type": "boolean",
            "description": "Tell the Indexserver to cancel the job."
          }
        },
        "description": "Objects of this class provide information on the state of any background processes.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_checkinMapDomain": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "mapDomain": {
            "$ref": "#/components/schemas/MapDomain"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BResult_77743605": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ApplyForNotificationsInfo"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "WFEditNode": {
        "type": "object",
        "properties": {
          "flowId": {
            "type": "integer",
            "description": "Workflow identifier",
            "format": "int32"
          },
          "node": {
            "description": "The node to be processed",
            "$ref": "#/components/schemas/WFNode"
          },
          "nodeId": {
            "type": "integer",
            "description": "Node identifier",
            "format": "int32"
          },
          "succNodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFNode"
            }
          }
        },
        "description": "Data required for processing a workflow person node."
      },
      "CombineAclOptions": {
        "type": "object",
        "properties": {
          "lhsAclStr": {
            "type": "string",
            "description": "Left operand for ACL operation in String representation."
          },
          "rhsAclStr": {
            "type": "string",
            "description": "Right operand for ACL operation in String representation."
          }
        },
        "description": "This class specifies additional options for compareAcl."
      },
      "FontInfo": {
        "type": "object",
        "properties": {
          "faceName": {
            "type": "string",
            "description": "Font face name"
          },
          "bold": {
            "type": "boolean",
            "description": "Bold"
          },
          "italic": {
            "type": "boolean",
            "description": "Italic"
          },
          "strikeOut": {
            "type": "boolean",
            "description": "Strike out"
          },
          "underline": {
            "type": "boolean",
            "description": "Underline"
          },
          "RGB": {
            "type": "integer",
            "description": "Read-green-blue value. On byte each color. Read is at the lowest significant byte.",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "description": "Font heigth.",
            "format": "int32"
          },
          "heightPerCell": {
            "type": "boolean",
            "description": "The font height is related to the cell height of the font rather than the character heigth."
          },
          "escapement": {
            "type": "integer",
            "description": "Specifies the angle, in tenths of degrees, between the escapement vector and the x-axis of the device.\nThe\n escapement vector is parallel to the base line of a row of text.",
            "format": "int32"
          }
        },
        "description": "This class describes a font."
      },
      "BResult_1197100286": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/SessionOptions"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "MapToFeed": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/Feed"
        }
      },
      "CheckinUsersC": {
        "type": "object",
        "properties": {
          "bsetNOTHING": {
            "type": "string",
            "description": "Checkin no user. Makes sense if you only want to unlock user data."
          },
          "bsetWRITE": {
            "type": "string",
            "description": "Write without password. Create new user if user ID \u0026lt; 0."
          },
          "bsetPASSWORD": {
            "type": "string",
            "description": "Updates a users password."
          },
          "bsetNEW_USER": {
            "type": "string",
            "description": "Insert a new user with the supplied user ID."
          },
          "NOTHING": {
            "description": "Checkin no user. Makes sense if you only want to unlock user data.",
            "$ref": "#/components/schemas/CheckinUsersZ"
          },
          "PASSWORD": {
            "description": "Updates a users password.",
            "$ref": "#/components/schemas/CheckinUsersZ"
          },
          "NEW_USER": {
            "description": "Insert a new user with the supplied user ID. Set the user\u0027s password.",
            "$ref": "#/components/schemas/CheckinUsersZ"
          },
          "WRITE": {
            "description": "Updates or creates a user.",
            "$ref": "#/components/schemas/CheckinUsersZ"
          },
          "WRITE_PASSWORD": {
            "description": "Updates or creates a user and set\u0027s the users\u0027s password.",
            "$ref": "#/components/schemas/CheckinUsersZ"
          }
        },
        "description": "\u003cp\u003e\nConstants for the function \u003ccode\u003echeckinUsers\u003c/code\u003e.\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation:\n \u003c/p\u003e"
      },
      "ArrayOfStoreInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/StoreInfo"
        }
      },
      "OrgUnitName": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "OU identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "OU name"
          }
        },
        "description": "\u003cp\u003e\nData class containing some organizational unit information data: name and ID\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2013\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "SordLinkC": {
        "type": "object",
        "properties": {
          "FLAG_PERMANENT": {
            "type": "string"
          }
        },
        "description": "Constants-class for the table links."
      },
      "ListOfHashTagRelation": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/HashTagRelation"
        }
      },
      "SessionOptions": {
        "type": "object",
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          }
        },
        "description": "Objects of this class hold an array of options that are used to manipulate the current Indexserver session."
      },
      "UserNodeInfo": {
        "type": "object",
        "properties": {
          "nodeName": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "timeLimitEscalations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFTimeLimit"
            }
          },
          "timeLimit": {
            "type": "integer",
            "description": "The time-limit to process the node. This member is only valid for person nodes.",
            "format": "int32"
          },
          "timeLimitIso": {
            "type": "string",
            "description": "After this date the node exceeds the time-limit for processing. This member is only valid for person nodes."
          },
          "flags": {
            "type": "integer",
            "description": "Control flags for the node, a combination of WFNode.C.FLAG_* constants.",
            "format": "int32"
          }
        },
        "description": "This class contains the information of a user node using to create a AdHocWorkflow.\nThis class is used by the method\n IXServicePortIF.startAdHocWorkFlow2."
      },
      "BResult_1047127860": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteActivityProject": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "projectName": {
            "type": "string"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "HtCloudData": {
        "type": "object",
        "properties": {
          "hashTagNameCloud": {
            "$ref": "#/components/schemas/HashMapToInteger"
          }
        }
      },
      "ArrayListOfWFDiagram": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WFDiagram"
        }
      },
      "ObjDataC": {
        "type": "object",
        "properties": {
          "mbId": {
            "type": "string",
            "description": "Member bit: Serialisation version ID DB column: objid"
          },
          "mbGuid": {
            "type": "string",
            "description": "DB column: objguid"
          },
          "lnGuid": {
            "type": "integer",
            "description": "DB column: objguid",
            "format": "int32"
          },
          "mbParentId": {
            "type": "string",
            "description": "DB column: objparent"
          },
          "mbType": {
            "type": "string",
            "description": "DB column: objtype"
          },
          "mbFlags": {
            "type": "string",
            "description": "DB column: objflags"
          },
          "mbName": {
            "type": "string",
            "description": "DB column: objshort"
          },
          "lnName": {
            "type": "integer",
            "description": "DB column: objshort",
            "format": "int32"
          },
          "mbSReg": {
            "type": "string",
            "description": "DB column: objsreg"
          },
          "lnSReg": {
            "type": "integer",
            "description": "DB column: objsreg",
            "format": "int32"
          },
          "mbIDate": {
            "type": "string",
            "description": "DB column: objidate"
          },
          "mbXDate": {
            "type": "string",
            "description": "DB column: objxdate"
          },
          "mbKey": {
            "type": "string",
            "description": "DB column: objkey"
          },
          "mbKind": {
            "type": "string",
            "description": "DB column: objkind"
          },
          "mbPath": {
            "type": "string",
            "description": "DB column: objpath"
          },
          "mbInfo": {
            "type": "string",
            "description": "DB column: objinfo"
          },
          "mbMask": {
            "type": "string",
            "description": "DB column: objmask"
          },
          "mbDoc": {
            "type": "string",
            "description": "DB column: objdoc"
          },
          "mbSig": {
            "type": "string",
            "description": "DB column: objakey1"
          },
          "mbAtt": {
            "type": "string",
            "description": "DB column: objattach"
          },
          "mbOwnerId": {
            "type": "string",
            "description": "DB column: objuser"
          },
          "mbLockId": {
            "type": "string",
            "description": "DB column: objlock"
          },
          "mbStatus": {
            "type": "string",
            "description": "DB column: objstatus"
          },
          "mbHistCount": {
            "type": "string",
            "description": "DB column: objhistcount"
          },
          "mbInternalDesc": {
            "type": "string",
            "description": "DB column: objdesc"
          },
          "lnInternalDesc": {
            "type": "integer",
            "description": "DB column: objdesc",
            "format": "int32"
          },
          "mbChildCount": {
            "type": "string",
            "description": "DB column: objchildcount"
          },
          "mbDelDate": {
            "type": "string",
            "description": "DB column: objdeldate"
          },
          "mbSyncDateLoc": {
            "type": "string",
            "description": "DB column: objsyncdateloc"
          },
          "mbSyncDateRem": {
            "type": "string",
            "description": "DB column: objsyncdaterem"
          },
          "mbVtRep": {
            "type": "string",
            "description": "DB column: objvtrep"
          },
          "mbAcl": {
            "type": "string",
            "description": "DB column: objacl"
          },
          "lnAcl": {
            "type": "integer",
            "description": "DB column: objacl",
            "format": "int32"
          },
          "mbTStamp": {
            "type": "string",
            "description": "DB column: objtstamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "DB column: objtstamp",
            "format": "int32"
          },
          "mbSName": {
            "type": "string",
            "description": "DB column: objsdata_off"
          },
          "lnSName": {
            "type": "integer",
            "description": "DB column: objsdata_off",
            "format": "int32"
          },
          "mbSDesc": {
            "type": "string",
            "description": "DB column: objsdesc_off"
          },
          "lnSDesc": {
            "type": "integer",
            "description": "DB column: objsdesc_off",
            "format": "int32"
          },
          "mbDeleteDate": {
            "type": "string",
            "description": "Member bit: The Sord is deleted at this date. ClientInfo determines the Timezone.\nDB column: deletedate"
          },
          "mbLockIdSord": {
            "type": "string",
            "description": "Member bit: This is the id of the user who has a lock on the object (not the document).\nDB column: objlock_off"
          },
          "mbLockIdDoc": {
            "type": "string",
            "description": "Member bit: This is the id of the user who has a lock on the document (not the object).\nDB column: doclock"
          },
          "mbTStampSync": {
            "type": "string",
            "description": "Member bit: Timestamp of this object\u0027s last export by the replication.\nDB column: objtstampsync"
          },
          "lnTStampSync": {
            "type": "integer",
            "description": "Column length: Timestamp of this object\u0027s last export by the replication.\nDB column: objtstampsync",
            "format": "int32"
          },
          "mbTStampAcl": {
            "type": "string",
            "description": "Member bit: Timestamp of the last ACL change.\nDB column: objtstampacl"
          },
          "lnTStampAcl": {
            "type": "integer",
            "description": "Column length: Timestamp of the last ACL change.\nDB column: objtstampacl",
            "format": "int32"
          },
          "mbTStampAclSync": {
            "type": "string",
            "description": "Member bit: Timestamp of this object\u0027s ACLs last export by the replication.\nDB column: objtstampaclsync"
          },
          "lnTStampAclSync": {
            "type": "integer",
            "description": "Column length: Timestamp of this object\u0027s ACLs last export by the replication.\nDB column: objtstampaclsync",
            "format": "int32"
          },
          "mbDeleteUser": {
            "type": "string",
            "description": "Member bit: The Sord is deleted at this user.\nDB column: deleteuser"
          },
          "mbEncryptionSet": {
            "type": "string",
            "description": "Member bit: The number of the encryptionSet (the value 0 means not encrypted).\nDB column: encryptionset"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of Sord\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ComputeDocumentHashResult": {
        "type": "object",
        "properties": {
          "docId": {
            "type": "integer",
            "description": "Document ID.",
            "format": "int32"
          },
          "computedHash": {
            "type": "string",
            "description": "MD5 hash computed by {@link IXServicePortIF#computeDocumentHash(ClientInfo, ComputeDocumentHashInfo)}."
          },
          "storedHash": {
            "type": "string",
            "description": "MD5 has stored in DB. This value can be empty if MD5 checking is disabled in DM configuration."
          },
          "equalHash": {
            "type": "boolean",
            "description": "True, if {@link #storedHash} is equal to {@link #computedHash}."
          },
          "createDate": {
            "type": "string",
            "description": "Document create date.",
            "format": "date-time"
          },
          "updateDate": {
            "type": "string",
            "description": "Document update date.",
            "format": "date-time"
          },
          "accessDate": {
            "type": "string",
            "description": "Document last access date.",
            "format": "date-time"
          }
        },
        "description": "This class provides the result data computed by\n{@link IXServicePortIF#computeDocumentHash(ClientInfo, ComputeDocumentHashInfo)}."
      },
      "BRequest_IXServicePortIF_createAspectAssoc": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "name": {
            "type": "string"
          },
          "aspectId": {
            "type": "string"
          },
          "cardinality": {
            "$ref": "#/components/schemas/Cardinality"
          }
        }
      },
      "WFTypeC": {
        "type": "object",
        "properties": {
          "bsetACTIVE": {
            "type": "string"
          },
          "bsetFINISHED": {
            "type": "string"
          },
          "bsetTEMPLATE": {
            "type": "string"
          },
          "ACTIVE": {
            "description": "The workflow is active.",
            "$ref": "#/components/schemas/WFTypeZ"
          },
          "FINISHED": {
            "description": "The workflow is finished (completed).",
            "$ref": "#/components/schemas/WFTypeZ"
          },
          "TEMPLATE": {
            "description": "The workflow is a template workflow.",
            "$ref": "#/components/schemas/WFTypeZ"
          }
        },
        "description": "Constants class for WFType. This class describes the workflow type/status.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_beginForwardWorkflowNode": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "flowId": {
            "type": "integer",
            "format": "int32"
          },
          "nodeId": {
            "type": "integer",
            "format": "int32"
          },
          "fwdInfo": {
            "$ref": "#/components/schemas/BeginForwardWorkflowNodeInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BResult_133130047": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SordType"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BResult_200528028": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/AclAccessResult"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "CheckinUsersZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from CheckinUsersC class."
          }
        },
        "description": "This class encapsulates the constants of CheckinUsersC.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ESearchOrderE": {
        "type": "object",
        "properties": {
          "IDATE_DESC": {
            "description": "Sort by internal (archive defined) date, descending",
            "$ref": "#/components/schemas/ESearchOrderE"
          },
          "IDATE_ASC": {
            "description": "Sort by internal (archive defined) date, ascending",
            "$ref": "#/components/schemas/ESearchOrderE"
          },
          "XDATE_DESC": {
            "description": "Sort by external (user defined) date, descending",
            "$ref": "#/components/schemas/ESearchOrderE"
          },
          "XDATE_ASC": {
            "description": "Sort by external (user defined) date, ascending",
            "$ref": "#/components/schemas/ESearchOrderE"
          },
          "ALPHA_DESC": {
            "description": "Sort by title, descending",
            "$ref": "#/components/schemas/ESearchOrderE"
          },
          "ALPHA_ASC": {
            "description": "\u003cp\u003e\nSort by title, ascending\n \u003c/p\u003e",
            "$ref": "#/components/schemas/ESearchOrderE"
          },
          "TSTAMP_DESC": {
            "description": "\u003cp\u003e\nSort by last change, descending\n \u003c/p\u003e\n \u003cp\u003e\n Value is not always synchronized with DB because {@link Sord#TStamp} is updated by changes not relevant for\n iSearch.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/ESearchOrderE"
          },
          "TSTAMP_ASC": {
            "description": "\u003cp\u003e\nSort by last change, ascending\n \u003c/p\u003e\n \u003cp\u003e\n Value is not always synchronized with DB because {@link Sord#TStamp} is updated by changes not relevant for\n iSearch.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/ESearchOrderE"
          },
          "RELEVANCE": {
            "description": "Sort by relevance of sords, calculated by ElasticSearc, descending",
            "$ref": "#/components/schemas/ESearchOrderE"
          }
        },
        "description": "Sort options for ElasticSearch."
      },
      "BRequest_IXServerEvents_onAfterDeleteMap": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "domainName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "keyNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "MyELOInfo": {
        "type": "object",
        "properties": {
          "notificationInfo": {
            "description": "FindInfo for FindFirstNotifications. {@link FindNotificationInfo}.",
            "$ref": "#/components/schemas/FindNotificationInfo"
          },
          "workflowInfo": {
            "description": "Info Object with search criteria for selecting workflows. {@link FindWorkflowInfo}.",
            "$ref": "#/components/schemas/FindWorkflowInfo"
          },
          "taskInfo": {
            "description": "Info Object with search criteria that are required for locating a task (reminders, workflow tasks or activity).\n{@link FindTasksInfo}.",
            "$ref": "#/components/schemas/FindTasksInfo"
          },
          "date": {
            "type": "string",
            "description": "Return Results only newer than the given date."
          },
          "max": {
            "type": "integer",
            "description": "Maximum number of Results that should be returned by this call.",
            "format": "int32"
          }
        }
      },
      "ArrayOfDocMaskLineTemplate": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DocMaskLineTemplate"
        }
      },
      "ReplCode": {
        "type": "object",
        "properties": {
          "ARCR_OBJECT_DATA": {
            "type": "integer",
            "description": "Change code: Modify the indexing information (without \u003ccode\u003eSord.\ngetObjKeys()\u003c/code\u003e) of an archive entry\n (\u003ccode\u003eSord\u003c/code\u003e).",
            "format": "int32"
          },
          "ARCR_OBJECT_DATA_S": {
            "type": "string"
          },
          "ARCR_OBJECT_KEYS": {
            "type": "integer",
            "description": "Change code: Modify the indexing information (only \u003ccode\u003eSord.\ngetObjKeys()\u003c/code\u003e) of an archive entry\n (\u003ccode\u003eSord\u003c/code\u003e).",
            "format": "int32"
          },
          "ARCR_OBJECT_KEYS_S": {
            "type": "string"
          },
          "ARCR_NOTE_DATA": {
            "type": "integer",
            "description": "Change code: Create or modify a note.",
            "format": "int32"
          },
          "ARCR_NOTE_DATA_S": {
            "type": "string"
          },
          "ARCR_NOTE_DELETE": {
            "type": "integer",
            "description": "Change code: Delete a note.",
            "format": "int32"
          },
          "ARCR_NOTE_DELETE_S": {
            "type": "string"
          },
          "ARCR_VERSION_COMMENT": {
            "type": "integer",
            "description": "Change code: Changed document comment",
            "format": "int32"
          },
          "ARCR_VERSION_COMMENT_S": {
            "type": "string"
          },
          "ARCR_OBJECT_RELATIONS": {
            "type": "integer",
            "description": "Change code: Change all references to children.",
            "format": "int32"
          },
          "ARCR_OBJECT_RELATIONS_S": {
            "type": "string"
          },
          "ARCR_OBJECT_INSERT_REF": {
            "type": "integer",
            "description": "Change code: Insert a (logical) reference inside an archive entry.",
            "format": "int32"
          },
          "ARCR_OBJECT_INSERT_REF_S": {
            "type": "string"
          },
          "ARCR_OBJECT_DELETE_REF": {
            "type": "integer",
            "description": "Change code: Delete a (logical) reference inside an archive entry.",
            "format": "int32"
          },
          "ARCR_OBJECT_DELETE_REF_S": {
            "type": "string"
          },
          "ARCR_DOCUMENT_DATA": {
            "type": "integer",
            "description": "Change code: Insert a document and change the work version of the associated archive entry.",
            "format": "int32"
          },
          "ARCR_DOCUMENT_DATA_S": {
            "type": "string"
          },
          "ARCR_DOCUMENT_INSERT": {
            "type": "integer",
            "description": "Change code: Insert a document but do not change the work version of the associated archive entry.",
            "format": "int32"
          },
          "ARCR_DOCUMENT_INSERT_S": {
            "type": "string"
          },
          "ARCR_DOCUMENT_SWITCH": {
            "type": "integer",
            "description": "Change code: Select another work version from the document history.",
            "format": "int32"
          },
          "ARCR_DOCUMENT_SWITCH_S": {
            "type": "string"
          },
          "ARCR_ATTACHMENT_DATA": {
            "type": "integer",
            "description": "Change code: Insert or change an attachment.",
            "format": "int32"
          },
          "ARCR_ATTACHMENT_DATA_S": {
            "type": "string"
          },
          "ARCR_SIGNATURE_DATA": {
            "type": "integer",
            "description": "Change code: Create a document signature",
            "format": "int32"
          },
          "ARCR_SIGNATURE_DATA_S": {
            "type": "string"
          },
          "ARCR_IGNORE_BROKER_OPTZ": {
            "type": "integer",
            "description": "Change code: Ignore the optional broker optimization anyway a) selective export b) VDS",
            "format": "int32"
          },
          "ARCR_IGNORE_BROKER_OPTZ_S": {
            "type": "string"
          },
          "ARCR_DOCUMENT_STATUS": {
            "type": "integer",
            "description": "Change code: Document flags and/or document delete status have been changed",
            "format": "int32"
          },
          "ARCR_DOCUMENT_STATUS_S": {
            "type": "string"
          },
          "ARCR_BASEDATA_VERIFY": {
            "type": "integer",
            "description": "Change code: Master data. Exports the names of storage masks, keys, users.",
            "format": "int32"
          },
          "ARCR_BASEDATA_VERIFY_S": {
            "type": "string"
          },
          "ARCR_DOCMASKS_DATA": {
            "type": "integer",
            "description": "Change code: Exports the storage masks.",
            "format": "int32"
          },
          "ARCR_DOCMASKS_DATA_S": {
            "type": "string"
          },
          "ARCR_OBJECT_DELETE_PHYS": {
            "type": "integer",
            "description": "Change code: Delete object finally.",
            "format": "int32"
          },
          "ARCR_OBJECT_DELETE_PHYS_S": {
            "type": "string"
          },
          "ARCR_OBJECT_REPLSET": {
            "type": "integer",
            "description": "Change code: Change the replication sets of an archive entry.",
            "format": "int32"
          },
          "ARCR_OBJECT_REPLSET_S": {
            "type": "string"
          },
          "ARCR_WORKFLOW_DATA": {
            "type": "integer",
            "description": "Change code: Change a workflow.",
            "format": "int32"
          },
          "ARCR_WORKFLOW_DATA_S": {
            "type": "string"
          },
          "ARCR_INITIAL_DATA": {
            "type": "integer",
            "description": "Change flag: This flag is added to ARCR_OBJECT_DATA if replication performs a full export.",
            "format": "int32"
          },
          "ARCR_INITIAL_DATA_S": {
            "type": "string"
          },
          "ARCR_MARKER": {
            "type": "integer",
            "description": "Change code: Set a replication marker.",
            "format": "int32"
          },
          "ARCR_MARKER_S": {
            "type": "string"
          },
          "ARCR_OBJECT_HIST": {
            "type": "integer",
            "description": "Change code: Create a new entry for the object history",
            "format": "int32"
          },
          "ARCR_OBJECT_HIST_S": {
            "type": "string"
          },
          "ARCR_SET2": {
            "type": "integer",
            "description": "Change flag: This flag is contained in some change codes to extend the number of possible change codes.",
            "format": "int32"
          },
          "ARCR_SET16": {
            "type": "integer",
            "description": "Change flag: This flag is contained in some change codes to extend the number of possible change codes.",
            "format": "int32"
          },
          "ARCR_EXTENDED_SET": {
            "type": "integer",
            "description": "Change flags: Bits of this value are contained in some change codes to extend the number of possible change codes.",
            "format": "int32"
          },
          "ARCR_ACTION": {
            "type": "integer",
            "description": "Change code: Insert, modify, delete activities.",
            "format": "int32"
          },
          "ARCR_ACTION_S": {
            "type": "string"
          },
          "ARCR_USER_DATA": {
            "type": "integer",
            "description": "Change code: Insert or modify user data.",
            "format": "int32"
          },
          "ARCR_USER_DATA_S": {
            "type": "string"
          },
          "ARCR_USER_DELETE": {
            "type": "integer",
            "description": "Change code: Delete a user.",
            "format": "int32"
          },
          "ARCR_USER_DELETE_S": {
            "type": "string"
          },
          "ARCR_TRANSLATION": {
            "type": "integer",
            "description": "Change code: Insert or modify storage mask data.\n(reserved)",
            "format": "int32"
          },
          "ARCR_TRANSLATION_S": {
            "type": "string"
          },
          "ARCR_DOCMASK_DELETE": {
            "type": "integer",
            "description": "Change code: Delete a storage mask.\n(reserved)",
            "format": "int32"
          },
          "ARCR_DOCMASK_DELETE_S": {
            "type": "string"
          },
          "ARCR_DOCUMENT_FEED": {
            "type": "integer",
            "format": "int32"
          },
          "ARCR_DOCUMENT_FEED_S": {
            "type": "string"
          },
          "ARCR_LINK": {
            "type": "integer",
            "format": "int32"
          },
          "ARCR_LINK_S": {
            "type": "string"
          },
          "ARCR_MAP_CHANGED": {
            "type": "integer",
            "description": "Change code: map changed",
            "format": "int32"
          },
          "ARCR_MAP_CHANGED_S": {
            "type": "string"
          },
          "ARCR_SWL_DATA": {
            "type": "integer",
            "description": "Change code: A keyword list has been modified Param: 1 für Stichwortliste geändert, 2 für Stichwortliste gelöscht",
            "format": "int32"
          },
          "ARCR_SWL_DATA_S": {
            "type": "string"
          },
          "PARAM_SWL_UPDATED": {
            "type": "integer",
            "format": "int32"
          },
          "PARAM_SWL_DELETED": {
            "type": "integer",
            "format": "int32"
          },
          "ARCR_CONTROL_VDS": {
            "type": "integer",
            "description": "Change code: A VDS has been created",
            "format": "int32"
          },
          "ARCR_CONTROL_VDS_S": {
            "type": "string"
          },
          "ARCR_TRAFO": {
            "type": "integer",
            "description": "Change code: Transformation table for master data (broker-to-broker replication).",
            "format": "int32"
          },
          "ARCR_TRAFO_S": {
            "type": "string"
          },
          "ARCR_BROKER": {
            "type": "integer",
            "description": "Change flag: This flag marks a change record to be a control record for the broker.",
            "format": "int32"
          },
          "ARCR_BROKER_S": {
            "type": "string"
          },
          "ARCR_CODE_SEP": {
            "type": "string"
          },
          "ARCR_EXT_CODE_UNDEF_S": {
            "type": "string"
          }
        },
        "description": "Constants for replication codes."
      },
      "ESInstanceSettings": {
        "type": "object",
        "properties": {
          "instanceName": {
            "type": "string"
          },
          "indexingDisabled": {
            "description": "Define if this IX instance should be used to run reindex and updater thread. Can only be set instance specific.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "updaterNextStart": {
            "description": "Next start of updater. Format: yyyyMMddHHmmss. Timezone: JVM default.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "updaterFromTs": {
            "description": "Process documents newer than this date. Format: yyyyMMddHHmmss Timezone: JVM default.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "updaterInterval": {
            "description": "How often should the updater run? Interval in seconds",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "reindexStarted": {
            "type": "string",
            "description": "Reindex started at this time. Format: yyyyMMddHHmmss Timezone: JVM default."
          },
          "reindexFromObjId": {
            "description": "Reindex processes object IDs \u003e\u003d this one.\nSet to -1 to delete, everything \u003e\u003d 0 is written to db (if lower than\n reindexToObjId) Always needs to send reindexFromObjId and reindexToObjId.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "reindexToObjId": {
            "description": "Reindex processes object IDs \u0026lt;\u003d this one.\nSet to -1 to delete, everything \u0026gt;\u003d 0 is written to db (if greater\n than reindexFromObjId) Always needs to send reindexFromObjId and reindexToObjId.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "additionalIndex": {
            "description": "Set to true if this IX should generate a separate index (e.g.\nsecond system for test purposes\n or scheduled reindex)",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "nbOfAllowedLangs": {
            "type": "integer",
            "description": "Number of allowed languages.\n\u003cp\u003e\n \u003ci\u003eImmutable.\u003c/i\u003e\n \u003c/p\u003e",
            "format": "int32"
          },
          "configuredLangs": {
            "description": "Configured languages (without archive language), separated by comma",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "archiveLang": {
            "type": "string",
            "description": "Archive language.\n\u003cp\u003e\n \u003ci\u003eImmutable.\u003c/i\u003e\n \u003c/p\u003e"
          },
          "maxObjsPerReindexInterval": {
            "description": "Maximum number of objects to be processed in one time unit of updater. Default: 1.000.\nSet to -1 if nothing should\n be changed.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "maxObjsPerUpdateInterval": {
            "description": "Maximum number of objects selected by reindexer. Default: 10.000 Set to -1 if nothing should be changed.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "continueReindexOnFailure": {
            "description": "Define if reindex process should be continued or interrupted on failure.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "correction": {
            "description": "Query \"corrections\" on search",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "completion": {
            "description": "Query \"auto completion\" on search",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "synonyms": {
            "description": "Query synonyms on search",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "maxAmountOfReferencesInErrorFolder": {
            "description": "Maximum number of references created in Reindex error folder during reindex process",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "maxTokenLength": {
            "description": "Maximum length of tokens in elastic search. Defaults to 300, max 10922. Set to -1 if nothing should be changed.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "germanAnalyzer": {
            "description": "Option to define a analyzer for German language without decomposition (to speed up analysis process, but results in\nworse search results). Default: empty or \"elo_german\". Set to \"elo_german_without_decomp\" to use analyzer without\n decomposition.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "searchAnalyzer": {
            "description": "Define a special analyzer to use during search. Please make sure the defined analyzer exists.\nRemove or set to\n \"default\" to disable.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "feedAnalyzer": {
            "description": "Define if feed should use archive language, one of the configured languages or try to determine the language based\non content.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "maxFulltextLength": {
            "description": "Define the maximun length for fulltext documents indexed by iSearch.\nIf not set or set to \u0026lt;\u003d 0, complete\n documents are indexed.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "numberOfShards": {
            "description": "Number of shards per index in Elasticsearch. Default: 1.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "numberOfShardsByMaskId": {
            "description": "Define the nuber of shards for individual masks. Use a higher number of (e.g. 3) for masks with many objects.\nMasks\n which are not defined with this setting use numberOfShards.\n \n Syntax: maskId:number of shards;maskId: number of shards, e.g. \"23:2;34:5\"",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "useSsl": {
            "type": "boolean",
            "description": "Use SSL encryption."
          },
          "clusterName": {
            "description": "Elasticsearch cluster name.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "nodeName": {
            "description": "Elasticsearch node name",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "indexName": {
            "description": "Elasticsearch index name",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "hosts": {
            "description": "Elasticsearch host address.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "allowLeadingWildcards": {
            "description": "Allow leading wildcard for search queries. Defaults to false.\nSetting it to true might result in very poor search\n perfomance.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "maxSearchResults": {
            "description": "Define how many results should be returned with findFirstSords and findNextSords (in total!) by iSearch.\nDefaults\n to 10000.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "skipNonAsciiStepsOnFallback": {
            "description": "Determines if we should skip some analyzer steps when we use the fallback analyzer.\nThe skipped steps are trimming\n non-ascii chars from the analyzed text. Setting this option to true results in using a different fallback analyzer\n both for indexing and search without the trimming steps. This analyzer is meant to be used only for fulltext docs\n (body and summary) and not for Sord fields. Defaults to false.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          }
        },
        "description": "\u003cp\u003e\nClass to read and write settings of Elasticsearch.\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_createDoc": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "parentId": {
            "type": "string"
          },
          "maskId": {
            "type": "string"
          },
          "docTemplate": {
            "type": "string"
          },
          "editInfoZ": {
            "$ref": "#/components/schemas/EditInfoZ"
          }
        }
      },
      "BRequest_IXServicePortIF_deactivateSubstitution": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "substitutionGuid": {
            "type": "string"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_findFirstConfigFiles": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindConfigFileInfo"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "configFileZ": {
            "$ref": "#/components/schemas/ConfigFileZ"
          }
        }
      },
      "BResult_1320348587": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/LicenseReport"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutSubstitutions": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "checkoutSubstitutionsInfo": {
            "$ref": "#/components/schemas/CheckoutSubstitutionsInfo"
          },
          "substitutionZ": {
            "$ref": "#/components/schemas/SubstitutionZ"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "FindActivityProjectsInfo": {
        "type": "object",
        "properties": {
          "projectName": {
            "type": "string",
            "description": "Project name. This value can contain wildcards."
          }
        },
        "description": "This class defines the options for IXServicePortIF.findActivityProjects."
      },
      "Notification": {
        "type": "object",
        "properties": {
          "userGuid": {
            "type": "string",
            "description": "GUID of user who should receive this notification."
          },
          "watchGuid": {
            "type": "string",
            "description": "GUID of changed Object."
          },
          "createDateIso": {
            "type": "string",
            "description": "Create date of the notification."
          },
          "prio": {
            "type": "integer",
            "description": "Indicates if the Notification is marked as important",
            "format": "int32"
          },
          "what": {
            "type": "integer",
            "description": "Indicates the type of the watched Element. 0 - Action. 1 - HashTag.",
            "format": "int32"
          }
        },
        "description": "Objects of this class represent a change notification. This class is used internally."
      },
      "IdName": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "description": "GUID."
          },
          "id": {
            "type": "integer",
            "description": "Numeric ID.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name."
          }
        },
        "description": "\u003cp\u003e\nContains an numeric ID value, a GUID value in string format and a name.\n \u003c/p\u003e\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "StringSingleValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "\u003cp\u003e\ntext value\n \u003c/p\u003e\n \u003cp\u003e\n Do not escape any special characters, this is done by IX.\u003cbr\u003e\n Exception: if \u003ccode\u003evalue\u003c/code\u003e starts with \"\u003d\" (PowerSearch), nothing is escaped by IX\u003cbr\u003e\n If a value to be searched for actually starts with \"\u003d\", it has to be escaped manually by \"\\\\\"\n \u003c/p\u003e"
          }
        }
      },
      "ExportExtOptionsC": {
        "type": "object",
        "properties": {
          "EXPORT_SRC_TYPE_ARCHIVE": {
            "type": "integer",
            "description": "Objects from archive are exported",
            "format": "int32"
          },
          "EXPORT_SRC_TYPE_SEARCH": {
            "type": "integer",
            "description": "Search results are exported",
            "format": "int32"
          },
          "EXPORT_DATE_TYPE_DOC": {
            "type": "integer",
            "description": "Export filtered according document date",
            "format": "int32"
          },
          "EXPORT_DATE_TYPE_DEPOT": {
            "type": "integer",
            "description": "Export filtered according depot date",
            "format": "int32"
          }
        },
        "description": "Constant class for the ExportExtOptions class.\n(The default value are always 0)"
      },
      "MapToArrayListOfWFDiagram": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/ArrayListOfWFDiagram"
        }
      },
      "WFTypeZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from the WFTypeC class."
          }
        },
        "description": "This class encapsulates the constants of the WFTypeC class.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_findNextUsers": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "searchId": {
            "type": "string"
          },
          "idx": {
            "type": "integer",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ArrayOfFindByFulltextResultItem": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FindByFulltextResultItem"
        }
      },
      "BackupPurgeStatus": {
        "type": "object",
        "properties": {
          "backupStatus": {
            "description": "Status of the ELOdm backup task",
            "$ref": "#/components/schemas/BackupStatus"
          },
          "purgeStatus": {
            "description": "Status of the ELOdm purge task",
            "$ref": "#/components/schemas/PurgeStatus"
          }
        },
        "description": "This class represents the status of the ELOdm backup and purge tasks"
      },
      "PreviewImageInfo": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "string",
            "description": "\u003cp\u003e\nID of the objects to query preview images for. The ID must point to a document. Otherwise, an exception is thrown.\n \u003c/p\u003e"
          },
          "documentId": {
            "type": "string",
            "description": "\u003cp\u003e\nId of the document(-version) to query preview images for. If set, \u003ccode\u003eobjectId\u003c/code\u003e is ignored.\n \u003c/p\u003e"
          },
          "startPage": {
            "type": "integer",
            "description": "\u003cp\u003e\nFirst page number of the document to process a preview image for. The number of the first page of a document is 1.\n If this value is \u0026le; 0, 1 is assumed.\n \u003c/p\u003e",
            "format": "int32"
          },
          "endPage": {
            "type": "integer",
            "description": "\u003cp\u003e\nLast page number of the document to process a preview image for. If this value is \u0026le; 0, all pages of the document\n \u0026ge; startPage are process. If 0 \u0026lt; endPage \u0026le; startPage holds, only the startPage will be processed.\n \u003c/p\u003e",
            "format": "int32"
          },
          "previewSize": {
            "type": "integer",
            "description": "Desired size of the preview images. Valid values are defined in {@link PreviewImageInfoC}.",
            "format": "int32"
          },
          "processDocument": {
            "type": "boolean",
            "description": "\u003cp\u003e\nIf processDocument is true, not only the URLs for each page are generated but also preview images are processed for\n the pages (startPage+1) to endPage in the background.\n \u003c/p\u003e"
          },
          "renderAnnotations": {
            "type": "boolean",
            "description": "\u003cp\u003e\nEnables rendering of annotations. If \u003ccode\u003erenderAnnotations\u003c/code\u003e is \u003cb\u003etrue\u003c/b\u003e, the preview images will also\n contain the annotations. If the preview images should contain the annotations but not the preview of the document\n page itself, also set \u003ccode\u003erenderOnlyAnnotations\u003c/code\u003e to \u003cb\u003etrue\u003c/b\u003e.\n \u003c/p\u003e"
          },
          "renderAnnotationsOnly": {
            "type": "boolean",
            "description": "\u003cp\u003e\nDoes only has an effect, if \u003ccode\u003erenderAnnotations\u003c/code\u003e is \u003cb\u003etrue\u003c/b\u003e. If set to \u003cb\u003etrue\u003c/b\u003e the annotations\n will be rendered but the rendering of document pages will be omitted.\n \u003c/p\u003e"
          },
          "renderAnnotationsData": {
            "type": "boolean",
            "description": "\u003cp\u003e\nDoes only has an effect, if \u003ccode\u003erenderAnnotations\u003c/code\u003e is \u003cb\u003etrue\u003c/b\u003e. If set to \u003cb\u003etrue\u003c/b\u003e there will be\n details rendered near the annotations. Details are the annotation\u0027s author and create date.\n \u003c/p\u003e"
          }
        }
      },
      "Reminder": {
        "type": "object",
        "properties": {
          "desc": {
            "type": "string",
            "description": "Memo text"
          },
          "id": {
            "type": "integer",
            "description": "Reminder ID",
            "format": "int32"
          },
          "lockId": {
            "type": "integer",
            "description": "ID of user who has locked the reminder record in DB",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Short description visible in the task list."
          },
          "objId": {
            "type": "integer",
            "description": "Reminder is linked to this Sord.",
            "format": "int32"
          },
          "objType": {
            "type": "integer",
            "description": "Sord type.",
            "format": "int32"
          },
          "prio": {
            "type": "integer",
            "description": "Priority: 0...high, 1...medium, 2...\nlow",
            "format": "int32"
          },
          "receiverId": {
            "type": "integer",
            "description": "Reminder was created for this user.",
            "format": "int32"
          },
          "senderId": {
            "type": "integer",
            "description": "Reminder was created by this user.",
            "format": "int32"
          },
          "createDateIso": {
            "type": "string",
            "description": "Reminder was created at this date."
          },
          "deleted": {
            "type": "boolean",
            "description": "Reminder is deleted logically if set. Read-only."
          },
          "dueDateIso": {
            "type": "string",
            "description": "On this date the receiver has seen the reminder."
          },
          "lockName": {
            "type": "string",
            "description": "Reminder is locked by this user."
          },
          "notifyOnDelete": {
            "type": "boolean",
            "description": "Notify sender if receiver deletes the reminder."
          },
          "notifyOnView": {
            "type": "boolean",
            "description": "Notify sender if receiver views the reminder."
          },
          "objGuid": {
            "type": "string",
            "description": "Sord GUID."
          },
          "promptDateIso": {
            "type": "string",
            "description": "At this Date the reminder should be made visible to the receiver."
          },
          "receiverName": {
            "type": "string",
            "description": "Reminder was created for this user."
          },
          "senderName": {
            "type": "string",
            "description": "Reminder was created by this user."
          }
        }
      },
      "BRequest_IXServicePortIF_checkinSord": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "MapDomainC": {
        "type": "object",
        "properties": {
          "DOMAIN_SORD": {
            "type": "string"
          },
          "DOMAIN_WORKFLOW_ACTIVE": {
            "type": "string"
          },
          "DOMAIN_WORKFLOW_FINISHED": {
            "type": "string"
          },
          "DOMAIN_IX_OPTIONS": {
            "type": "string"
          },
          "DOMAIN_DM_OPTIONS": {
            "type": "string"
          },
          "DOMAIN_FT_OPTIONS": {
            "type": "string"
          },
          "DOMAIN_ELOXC": {
            "type": "string",
            "description": "ELOxc configuration data."
          },
          "DOMAIN_AL_OPTIONS": {
            "type": "string",
            "description": "Smart Link configuration map domain name."
          }
        },
        "description": "This class defines constants for the predefined map tables."
      },
      "BRequest_IXServicePortIF_evalAutoFiling": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "maskId": {
            "type": "string"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "opts": {
            "$ref": "#/components/schemas/AutoFilingOptions"
          }
        }
      },
      "FulltextConfigC": {
        "type": "object",
        "properties": {
          "SOURCE_CLASSIC": {
            "type": "integer",
            "description": "Use fulltext information from inverse index stored in the archive database.",
            "format": "int32"
          },
          "SOURCE_FTCAT": {
            "type": "integer",
            "description": "Use fulltext information from Microsoft SQL-Server fulltext catalog.",
            "format": "int32"
          },
          "SOURCE_ISEARCH": {
            "type": "integer",
            "description": "Use fulltext information from iSearch.",
            "format": "int32"
          },
          "SOURCE_ELASTICSEARCH": {
            "type": "integer",
            "description": "Use fulltext information from Elasticsearch.",
            "format": "int32"
          },
          "FLAG_ISEARCH_DID_YOU_MEAN": {
            "type": "integer",
            "description": "Evaluate suggestions for similar terms (\u003d corrections)",
            "format": "int32"
          },
          "FLAG_ISEARCH_SEARCH_AS_YOU_TYPE": {
            "type": "integer",
            "description": "Perform a search for each pressed key (\u003d completion)",
            "format": "int32"
          },
          "FLAG_ISEARCH_SUMMARY": {
            "type": "integer",
            "description": "Retrieve a summary text for each word.",
            "format": "int32"
          },
          "FLAG_ISEARCH_COMPANY_THESAURUS": {
            "type": "integer",
            "description": "Use the thesaurus of the company.",
            "format": "int32"
          },
          "FLAG_ISEARCH_KNOWLEGE_MAP": {
            "type": "integer",
            "description": "Use the extension \"Knowlege Map\".",
            "format": "int32"
          },
          "FLAG_ISEARCH_ONTOLOGY_NET": {
            "type": "integer",
            "description": "Use the extension \"Ontology Net\".",
            "format": "int32"
          },
          "FLAG_ISEARCH_ELO_THESAURUS": {
            "type": "integer",
            "description": "Use thesaurus provided by ELO (\u003d synonyms)",
            "format": "int32"
          },
          "FLAG_ISEARCH_OPTIONSOFF": {
            "type": "integer",
            "description": "Turn off all search options (if 0 or not in db, a default set of search options (correction, synonyms, search\nterms) is turned on). If combined with other flags, the other options are turned on.",
            "format": "int32"
          },
          "FLAG_ISEARCH_FEED": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Constants for class FulltextConfig."
      },
      "ArrayOfActivityOption": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ActivityOption"
        }
      },
      "BRequest_IXServerEvents_onCreateSord": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "parentId": {
            "type": "string"
          },
          "maskId": {
            "type": "string"
          },
          "editZ": {
            "$ref": "#/components/schemas/EditInfoZ"
          }
        }
      },
      "ArrayOfKeyword": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Keyword"
        }
      },
      "BRequest_IXServicePortIF_executeRegisteredFunctionString": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "functionName": {
            "type": "string"
          },
          "param": {
            "type": "string"
          }
        }
      },
      "ContextTermResults": {
        "type": "object",
        "properties": {
          "contextTerms": {
            "$ref": "#/components/schemas/ListOfContextTerm"
          }
        }
      },
      "BResult_1576340510": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/PurgeSettings"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "WFTimeLimit": {
        "type": "object",
        "properties": {
          "timeLimit": {
            "type": "integer",
            "description": "Time-limit in minutes.",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "description": "The ID of the user that should be informed, if the time-limit is exceeded.\nThe Indexserver does not send any\n notification to the user. The client application is responsible for doing this.",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "User name for timeLimitUserId; When writing a workflow with checkinWorkFlow, this value has preceedence before\ntimeLimitUserId. Set timeLimitUserName to an empty string, if timeLimitUserId should be used."
          },
          "timeLimitIso": {
            "type": "string",
            "description": "After this date the node exceeds the time-limit for processing. Read-only."
          },
          "overTimeLimit": {
            "type": "boolean",
            "description": "True, if the workflow exceeds the time limit. Read-only."
          }
        },
        "description": "This class describes a time limit for a workflow or for a person node of a workflow."
      },
      "HttpResponseInfo": {
        "type": "object",
        "properties": {
          "contentType": {
            "type": "string",
            "description": "Content type header. HttpServletResponse.\nsetContentType()"
          },
          "responseString": {
            "type": "string",
            "description": "Response text. Written to HttpServletResponse.\ngetOutputStream()"
          }
        },
        "description": "This class contains information for the HttpServletResponse object to be sent by the Indexserver servlet."
      },
      "BRequest_IXServerEvents_onAfterDelegateWorkflowNode": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "delegateNodeInfo": {
            "$ref": "#/components/schemas/WFDelegateNodeInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinDocMask": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "docMask": {
            "$ref": "#/components/schemas/DocMask"
          },
          "docMaskZ": {
            "$ref": "#/components/schemas/DocMaskZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutMapHistory": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "domainName": {
            "type": "string"
          },
          "mapId": {
            "type": "string"
          },
          "membersZ": {
            "$ref": "#/components/schemas/MapHistZ"
          }
        }
      },
      "ListOfHealthCheckInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/HealthCheckInfo"
        }
      },
      "SordC": {
        "type": "object",
        "properties": {
          "mbAclItems": {
            "type": "string",
            "description": "ACL in a human readable format."
          },
          "mbReplSet": {
            "type": "string",
            "description": "Replication set."
          },
          "mbReplNames": {
            "type": "string",
            "description": "Replication set names."
          },
          "mbObjKeys": {
            "type": "string",
            "description": "Index lines."
          },
          "mbDocVersionMembers": {
            "type": "string",
            "description": "Version information of the current document work version."
          },
          "mbSmallDocumentContent": {
            "type": "string",
            "description": "Return the content of a \"small\" document in \u003ccode\u003eDocVersion.fileData\u003c/code\u003e.\nReading small documents is up to 3\n times faster this way. The IX configuration defines the maximum size of a \"small\" document (e. g. less than 100KB)."
          },
          "mbPreview": {
            "type": "string",
            "description": "Detects whether there is a preview for a given document availiable."
          },
          "mbPhysPath": {
            "type": "string",
            "description": "Set this option to return the physical path of the document in the DocVersion object.\nThis Option requires always a\n request to Document Manager."
          },
          "mbParentIds": {
            "type": "string",
            "description": "GUIDs of parents that reference \u003ccode\u003ethis\u003c/code\u003e"
          },
          "mbLinks": {
            "type": "string",
            "description": "GUIDs of linked archive entries."
          },
          "mbRefPaths": {
            "type": "string",
            "description": "Reference paths."
          },
          "mbAttVersionMembers": {
            "type": "string",
            "description": "Member bit for Sord.\nattVersion"
          },
          "mbContentStream": {
            "type": "string",
            "description": "Document file content is supplied in {@link FileData#stream}."
          },
          "mbIDateIso": {
            "type": "string"
          },
          "mbXDateIso": {
            "type": "string"
          },
          "mbDelDateIso": {
            "type": "string"
          },
          "mbDeleted": {
            "type": "string"
          },
          "mbDetails": {
            "type": "string"
          },
          "mbDocVersion": {
            "type": "string"
          },
          "mbHiddenText": {
            "type": "string"
          },
          "mbLinksComeIn": {
            "type": "string"
          },
          "mbLinksGoOut": {
            "type": "string"
          },
          "mbOwnerName": {
            "type": "string"
          },
          "mbDesc": {
            "type": "string",
            "description": "Description and Hidden Text"
          },
          "mbReadOnlyMembers": {
            "type": "string",
            "description": "This members are read-only and ignored in checkinSord"
          },
          "mbWriteOnlyMembers": {
            "type": "string",
            "description": "This members are write-only and were not read in checkoutSord, checkoutDoc, findFirstSords.\nmbSDesc, mbSName"
          },
          "lnDesc": {
            "type": "integer",
            "description": "Length of description + hidden text",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All members - without mbSmallDocumentContent"
          },
          "mbAllMembersLazy": {
            "type": "string",
            "description": "As {@link #mbAllMembers} but provides {@link Sord#refPaths} for lazy loading."
          },
          "mbLeanMembers": {
            "type": "string",
            "description": "Includes: ObjDataC.\nmbAllMembers with mbAclItems, mbObjKeys"
          },
          "mbReplMembers": {
            "type": "string",
            "description": "Includes: ObjDataC.\nmbAllMembers with mbObjKeys"
          },
          "mbMinMembers": {
            "type": "string",
            "description": "Includes: mbLeanMembers without mbObjKeys"
          },
          "mbAspectObjects": {
            "type": "string",
            "description": "If {@link DocMask#dataOrganisation} \u003d {@link DocMaskC#DATA_ORGANISATION_ASPECT} then the data of index lines is\ncontained in aspect objects (Map values of arbitrary type)."
          },
          "LBT_DOCUMENT": {
            "type": "integer",
            "description": "\u003ccode\u003eSord\u003c/code\u003e objects with type greater or equal than \u003ccode\u003eLBT_DOCUMENT\u003c/code\u003e and less or equal than\n\u003ccode\u003eLBT_DOCUMENT_MAX\u003c/code\u003e are documents.",
            "format": "int32"
          },
          "LBT_DOCUMENT_MAX": {
            "type": "integer",
            "description": "\u003ccode\u003eSord\u003c/code\u003e objects with type greater or equal than \u003ccode\u003eLBT_DOCUMENT\u003c/code\u003e and less or equal than\n\u003ccode\u003eLBT_DOCUMENT_MAX\u003c/code\u003e are documents.",
            "format": "int32"
          },
          "LBT_ARCHIVE": {
            "type": "integer",
            "description": "There is one \u003ccode\u003eSord\u003c/code\u003e object inside the archive database with ID 1.\nIt contains some archive configuration\n and has this type:",
            "format": "int32"
          },
          "TYPE_USER_FOLDER": {
            "type": "integer",
            "description": "Sord type of user folder.\nUser folders are stored under folder Administration/Users and this value is used as\n {@link Sord#type}.",
            "format": "int32"
          },
          "ATTACHMENT_FLAG_IN_DOCHISTORY": {
            "type": "integer",
            "description": "Implementation detail: This flag is added to the object ID in the table \"dochistory\" to differentiate between\ndocuments and attachments.",
            "format": "int32"
          },
          "mbAll": {
            "description": "All members without mbSmallDocumentContent mbPreview\nSince 12.00.000.046, this selector will provide {@link Sord#refPaths} for lazy loading.",
            "$ref": "#/components/schemas/SordZ"
          },
          "mbLean": {
            "description": "Lean members",
            "$ref": "#/components/schemas/SordZ"
          },
          "mbAllIndex": {
            "description": "All members without mbSmallDocumentContent mbPreview mbDocVersionMembers mbRefPaths mbAttVersionMembers",
            "$ref": "#/components/schemas/SordZ"
          },
          "mbMin": {
            "description": "Minimum members.",
            "$ref": "#/components/schemas/SordZ"
          },
          "mbOnlyId": {
            "description": "Includes only \u003ccode\u003eSord.\nid\u003c/code\u003e",
            "$ref": "#/components/schemas/SordZ"
          },
          "mbOnlyGuid": {
            "description": "Includes only \u003ccode\u003eSord.\nguid\u003c/code\u003e",
            "$ref": "#/components/schemas/SordZ"
          },
          "mbOnlyLock": {
            "description": "Do not store/read any members. Evaluate the lock flag only.",
            "$ref": "#/components/schemas/SordZ"
          },
          "mbOnlyUnlock": {
            "description": "Same as mbOnlyLock",
            "$ref": "#/components/schemas/SordZ"
          },
          "mbMinDocVersion": {
            "description": "Includes: mbMinMembers, mbDocVersionMembers, mbPreview",
            "$ref": "#/components/schemas/SordZ"
          },
          "mbCheckout": {
            "description": "Includes: mbAllMembers, mbSmallDocumentContent without mbPreview",
            "$ref": "#/components/schemas/SordZ"
          },
          "mbCheckoutPreview": {
            "description": "Includes: mbAllMembers, mbSmallDocumentContent, mbPreview",
            "$ref": "#/components/schemas/SordZ"
          },
          "DESC_DELIM": {
            "type": "string",
            "description": "The objdesc column in the database is splitted into a visible and an invisible part.\nThis constant is the delimiter\n between them."
          },
          "GUID_REPLICATION_BASE": {
            "type": "string",
            "description": "GUID of folder \"Replication Base\""
          },
          "GUID_SCRIPTING_BASE": {
            "type": "string",
            "description": "GUID of folder \"Scripting Base\""
          },
          "GUID_IX_SCRIPTING_BASE": {
            "type": "string",
            "description": "GUID of folder \"IndexServer Scripting Base\""
          },
          "GUID_ADMINISTRATION_BASE": {
            "type": "string",
            "description": "GUID of folder \"Administration\". This folder contains \"Replication Base\", \"Scripting Base\" etc."
          },
          "GUID_COLD_BACKGROUND_IMAGES": {
            "type": "string",
            "description": "Archive folder /Administration/COLD Background Images"
          },
          "GUID_WIN_SCRIPTING_BASE": {
            "type": "string",
            "description": "Archive folder /Administration/ELOscripts, VB scripts for Windows Client."
          },
          "GUID_WORKFLOW_ICONS_BASE": {
            "type": "string",
            "description": "Archive folder that contains the icons for the workflow nodes."
          },
          "GUID_SAP_SMART_LINK": {
            "type": "string",
            "description": "GUID of folder \"/Administration/Smart Link Base\", used for SAP integration"
          },
          "GUID_WFNODE_ICON_BEGINNODE": {
            "type": "string",
            "description": "Object-GUID of icon file for begin node."
          },
          "GUID_WFNODE_ICON_PERSONNODE": {
            "type": "string",
            "description": "Object-GUID of icon file for person node."
          },
          "GUID_WFNODE_ICON_IFNODE": {
            "type": "string",
            "description": "Object-GUID of icon file for decision node."
          },
          "GUID_WFNODE_ICON_COLLECTNODE": {
            "type": "string",
            "description": "Object-GUID of icon file for collect node."
          },
          "GUID_WFNODE_ICON_TERMINATE": {
            "type": "string",
            "description": "reserved"
          },
          "GUID_WFNODE_ICON_CYCLE_BEGIN": {
            "type": "string",
            "description": "Object-GUID of icon file for cycle node."
          },
          "GUID_WFNODE_ICON_CYCLE_END": {
            "type": "string",
            "description": "Object-GUID of icon file for cycle node."
          },
          "GUID_WFNODE_ICON_SET_SERVER_ID": {
            "type": "string",
            "description": "Object-GUID of icon file for server node."
          },
          "GUID_WFNODE_ICON_SPLITNODE": {
            "type": "string",
            "description": "Object-GUID of icon file for split node."
          },
          "GUID_USERS_FOLDER": {
            "type": "string",
            "description": "Object-GUID of users folder."
          },
          "GUID_TEXTREADER_FOLDER": {
            "type": "string",
            "description": "Object-GUID of ELO Textreader folder."
          },
          "GUID_TRNOTCONV_FOLDER": {
            "type": "string",
            "description": "Object-GUID of ELO Textreader not converted documents folder."
          },
          "GUID_APPS_FOLDER": {
            "type": "string",
            "description": "GUID of folder \"/Administration/ELO-Apps\"."
          },
          "ELOINDEX_USER_FOLDER_DATA": {
            "type": "string",
            "description": "Index value ELOINDEX of sub-folder \"data\" of a users folder.\nThe \"data\" sub-folder of a user folder can be read as\n follows: \u003ccode\u003eString objId \u003d \"OKEY:ELOINDEX\u003d\" + ELOINDEX_USER_FOLDER_DATA + user-guid\u003c/code\u003e\n \u003ccode\u003eEditInfo ed \u003d conn.ix().checkoutSord(objId, ...)\u003c/code\u003e"
          },
          "ELOINDEX_USER_FOLDER_DATA_PROFILE": {
            "type": "string",
            "description": "Index value ELOINDEX of sub-folder \"data/elo.profile\" of a users folder."
          },
          "ELOINDEX_USER_FOLDER_PRIVATE": {
            "type": "string",
            "description": "Index value ELOINDEX of sub-folder \"private\" of a users folder."
          },
          "ELOINDEX_USER_FOLDER_INBOX": {
            "type": "string",
            "description": "Index value ELOINDEX of sub-folder \"inbox\" of a users folder."
          }
        },
        "description": "\u003cp\u003e\nConstants for indexing information. Each member of this class with prefix \"mb\" has a corresponding member in class\n \u003ccode\u003eSord\u003c/code\u003e\n \u003c/p\u003e"
      },
      "ArrayOfEditInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EditInfo"
        }
      },
      "KeywordC": {
        "type": "object",
        "properties": {
          "KWID_STANDARD_LIST": {
            "type": "string",
            "description": "Root ID of standard keyword list."
          },
          "KWID_VERSION": {
            "type": "string",
            "description": "Root ID of keyword list used for version numbers."
          },
          "KWID_VERSION_COMMENT": {
            "type": "string",
            "description": "Root ID of keyword list used for version comments."
          },
          "KWID_WORKFLOW": {
            "type": "string",
            "description": "Root ID of keyword list used for workflows."
          },
          "KWID_USER_LIST": {
            "type": "string",
            "description": "Root ID of user keyword list."
          },
          "PLACEHOLDER_DATE": {
            "type": "string",
            "description": "Placeholder for current date. The format depends on the date format \u003ccode\u003eUserProfileC.\nSORD_DATE_FORMAT\u003c/code\u003e\n specified in the user or standard profile."
          },
          "PLACEHOLDER_YEAR": {
            "type": "string",
            "description": "Placeholder for year (4 digits)."
          },
          "PLACEHOLDER_MONTH": {
            "type": "string",
            "description": "Placeholder for month (2 digits)."
          },
          "PLACEHOLDER_DAY": {
            "type": "string",
            "description": "Placeholder for day of month (2 digits)."
          },
          "PLACEHOLDER_USER_NAME": {
            "type": "string",
            "description": "Placeholder for current user name."
          },
          "PLACEHOLDER_COUNTER_BEGIN": {
            "type": "string",
            "description": "Placeholder for the value of the specified counter name.\nThe counter name follows the place holder and is suffixed\n with an extra \"%\". E. g.\n \u003ccode\u003etext\u003dPLACEHOLDER_COUNTER_BEGIN + \"myRecordCounter\" + PLACEHOLDER_COUNTER_END + \". record\"\u003c/code\u003e is expanded\n to \u003ccode\u003etext\u003d\"17. record\"\u003c/code\u003e assuming myRecordCounter has value 17."
          },
          "PLACEHOLDER_COUNTER_END": {
            "type": "string",
            "description": "End of placeholder for counter name."
          },
          "mbRawText": {
            "type": "string",
            "description": "Return raw text in \u003ccode\u003echeckoutKeywords\u003c/code\u003e. Placeholders are not substituted."
          },
          "mbPreCookedText": {
            "type": "string",
            "description": "Return raw text in \u003ccode\u003echeckoutKeywords\u003c/code\u003e. Placeholders except counters are substituted."
          },
          "mbEdit": {
            "description": "The purpose of this constant object is to control the behavior of \u003ccode\u003echeckoutKeywords\u003c/code\u003e.\nSupplying it,\n \u003ccode\u003echeckoutKeywords\u003c/code\u003e will return the raw text (including placeholders) in the returned Keyword objects.\n Use this constant, if you want to read keywords into an editor.",
            "$ref": "#/components/schemas/KeywordZ"
          },
          "mbView": {
            "description": "The purpose of this constant object is to control the behavior of \u003ccode\u003echeckoutKeywords\u003c/code\u003e.\nSupplying it,\n \u003ccode\u003echeckoutKeywords\u003c/code\u003e will return substituted placeholders in the text members of the returned Keyword\n objects. Use this constant, if you want to read keywords into a dialog that lets the user select one of it.",
            "$ref": "#/components/schemas/KeywordZ"
          },
          "MAX_CHILDREN": {
            "type": "integer",
            "description": "The maximum number of children per keyword.\nThis value is valid for all keyword lists except the user keyword list\n (\u003ccode\u003eKWID_USER_LIST\u003c/code\u003e). The user keyword list might contain more children below a keyword node.",
            "format": "int32"
          },
          "MAX_TREE_DEPTH": {
            "type": "integer",
            "description": "Maximum depth of a keyword tree.\nThis value is valid for all keyword lists except the user keyword list\n (\u003ccode\u003eKWID_USER_LIST\u003c/code\u003e). The user keyword list might contain a deeper tree.",
            "format": "int32"
          },
          "lnRootId": {
            "type": "integer",
            "description": "Maximum length of a root keyword ID.\nIf a new keyword list is checked in, the ID of the root keyword must not\n exceed this length.",
            "format": "int32"
          },
          "lnId": {
            "type": "integer",
            "description": "Maximum length of keyword ID.",
            "format": "int32"
          },
          "lnText": {
            "type": "integer",
            "description": "Maximum length of keyword text.",
            "format": "int32"
          }
        }
      },
      "BRequest_FeedService_createAction": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "type": {
            "$ref": "#/components/schemas/EActionType"
          },
          "parentGuid": {
            "type": "string"
          }
        }
      },
      "ListOfAction": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Action"
        }
      },
      "OcrWorker": {
        "type": "object",
        "properties": {
          "busId": {
            "type": "string",
            "description": "The worker process listens on this bus ID for events of type {@link EventBusC#EVENT_OCR_REQUEST}."
          },
          "subsId": {
            "type": "string",
            "description": "The worker process is identified by this subscriber ID on the event bus."
          },
          "state": {
            "type": "integer",
            "description": "Worker state.",
            "format": "int32"
          },
          "lastUsed": {
            "type": "string",
            "description": "Reserved."
          },
          "reserved": {
            "type": "string",
            "description": "Reserved."
          }
        },
        "description": "This class is used to describe an OCR worker process."
      },
      "FileData": {
        "type": "object",
        "properties": {
          "contentType": {
            "type": "string",
            "description": "MIME-Type/document extension, for example text/xml or image/tiff or txt."
          },
          "data": {
            "type": "string",
            "description": "File data as byte array.",
            "format": "byte"
          },
          "stream": {
            "description": "File data as input stream.\nThis member can only be used if the FileData object is a member of {@link MapValue} or\n {@link DocVersion}.",
            "$ref": "#/components/schemas/BStreamReference"
          }
        },
        "description": "Class for the data contained in a file.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_cleanupStart": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "deleteOptions": {
            "$ref": "#/components/schemas/DeleteOptions"
          }
        }
      },
      "BResult_1264954948": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/IXServicePortC"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "TranslateTermDataC": {
        "type": "object",
        "properties": {
          "mbGuid": {
            "type": "string",
            "description": "Member bit: GUID DB column: guid"
          },
          "lnGuid": {
            "type": "integer",
            "description": "Column length: GUID DB column: guid",
            "format": "int32"
          },
          "mbTStamp": {
            "type": "string",
            "description": "Member bit: Timestamp.\nDB column: tstamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "Column length: Timestamp.\nDB column: tstamp",
            "format": "int32"
          },
          "mbStatus": {
            "type": "string",
            "description": "Member bit: Status.\nDB column: status"
          },
          "mbLang1": {
            "type": "string",
            "description": "Member bit: Language 1. System language.\nDB column: lang1"
          },
          "lnLang1": {
            "type": "integer",
            "description": "Column length: Language 1. System language.\nDB column: lang1",
            "format": "int32"
          },
          "mbLang2": {
            "type": "string",
            "description": "Member bit: Language 2 DB column: lang2"
          },
          "lnLang2": {
            "type": "integer",
            "description": "Column length: Language 2 DB column: lang2",
            "format": "int32"
          },
          "mbLang3": {
            "type": "string",
            "description": "Member bit: Language 3 DB column: lang3"
          },
          "lnLang3": {
            "type": "integer",
            "description": "Column length: Language 3 DB column: lang3",
            "format": "int32"
          },
          "mbLang4": {
            "type": "string",
            "description": "Member bit: Language 4 DB column: lang4"
          },
          "lnLang4": {
            "type": "integer",
            "description": "Column length: Language 4 DB column: lang4",
            "format": "int32"
          },
          "mbLang5": {
            "type": "string",
            "description": "Member bit: Language 5 DB column: lang5"
          },
          "lnLang5": {
            "type": "integer",
            "description": "Column length: Language 5 DB column: lang5",
            "format": "int32"
          },
          "mbLang6": {
            "type": "string",
            "description": "Member bit: Language 6 DB column: lang6"
          },
          "lnLang6": {
            "type": "integer",
            "description": "Column length: Language 6 DB column: lang6",
            "format": "int32"
          },
          "mbLang7": {
            "type": "string",
            "description": "Member bit: Language 7 DB column: lang7"
          },
          "lnLang7": {
            "type": "integer",
            "description": "Column length: Language 7 DB column: lang7",
            "format": "int32"
          },
          "mbLang8": {
            "type": "string",
            "description": "Member bit: Language 8 DB column: lang8"
          },
          "lnLang8": {
            "type": "integer",
            "description": "Column length: Language 8 DB column: lang8",
            "format": "int32"
          },
          "mbLang9": {
            "type": "string",
            "description": "Member bit: Language 9 DB column: lang9"
          },
          "lnLang9": {
            "type": "integer",
            "description": "Column length: Language 9 DB column: lang9",
            "format": "int32"
          },
          "mbTStampSync": {
            "type": "string",
            "description": "Member bit: Timestamp.\nDB column: tstampsync"
          },
          "lnTStampSync": {
            "type": "integer",
            "description": "Column length: Timestamp.\nDB column: tstampsync",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of TranslateTermData\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ReportOptionsC": {
        "type": "object",
        "properties": {
          "ERP_LOGFIRSTMESSAGE": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGOPENARC": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGCLOSEARC": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGUSERDATA": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGCOLORDATA": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGMASKDATA": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGPATHDATA": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGKEYDATA": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGCREATEDOC": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGCREATESOR": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGEDITDATA": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGEDITDOC": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGVIEWDOC": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGERADOC": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGERASOR": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGMOVEDOC": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGREFDOC": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGMOVESOR": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGREFSOR": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGERAREF": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGCOMPLAIN": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGCHANGEKIND": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGCHANGEKEY": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGCHANGEPWD": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGATTACHMENT": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGDELDOCS": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_CREATEFLOWTEMPL": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_EDITFLOWTEMPL": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_DELFLOWTEMPL": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_STARTFLOW": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_RECEIVEFLOW": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_FORWARDFLOW": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_EDITFLOWACTIVE": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_DELFLOWACTIVE": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_FLOWTIMELIMT": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_FLOWERRORYESNO": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_CONVERT_FORMAT": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_WV": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_POSTBOX": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_VERSCHIEDEN": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_NEWVERT": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_DELVERT": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_FREEVERT": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_REMOVEVERT": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_SETVERT": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_RESETVERT": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_CHECKOUT": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_CHECKIN": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_SHOWDOC": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_SHOWSOR": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_PICKPOST": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_DELVERSION": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_SEARCH": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_WRITESESSION": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_POSTBARCODE": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_DM_READDOC": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_CUSTOM": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_SUBSTITUTIONS": {
            "type": "integer",
            "description": "All substitution actions are combined into this code:\n\u003cul\u003e\n \u003cli\u003e{@link ReportInfoC#ACT_IX_SUBSTITUTION_NEW}\u003c/li\u003e\n \u003cli\u003e{@link ReportInfoC#ACT_IX_SUBSTITUTION_CHANGE}\u003c/li\u003e\n \u003cli\u003e{@link ReportInfoC#ACT_IX_SUBSTITUTION_ACTIVATE}\u003c/li\u003e\n \u003cli\u003e{@link ReportInfoC#ACT_IX_SUBSTITUTION_DEACTIVATE}\u003c/li\u003e\n \u003cli\u003e{@link ReportInfoC#ACT_IX_SUBSTITUTION_FORWARD}\u003c/li\u003e\n \u003cli\u003e{@link ReportInfoC#ACT_IX_SUBSTITUTION_TRANSFER}\u003c/li\u003e\n \u003cli\u003e{@link ReportInfoC#ACT_IX_SUBSTITUTION_DELETE}\u003c/li\u003e\n \u003c/ul\u003e",
            "format": "int32"
          },
          "ERP_LOGASPECTDATA": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_NOREPDATA": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_ERROR": {
            "type": "integer",
            "format": "int32"
          },
          "ERP_LOGLASTMESSAGE": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Constants for report mode\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e\n An ERP code is assigned to one or more action codes."
      },
      "MapHistZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string"
          }
        }
      },
      "IXExceptionC": {
        "type": "object",
        "properties": {
          "SERVER_ERROR": {
            "type": "integer",
            "description": "Problem in the server configuration.",
            "format": "int32"
          },
          "UNSUPPORTED_PROTOCOL_VERSION": {
            "type": "integer",
            "description": "Unsupported protocol version. This error is thrown, if the protocol version cannot be negotiated.\nA reason for this\n can be different major release versions of client and server.",
            "format": "int32"
          },
          "INVALID_LICENSE": {
            "type": "integer",
            "description": "License key is invalid.",
            "format": "int32"
          },
          "INVALID_PARAM": {
            "type": "integer",
            "description": "Invalid parameter was given.",
            "format": "int32"
          },
          "INVALID_SESSION": {
            "type": "integer",
            "description": "Session is not (or no longer) valid.",
            "format": "int32"
          },
          "TEMP_PROBLEM_OLD": {
            "type": "integer",
            "description": "Temporarily problem, a later try should succeed. The value of TEMP_PROBLEM must be changed in IX 8.00.\n054, because\n the current client libraries recognize it as an exception where relogin is required. This could lead to the effect\n described in TTS001661.",
            "format": "int32"
          },
          "TEMP_PROBLEM": {
            "type": "integer",
            "description": "Temporarily problem, a later try should succeed.",
            "format": "int32"
          },
          "INVALID_CRYPT_KEY": {
            "type": "integer",
            "description": "Encryption key must be set before documents can be encrypted.",
            "format": "int32"
          },
          "SYNTAX_ERROR": {
            "type": "integer",
            "description": "Syntax error e.g. in search request.",
            "format": "int32"
          },
          "PASSWORD_DENIED": {
            "type": "integer",
            "description": "The given password violates the password rules.\nThe passord rules are stored in the user profile value\n {@link UserProfileC#KEY_PASSWORD_RULES}.",
            "format": "int32"
          },
          "ALREADY_EXISTS": {
            "type": "integer",
            "description": "Specified object to be created already exists.",
            "format": "int32"
          },
          "LOCKED": {
            "type": "integer",
            "description": "Specified data is locked.",
            "format": "int32"
          },
          "NOT_FOUND": {
            "type": "integer",
            "description": "Specified data could not be found.",
            "format": "int32"
          },
          "ACCESS_DENIED": {
            "type": "integer",
            "description": "Access to the specified object was denied, there are rights missing.",
            "format": "int32"
          },
          "NOT_EMPTY": {
            "type": "integer",
            "description": "Specified data could not be found.",
            "format": "int32"
          },
          "SCRIPT_ERROR": {
            "type": "integer",
            "description": "An error thrown in a script file is passed to the client application with this error code. E.g.\n[ELOIX:6000]\n \"Message text thrown in script\".",
            "format": "int32"
          },
          "NOT_IX": {
            "type": "integer",
            "description": "Not a ELO IX Exception",
            "format": "int32"
          },
          "INTERNAL": {
            "type": "integer",
            "description": "Internal error.",
            "format": "int32"
          },
          "UNSUPPORTED_FUNCTION": {
            "type": "integer",
            "description": "Function is not currently supported.",
            "format": "int32"
          },
          "PROHIBITED_OPERATION": {
            "type": "integer",
            "description": "The called function cannot be executed on this object",
            "format": "int32"
          }
        },
        "description": "This class contains constant definitions for Indexserver error numbers used in Indexserver exceptions.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ResolveRightsResult": {
        "type": "object",
        "properties": {
          "right": {
            "type": "integer",
            "description": "The right the user got by {@link ResolveRightsResult#type}. Values will be of {@link AccessC}.FLAG_*.",
            "format": "int32"
          },
          "right2": {
            "type": "integer",
            "description": "The right the user got by {@link ResolveRightsResult#type}. Values will be of {@link AccessC}.FLAG2_*.",
            "format": "int32"
          },
          "type": {
            "type": "integer",
            "description": "The kind of way the user got this right. See {@link ResolveRightsResultC} for valid values.",
            "format": "int32"
          },
          "members": {
            "description": "Path of members that explains why the user got this right.\n\u003cp\u003e\n The first item in this list is the name of the object directly assigned to the user. The last item is the name of\n the object which obtains the right.\n \u003c/p\u003e\n \n \u003cp\u003e\n If {@link #type} \u003d\u003d {@link ResolveRightsResultC#SUBSTITUTION}, the members are set as following:\u003cbr\u003e\n [0] the user himself\u003cbr\u003e\n [1..] the group hierarchy from the user to {@link Substitution#substituteId}\u003cbr\u003e\n [2] {@link Substitution#substituteName}\u003cbr\u003e\n [3] {@link Substitution#groupsToInheritRights}br\u003e [4] {@link Substitution#userName}\u003cbr\u003e\n \u003c/p\u003e",
            "$ref": "#/components/schemas/ListOfString"
          }
        },
        "description": "Class for the result of the IX-Function\n{@link IXServicePortIF#resolveRights(ClientInfo, UserInfo, ResolveRightsInfo)} ."
      },
      "ArrayOfUserNodeInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserNodeInfo"
        }
      },
      "Cardinality": {
        "type": "object",
        "properties": {
          "OPTIONAL": {
            "description": "At most one object. By other words: 0 or 1 object.",
            "$ref": "#/components/schemas/Cardinality"
          },
          "MANDATORY": {
            "description": "Exactly one object.",
            "$ref": "#/components/schemas/Cardinality"
          },
          "MANDATORY_MANY": {
            "description": "At least one object. By other words: 1...n objects.",
            "$ref": "#/components/schemas/Cardinality"
          },
          "OPTIONAL_MANY": {
            "description": "Any number of objects. By other words: 0...n objects.",
            "$ref": "#/components/schemas/Cardinality"
          }
        },
        "description": "Aspect cardinality."
      },
      "BRequest_IXServicePortIF_queryJobProtocol": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "queryJobProtocolInfo": {
            "$ref": "#/components/schemas/QueryJobProtocolInfo"
          }
        }
      },
      "SordZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from SordC class."
          }
        },
        "description": "\u003cp\u003e\nThis class encapsulates the constants of \u003ccode\u003eSordC\u003c/code\u003e\n \u003c/p\u003e\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_deleteNotes": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "noteIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BackupProfile": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Backup profile name"
          },
          "pathId": {
            "type": "integer",
            "description": "Storage path id",
            "format": "int32"
          },
          "slot": {
            "type": "integer",
            "description": "Backup slot",
            "format": "int32"
          },
          "writeKeywording": {
            "type": "boolean",
            "description": "Store keywording too"
          },
          "sqlDocSelect": {
            "type": "string",
            "description": "Optional SQL command to select the documents to be stored."
          },
          "nbOfDocsPerLoop": {
            "type": "integer",
            "description": "Maximum number of documents per backup loop.",
            "format": "int32"
          },
          "retention": {
            "type": "integer",
            "description": "Reserved",
            "format": "int32"
          }
        },
        "description": "This class represents settings of a ELOdm backup profile."
      },
      "BRequest_IXServicePortIF_insertPublicDownload": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "opts": {
            "$ref": "#/components/schemas/PublicDownloadOptions"
          }
        }
      },
      "BRequest_IXServicePortIF_cleanupState": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ArrayOfContextTerm": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ContextTerm"
        }
      },
      "FioResult": {
        "type": "object",
        "properties": {
          "jobState": {
            "description": "This object represents the state of the export.\nUse\n {@link de.elo.ix.client.IXServicePortIF#queryJobState(de.elo.ix.client.ClientInfo, String, boolean, boolean, boolean)}\n to get recent states.",
            "$ref": "#/components/schemas/JobState"
          },
          "downloadStream": {
            "$ref": "#/components/schemas/BStreamReference"
          }
        }
      },
      "OcrInfoC": {
        "type": "object",
        "properties": {
          "PDF": {
            "type": "integer",
            "description": "PDF output. OCR will convert the output in a PDF format.",
            "format": "int32"
          },
          "TEXT": {
            "type": "integer",
            "description": "Text output. The OCR result is a UTF-16LE character stream.",
            "format": "int32"
          },
          "XML": {
            "type": "integer",
            "description": "XML output. The OCR result is a xml style layout.",
            "format": "int32"
          },
          "CHAR_AND_RECT": {
            "type": "integer",
            "description": "Compute character positions.\nThe OCR result is a binary stream of subsequent records of this layout: \u003cbr/\u003e\n \u003ctable\u003e\n \u003ctr\u003e\n \u003ctd\u003eUTF-16 Character\u003c/td\u003e\n \u003ctd\u003e2 Bytes\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eHorizontal position of upper left corner\u003c/td\u003e\n \u003ctd\u003e4 Bytes (Integer)\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eVertical position of upper left corner\u003c/td\u003e\n \u003ctd\u003e4 Bytes (Integer)\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eHorizontal position of bottom right corner\u003c/td\u003e\n \u003ctd\u003e4 Bytes (Integer)\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eVertical position of bottom right corner\u003c/td\u003e\n \u003ctd\u003e4 Bytes (Integer)\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eConfidence in percent\u003c/td\u003e\n \u003ctd\u003e4 Bytes (Integer)\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eOriginal UTF-16 Character\u003c/td\u003e\n \u003ctd\u003e2 Bytes\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e\n \u003cp\u003e\n The character and integer byte order is Little Endian.\n \u003c/p\u003e\n \u003cp\u003e\n If the recognition confidence is lower than {@link OcrInfoRecognizeFile#minCharConfidence}, the UTF-16 character is\n equal to {@link OcrInfoRecognizeFile#replaceChar}.\n \u003c/p\u003e\n \u003cp\u003e\n The rectangle coordinates are measured in points. The vertical axis points to the bottom in positive direction.",
            "format": "int32"
          },
          "CHAR_AND_RECT_EX": {
            "type": "integer",
            "description": "Compute character positions.\nThe OCR result is a binary stream as defined in {@link #CHAR_AND_RECT} prefixed by a\n header of this layout:\n \u003ctable\u003e\n \u003ctr\u003e\n \u003ctd\u003eMagic\u003c/td\u003e\n \u003ctd\u003e4 Bytes (Integer)\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eVersion\u003c/td\u003e\n \u003ctd\u003e4 Bytes (Integer)\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eSkew Angle\u003c/td\u003e\n \u003ctd\u003e8 Bytes (Double)\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eWidth\u003c/td\u003e\n \u003ctd\u003e4 Bytes (Integer)\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eHeight\u003c/td\u003e\n \u003ctd\u003e4 Bytes (Integer)\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e\n The value of Magic is 0x52434F45. The value of Version is 1. The Integer and Double byte order is Little Endian.\n The Double value format is IEEE 754.",
            "format": "int32"
          },
          "CHAR_AND_RECT_XML": {
            "type": "integer",
            "description": "Compute character positions and return XML format.",
            "format": "int32"
          },
          "MESSAGES_LANGUAGE_ENGLISH": {
            "type": "integer",
            "format": "int32"
          },
          "MESSAGES_LANGUAGE_RUSSIAN": {
            "type": "integer",
            "format": "int32"
          },
          "MESSAGES_LANGUAGE_GERMAN": {
            "type": "integer",
            "format": "int32"
          },
          "MESSAGES_LANGUAGE_FRENCH": {
            "type": "integer",
            "format": "int32"
          },
          "MESSAGES_LANGUAGE_UKRAINIAN": {
            "type": "integer",
            "format": "int32"
          },
          "MESSAGES_LANGUAGE_SPANISH": {
            "type": "integer",
            "format": "int32"
          },
          "MESSAGES_LANGUAGE_ITALIAN": {
            "type": "integer",
            "format": "int32"
          },
          "MESSAGES_LANGUAGE_DUTCHSTANDARD": {
            "type": "integer",
            "format": "int32"
          },
          "MESSAGES_LANGUAGE_PORTUGUESE": {
            "type": "integer",
            "format": "int32"
          },
          "MESSAGES_LANGUAGE_SLOVAK": {
            "type": "integer",
            "format": "int32"
          },
          "MESSAGES_LANGUAGE_POLISH": {
            "type": "integer",
            "format": "int32"
          },
          "MESSAGES_LANGUAGE_CZECH": {
            "type": "integer",
            "format": "int32"
          },
          "MESSAGES_LANGUAGE_HUNGARIAN": {
            "type": "integer",
            "format": "int32"
          },
          "MESSAGES_LANGUAGE_LITHUANIAN": {
            "type": "integer",
            "format": "int32"
          },
          "MESSAGES_LANGUAGE_LATVIAN": {
            "type": "integer",
            "format": "int32"
          },
          "MESSAGES_LANGUAGE_ESTONIAN": {
            "type": "integer",
            "format": "int32"
          },
          "MESSAGES_LANGUAGE_BULGARIAN": {
            "type": "integer",
            "format": "int32"
          },
          "UNIT_POINT": {
            "type": "integer",
            "format": "int32"
          },
          "UNIT_MILLIMETER": {
            "type": "integer",
            "format": "int32"
          },
          "UNIT_INCH": {
            "type": "integer",
            "format": "int32"
          },
          "UNIT_PER_THOUSAND": {
            "type": "integer",
            "format": "int32"
          },
          "SPACES_NORMAL": {
            "type": "integer",
            "description": "Used in SingleCoulmnMode. All words are separated by one blank.",
            "format": "int32"
          },
          "SPACES_TWOSPACES": {
            "type": "integer",
            "description": "Used in SingleCoulmnMode. If the words are separated by a larger distance, a second blank is inserted.",
            "format": "int32"
          },
          "SPACES_EXACT": {
            "type": "integer",
            "description": "Used in SingleCoulmnMode. The OCR tries to insert the correct number of blanks.",
            "format": "int32"
          },
          "ALL_PAGES": {
            "type": "integer",
            "description": "OCR will process all pages of the given document.",
            "format": "int32"
          },
          "EVEN_PAGES": {
            "type": "integer",
            "description": "Internal Use only. OCR will process all even pages of the given document.",
            "format": "int32"
          },
          "ODD_PAGES": {
            "type": "integer",
            "description": "Internal Use only. OCR will process all odd pages of the given document.",
            "format": "int32"
          },
          "ENCODING_UTF8": {
            "type": "integer",
            "format": "int32"
          },
          "ENCODING_UTF16": {
            "type": "integer",
            "format": "int32"
          },
          "ENCODING_UTF16LE": {
            "type": "integer",
            "format": "int32"
          },
          "PDF_QUALITY_MAXQUALITY": {
            "type": "integer",
            "description": "Optimize the PDF (PDF/A) export in order to receive the best quality of the resulting file.",
            "format": "int32"
          },
          "PDF_QUALITY_BALANCED": {
            "type": "integer",
            "description": "The PDF (PDF/A) export will be balanced between the quality of the resulting file, its size and the time of\nprocessing.",
            "format": "int32"
          },
          "PDF_QUALITY_MINSIZE": {
            "type": "integer",
            "description": "Optimize the PDF (PDF/A) export in order to receive the minimum size of the resulting file.",
            "format": "int32"
          },
          "PDF_QUALITY_MAXSPEED": {
            "type": "integer",
            "description": "Optimize the PDF (PDF/A) export in order to receive the highest speed of processing.",
            "format": "int32"
          },
          "PDF_COMPLIANCE_PDFA_3U": {
            "type": "integer",
            "description": "The recognized text should be exported to PDF/A-3u format.",
            "format": "int32"
          },
          "PDF_COMPLIANCE_PDFA_3A": {
            "type": "integer",
            "description": "The recognized text should be exported to PDF/A-3a format.",
            "format": "int32"
          },
          "PDF_COMPLIANCE_PDFA_2U": {
            "type": "integer",
            "description": "The recognized text should be exported to PDF/A-2u format.",
            "format": "int32"
          },
          "PDF_COMPLIANCE_PDFA_2A": {
            "type": "integer",
            "description": "The recognized text should be exported to PDF/A-2a format.",
            "format": "int32"
          },
          "PDF_COMPLIANCE_PDFA_1B": {
            "type": "integer",
            "description": "The recognized text should be exported to PDF/A-1b format.",
            "format": "int32"
          },
          "PDF_COMPLIANCE_PDFA_1A": {
            "type": "integer",
            "description": "The recognized text should be exported to PDF/A-1a format.",
            "format": "int32"
          },
          "PDF_COMPLIANCE_NONE": {
            "type": "integer",
            "description": "Compliance with PDF/A standard is not necessary.",
            "format": "int32"
          },
          "WHITESPACE_DEFAULT": {
            "type": "integer",
            "description": "Let the OCR Whitespace characters as they are.",
            "format": "int32"
          },
          "WHITESPACE_REPLACE": {
            "type": "integer",
            "description": "OCR Whitespace characters will be replaced: Line break and Paragraph break -\u003e \u0027\\n\u0027 Tabulation -\u003e \u0027\\t\u0027 Object\nreplacement character -\u003e \u0027 \u0027 Soft hyphen -\u003e \u0027-\u0027",
            "format": "int32"
          }
        },
        "description": "Constants for OCR processing."
      },
      "BRequest_IXServicePortIF_checkinConfigFiles": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "configFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigFile"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BResult_1835331414": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/SordPaths"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BResult_770771503": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/DocumentProcessor"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutNotes": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          },
          "noteIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "noteZ": {
            "$ref": "#/components/schemas/NoteZ"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_lockArchive": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "groupId": {
            "type": "string"
          }
        }
      },
      "BeginForwardWorkflowNodeInfo": {
        "type": "object"
      },
      "BRequest_IXServicePortIF_checkinSubstitutions": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "checkinSubstitutionsInfo": {
            "$ref": "#/components/schemas/CheckinSubstitutionsInfo"
          },
          "substitutionZ": {
            "$ref": "#/components/schemas/SubstitutionZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "KeywordZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from KeywordC class."
          }
        },
        "description": "This class encapsulates the constants of KeywordC.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "MapHistC": {
        "type": "object",
        "properties": {
          "mbHistItems": {
            "type": "string"
          },
          "mbAllMembers": {
            "type": "string"
          },
          "mbAllMembersNoItems": {
            "type": "string"
          },
          "mbAll": {
            "description": "All members.",
            "$ref": "#/components/schemas/MapHistZ"
          },
          "mbAllNoItems": {
            "description": "All members but without {@link MapHist#histItems}.",
            "$ref": "#/components/schemas/MapHistZ"
          }
        },
        "description": "Element selectors for class MapHist."
      },
      "BRequest_IXServicePortIF_checkinReplNames": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "replNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplSetName"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "FindAlertInfo": {
        "type": "object",
        "properties": {
          "sourceId": {
            "type": "string",
            "description": "Find alerts created by this user, ID or name."
          },
          "destId": {
            "type": "string",
            "description": "Find alerts sendet to this user, ID or name. Only main administrators can set this value to an arbitary user ID.\nOther users can only set one of her or his groups or one of her or his substituted users."
          },
          "inclAll": {
            "type": "boolean",
            "description": "Find all notification types. If this member is set, the other members related to notification types are ignored."
          },
          "inclAlam": {
            "type": "boolean",
            "description": "Find alarm notifications. Ignored, if \u003ccode\u003einclAll\u003c/code\u003e is true."
          },
          "inclReminder": {
            "type": "boolean",
            "description": "Find reminder notifications. Ignored, if \u003ccode\u003einclAll\u003c/code\u003e is true."
          },
          "inclInTray": {
            "type": "boolean",
            "description": "Find notifications related to the In Tray. Ignored, if \u003ccode\u003einclAll\u003c/code\u003e is true."
          },
          "inclWorkFlow": {
            "type": "boolean",
            "description": "Find workflow notifications. Ignored, if \u003ccode\u003einclAll\u003c/code\u003e is true."
          },
          "inclOthers": {
            "type": "boolean",
            "description": "Find all other notifications that are not explicitly listed here. Ignored, if \u003ccode\u003einclAll\u003c/code\u003e is true."
          },
          "inclSubs": {
            "type": "boolean",
            "description": "Find notifications related to substitution rules. Ignored, if \u003ccode\u003einclAll\u003c/code\u003e is true."
          },
          "objId": {
            "type": "string",
            "description": "Find notifications related to this object. For valid values see \u003ccode\u003echeckoutSord\u003c/code\u003e."
          },
          "timeIso": {
            "type": "string",
            "description": "Find notifiations with this create date or in this date range. A date range must be separated by \"...\"."
          }
        },
        "description": "Find criterias for selecting alerts.\nRESERVED"
      },
      "BResult_1597637633": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/PluginInfo"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_DocumentEvents_beginDownload": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "rwInfo": {
            "$ref": "#/components/schemas/UpDownloadEventInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteNoteTemplates": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userId": {
            "type": "string"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ServerInfoDM": {
        "type": "object",
        "properties": {
          "basisStoreIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "backupStoreIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "restoreStoreId": {
            "type": "integer",
            "description": "ID of restore path.",
            "format": "int32"
          },
          "storeMode": {
            "type": "integer",
            "description": "Mode to be used to fill the filing paths. This value is a bitset of the ServerInfoDMC.STOREMODE_* constants.",
            "format": "int32"
          },
          "proxyMode": {
            "type": "integer",
            "description": "DM proxy mode. Read-only.\n\u003ctable\u003e\n \u003ctr\u003e\n \u003ctd\u003e-1\u003c/td\u003e\n \u003ctd\u003eProxy mode is not active\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eMain instance\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e\u0026gt;0\u003c/td\u003e\n \u003ctd\u003eBranch instance\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e",
            "format": "int32"
          },
          "blackeningEnabled": {
            "type": "boolean",
            "description": "DM is enabled for blackening of document parts."
          }
        },
        "description": "This class contains infomation about the filing paths of the document manager (DM)."
      },
      "BResult_256674679": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/Reminder"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BResult_BUtility_upload": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/BStreamReference"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutUsers": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "checkoutUsersZ": {
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "UserInfo": {
        "type": "object",
        "properties": {
          "desc": {
            "type": "string",
            "description": "User description."
          },
          "flags": {
            "type": "integer",
            "description": "User rights. Possible values are combinations of \u003ccode\u003eAccessC.FLAG_*\u003c/code\u003e constants.",
            "format": "int32"
          },
          "groupList": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "id": {
            "type": "integer",
            "description": "User identifier",
            "format": "int32"
          },
          "keylist": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "name": {
            "type": "string",
            "description": "User name"
          },
          "parent": {
            "type": "integer",
            "description": "User ID of the users parent (users adminstrator).",
            "format": "int32"
          },
          "pwd": {
            "type": "string",
            "description": "User password"
          },
          "sessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionInfo"
            }
          },
          "type": {
            "type": "integer",
            "description": "User type. \u003ccode\u003eTYPE_USER\u003c/code\u003e for user, \u003ccode\u003eTYPE_GROUP\u003c/code\u003e for group.",
            "format": "int32"
          },
          "userProps": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ldapProperties": {
            "description": "Reserved (LDAP user properties). Keys of this map named LDAP_PROP_* in class UserInfoC. All keys are lower case.\nMandatory properties - For user: objectGUID, distinguishedName, displayName, sAMAccountName und UserPrincipalName -\n For group: objectGUID, distinguishedName, name und sAMAccountName",
            "$ref": "#/components/schemas/MapToString"
          },
          "guid": {
            "type": "string",
            "description": "GUID"
          },
          "tStamp": {
            "type": "string",
            "description": "Timestamp The format is JJJJ.MM.DD.hh.mm.\nss"
          },
          "lastLoginIso": {
            "type": "string",
            "description": "Last login timestamp (in timezone UTC). This value is read-only and undefined for groups.\nOnly the date part is\n valid."
          },
          "superiorId": {
            "type": "integer",
            "description": "ID of the users superior. If the user does not have a superior, this value is equal to \u003ccode\u003eid\u003c/code\u003e.",
            "format": "int32"
          },
          "flags2": {
            "type": "integer",
            "description": "Second bitset of user rights.",
            "format": "int32"
          },
          "orgUnitIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "tStampSync": {
            "type": "string",
            "description": "Timestamp of this object\u0027s last export by the replication."
          },
          "availableRoles": {
            "description": "The user can activate this roles.",
            "$ref": "#/components/schemas/ListOfUserName"
          },
          "packageName": {
            "type": "string",
            "description": "The package name of UserInfo"
          }
        },
        "description": "\u003cp\u003e\nData class containing the user information data for the user logged in to the Index server. User information includes\n ID, name, rights, parent, etc.\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "WFCacheSyncInfo": {
        "type": "object",
        "properties": {
          "flowId": {
            "type": "integer",
            "description": "Workflow ID.",
            "format": "int32"
          },
          "hash": {
            "type": "integer",
            "description": "Checksum on workflow data.",
            "format": "int32"
          },
          "tstamp": {
            "type": "string",
            "description": "Workflow timestamp."
          }
        },
        "description": "This class is used to synchronize the workflow cache."
      },
      "BRequest_IXServicePortIF_configureBackup": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "backupProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupProfile"
            }
          }
        }
      },
      "BResult_460199434": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/Activity"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "FindByNotes": {
        "type": "object",
        "properties": {
          "term": {
            "type": "string",
            "description": "The search term to be found within the notes."
          },
          "type": {
            "type": "integer",
            "description": "Find notes of this type. Use TYPE_NONE (\u003d0) to find all notes.",
            "format": "int32"
          }
        },
        "description": "Finds an object according to the objects notes (sticky notes) content."
      },
      "SordLink": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Numerical ID or GUID of referenced Sord."
          },
          "linkId": {
            "type": "string",
            "description": "Link ID."
          },
          "permanent": {
            "type": "boolean",
            "description": "True, if this SordLink is permanent. Permanent links between Sords cannot be deleted."
          }
        },
        "description": "This class represents a link to an archive entry.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "MapToArrayListOfWFNodeHistory": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/ArrayListOfWFNodeHistory"
        }
      },
      "NoteFreehand": {
        "type": "object",
        "properties": {
          "width": {
            "type": "integer",
            "description": "Line width.",
            "format": "int32"
          },
          "points": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointInfo"
            }
          },
          "strikeoutWidth": {
            "type": "integer",
            "description": "Line width for strikeout pen (only TYPE_ANNOTATION_STRIKEOUT).",
            "format": "int32"
          },
          "strikeoutColor": {
            "type": "integer",
            "description": "Color for strikeout pen (only TYPE_ANNOTATION_STRIKEOUT).",
            "format": "int32"
          }
        },
        "description": "This class describes a freehand line annotation."
      },
      "BRequest_IXServicePortIF_deleteActivity": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "actGuid": {
            "type": "string"
          },
          "deleteOptions": {
            "$ref": "#/components/schemas/DeleteActivityOptions"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ListOfDateValue": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DateValue"
        }
      },
      "SearchTermOptions": {
        "type": "object",
        "properties": {
          "correction": {
            "type": "boolean",
            "description": "Return correction suggestion for search query.\n\u003cbr\u003e\n Example for a correction: tets -\u003e test"
          },
          "synonyms": {
            "type": "boolean",
            "description": "Return synonyms for search query."
          }
        },
        "description": "Use this class if alternative search terms should be retrieved by\n{@link de.elo.ix.client.IXServicePortIF#findSearchTerms(de.elo.ix.client.ClientInfo, de.elo.ix.client.FindInfo, int)}.\u003cbr\u003e\n Deliver query by {@link de.elo.ix.client.esearch.ESearchParams}."
      },
      "InheritKeywordingResult": {
        "type": "object",
        "properties": {
          "NOTHING": {
            "description": "Indexserver should stop processing of children of the given Sord.",
            "$ref": "#/components/schemas/InheritKeywordingResult"
          },
          "APPLY_DEFAULT": {
            "description": "The event function has not modified keywording of the given Sord.\nIndexserver applies the default inheritance\n algorithm to the given Sord and continues processing of children.",
            "$ref": "#/components/schemas/InheritKeywordingResult"
          },
          "INHERITED": {
            "description": "The event function has modified keywording of the given Sord.\nIndexserver updates the given Sord in the database\n and continues processing of children.",
            "$ref": "#/components/schemas/InheritKeywordingResult"
          }
        },
        "description": "Return values for server event {@link IXServerEvents#onInheritKeywording}."
      },
      "BRequest_IXServicePortIF_checkoutKeywordList": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "kwid": {
            "type": "string"
          },
          "keywordZ": {
            "$ref": "#/components/schemas/KeywordZ"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ReportInfoUserModified": {
        "type": "object",
        "properties": {
          "newProps": {
            "description": "Modified properties.",
            "$ref": "#/components/schemas/ReportInfoUserProps"
          },
          "oldProps": {
            "description": "Properties before modification. This member is null for new users and for deleted users.",
            "$ref": "#/components/schemas/ReportInfoUserProps"
          }
        },
        "description": "Additional report information for modified user."
      },
      "BResult_1132956238": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserInfo"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BResult_1754570852": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/CheckoutWorkflowHistoryResult"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "WorkFlowHead": {
        "type": "object",
        "properties": {
          "flowId": {
            "type": "integer",
            "description": "Workflow ID",
            "format": "int32"
          },
          "tStamp": {
            "type": "string",
            "description": "Timestamp The format is JJJJ.MM.DD.hh.mm.\nss"
          },
          "guid": {
            "type": "string",
            "description": "GUID"
          },
          "status": {
            "type": "integer",
            "description": "Status, !\u003d 0 means deleted",
            "format": "int32"
          },
          "type": {
            "type": "integer",
            "description": "Workflow type.",
            "format": "int32"
          },
          "actServerId": {
            "type": "string",
            "description": "The current sever ID (resp. replication branch) where the workflow can be condinued."
          },
          "parentWorkflow": {
            "type": "integer",
            "description": "Id of the main workflow.",
            "format": "int32"
          },
          "callNodeId": {
            "type": "integer",
            "description": "The call node id of the main workflow, which call this sub workflow.",
            "format": "int32"
          },
          "tStampSync": {
            "type": "string",
            "description": "Timestamp of this object\u0027s last export by the replication."
          }
        },
        "description": "Helperclass to access the DB table workflowtemplhead, workflowactivedochead, ..."
      },
      "BRequest_IXServicePortIF_checkoutCryptInfos": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_PluginService_getPlugin": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "symbolicName": {
            "type": "string"
          }
        }
      },
      "FeedService": {
        "type": "object"
      },
      "BRequest_FeedService_findHashTags": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindHashTagInfo"
          }
        }
      },
      "MapToMapValue": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/MapValue"
        }
      },
      "ProcessInfo": {
        "type": "object",
        "properties": {
          "delStatus": {
            "type": "integer",
            "description": "pass 0 for valid (undeleted) nodes, \u0026gt;0 otherwise.",
            "format": "int32"
          },
          "desc": {
            "type": "string",
            "description": "Holds the user defined description of a specific call. This member must not be null or empty."
          },
          "errorMode": {
            "type": "integer",
            "description": "From ProcessInfoC: ERRORMODE_ALL, ERRORMODE_SKIP_SUBTREE, ERRORMODE_SKIP_PROCINFO or ERRORMODE_CRITICAL_ONLY.",
            "format": "int32"
          },
          "ignoreDocuments": {
            "type": "boolean",
            "description": "processing flag for documents."
          },
          "ignoreStructures": {
            "type": "boolean",
            "description": "processing flag for structure elements."
          },
          "lockZ": {
            "description": "Use this parameter to access potentially locked nodes.",
            "$ref": "#/components/schemas/LockZ"
          },
          "procAcl": {
            "description": "Prefix processing, valid ProcessAcl data.",
            "$ref": "#/components/schemas/ProcessAcl"
          },
          "procFulltext": {
            "description": "Prefix processing, valid ProcessFulltext data.",
            "$ref": "#/components/schemas/ProcessFulltext"
          },
          "procCountElem": {
            "description": "Prefix processing count all elements",
            "$ref": "#/components/schemas/ProcessCountElements"
          },
          "procMoveDocumentsToStoragePath": {
            "description": "Move documents to storage path.",
            "$ref": "#/components/schemas/ProcessMoveDocumentsToStoragePath"
          },
          "procCopyElements": {
            "description": "Copy the elements into other archive location.",
            "$ref": "#/components/schemas/ProcessCopyElements"
          },
          "procMsgMax": {
            "type": "integer",
            "description": "Maximum amount of recorded errors in procMsgs; from ProcessInfoC: PROCMSGMAX.",
            "format": "int32"
          },
          "procMsgs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "procReplSet": {
            "description": "Prefix processing, valid ProcessReplSet data.",
            "$ref": "#/components/schemas/ProcessReplSet"
          },
          "procScript": {
            "description": "Either prefix or postfix processing.",
            "$ref": "#/components/schemas/ProcessScript"
          },
          "forceOperation": {
            "type": "boolean",
            "description": "Defines, if the data allways have to be written"
          },
          "inclReferences": {
            "type": "boolean",
            "description": "Process references (logical copies) too."
          },
          "procReleaseLock": {
            "description": "Release the locks on processed elements.",
            "$ref": "#/components/schemas/ProcessReleaseLock"
          },
          "procInheritKeywording": {
            "description": "Inherit keywording.",
            "$ref": "#/components/schemas/ProcessInheritKeywording"
          }
        },
        "description": "Specific processing information for each node of processTrees(...) or processFindResults(...).\nThe operations will be\n for existence (not null) in order of their appearance in ProcessInfo. Some of the underlying structures may allow\n toggling between prefix and postfix processing when used with processTrees.\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "FindActivityInfo": {
        "type": "object",
        "properties": {
          "objId": {
            "type": "string",
            "description": "Find by object ID. Find activities assigned to this object. Optional."
          },
          "senderId": {
            "type": "string",
            "description": "Find activities created by this user. Can be set to a user ID, user GUID or user name. Optional."
          },
          "receiverId": {
            "type": "string",
            "description": "Find activities created for this receiver. Can be set to a user ID, user GUID or user name. Optional."
          },
          "senderOrReceiver": {
            "type": "boolean",
            "description": "Search for sender or receiver. Combine the senderId and receiverId by logical OR operation."
          },
          "inclGroup": {
            "type": "boolean",
            "description": "Search for all groups of sender and receiver too."
          },
          "inclDeputy": {
            "type": "boolean",
            "description": "Search for the activities of the deputized users too."
          },
          "inclDeleted": {
            "type": "boolean",
            "description": "Find activities for deleted folders and documents too."
          }
        },
        "description": "This class specifies constraints for the API function\n{@link IXServicePortIF#findFirstActivities(ClientInfo, FindActivityInfo, int, ActivityZ)}.\n \u003cp\u003e\n By default, the members of this class are combined by AND. If {@link #senderOrReceiver} is set, senderId and\n receiverId are combined by OR.\n \u003c/p\u003e\n \u003cp\u003e\n If neither senderId nor receiverId is set, the function findFirstActivities collects all activities that can be read\n by the current session.\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_processOcr": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ocrInfo": {
            "$ref": "#/components/schemas/OcrInfo"
          }
        }
      },
      "ListOfAspectLine": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AspectLine"
        }
      },
      "BResult_1485735592": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/UserInfo"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_HealthCheckService_update": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "hci": {
            "$ref": "#/components/schemas/HealthCheckInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_logout": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ArrayOfNote": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Note"
        }
      },
      "BRequest_IXServicePortIF_findFirstSubscriptions": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindSubscriptionInfo"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "subsZ": {
            "$ref": "#/components/schemas/SubscriptionZ"
          }
        }
      },
      "ArrayListOfWFNodeHistory": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WFNodeHistory"
        }
      },
      "BRequest_IXServicePortIF_copySord": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "newParentId": {
            "type": "string"
          },
          "objId": {
            "type": "string"
          },
          "copyInfo": {
            "$ref": "#/components/schemas/CopyInfo"
          },
          "copySordZ": {
            "$ref": "#/components/schemas/CopySordZ"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteUserProfile": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userProfile": {
            "$ref": "#/components/schemas/UserProfile"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "MapDataC": {
        "type": "object",
        "properties": {
          "lnValue": {
            "type": "integer",
            "description": "Maximum length of map item value.",
            "format": "int32"
          },
          "lnKey": {
            "type": "integer",
            "description": "Maximum length of map item key.",
            "format": "int32"
          },
          "lnId": {
            "type": "integer",
            "description": "Maximum length of map id.",
            "format": "int32"
          },
          "lnBlob": {
            "type": "integer",
            "description": "Maximum length of blob value.\n1048576 Bytes",
            "format": "int32"
          }
        },
        "description": "Constant class for MapData"
      },
      "AclItemC": {
        "type": "object",
        "properties": {
          "TYPE_GROUP": {
            "type": "integer",
            "description": "ACL item for group.",
            "format": "int32"
          },
          "TYPE_USER": {
            "type": "integer",
            "description": "ACL item for user.",
            "format": "int32"
          },
          "TYPE_KEY": {
            "type": "integer",
            "description": "ACL item for key.",
            "format": "int32"
          },
          "TYPE_INHERIT": {
            "type": "integer",
            "description": "ACL item to inherit rights.",
            "format": "int32"
          },
          "TYPE_OWNER": {
            "type": "integer",
            "description": "ACL item to set rights for the owner.",
            "format": "int32"
          },
          "TYPE_PARTICIPANTS": {
            "type": "integer",
            "description": "ACL item to set rights for the workflow participants. Only used for workflows.",
            "format": "int32"
          },
          "ACL_EVERYONE_RAW": {
            "type": "string",
            "description": "String representation of an ACL entry for group \"Everyone\" with full access."
          },
          "ACL_EVERYONE": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          }
        },
        "description": "\u003cp\u003e\nTypes of ACL items.\n \u003c/p\u003e"
      },
      "ListOfEActionType": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EActionType"
        }
      },
      "BRequest_IXServicePortIF_createNote2": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          },
          "noteType": {
            "type": "integer",
            "format": "int32"
          },
          "templId": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutEsSettings": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "License": {
        "type": "object",
        "properties": {
          "backup": {
            "type": "boolean",
            "description": "Backup enabled."
          },
          "cold": {
            "type": "boolean",
            "description": "COLD"
          },
          "demoVersion": {
            "type": "boolean",
            "description": "Demo version."
          },
          "dispatchFolder": {
            "type": "boolean",
            "description": "Dispatch folder (Versendemappe)"
          },
          "domea": {
            "type": "boolean",
            "description": "DOMEA"
          },
          "emailOnly": {
            "type": "boolean",
            "description": "EMail"
          },
          "features": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "fultext": {
            "type": "boolean",
            "description": "Fulltext enabled."
          },
          "httpServer": {
            "type": "boolean",
            "description": "HTTP DocServer"
          },
          "indexServer": {
            "type": "boolean",
            "description": "Indexserver"
          },
          "limitedIg": {
            "type": "boolean",
            "description": "Limited Internet Gateway"
          },
          "limitedVersion": {
            "type": "boolean",
            "description": "Limited version."
          },
          "nbOfIgLicenses": {
            "type": "integer",
            "description": "Number of ELO Internet Gateway users.",
            "format": "int32"
          },
          "nbOfServerLicenses": {
            "type": "integer",
            "description": "Number of server licenses.",
            "format": "int32"
          },
          "professional": {
            "type": "boolean",
            "description": "True for ELOprofessional"
          },
          "replication": {
            "type": "boolean",
            "description": "Replication enabled."
          },
          "sapALink": {
            "type": "boolean",
            "description": "SAPALINK interface"
          },
          "serno": {
            "type": "string",
            "description": "License key."
          },
          "signature": {
            "type": "boolean",
            "description": "SIGNATURE"
          },
          "stack": {
            "type": "boolean",
            "description": "STACK"
          },
          "tobid": {
            "type": "boolean",
            "description": "Tobit"
          },
          "xmlImport": {
            "type": "boolean",
            "description": "XML-Import"
          },
          "nbOfFulltextLangs": {
            "type": "integer",
            "description": "Number of languages for which linguistic processing can be used during fulltext indexing.",
            "format": "int32"
          },
          "licenseOptions": {
            "description": "License options as name-value pairs.",
            "$ref": "#/components/schemas/MapToString"
          },
          "licenseFileContent": {
            "type": "string",
            "description": "License file content."
          },
          "licenseValid": {
            "type": "boolean",
            "description": "True, if license is valid."
          },
          "validityDate": {
            "type": "string",
            "description": "License is valid until this date. This valid is null if the license does not expire.",
            "format": "date-time"
          }
        },
        "description": "\u003cp\u003e\nThis class contains license information.\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "PublicDownload": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The download ID."
          },
          "remaining": {
            "type": "integer",
            "description": "The download count.",
            "format": "int32"
          },
          "expiration": {
            "type": "string",
            "description": "The expired time."
          },
          "timeStamp": {
            "type": "string",
            "description": "The time stamp."
          },
          "docId": {
            "type": "integer",
            "description": "The document ID.",
            "format": "int32"
          },
          "objId": {
            "type": "integer",
            "description": "The object ID.",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "description": "The user ID.",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "description": "The download URL"
          },
          "fileName": {
            "type": "string",
            "description": "The fileName in the download url. It is readonly."
          },
          "attachmentCode": {
            "type": "string",
            "description": "Indicates whether the download is inline or as attachment. this field is ignored in ELO 11.03 and ongoing versions."
          }
        },
        "description": "This class describes the public download information.\n\u003cp\u003e\n Internal use.\n \u003c/p\u003e"
      },
      "WFCollectNode": {
        "type": "object",
        "properties": {
          "activateDateIso": {
            "type": "string",
            "description": "Date the node was activated"
          },
          "active": {
            "type": "boolean",
            "description": "Is the node active or not?"
          },
          "flowId": {
            "type": "integer",
            "description": "Workflow id",
            "format": "int32"
          },
          "flowName": {
            "type": "string",
            "description": "Workflow name"
          },
          "inUseDateIso": {
            "type": "string",
            "description": "Date the node was set to \u003ci\u003eIn Use\u003c/i\u003e"
          },
          "nodeId": {
            "type": "integer",
            "description": "Node identifier",
            "format": "int32"
          },
          "nodeName": {
            "type": "string",
            "description": "Description/processing instructions for the workflow node"
          },
          "objGuid": {
            "type": "string",
            "description": "Object GUID of the object for which the workflow is started.\nThis member will be set only if a search is run via\n \u003ccode\u003efindFirstTasks\u003c/code\u003e or \u003ccode\u003efindNextTasks\u003c/code\u003e. In this case it is equal to the GUID of\n {@link UserTask#sord}."
          },
          "objId": {
            "type": "integer",
            "description": "Object id of the object for which the workflow is started.",
            "format": "int32"
          },
          "objType": {
            "type": "integer",
            "description": "Object type of the object for which the workflow is started. (1 for cabinet, 2 for folder, etc.\n)",
            "format": "int32"
          },
          "prio": {
            "type": "integer",
            "description": "Node priority",
            "format": "int32"
          },
          "terminateDateIso": {
            "type": "string",
            "description": "Date the node was completed/terminated"
          },
          "userId": {
            "type": "integer",
            "description": "User number of the user for whom the workflow node is intended.",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "User name of the user for whom the workflow node is intended."
          },
          "overTimeLimit": {
            "type": "boolean",
            "description": "True, if the node exceeds the time limit."
          },
          "completionDateIso": {
            "type": "string",
            "description": "Date the workfow was completed"
          },
          "userDelayDateIso": {
            "type": "string",
            "description": "The workflow node is deferred until this date. Not valid for template workflows. Only valid for person nodes.\nELO\n date format."
          },
          "flowStatus": {
            "type": "string",
            "description": "Workflow status.\nThis member is only valid when this object is returned by the findFirstTasks or findNextTasks\n functions."
          },
          "timeLimitIso": {
            "type": "string",
            "description": "Node must be completed until this date.\nThis member is only valid when this object is returned by the\n findFirstTasks or findNextTasks functions."
          },
          "timeLimitEscalations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFTimeLimit"
            }
          },
          "workflowOwnerId": {
            "type": "integer",
            "description": "Workflow owner ID.\nThis member is only valid when this object is returned by the findFirstTasks or findNextTasks\n functions.",
            "format": "int32"
          },
          "workflowOwnerName": {
            "type": "string",
            "description": "Workflow owner name.\nThis member is only valid when this object is returned by the findFirstTasks or findNextTasks\n functions."
          },
          "designDepartmentId": {
            "type": "integer",
            "description": "ID of the user that was assigned to the node when the workflow started.",
            "format": "int32"
          },
          "designDepartmentName": {
            "type": "string",
            "description": "Name of the user that was assigned to the node when the workflow started."
          },
          "nodeComment": {
            "type": "string",
            "description": "Node description."
          },
          "objName": {
            "type": "string",
            "description": "Sord name."
          },
          "timeLimit": {
            "type": "integer",
            "description": "Time limit in minutes.",
            "format": "int32"
          },
          "timeLimitUserId": {
            "type": "integer",
            "description": "The ID of the user that should be informed, if the time-limit is exceeded.\nThe Indexserver does not send any\n notification to the user. The client application is responsible for doing this.",
            "format": "int32"
          },
          "timeLimitUserName": {
            "type": "string",
            "description": "User name for timeLimitUserId; When writing a workflow with checkinWorkFlow, this value has preceedence before\ntimeLimitUserId. Set timeLimitUserName to an empty string, if timeLimitUserId should be used."
          },
          "timeLimitsWorkflow": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFTimeLimit"
            }
          },
          "activateDateWorkflowIso": {
            "type": "string",
            "description": "Workflow start date."
          },
          "formSpec": {
            "type": "string",
            "description": "Same as {@link WFNode#formSpec}."
          },
          "overTimeLimitAny": {
            "type": "boolean",
            "description": "Indicates whether the workflow is an escalation."
          },
          "hidden": {
            "type": "boolean",
            "description": "Indicates whether this workflow is hidden."
          },
          "nodeNameTranslationKey": {
            "type": "string",
            "description": "Translation-keyword for nodeName."
          },
          "nodeCommentTranslationKey": {
            "type": "string",
            "description": "Translation-keyword for nodeComment."
          },
          "flowNameTranslationKey": {
            "type": "string",
            "description": "Translation-keyword for workflow name."
          },
          "label": {
            "type": "string",
            "description": "Display name by forwarding"
          },
          "properties": {
            "type": "string",
            "description": "Node properties"
          },
          "parentFlowId": {
            "type": "integer",
            "description": "ID of the parent workflow.",
            "format": "int32"
          },
          "labelTranslationKey": {
            "type": "string",
            "description": "Translation-keyword for {@link WFCollectNode#label}."
          },
          "callNodeId": {
            "type": "integer",
            "description": "The call node id of the main workflow, which call this sub workflow.",
            "format": "int32"
          },
          "access": {
            "type": "integer",
            "description": "Access rights to the active workflow for the current user. A combination of LUR_* constants. Read-only.",
            "format": "int32"
          }
        },
        "description": "\u003cp\u003e\nData used to display a workflow node int the task view.\n \u003c/p\u003e\n \u003cp\u003e\n This class bundles the data which is required for displaying a workflow node. The class is used by\n \u003ccode\u003efindFirstTasks\u003c/code\u003e\n \u003c/p\u003e"
      },
      "BRequest_HealthCheckService_computeDoubleValue": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "hciValueName": {
            "type": "string"
          },
          "hciUpdateValue": {
            "type": "number",
            "format": "double"
          },
          "hciUpdateOperation": {
            "$ref": "#/components/schemas/HealthCheckValueOperation"
          }
        }
      },
      "BRequest_IXServerEvents_onReadSord": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "doc": {
            "$ref": "#/components/schemas/Document"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_endEditWorkFlowNode": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "nFlowId": {
            "type": "integer",
            "format": "int32"
          },
          "nNodeId": {
            "type": "integer",
            "format": "int32"
          },
          "bTerminate": {
            "type": "boolean"
          },
          "bCancel": {
            "type": "boolean"
          },
          "sName": {
            "type": "string"
          },
          "sComment": {
            "type": "string"
          },
          "arrEnterNodesIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "EloFtOpt": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "DB column: optid",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "description": "DB column: optval"
          },
          "remark": {
            "type": "string",
            "description": "DB column: remark"
          }
        },
        "description": "Internal class."
      },
      "BResult_1401065069": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/UserProfile"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_FeedService_checkinAction": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "actionZ": {
            "$ref": "#/components/schemas/ActionZ"
          }
        }
      },
      "BRequest_IXServicePortIF_getWebDAVPathFromObjID2": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "options": {
            "$ref": "#/components/schemas/GetWebDAVPathOptions"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinDocMaskLineTemplate": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "dmlt": {
            "$ref": "#/components/schemas/DocMaskLineTemplate"
          },
          "dmltZ": {
            "$ref": "#/components/schemas/DocMaskLineTemplateZ"
          },
          "options": {
            "$ref": "#/components/schemas/CheckInDocMaskLineTemplateOptions"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteDocMask": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "maskId": {
            "type": "string"
          },
          "assignMaskId": {
            "type": "string"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutColors": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BResult_1963952629": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MapDomain"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "SetOfMasterDataE": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MasterDataE"
        }
      },
      "BRequest_IXServerEvents_getAppInfo": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutPreviewImageURLs": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "previewImageInfo": {
            "$ref": "#/components/schemas/PreviewImageInfo"
          }
        }
      },
      "HashMapToHashTag": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/HashTag"
        }
      },
      "AndOperator": {
        "type": "object",
        "properties": {
          "queryObjectList": {
            "description": "List of QueryObjects which are and combined.",
            "$ref": "#/components/schemas/ListOfQueryObject"
          }
        },
        "description": "This operator contains a list of QueryObjects and concatenates them with an \"AND\" operation.\nThis means, a document\n is returned if all of the QueryObjects are present in the document."
      },
      "EloIxOpt": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "DB column: optname"
          },
          "ixId": {
            "type": "string",
            "description": "DB column: ixid"
          },
          "value": {
            "type": "string",
            "description": "DB column: optval"
          }
        },
        "description": "Internal class."
      },
      "UpDownloadUsage": {
        "type": "object",
        "properties": {
          "API": {
            "description": "Event called from client application via API.",
            "$ref": "#/components/schemas/UpDownloadUsage"
          },
          "INTERN": {
            "description": "Event called from internal process. An internal process is e.g. import or export.",
            "$ref": "#/components/schemas/UpDownloadUsage"
          }
        },
        "description": "This enumeration defines constants that describe, from where an event in {@link DocumentEvents} is called."
      },
      "ArrayOfMapHistItem": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MapHistItem"
        }
      },
      "FindByAcl": {
        "type": "object",
        "properties": {
          "distinctAcl": {
            "type": "boolean",
            "description": "Return a list of unique ACL entries.\nThe ACL entries are wrapped in arbitary Sord objects which are returned in\n FindResult.sords. This functionality can be combinded with a FindChildren object to return all ACLs used in a sub\n tree."
          },
          "acls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Find objects by ACL"
      },
      "HttpRequestInfo": {
        "type": "object",
        "properties": {
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "cookies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "requestParams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "requestURI": {
            "type": "string",
            "description": "Value of the request URI. HttpServletRequest.\ngetRequestURI()"
          },
          "requestURL": {
            "type": "string",
            "description": "Value of the request URL. HttpServletRequest.\ngetRequestURL()"
          }
        },
        "description": "This class contains information from the HttpServletRequest received by the Indexserver servlet"
      },
      "BRequest_IXServicePortIF_reloadScripts": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "PurgeSettings": {
        "type": "object",
        "properties": {
          "dayLimit": {
            "type": "integer",
            "description": "Original documents older than the specified number of days are deleted (0 or higher), e.g.\n0 for no limit, 1 for 24\n hours, 365 for a year",
            "format": "int32"
          },
          "pathId": {
            "type": "integer",
            "description": "Possible path restriction for filing paths: \u003cbr\u003e\n0: include all paths \u003cbr\u003e\n 1 and higher: only include a path with this ID where documents should be deleted",
            "format": "int32"
          },
          "fileCheckMode": {
            "type": "integer",
            "description": "The original and the backup document can be compared before cleanup.\nPossible values (1 to 3) are defined in\n PurgeSettingsC.",
            "format": "int32"
          },
          "startHour": {
            "type": "integer",
            "description": "When processing should take place: \u003cbr\u003e\nSTART_EVERY_HOUR: when the purge task is starting and then every 60 minutes \u003cbr\u003e\n 0 to 23: hour of the day, such as 8:00 p.m.",
            "format": "int32"
          },
          "excludePathIds": {
            "description": "List of path ids to exclude from purging if pathId\u003d0 is set.",
            "$ref": "#/components/schemas/ListOfInteger"
          }
        },
        "description": "This class represents the purge settings of the ELOdm purge task"
      },
      "BRequest_IXServicePortIF_getSessionInfos": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "params": {
            "$ref": "#/components/schemas/SessionInfoParams"
          }
        }
      },
      "ExecuteScriptResult": {
        "type": "object",
        "properties": {
          "returnedString": {
            "type": "string",
            "description": "Return value as string."
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message."
          },
          "errorLine": {
            "type": "integer",
            "description": "Line where the error occured.",
            "format": "int32"
          },
          "errorColumn": {
            "type": "integer",
            "description": "Column where the error occured.",
            "format": "int32"
          }
        },
        "description": "The function executeScript returns an object of this class to provide returned information or error information."
      },
      "BRequest_IXServerEvents_onAfterCheckinNotes": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          },
          "sords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sord"
            }
          },
          "noteC": {
            "type": "string"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ProcessInheritKeywording": {
        "type": "object",
        "description": "This class of keywording."
      },
      "BRequest_IXServicePortIF_getEditInfoFromESW": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "fileDatas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileData"
            }
          },
          "eswOptions": {
            "$ref": "#/components/schemas/EditInfoEswOptions"
          }
        }
      },
      "BResult_1701141707": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reminder"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "ArrayOfKeyValue": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/KeyValue"
        }
      },
      "BRequest_IXServicePortIF_getUserNames": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "checkoutUsersZ": {
            "$ref": "#/components/schemas/CheckoutUsersZ"
          }
        }
      },
      "ServerInfoDMC": {
        "type": "object",
        "properties": {
          "STOREMODE_BASEPATH_MASK": {
            "type": "integer",
            "description": "This bitmask selects the lower two bits of the ServerInfoDM.storeMode.\nThis bits are equal to one of the\n STOREMODE_BASEPATH_* constants.",
            "format": "int32"
          },
          "STOREMODE_BASEPATH_FILL_UP": {
            "type": "integer",
            "description": "Fill up base paths subsequently.",
            "format": "int32"
          },
          "STOREMODE_BASEPATH_ROUNDROBIN": {
            "type": "integer",
            "description": "Fill base paths by round robin algorithm.",
            "format": "int32"
          }
        },
        "description": "Constants used by the members of the class ServerInfoDM."
      },
      "ArrayOfOrgUnitInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/OrgUnitInfo"
        }
      },
      "LicenseInfo": {
        "type": "object",
        "properties": {
          "customerName": {
            "type": "string",
            "description": "Customer name."
          },
          "moduleName": {
            "type": "string",
            "description": "Module name."
          },
          "licenseKey": {
            "type": "string",
            "description": "License key."
          }
        },
        "description": "License information to be checked with\n{@link IXServicePortIF#checkLicense(ClientInfo, LicenseInfo)}."
      },
      "FindReportInfo": {
        "type": "object",
        "properties": {
          "endDateIso": {
            "type": "string",
            "description": "End date (UTC)"
          },
          "erpCodes": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "objId": {
            "type": "string",
            "description": "Object ID or GUID"
          },
          "orderBy": {
            "type": "string",
            "description": "Can contain an SQL ORDER BY clause."
          },
          "searchId": {
            "type": "string",
            "description": "reserved."
          },
          "startDateIso": {
            "type": "string",
            "description": "Start date (UTC)"
          },
          "timeoutSeconds": {
            "type": "integer",
            "description": "Specifies the time limit for the search. If the limit is exceeded, the search is interruped.\n\u003ccode\u003etimeoutSeconds\u003d0\u003c/code\u003e means that the search has no time limit.",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "description": "The search is ended once this number of objects have been found.\nA value of \u003ccode\u003e0\u003c/code\u003e sets no constraint to\n the number of objects.",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "description": "User ID or name."
          },
          "findLastEntryBeforeEndDate": {
            "type": "boolean",
            "description": "Find the last entry before the given {@link #endDateIso}. This option e.g.\nallows to find the user permissions at\n the given {@link #endDateIso}. Therefore, set\n \u003ccode\u003eerpCodes \u003d new int[] { ReportOptionsC.ERP_LOGOPENARC, ReportOptionsC.ERP_LOGUSERDATA };\u003c/code\u003e."
          },
          "extra1": {
            "type": "string",
            "description": "Specifies the extra1 value. Only Integer values are allowed for this element."
          }
        },
        "description": "Objects of this class specify the selection criteria for report entries in \u003ccode\u003efindReport\u003c/code\u003e.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ArrayOfWFCollectNode": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WFCollectNode"
        }
      },
      "FeedDataC": {
        "type": "object",
        "properties": {
          "mbGuid": {
            "type": "string",
            "description": "Member bit: Feed GUID.\nDB column: feedguid"
          },
          "lnGuid": {
            "type": "integer",
            "description": "Column length: Feed GUID.\nDB column: feedguid",
            "format": "int32"
          },
          "mbCreateDateIso": {
            "type": "string",
            "description": "Member bit: Create date.\nDB column: createdateiso"
          },
          "lnCreateDateIso": {
            "type": "integer",
            "description": "Column length: Create date.\nDB column: createdateiso",
            "format": "int32"
          },
          "mbTStamp": {
            "type": "string",
            "description": "Member bit: Time stamp.\nDB column: feedtstamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "Column length: Time stamp.\nDB column: feedtstamp",
            "format": "int32"
          },
          "mbObjGuid": {
            "type": "string",
            "description": "Member bit: GUID of the associated Sord object.\nDB column: objguid"
          },
          "lnObjGuid": {
            "type": "integer",
            "description": "Column length: GUID of the associated Sord object.\nDB column: objguid",
            "format": "int32"
          },
          "mbTStampSync": {
            "type": "string",
            "description": "Member bit: Timestamp of this object\u0027s last export by the replication.\nDB column: feedtstampsync"
          },
          "lnTStampSync": {
            "type": "integer",
            "description": "Column length: Timestamp of this object\u0027s last export by the replication.\nDB column: feedtstampsync",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of Feed\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ListOfInvalidateCacheInfoParam": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/InvalidateCacheInfoParam"
        }
      },
      "ListOfArchivValue": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ArchivValue"
        }
      },
      "UserProfileData": {
        "type": "object",
        "properties": {
          "user": {
            "type": "integer",
            "description": "User ID.\nDB column: userid",
            "format": "int32"
          },
          "key": {
            "type": "string",
            "description": "Option key.\nDB column: optkey"
          },
          "value": {
            "type": "string",
            "description": "Option value.\nDB column: optvalue"
          }
        },
        "description": "Internal class."
      },
      "BResult_1088095067": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslateTerm"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "UpDownloadKind": {
        "type": "object",
        "properties": {
          "VERSION": {
            "description": "Document version. This kind is also used for attachments in download events, see {@link #ATTACHMENT}.",
            "$ref": "#/components/schemas/UpDownloadKind"
          },
          "ATTACHMENT": {
            "description": "Document attachment. This kind is only detected in upload events.\nCurrently, download events for attachments are\n detected as {@link #VERSION}.",
            "$ref": "#/components/schemas/UpDownloadKind"
          },
          "FULLTEXT": {
            "description": "Fulltext content.",
            "$ref": "#/components/schemas/UpDownloadKind"
          },
          "PREVIEW": {
            "description": "Document preview.",
            "$ref": "#/components/schemas/UpDownloadKind"
          },
          "SIGNATURE": {
            "description": "Document version signature.",
            "$ref": "#/components/schemas/UpDownloadKind"
          }
        },
        "description": "This enum defines constants to distinguish between different kinds of file data assigned to a document."
      },
      "ConflictHandlingE": {
        "type": "object",
        "properties": {
          "RETAIN": {
            "$ref": "#/components/schemas/ConflictHandlingE"
          },
          "OVERRIDE": {
            "$ref": "#/components/schemas/ConflictHandlingE"
          },
          "TSTAMP": {
            "$ref": "#/components/schemas/ConflictHandlingE"
          }
        },
        "description": "FIXME: add javadoc"
      },
      "BRequest_IXServerEvents_onSendFeedToISearch": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "feedPosts": {
            "$ref": "#/components/schemas/ListOfFeedPost"
          }
        }
      },
      "HashTagRelation": {
        "type": "object",
        "properties": {
          "hashtagGuid": {
            "type": "string",
            "description": "Guid of the HashTag."
          },
          "actionGuid": {
            "type": "string",
            "description": "Guid of the Action in which the HashTag is used."
          },
          "tStamp": {
            "type": "string",
            "description": "Timestamp for replication."
          },
          "status": {
            "type": "integer",
            "description": "Status.",
            "format": "int32"
          }
        },
        "description": "This class represents the relation between HashTags and Actions."
      },
      "ReminderDataC": {
        "type": "object",
        "properties": {
          "mbId": {
            "type": "string",
            "description": "DB column: wvident"
          },
          "mbObjId": {
            "type": "string",
            "description": "DB column: parentid"
          },
          "mbReceiverId": {
            "type": "string",
            "description": "DB column: userowner"
          },
          "mbSenderId": {
            "type": "string",
            "description": "DB column: userfrom"
          },
          "mbPromptDate": {
            "type": "string",
            "description": "DB column: wvdate"
          },
          "mbCreateDate": {
            "type": "string",
            "description": "DB column: createdate"
          },
          "mbDueDate": {
            "type": "string",
            "description": "DB column: duedate"
          },
          "mbPrio": {
            "type": "string",
            "description": "DB column: prio"
          },
          "mbActionCode": {
            "type": "string",
            "description": "DB column: action"
          },
          "mbLockId": {
            "type": "string",
            "description": "DB column: wvlock"
          },
          "mbObjType": {
            "type": "string",
            "description": "DB column: parenttype"
          },
          "mbName": {
            "type": "string",
            "description": "DB column: short"
          },
          "lnName": {
            "type": "integer",
            "description": "DB column: short",
            "format": "int32"
          },
          "mbDesc": {
            "type": "string",
            "description": "DB column: wvdesc"
          },
          "lnDesc": {
            "type": "integer",
            "description": "DB column: wvdesc",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of Reminder\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "FindResultAccessMode": {
        "type": "object",
        "properties": {
          "RANDOM": {
            "description": "Find results are cached inside Indexserver.\nThis value allows to call a findNext-function for already delivered\n results. The client application has random access to all results as long as findClose has not been called.",
            "$ref": "#/components/schemas/FindResultAccessMode"
          },
          "SEQUENTIAL": {
            "description": "Find results may not be cached inside Indexserver.\nA findNext-function can only address results that have not\n already been delivered. The client application has to sequentially read the results. This mode can save memory on\n the server.",
            "$ref": "#/components/schemas/FindResultAccessMode"
          }
        },
        "description": "This constants are used to control the caching of find results."
      },
      "BResult_755261279": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "ProcessReplSet": {
        "type": "object",
        "properties": {
          "addReplSets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          },
          "andReplSets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          },
          "setReplSets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          },
          "subReplSets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          }
        },
        "description": "Replication sets to be added to/removed from an object.\nThe replication set parameter must refer to existing objects\n that may contain empty lists. Null values are not allowed.\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BResult_1700162512": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/FioResult"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "ActivityProjectC": {
        "type": "object",
        "properties": {
          "mbOptions": {
            "type": "string"
          },
          "SYSTEM": {
            "type": "string",
            "description": "Reserved. This name is used internally only. Do not use this name in your code."
          },
          "DEFAULT": {
            "type": "string",
            "description": "Default project name."
          },
          "REQUEST": {
            "type": "string",
            "description": "Activity for observing documents and folders."
          },
          "NOTIFY": {
            "type": "string",
            "description": "Activity used to notify about a new document version or new sub-item."
          }
        },
        "description": "Constants for class ActivityProject."
      },
      "BRequest_IXServicePortIF_checkinReport": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "report": {
            "$ref": "#/components/schemas/ReportInfo"
          },
          "reserved": {
            "$ref": "#/components/schemas/CheckinReportInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_openEventBus": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "params": {
            "$ref": "#/components/schemas/EventBusParams"
          }
        }
      },
      "BRequest_IXServicePortIF_configurePurge": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "purgeSettings": {
            "$ref": "#/components/schemas/PurgeSettings"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinSordPath": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "parentId": {
            "type": "string"
          },
          "sords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sord"
            }
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          }
        }
      },
      "ObjHistC": {
        "type": "object",
        "properties": {
          "mbHistGuid": {
            "type": "string",
            "description": "Member bit: Serialisation version ID DB column: objhistguid"
          },
          "lnHistGuid": {
            "type": "integer",
            "description": "Column length: Serialisation version ID DB column: objhistguid",
            "format": "int32"
          },
          "mbTimeStampUTC": {
            "type": "string",
            "description": "DB column: objhistts"
          },
          "lnTimeStampUTC": {
            "type": "integer",
            "description": "DB column: objhistts",
            "format": "int32"
          },
          "mbObjGuid": {
            "type": "string",
            "description": "DB column: objguid"
          },
          "lnObjGuid": {
            "type": "integer",
            "description": "DB column: objguid",
            "format": "int32"
          },
          "mbUserNo": {
            "type": "string",
            "description": "DB column: objuser"
          },
          "mbUserName": {
            "type": "string",
            "description": "DB column: username"
          },
          "lnUserName": {
            "type": "integer",
            "description": "DB column: username",
            "format": "int32"
          },
          "mbHistSource": {
            "type": "string",
            "description": "DB column: objhistsrc"
          },
          "mbTimeStampLocal": {
            "type": "string",
            "description": "DB column: objhistlocts"
          },
          "lnTimeStampLocal": {
            "type": "integer",
            "description": "DB column: objhistlocts",
            "format": "int32"
          },
          "mbWorkStation": {
            "type": "string",
            "description": "DB column: objhistwks"
          },
          "lnWorkStation": {
            "type": "integer",
            "description": "DB column: objhistwks",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of SordHist\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "HashSetOfString": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "ActionDataC": {
        "type": "object",
        "properties": {
          "mbGuid": {
            "type": "string",
            "description": "Member bit: Action GUID.\nDB column: actionguid"
          },
          "lnGuid": {
            "type": "integer",
            "description": "Column length: Action GUID.\nDB column: actionguid",
            "format": "int32"
          },
          "mbRawType": {
            "type": "string",
            "description": "Member bit: Action type.\nDB column: actiontype"
          },
          "mbFeedGuid": {
            "type": "string",
            "description": "Member bit: Feed GUID.\nDB column: feedguid"
          },
          "lnFeedGuid": {
            "type": "integer",
            "description": "Column length: Feed GUID.\nDB column: feedguid",
            "format": "int32"
          },
          "mbParentGuid": {
            "type": "string",
            "description": "Member bit: Parent action GUID.\nDB column: parentguid"
          },
          "lnParentGuid": {
            "type": "integer",
            "description": "Column length: Parent action GUID.\nDB column: parentguid",
            "format": "int32"
          },
          "mbUserGuid": {
            "type": "string",
            "description": "Member bit: User GUID.\nDB column: userguid"
          },
          "lnUserGuid": {
            "type": "integer",
            "description": "Column length: User GUID.\nDB column: userguid",
            "format": "int32"
          },
          "mbCreateDateIso": {
            "type": "string",
            "description": "Member bit: Create date.\nDB column: createdateiso"
          },
          "lnCreateDateIso": {
            "type": "integer",
            "description": "Column length: Create date.\nDB column: createdateiso",
            "format": "int32"
          },
          "mbUpdateDateIso": {
            "type": "string",
            "description": "Member bit: Update date.\nDB column: updatedateiso"
          },
          "lnUpdateDateIso": {
            "type": "integer",
            "description": "Column length: Update date.\nDB column: updatedateiso",
            "format": "int32"
          },
          "mbChangeCounter": {
            "type": "string",
            "description": "Member bit: Counts the number of updates.\nDB column: changecounter"
          },
          "mbText": {
            "type": "string",
            "description": "Member bit: Comment text.\nDB column: actiontext"
          },
          "lnText": {
            "type": "integer",
            "description": "Column length: Comment text.\nDB column: actiontext",
            "format": "int32"
          },
          "mbDocVersionGuid": {
            "type": "string",
            "description": "Member bit: GUID of the associated document version.\nDB column: docversionguid"
          },
          "lnDocVersionGuid": {
            "type": "integer",
            "description": "Column length: GUID of the associated document version.\nDB column: docversionguid",
            "format": "int32"
          },
          "mbWorkflowGuid": {
            "type": "string",
            "description": "Member bit: GUID of the associated workflow.\nDB column: workflowguid"
          },
          "lnWorkflowGuid": {
            "type": "integer",
            "description": "Column length: GUID of the associated workflow.\nDB column: workflowguid",
            "format": "int32"
          },
          "mbTStamp": {
            "type": "string",
            "description": "Member bit: Time stamp.\nDB column: actiontstamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "Column length: Time stamp.\nDB column: actiontstamp",
            "format": "int32"
          },
          "mbAcl": {
            "type": "string",
            "description": "Member bit: Raw ACL representation.\nDB column: actionacl"
          },
          "lnAcl": {
            "type": "integer",
            "description": "Column length: Raw ACL representation.\nDB column: actionacl",
            "format": "int32"
          },
          "mbTStampSync": {
            "type": "string",
            "description": "Member bit: Timestamp of this object\u0027s last export by the replication.\nDB column: actiontstampsync"
          },
          "lnTStampSync": {
            "type": "integer",
            "description": "Column length: Timestamp of this object\u0027s last export by the replication.\nDB column: actiontstampsync",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of Action\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "DateRoundE": {
        "type": "object",
        "properties": {
          "NONE": {
            "$ref": "#/components/schemas/DateRoundE"
          },
          "YEAR": {
            "$ref": "#/components/schemas/DateRoundE"
          },
          "MONTH": {
            "$ref": "#/components/schemas/DateRoundE"
          },
          "DAY": {
            "$ref": "#/components/schemas/DateRoundE"
          },
          "HOUR": {
            "$ref": "#/components/schemas/DateRoundE"
          },
          "MINUTE": {
            "$ref": "#/components/schemas/DateRoundE"
          }
        },
        "description": "\u003cp\u003e\nEnum for rounding DateValues.\n \u003c/p\u003e\n It defines if a date should be rounded to year, month, day, hour or minute."
      },
      "FioService": {
        "type": "object"
      },
      "LicenseCounter": {
        "type": "object",
        "properties": {
          "JAVA_CLIENT": {
            "type": "integer",
            "format": "int32"
          },
          "WINWOS_CLIENT": {
            "type": "integer",
            "format": "int32"
          },
          "FULL_USER": {
            "type": "integer",
            "format": "int32"
          },
          "IX_USER": {
            "type": "integer",
            "format": "int32"
          },
          "DELETED_USER": {
            "type": "integer",
            "format": "int32"
          },
          "FREE_USER": {
            "type": "integer",
            "format": "int32"
          },
          "userInfo": {
            "description": "User object.",
            "$ref": "#/components/schemas/UserInfo"
          },
          "accessMap": {
            "description": "License counters. Counter 0 contains the number of writes from a full client.",
            "$ref": "#/components/schemas/HashMapToInteger"
          },
          "sumAccess": {
            "type": "integer",
            "format": "int32"
          },
          "disabled": {
            "type": "boolean",
            "description": "True, if the user has been inactive for 30 days."
          },
          "countType": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "License counters of a user."
      },
      "BRequest_IXServicePortIF_cleanupStop": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ArrayOfOcrRect": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/OcrRect"
        }
      },
      "BRequest_IXServicePortIF_checkoutReplNames": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_executeScript": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "params": {
            "$ref": "#/components/schemas/ExecuteScriptParams"
          }
        }
      },
      "SordPaths": {
        "type": "object",
        "properties": {
          "sordPaths": {
            "$ref": "#/components/schemas/ListOfSordPath"
          }
        }
      },
      "BResult_498630295": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/MapToString"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "NotifyServerInfo": {
        "type": "object",
        "properties": {
          "scanCount": {
            "type": "integer",
            "description": "The number of scanned documents.",
            "format": "int32"
          },
          "ocrCount": {
            "type": "integer",
            "description": "The number of documents for which OCR was processed.",
            "format": "int32"
          }
        },
        "description": "This class is used in IXServicePortIF.\nnotifyServer to describe which operation(s) has (have) been processed by the\n client application."
      },
      "BRequest_IXServerEvents_onBeforeCheckinNotes": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          },
          "sords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sord"
            }
          },
          "noteC": {
            "type": "string"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BResult_494610451": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/Notification"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "ColorDataInternC": {
        "type": "object",
        "properties": {
          "mbId": {
            "type": "string",
            "description": "DB column: colorno"
          },
          "mbName": {
            "type": "string",
            "description": "DB column: colorname"
          },
          "lnName": {
            "type": "integer",
            "description": "DB column: colorname",
            "format": "int32"
          },
          "mbRGB": {
            "type": "string",
            "description": "DB column: colorid"
          },
          "mbStatus": {
            "type": "string",
            "description": "DB column: colorstatus"
          },
          "mbGuid": {
            "type": "string",
            "description": "Member bit: GUID DB column: colorguid"
          },
          "lnGuid": {
            "type": "integer",
            "description": "Column length: GUID DB column: colorguid",
            "format": "int32"
          },
          "mbTStamp": {
            "type": "string",
            "description": "Member bit: TStamp DB column: colortstamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "Column length: TStamp DB column: colortstamp",
            "format": "int32"
          },
          "mbTStampSync": {
            "type": "string",
            "description": "Member bit: Timestamp of this object\u0027s last export by the replication.\nDB column: colortstampsync"
          },
          "lnTStampSync": {
            "type": "integer",
            "description": "Column length: Timestamp of this object\u0027s last export by the replication.\nDB column: colortstampsync",
            "format": "int32"
          },
          "mbFlags": {
            "type": "string",
            "description": "Member bit: This color should not be selectable in client applications.\nDB column: colorflags"
          },
          "mbPackageName": {
            "type": "string",
            "description": "Member bit: Package name of ColorData DB column: packagename"
          },
          "lnPackageName": {
            "type": "integer",
            "description": "Column length: Package name of ColorData DB column: packagename",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of ColorData\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "SordTypeZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from SordTypeC class."
          }
        },
        "description": "\u003cp\u003e\nThis class encapsulates the constants of \u003ccode\u003eSordTypeC\u003c/code\u003e\n \u003c/p\u003e\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "Sord": {
        "type": "object",
        "properties": {
          "SReg": {
            "type": "string",
            "description": "Version numer of the current work version."
          },
          "TStamp": {
            "type": "string",
            "description": "Timestamp of the last change. The format is JJJJ.MM.DD.hh.mm.\nss"
          },
          "acl": {
            "type": "string",
            "description": "Access control language in coded form. The checkInSord method must set either acl or aclItems.\naclItems has\n priority."
          },
          "att": {
            "type": "integer",
            "description": "Id of the current attachment version. Read-only.",
            "format": "int32"
          },
          "childCount": {
            "type": "integer",
            "description": "Estimated sum of the sub-entries in a directory.\nThis does not take account of any access rights assigned to the\n entries. This property should only be used to determine whether the directory has additional entries. Read-only.",
            "format": "int32"
          },
          "doc": {
            "type": "integer",
            "description": "Read-only. Id of the current document version.",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "description": "GUID."
          },
          "histCount": {
            "type": "integer",
            "description": "Number of document versions.",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "Numeric ID.",
            "format": "int32"
          },
          "info": {
            "type": "integer",
            "description": "RESERVED",
            "format": "int32"
          },
          "key": {
            "type": "integer",
            "description": "RESERVED",
            "format": "int32"
          },
          "kind": {
            "type": "integer",
            "description": "Colour",
            "format": "int32"
          },
          "lockId": {
            "type": "integer",
            "description": "This is the id of the user who has a lock on the object.\nTo know whether the Sord or the Document is locked, see\n lockIdSord or lockIdDoc respectively. The object is locked using checkoutSord with the LOCK.YES, LOCK.SORD or\n LOCK.DOC parameter. Read-only.",
            "format": "int32"
          },
          "mask": {
            "type": "integer",
            "description": "The id of the filing mask used to archive the sord. Read-only.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The short description/name for the object."
          },
          "ownerId": {
            "type": "integer",
            "description": "The id of the owner of the object.\nMain-administrators can assign an owner ID for new Sords in\n {@link IXServicePortIF#checkinSord(ClientInfo, Sord, SordZ, LockZ)} and\n {@link IXServicePortIF#checkinSordPath(ClientInfo, String, Sord[], SordZ)}. This member is read-only for\n Non-adminstrators or existing Sords.",
            "format": "int32"
          },
          "parentId": {
            "type": "integer",
            "description": "Id of the parent object(archive heirachy) of the sord object.\nRead-only",
            "format": "int32"
          },
          "path": {
            "type": "integer",
            "description": "Filing path for the document manager. Only valid for documents. Read-only.\n\u003cp\u003e\n If this Sord object is obtained by a call to checkoutSord or checkoutDoc with a database lock (e.g. LockC.IF_FREE),\n this member contains the storage path specified in the associated keywording form (DocMask.DPath). If the\n keywording form does not define a path, the default storage path is returned (ServerInfoDM.basisStoreIds[0]).\n Hence, the current value of the database column objekte.objpath is not used as default for new versions anymore.\n \u003c/p\u003e\n \u003cp\u003e\n If this Sord object is obtained by a call without a lock, e.g. from findFirstSords, this value should not be used\n anymore. The storage path of the work version should be used instead, which can be found in Sord.docVersion.pathId.\n \u003c/p\u003e",
            "format": "int32"
          },
          "type": {
            "type": "integer",
            "description": "The type of sord object.\nFolder objects: 0 \u0026lt; type \u0026lt; LBT_DOCUMENT Document objects: LBT_DOCUMENT \u0026lt;\u003d type\n \u0026lt; LBT_DOCUMENT_MAX",
            "format": "int32"
          },
          "vtRep": {
            "type": "integer",
            "description": "RESERVED",
            "format": "int32"
          },
          "IDateIso": {
            "type": "string",
            "description": "ISO encoded internal (archive defined) date."
          },
          "XDateIso": {
            "type": "string",
            "description": "ISO encoded external (user defined) date."
          },
          "access": {
            "type": "integer",
            "description": "The current users access rights for this Sord. Returns a combination of AccessC.LUR_ constants. Read-only.\nIs\n returned when SordC.mbAcl is set in checkoutSord.",
            "format": "int32"
          },
          "aclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "delDateIso": {
            "type": "string",
            "description": "ISO encoded expiry date. Only users having right AccessC.FLAG_EDITDUEDATE are allowed to set the expiry date.\nOnce\n the expiry date is set, it cannot be set to a date before the original expiry date."
          },
          "deleted": {
            "type": "boolean",
            "description": "Indicates whether the sord has been deleted or not."
          },
          "desc": {
            "type": "string",
            "description": "The (visible) memo text. If the value starts with a \"!\" this member can define a dynamic folder.\nThis is a folder\n which contents are filled by an arbitrary SQL statement."
          },
          "details": {
            "description": "Object encapsulates flags.",
            "$ref": "#/components/schemas/SordDetails"
          },
          "docVersion": {
            "description": "Version information of current document work version. Read-only.",
            "$ref": "#/components/schemas/DocVersion"
          },
          "hiddenText": {
            "type": "string",
            "description": "Hidden text that must not be displayed to the user."
          },
          "linksComeIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SordLink"
            }
          },
          "linksGoOut": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SordLink"
            }
          },
          "lockName": {
            "type": "string",
            "description": "The name of the user who has locked the object. Read-only."
          },
          "objKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjKey"
            }
          },
          "ownerName": {
            "type": "string",
            "description": "Name of the owner (read-only)."
          },
          "parentIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "refPaths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArcPath"
            }
          },
          "replNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplSetName"
            }
          },
          "replSet": {
            "description": "Replication sets. Binary encoded information.\nBoth replNames and replSet contain the information determining in\n which replications sets the object is contain in. replNames has priority when checking the object in.",
            "$ref": "#/components/schemas/ReplSet"
          },
          "maskName": {
            "type": "string",
            "description": "Name of keywording form. This value is translated into the language given by {@link ClientInfo#language}.\nIt cannot\n be used as a parameter in Indexserver API functions. Use {@link Sord#getMask()} to specify the Keywording form in\n API functions. Read-only."
          },
          "attVersion": {
            "description": "Work version of the attachment.",
            "$ref": "#/components/schemas/DocVersion"
          },
          "deleteDateIso": {
            "type": "string",
            "description": "The Sord is deleted at this date. ClientInfo determines the Timezone.\n\u003cp\u003e\n Is undefined if isDeleted() returns false.\n \u003c/p\u003e"
          },
          "lockIdSord": {
            "type": "integer",
            "description": "This is the id of the user who has a lock on the object (not the document).\nThe object is locked using checkoutSord\n with the LOCK.SORD parameter. Read-only.",
            "format": "int32"
          },
          "lockIdDoc": {
            "type": "integer",
            "description": "This is the id of the user who has a lock on the document (not the object).\nThe object is locked using checkoutSord\n with the LOCK.DOC parameter. Read-only.",
            "format": "int32"
          },
          "lockNameSord": {
            "type": "string",
            "description": "The name of the user who has locked the object. Read-only."
          },
          "lockNameDoc": {
            "type": "string",
            "description": "The name of the user who has locked the document. Read-only."
          },
          "TStampSync": {
            "type": "string",
            "description": "Timestamp of this object\u0027s last export by the replication."
          },
          "TStampAcl": {
            "type": "string",
            "description": "Timestamp of the last ACL change. The format is JJJJ.MM.DD.hh.mm.\nss"
          },
          "TStampAclSync": {
            "type": "string",
            "description": "Timestamp of this object\u0027s ACLs last export by the replication."
          },
          "deleteUser": {
            "type": "integer",
            "description": "The Sord is deleted at this user.\n\u003cp\u003e\n Is undefined if isDeleted() returns false.\n \u003c/p\u003e",
            "format": "int32"
          },
          "aspects": {
            "description": "Index values.\nThis member is only valid, if the associated keywording form {@link DocMask} is organized as\n {@link DocMask#dataOrganisation} \u003d {@link DocMaskC#DATA_ORGANISATION_ASPECT}.\u003cbr\u003e\n The outer key is the name of an {@link AspectAssoc}. The value is a list of maps.\u003cbr\u003e\n This list can contain more than one element according to cardinality of the aspect association.\u003cbr\u003e\n The inner maps are aspect objects, i.e. maps from lineKey of the corresponding aspect to an object of class\n {@link IndexValue} which holds the actual data for an aspect line.",
            "$ref": "#/components/schemas/MapToListOfMapToIndexValue"
          },
          "regionId": {
            "type": "integer",
            "description": "If the sord is contained in a region (i.e.\nlies below an object in archive tree that has an associated keywording\n form which defines a region), this value contains the numeric Id of that region sord. This value is only valid, if\n the associated keywording form {@link DocMask} is organized as {@link DocMask#dataOrganisation} \u003d\n {@link DocMaskC#DATA_ORGANISATION_ASPECT}.",
            "format": "int32"
          }
        },
        "description": "\u003cp\u003e\nIndexing information of an archive entry.\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_DocumentProcessor_process": {
        "type": "object",
        "properties": {
          "originalStream": {
            "$ref": "#/components/schemas/ContentStream"
          }
        }
      },
      "VtDoc": {
        "type": "object",
        "properties": {
          "objId": {
            "type": "integer",
            "description": "DB column: objid",
            "format": "int32"
          },
          "docId": {
            "type": "integer",
            "description": "DB column: objdoc",
            "format": "int32"
          },
          "code": {
            "type": "integer",
            "description": "DB column: vtcode",
            "format": "int32"
          }
        },
        "description": "Internal class."
      },
      "WClientC": {
        "type": "object",
        "properties": {
          "NEW_VERSION": {
            "type": "integer",
            "format": "int32"
          },
          "WORK_VERSION_CHANGED": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BResult_784089396": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/IXExceptionData"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "ArrayOfReportInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ReportInfo"
        }
      },
      "UserReportC": {
        "type": "object",
        "properties": {
          "mbNOTHING": {
            "type": "string",
            "description": "nothing"
          },
          "mbINCLUDE_USERNAMES": {
            "type": "string",
            "description": "The user names."
          },
          "mbINCLUDE_RIGHTS": {
            "type": "string",
            "description": "Rights in numerical form"
          },
          "mbINCLUDE_COUNTER": {
            "type": "string",
            "description": "The counter"
          },
          "FULL_USERREPORT": {
            "$ref": "#/components/schemas/UserReportZ"
          },
          "NONE": {
            "$ref": "#/components/schemas/UserReportZ"
          }
        },
        "description": "\u003cp\u003e\nConstants for user report information. Each member of this class with prefix \"mb\" has a corresponding member in class\n \u003ccode\u003eReportInfo\u003c/code\u003e\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_configureFulltext": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userId": {
            "type": "string"
          },
          "opts": {
            "$ref": "#/components/schemas/FulltextConfig"
          }
        }
      },
      "BRequest_IXServicePortIF_controlBackup": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "controlBackupInfo": {
            "$ref": "#/components/schemas/ControlBackupInfo"
          }
        }
      },
      "UserReportZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string"
          }
        },
        "description": "\u003cp\u003e\nThis class encapsulates the constants of \u003ccode\u003eUserReportC\u003c/code\u003e\n \u003c/p\u003e"
      },
      "ActivityProject": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "description": "Project name. This can be one of the predefined project names: ActivityProjectC.DEFAULT, ActivityProjectC.\nREQUEST,\n ActivityProjectC.NOTIFY. Or an arbitrary name for an application defined use case. The name must be unique because\n it is internally used as an ID. It has to start with a letter and must only contain letters, numbers or\n underscores."
          },
          "major": {
            "type": "integer",
            "description": "Reserved.",
            "format": "int32"
          },
          "minor": {
            "type": "integer",
            "description": "Reserved.",
            "format": "int32"
          },
          "optValue": {
            "type": "string",
            "description": "Reserved."
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityOption"
            }
          },
          "protectedProject": {
            "type": "boolean",
            "description": "Activity project is protected."
          },
          "lockedWhenFinished": {
            "type": "boolean",
            "description": "Activity project is locked when finished."
          }
        },
        "description": "This class represents an activity project. An activity project is a template for an activity."
      },
      "BRequest_IXServicePortIF_deleteWorkflowTemplate": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "flowId": {
            "type": "string"
          },
          "versionId": {
            "type": "string"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ListOfContextTerm": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ContextTerm"
        }
      },
      "CheckinOrgUnitInfo": {
        "type": "object",
        "description": "Objects of this class specify the selection criteria for \u003ccode\u003echeckinOrgUnits\u003c/code\u003e.\n\u003cp\u003e\n Copyright: Copyright (c) 2013\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "QueryOperator": {
        "type": "object",
        "description": "A QueryOperator is used to include or exclude QueryObjects from a search and to concatenate\nQueryObjects.\u003cbr\u003e\n Like this, complex queries can be build."
      },
      "BRequest_IXServicePortIF_deleteReminders": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "reminderIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "Feed": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "description": "Feed GUID."
          },
          "createDateIso": {
            "type": "string",
            "description": "Create date. It holds the ISO formatted create date in the time zone of the client application.\nIn order to convert\n this value into a date object, invoke function {@link de.elo.ix.client.IXConnection#isoToDate}."
          },
          "tStamp": {
            "type": "string",
            "description": "Time stamp. Time stamp of creation or modification."
          },
          "objGuid": {
            "type": "string",
            "description": "GUID of the associated Sord object."
          },
          "TStampSync": {
            "type": "string",
            "description": "Timestamp of this object\u0027s last export by the replication."
          }
        },
        "description": "This class represents a document feed. Each Sord can have at most one Feed object.\nA Feed contains of a list of\n Action objects which can be user comments, comments generated by scripts and actions generated by the system. The\n Feed object acts like a header for the list of actions. Its main purpose is the mapping between feed actions and a\n Sord object. In order to receive a feed of a Sord object inclusive all actions, call function\n {@link FeedService#findFirstActions(de.elo.ix.client.ClientInfo, FindActionsInfo, int, ActionZ)}."
      },
      "BRequest_IXServicePortIF_checkinUser": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userInfo": {
            "$ref": "#/components/schemas/UserInfo"
          },
          "checkinUsersZ": {
            "$ref": "#/components/schemas/CheckinUsersZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "CheckoutUsersZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from CheckoutUsersC class."
          }
        },
        "description": "This class encapsulates the constants of CheckoutUsersC.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "FindWorkflowInfo": {
        "type": "object",
        "properties": {
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string",
            "description": "Workflow name. If not null and not empty, it the search is restricted to workflows named like this value.\nIt may\n contain wildcards, e. g. *bill*."
          },
          "type": {
            "description": "Workflow type. This parameter controls the search for nodes of either active or finished workflows.\nIf this\n parameter is null, the search is performed on active workflows.",
            "$ref": "#/components/schemas/WFTypeZ"
          },
          "overTimeLimit": {
            "type": "boolean",
            "description": "Collect only WFs that exceeded the time limit. The entire WF or one of its nodes must be over time."
          },
          "objId": {
            "type": "string",
            "description": "Object ID. Active and finished workflows only.\nIf not null and not empty, only workflows assigned to this object\n are returned."
          },
          "startDateIso": {
            "type": "string",
            "description": "Start date. If not null and not empty, workflows started at this date or in this date range are returned.\nIt can be\n a single date value or a time span of two ISO dates separated by \"...\". To return workflows with a start date up to\n a given time, set startDateIso\u003d\"...\"+time (the first time value can be omitted)."
          },
          "completionDateIso": {
            "type": "string",
            "description": "Completion date. If not null and not empty, workflows completed at this date or in this date range are returned.\nOnly valid if \u003ccode\u003ewfType\u003dFINISHED\u003c/code\u003e. A time span can be specified by using \"...\"."
          },
          "templateId": {
            "type": "string",
            "description": "Workflow template ID or name.\nIf not null and not empty, the result is constrained to workflows based on this\n workflow template."
          },
          "inclDeleted": {
            "type": "boolean",
            "description": "Only template workflows: include deleted templates."
          },
          "ownerIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "activeUserIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "inclHidden": {
            "type": "boolean",
            "description": "If true, include hidden/technical workflows with the result."
          },
          "sordZ": {
            "description": "Return the associated Sord objects to the selected workflows.\nIf this member is not null, the Sord objects to the\n selected workflows are read from the database. The Sord objects can be found in {@link FindResult#sords} in a\n random order. A Sord object is returned only once, even if there are more workflows assigned to the Sord. The Sord\n objects contain the elements defined in this element selector as valid members.",
            "$ref": "#/components/schemas/SordZ"
          },
          "excludeUserGroups": {
            "type": "boolean",
            "description": "If true, only select workflows of the users. The group workflows are excluded."
          },
          "findResultAccessMode": {
            "description": "Describes how the client application will access the results.",
            "$ref": "#/components/schemas/FindResultAccessMode"
          }
        },
        "description": "This class contains the search criteria for selecting workflows.\n\u003cp\u003e\n Copyright: Copyright (c) 2008, 2010\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "MapHistItem": {
        "type": "object",
        "properties": {
          "histGuid": {
            "type": "string",
            "description": "GUID of the assigned SordHist object."
          },
          "key": {
            "type": "string",
            "description": "Map key."
          },
          "value": {
            "type": "string",
            "description": "Map value. An empty value means, that the map item has been deleted."
          },
          "blobValue": {
            "description": "BLOB value.",
            "$ref": "#/components/schemas/FileData"
          }
        },
        "description": "This class provides the version information for a map attribute that has been modified."
      },
      "BRequest_IXServicePortIF_findNextNotes": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "searchId": {
            "type": "string"
          },
          "idx": {
            "type": "integer",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "noteZ": {
            "$ref": "#/components/schemas/NoteZ"
          }
        }
      },
      "BRequest_IXServicePortIF_findNextWorkflows": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "searchId": {
            "type": "string"
          },
          "index": {
            "type": "integer",
            "format": "int32"
          },
          "maxResults": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ArrayOfEvent": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Event"
        }
      },
      "DoubleRangeValue": {
        "type": "object",
        "properties": {
          "from": {
            "$ref": "#/components/schemas/DoubleSingleValue"
          },
          "to": {
            "$ref": "#/components/schemas/DoubleSingleValue"
          }
        },
        "description": "\u003cp\u003e\nClass to commit a range filter of double values.\n \u003c/p\u003e\n \n \u003cp\u003e\n To perform an open range query (e.g. from now to infinite), only submit either a value for from or to\n \u003c/p\u003e"
      },
      "BRequest_SystemInformation_archivReport": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "si": {
            "$ref": "#/components/schemas/SystemInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_findBackgroundThreads": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findBackgroundThreadOptions": {
            "$ref": "#/components/schemas/FindBackgroundThreadOptions"
          }
        }
      },
      "FindDirectC": {
        "type": "object",
        "properties": {
          "FIELD_DESC": {
            "type": "string",
            "description": "ELO iSearch field: descripton (memo text, Sord.\ndesc)"
          },
          "FIELD_EXT": {
            "type": "string",
            "description": "ELO iSearch field: document file extension without leading dot (DocVersion.\next)"
          },
          "FIELD_OWNER": {
            "type": "string",
            "description": "ELO iSearch field: owner name (Sord.\nownerName)"
          },
          "FIELD_TSTAMP": {
            "type": "string",
            "description": "ELO iSearch field: last modified time stamp, UTC (Sord.\ntStamp)"
          },
          "FIELD_GUID": {
            "type": "string",
            "description": "ELO iSearch field: GUID (Sord.\nguid)"
          },
          "FIELD_ID": {
            "type": "string",
            "description": "ELO iSearch field: ID (Sord.\nid)"
          },
          "FIELD_DELDATE": {
            "type": "string",
            "description": "ELO iSearch field: ISO formatted delete date, UTC (Sord.\ndelDateIso)"
          },
          "FIELD_DELDATE_YEAR": {
            "type": "string",
            "description": "ELO iSearch field: Year of delete date, UTC (Sord.\ndelDateIso)"
          },
          "FIELD_DELDATE_MONTH": {
            "type": "string",
            "description": "ELO iSearch field: Month of delete date, UTC (Sord.delDateIso), always 2 characters, e.g.\n01\n for January."
          },
          "FIELD_IDATE": {
            "type": "string",
            "description": "ELO iSearch field: ISO formatted archiving date, UTC (Sord.\niDateIso)"
          },
          "FIELD_IDATE_YEAR": {
            "type": "string",
            "description": "ELO iSearch field: Year of archiving date, UTC (Sord.\niDateIso)"
          },
          "FIELD_IDATE_MONTH": {
            "type": "string",
            "description": "ELO iSearch field: Month of archiving date, UTC (Sord.iDateIso), always 2 characters, e.g.\n01\n for January."
          },
          "FIELD_XDATE": {
            "type": "string",
            "description": "ELO iSearch field: ISO formatted document date, UTC (Sord.\nxDateIso)"
          },
          "FIELD_XDATE_YEAR": {
            "type": "string",
            "description": "ELO iSearch field: Year of document date, UTC (Sord.\nxDateIso)"
          },
          "FIELD_XDATE_MONTH": {
            "type": "string",
            "description": "ELO iSearch field: Month of document date, UTC (Sord.xDateIso), always 2 characters, e.g.\n01\n for January."
          },
          "FIELD_MASK_ID": {
            "type": "string",
            "description": "ELO iSearch field: Keywording form ID, (Sord.\nmask)"
          },
          "FIELD_MASK_NAME": {
            "type": "string",
            "description": "ELO iSearch field: Keywording form name, (Sord.\nmaskName)"
          },
          "FIELD_NAME": {
            "type": "string",
            "description": "ELO iSearch field: short description (Sord.\nname)"
          },
          "FIELD_OWNER_ID": {
            "type": "string",
            "description": "ELO iSearch field: owner ID (Sord.\nownerId)"
          },
          "FIELD_TYPE": {
            "type": "string",
            "description": "ELO iSearch field: folder or document type (Sord.\ntype)"
          },
          "FIELD_OBJ_KEY": {
            "type": "string",
            "description": "ELO iSearch field: group name of index field (Sord.objKey[.].name, DocMask.line[.].\nkey)"
          },
          "FIELD_OBJ_KEY_TOKENIZED": {
            "type": "string",
            "description": "ELO iSearch field: group name of index field (Sord.objKey[.].name, DocMask.line[.].\nkey) This field contains\n tokenized content (linguistic processing applied)"
          },
          "FIELD_OBJ_KEY_NUMERIC": {
            "type": "string",
            "description": "Numeric Indexfields (nLINE)"
          },
          "FIELD_OBJ_KEY_DATE": {
            "type": "string",
            "description": "Date Indexfields (dLINE)"
          },
          "FIELD_DOC_SIZE": {
            "type": "string",
            "description": "Document size"
          },
          "FIELD_VERSION_NUMBER": {
            "type": "string",
            "description": "DocVersion.\nversion"
          },
          "FIELD_VERSION_COMMENT": {
            "type": "string",
            "description": "DocVersion.\ncomment"
          },
          "FIELD_VERSION_OWNER": {
            "type": "string",
            "description": "DocVersion.\nownerId"
          }
        },
        "description": "Constants used in class FindDirect"
      },
      "BRequest_IXServicePortIF_runEsProcess": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "processName": {
            "type": "string"
          },
          "startProcess": {
            "type": "boolean"
          }
        }
      },
      "BResult_1330120264": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/License"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "EloDmOptC": {
        "type": "object",
        "properties": {
          "INSTANCE_ALL": {
            "type": "string",
            "description": "Instance name for options related to all ELOdm instances."
          }
        },
        "description": "Internal class"
      },
      "BResult_884364631": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplSetName"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_getServerInfo": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "CheckoutUsersC": {
        "type": "object",
        "properties": {
          "bsetNOTHING": {
            "type": "string",
            "description": "Internal use only."
          },
          "bsetBY_IDS": {
            "type": "string",
            "description": "Internal use only."
          },
          "bsetALL_USERS": {
            "type": "string",
            "description": "Internal use only."
          },
          "bsetALL_GROUPS": {
            "type": "string",
            "description": "Internal use only."
          },
          "bsetALL_USERS_AND_GROUPS": {
            "type": "string",
            "description": "Internal use only."
          },
          "bsetMEMBERS_OF_GROUP": {
            "type": "string",
            "description": "Internal use only."
          },
          "bsetUSERS_OF_GROUP": {
            "type": "string",
            "description": "Internal use only."
          },
          "bsetMEMBERS_OF_GROUP_RECURSIVE": {
            "type": "string",
            "description": "Internal use only."
          },
          "bsetUSERS_OF_GROUP_RECURSIVE": {
            "type": "string",
            "description": "Internal use only."
          },
          "bsetGROUPS_OF_MEMBER": {
            "type": "string",
            "description": "Internal use only."
          },
          "bsetGROUPS_OF_MEMBER_RECURSIVE": {
            "type": "string",
            "description": "Internal use only."
          },
          "bsetSESSION_INFO": {
            "type": "string",
            "description": "Internal use only."
          },
          "bsetSUBADMINS": {
            "type": "string",
            "description": "Internal use only."
          },
          "bsetMEMBERS_OF_ORGUNIT": {
            "type": "string",
            "description": "Internal use only."
          },
          "bsetUSERS_OF_SUBADMIN": {
            "type": "string",
            "description": "Internal use only."
          },
          "bsetUSERS_OF_SUPERIOR": {
            "type": "string",
            "description": "Internal use only."
          },
          "bsetUSERS_OF_SUPERIOR_OR_SUBADMIN": {
            "type": "string",
            "description": "Internal use only."
          },
          "bsetSELECT_MASK": {
            "type": "string",
            "description": "Internal use only."
          },
          "bsetMY_USERS": {
            "type": "string",
            "description": "Internal use only."
          },
          "bsetEFFECTIVE_RIGHTS": {
            "type": "string",
            "description": "Internal use only."
          },
          "NOTHING": {
            "description": "Select no user or group. Makes sense if you only want to lock user data.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "BY_IDS": {
            "description": "Selects the user objects of the specified users. Returned user data contains effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "BY_IDS_RAW": {
            "description": "Selects the user objects of the specified users. Returned user data does not contain effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "ALL_USERS": {
            "description": "Selects all users. Returned user data contains effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "ALL_USERS_RAW": {
            "description": "Selects all users. Returned user data does not contain effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "ALL_GROUPS": {
            "description": "Selects all groups. Returned user data contains effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "ALL_GROUPS_RAW": {
            "description": "Selects all groups. Returned user data does not contain effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "ALL_USERS_AND_GROUPS": {
            "description": "Selects all users an all groups. Returned user data contains effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "ALL_USERS_AND_GROUPS_RAW": {
            "description": "Selects all users an all groups. Returned user data does not contain effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "MEMBERS_OF_GROUP": {
            "description": "Selects all members (users and groups) of the specified group.\nDoes not look for members of member groups\n recursively. Returned user data contains effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "MEMBERS_OF_GROUP_RAW": {
            "description": "Selects all members (users and groups) of the specified group.\nDoes not look for members of member groups\n recursively. Returned user data does not contain effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "USERS_OF_GROUP": {
            "description": "Selects all users of the specified group. Does not look for members of member groups recursively.\nReturned user\n data contains effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "USERS_OF_GROUP_RAW": {
            "description": "Selects all users of the specified group. Does not look for members of member groups recursively.\nReturned user\n data does not contain effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "MEMBERS_OF_GROUP_RECURSIVE": {
            "description": "Selects all members (users and groups) of the specified group.\nWalks recursively over the group members and selects\n all members directly or indirectly contained in the specified group. Returned user data contains effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "MEMBERS_OF_GROUP_RECURSIVE_RAW": {
            "description": "Selects all members (users and groups) of the specified group.\nWalks recursively over the group members and selects\n all members directly or indirectly contained in the specified group. Returned user data does not contain effective\n rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "USERS_OF_GROUP_RECURSIVE": {
            "description": "Selects all users of the specified group.\nWalks recursively over the group members and selects all users directly\n or indirectly contained in the specified group. Returned user data contains effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "USERS_OF_GROUP_RECURSIVE_RAW": {
            "description": "Selects all users of the specified group.\nWalks recursively over the group members and selects all users directly\n or indirectly contained in the specified group. Returned user data does not contain effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "GROUPS_OF_MEMBER": {
            "description": "Selects all direct groups of a user (or group). Does not look for groups recursively.\nReturned user data contains\n effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "GROUPS_OF_MEMBER_RAW": {
            "description": "Selects all direct groups of a user (or group). Does not look for groups recursively.\nReturned user data does not\n contain effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "GROUPS_OF_MEMBER_RECURSIVE": {
            "description": "Selects all direct groups of a user (or group). Walks recursively over the users groups.\nReturned user data\n contains effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "GROUPS_OF_MEMBER_RECURSIVE_RAW": {
            "description": "Selects all direct groups of a user (or group). Walks recursively over the users groups.\nReturned user data does\n not contain effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "SESSION_USERS": {
            "description": "Selects all active users.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "SESSION_USERS_RAW": {
            "description": "Selects all active users. Returned user data does not contain effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "SUBADMINS": {
            "description": "Selects all sub-administrators.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "MEMBERS_OF_ORGUNIT": {
            "description": "Selects all Members of a given Orgunit",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "USERS_OF_SUBADMIN": {
            "description": "Selects all users and group managed by the given user.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "USERS_OF_SUPERIOR": {
            "description": "Selects all users and groups where {@link UserInfo#superiorId} is either {@link FindUserInfo#userIds} or any of the\nraw groups of {@link FindUserInfo#userIds}. If the found user is a group, all raw members of this group are also\n returned.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "USERS_OF_SUPERIOR_OR_SUBADMIN": {
            "description": "Combined OR-search of {@link #USERS_OF_SUBADMIN} and {@link #USERS_OF_SUPERIOR}.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          }
        },
        "description": "\u003cp\u003e\nConstants to select users and groups\n \u003c/p\u003e"
      },
      "CryptInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Numerical ID of the encryption information. The first ID is 1.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name."
          },
          "pwd": {
            "type": "string",
            "description": "External password used for encrypting documents.\nIt is empty if this object was returned by\n \u003ccode\u003echeckoutCryptInfos\u003c/code\u003e."
          },
          "keyInfo": {
            "type": "string",
            "description": "Only for TwoFish-Encyption! Key material.\nContains the external and internal password in serialized and encrypted\n format. Only for internal use. This member is ignored in \u003ccode\u003echeckinCryptInfos\u003c/code\u003e."
          },
          "systemPwd": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "aesUserKeyInfo": {
            "type": "string"
          },
          "aesSystemKeyInfo": {
            "type": "string"
          },
          "aesUserInitVector": {
            "type": "string"
          },
          "aesSystemInitVector": {
            "type": "string"
          },
          "currentPwd": {
            "type": "string"
          },
          "currentSystemPwd": {
            "type": "string"
          },
          "systemUserId": {
            "type": "string"
          }
        },
        "description": "This class defines an encryption set."
      },
      "TranslateTermData": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "description": "GUID"
          },
          "TStamp": {
            "type": "string",
            "description": "Timestamp. Last mofified time, ISO date with dots measured in UTC The format is JJJJ.MM.DD.hh.mm.\nss"
          },
          "status": {
            "type": "integer",
            "description": "Status. The object is not deleted, if \u003ccode\u003estatus\u003c/code\u003e is -1.",
            "format": "int32"
          },
          "lang1": {
            "type": "string",
            "description": "Language 1. System language."
          },
          "lang2": {
            "type": "string",
            "description": "Language 2"
          },
          "lang3": {
            "type": "string",
            "description": "Language 3"
          },
          "lang4": {
            "type": "string",
            "description": "Language 4"
          },
          "lang5": {
            "type": "string",
            "description": "Language 5"
          },
          "lang6": {
            "type": "string",
            "description": "Language 6"
          },
          "lang7": {
            "type": "string",
            "description": "Language 7"
          },
          "lang8": {
            "type": "string",
            "description": "Language 8"
          },
          "lang9": {
            "type": "string",
            "description": "Language 9"
          },
          "TStampSync": {
            "type": "string",
            "description": "Timestamp. Timestamp of this object\u0027s last export by the replication. The format is JJJJ.MM.DD.hh.mm.\nss"
          }
        }
      },
      "BRequest_IXServicePortIF_refSord": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "oldParentId": {
            "type": "string"
          },
          "newParentId": {
            "type": "string"
          },
          "objId": {
            "type": "string"
          },
          "manSortIdx": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutEsInfo": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_notifyServer": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "msg": {
            "$ref": "#/components/schemas/NotifyServerInfo"
          }
        }
      },
      "BResult_820228328": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/EditInfo"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_PluginService_uninstall": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutEsStatus": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ReportInfo": {
        "type": "object",
        "properties": {
          "actTime": {
            "type": "integer",
            "description": "Reserved - internal function.",
            "format": "int32"
          },
          "actionNo": {
            "type": "integer",
            "description": "Action number in numeric form.",
            "format": "int32"
          },
          "extra1": {
            "type": "integer",
            "description": "Reserved - internal, dependant on actionNo.",
            "format": "int32"
          },
          "extra2": {
            "type": "integer",
            "description": "Reserved - internal, dependant on actionNo",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "description": "Identifier"
          },
          "objId": {
            "type": "integer",
            "description": "Id of the object for which the action is entered in the protocoll.",
            "format": "int32"
          },
          "sessionNo": {
            "type": "integer",
            "description": "Id of the session which carried out the action.",
            "format": "int32"
          },
          "text": {
            "type": "string",
            "description": "Reserved - internal, dependant on actionNo"
          },
          "userId": {
            "type": "integer",
            "description": "Id of the user who carried out the action.",
            "format": "int32"
          },
          "actTimeISO": {
            "type": "string",
            "description": "Time of the action in ISO format."
          },
          "action": {
            "type": "string",
            "description": "ActionNo as name."
          },
          "comment": {
            "type": "string",
            "description": "Descriptive text or details."
          },
          "userName": {
            "type": "string",
            "description": "Name of the user who carried out the action."
          },
          "extra3": {
            "type": "string",
            "description": "Reserved."
          },
          "extraInfo": {
            "type": "string",
            "description": "Extra information.\nThis member is always null for report entries written by Windows-Client or by ELOix versions\n older than 9.00.016. The type of data depends on {@link #actionNo} as shown in the following table:\n \u003ctable\u003e\n \u003ctr\u003e\n \u003ctd\u003eReportInfoC.ACT_LOGIN_IX\u003c/td\u003e\n \u003ctd\u003e{@link ReportInfoUserProps} object, member userInfo is set to the user logged on.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eReportInfoC.ACT_IX_CREATE_USER\u003c/td\u003e\n \u003ctd\u003e{@link ReportInfoUserModified} object, member newProps is set to the new user.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eReportInfoC.ACT_IX_DELETE_USER\u003c/td\u003e\n \u003ctd\u003e{@link ReportInfoUserModified} object, member newProps is set to deleted user.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eReportInfoC.ACT_IX_CHECKIN_USER\u003c/td\u003e\n \u003ctd\u003e{@link ReportInfoUserModified} object, member newProps is set to the modified values. Member oldProps is set to\n the values before modification.\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e"
          }
        },
        "description": "This class describes a report/protocol entry for an action carried out in the archive.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "HealthCheckInfoC": {
        "type": "object",
        "properties": {
          "mbName": {
            "type": "string",
            "description": "Member bit: Value name.\nDB column: name"
          },
          "lnName": {
            "type": "integer",
            "description": "Column length: Value name.\nDB column: name",
            "format": "int32"
          },
          "mbStringValue": {
            "type": "string",
            "description": "Member bit: String value.\nDB column: stringValue"
          },
          "lnStringValue": {
            "type": "integer",
            "description": "Column length: String value.\nDB column: stringValue",
            "format": "int32"
          },
          "mbDoubleValue": {
            "type": "string",
            "description": "Member bit: Numeric value.\nDB column: doubleValue"
          },
          "lnDoubleValue": {
            "type": "integer",
            "description": "Column length: Numeric value.\nDB column: doubleValue",
            "format": "int32"
          },
          "mbSampleSize": {
            "type": "string",
            "description": "Member bit: Sample size for mean values.\nDB column: sampleSize"
          },
          "lnSampleSize": {
            "type": "integer",
            "description": "Column length: Sample size for mean values.\nDB column: sampleSize",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of HealthCheckInfo\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ComputeDocumentHashInfo": {
        "type": "object",
        "properties": {
          "docId": {
            "type": "integer",
            "description": "Document ID.",
            "format": "int32"
          }
        },
        "description": "This class defines the parameters for computing a document file hash by\n{@link IXServicePortIF#computeDocumentHash(ClientInfo, ComputeDocumentHashInfo)}."
      },
      "FindActionsInfo": {
        "type": "object",
        "properties": {
          "objId": {
            "type": "string",
            "description": "Search by Sord ID, GUID, etc.\nThis value can be an ID, a GUID or an expression as defined in\n {@link de.elo.ix.client.IXServicePortIF#checkoutSord(de.elo.ix.client.ClientInfo, String, de.elo.ix.client.EditInfoZ, de.elo.ix.client.LockZ)}."
          },
          "userId": {
            "type": "string",
            "description": "Search by user ID, GUID, name."
          },
          "createDateIso": {
            "type": "string",
            "description": "Search by create date. A date range can be specified by using the default range delimiter \"...\n\" or the one defined\n in {@link de.elo.ix.client.FindOptions#getRangeDelimiter()}."
          },
          "actionTypes": {
            "description": "Search by action types. If this element is empty, actions of all types are returned.",
            "$ref": "#/components/schemas/ListOfEActionType"
          },
          "findNotifications": {
            "type": "boolean",
            "description": "Search for notifications. If this member is true, only those actions are found for which the user was notified."
          },
          "findHashTags": {
            "type": "boolean",
            "description": "Search for HashTags If this member is true, all HashTags within the action will be returned"
          },
          "findSubscriptions": {
            "type": "boolean",
            "description": "If true a Map\u0026lt;String, Subscription\u0026gt; will be set in the FindResult"
          },
          "sordZ": {
            "description": "Sord element selector.\nIf this member is not null or empty, the returned FindResult object contains the associated\n Sord objects in FindResult.sords.",
            "$ref": "#/components/schemas/SordZ"
          },
          "findResultAccessMode": {
            "description": "Describes how the client application will access the results.",
            "$ref": "#/components/schemas/FindResultAccessMode"
          }
        },
        "description": "Describes search criteria for\n{@link FeedService#findFirstActions(de.elo.ix.client.ClientInfo, FindActionsInfo, int, ActionZ)}.\n \u003cp\u003e\n If only objId is set, userId and createDateIso is empty, the entire document feed of the given object is returned.\n The (main) actions are sorted descending by create date. The answers (child actions) follow immediately their\n associated main action. Answers are sorted ascending by create date.\n \u003c/p\u003e\n \u003cp\u003e\n If any other member is also set, or if objId is combined with another member, the search combines the elements by\n logical AND. The result list contains all actions sorted descending by create date. The ordering does not distinguish\n between main actions and child actions.\n \u003c/p\u003e"
      },
      "Any": {
        "type": "object",
        "properties": {
          "type": {
            "type": "integer",
            "description": "Type. One of the type constants given in AnyC.",
            "format": "int32"
          },
          "booleanValue": {
            "type": "boolean",
            "description": "Boolean value."
          },
          "intValue": {
            "type": "integer",
            "description": "Integer value.",
            "format": "int32"
          },
          "longValue": {
            "type": "string",
            "description": "Long value."
          },
          "doubleValue": {
            "type": "number",
            "description": "Double value.",
            "format": "double"
          },
          "stringValue": {
            "type": "string",
            "description": "String value."
          },
          "objectValue": {
            "description": "Object value.",
            "$ref": "#/components/schemas/ValueClass"
          },
          "byteArray": {
            "type": "string",
            "description": "Byte array.",
            "format": "byte"
          },
          "anyArray": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Any"
            }
          }
        },
        "description": "This class is a container for one value of a serializable type."
      },
      "BRequest_IXServicePortIF_deleteEventBusSubscriber": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "subsId": {
            "type": "string"
          }
        }
      },
      "ApplyForNotificationsInfo": {
        "type": "object",
        "properties": {
          "adminMode": {
            "type": "boolean",
            "description": "Receive {@link de.elo.ix.client.notify.\nClientNotification#adminMode(ClientInfo, int)}"
          },
          "userTask": {
            "type": "boolean",
            "description": "Reserved"
          }
        },
        "description": "This class defines which notification messages the server has to send."
      },
      "BRequest_IXServicePortIF_checkoutWorkFlow": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "flowId": {
            "type": "string"
          },
          "typeZ": {
            "$ref": "#/components/schemas/WFTypeZ"
          },
          "workFlowDiagramZ": {
            "$ref": "#/components/schemas/WFDiagramZ"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_FioService_finishExport": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "options": {
            "$ref": "#/components/schemas/FioFinishOptions"
          }
        }
      },
      "BRequest_IXServicePortIF_getESWFromEditInfo": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "editInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EditInfo"
            }
          },
          "eswOptions": {
            "$ref": "#/components/schemas/EditInfoEswOptions"
          }
        }
      },
      "SubstitutionStatus": {
        "type": "object",
        "properties": {
          "DEACTIVATED": {
            "description": "A substitution which is currently not active.",
            "$ref": "#/components/schemas/SubstitutionStatus"
          },
          "ACTIVATED_BY_PERIOD": {
            "description": "A substitution which is currently active and is active because it is within a defined {@link SubstitutionPeriod}",
            "$ref": "#/components/schemas/SubstitutionStatus"
          },
          "ACTIVATED_MANUALLY": {
            "description": "A substitution which is currently active and is active because it was activated manually by calling\n{@link IXServicePortIF#activateSubstitution}()",
            "$ref": "#/components/schemas/SubstitutionStatus"
          }
        },
        "description": "The substitution status is used to inform if a substitution is currently deactivated or activated.\nIf activated, it\n also informs how it was activated (either by a {@link SubstitutionPeriod} or manually)"
      },
      "ArrayOfWFTimeLimit": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WFTimeLimit"
        }
      },
      "ArrayOfMapDomain": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MapDomain"
        }
      },
      "BRequest_IXServicePortIF_setServerInfo": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "serverInfo": {
            "$ref": "#/components/schemas/ServerInfo"
          }
        }
      },
      "BResult_1888107655": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "CounterInfoC": {
        "type": "object",
        "properties": {
          "lnName": {
            "type": "integer",
            "description": "length field for Name.",
            "format": "int32"
          }
        },
        "description": "Constants class for the CounterInfo class.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ValuesOfObjKeyOptions": {
        "type": "object"
      },
      "BRequest_IXServicePortIF_checkinNotes": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          },
          "noteZ": {
            "$ref": "#/components/schemas/NoteZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BResult_1870182600": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColorData"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteConfigFiles": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "SordTypeC": {
        "type": "object",
        "properties": {
          "MAX_FOLDER_TYPES": {
            "type": "integer",
            "description": "Maximum number of folder types (\u003d253).",
            "format": "int32"
          },
          "MAX_DOCUMENT_TYPES": {
            "type": "integer",
            "description": "Maximum number of document types (\u003d746).",
            "format": "int32"
          },
          "mbIdNameExt": {
            "type": "string",
            "description": "ID, name, extension."
          },
          "mbIconMember": {
            "type": "string",
            "description": "Return icon file data in \u003ccode\u003echeckoutSordType\u003c/code\u003e."
          },
          "mbWorkflowIconMember": {
            "type": "string",
            "description": "Return file data of workflow icon in \u003ccode\u003echeckoutSordType\u003c/code\u003e."
          },
          "mbDisabledIconMember": {
            "type": "string",
            "description": "Return file data of disabled icon in \u003ccode\u003echeckoutSordType\u003c/code\u003e."
          },
          "mbJPG": {
            "type": "string"
          },
          "mbBMP": {
            "type": "string"
          },
          "mbICO": {
            "type": "string"
          },
          "mbPNG": {
            "type": "string"
          },
          "mbNoIcons": {
            "description": "Return only ID, name, extension - no icon data.",
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "mbIconJPG": {
            "description": "Return icon file data in \u003ccode\u003echeckoutSordType\u003c/code\u003e.",
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "mbIconBMP": {
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "mbIconICO": {
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "mbIconPNG": {
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "mbIconsJPG": {
            "description": "Return file data of normal icon and disabled icon in \u003ccode\u003echeckoutSordType\u003c/code\u003e.",
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "mbIconsBMP": {
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "mbIconsICO": {
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "mbIconsPNG": {
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "mbAllJPG": {
            "description": "Return file data of normal, workflow and disabled icon in \u003ccode\u003echeckoutSordType\u003c/code\u003e.",
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "mbAllBMP": {
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "mbAllICO": {
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "mbAllPNG": {
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "GUID_SORD_TYPE_ICONS": {
            "type": "string",
            "description": "GUID for folder \"/Administration/Sord Type Icons\""
          }
        },
        "description": "Constants for folder or document types."
      },
      "BRequest_IXServicePortIF_checkinActivityProject": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "actProj": {
            "$ref": "#/components/schemas/ActivityProject"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_FeedService_registerNotify": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "feedGuid": {
            "type": "string"
          },
          "notify": {
            "$ref": "#/components/schemas/FeedNotification"
          }
        }
      },
      "BResult_847213937": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ComputeDocumentHashResult"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "ProcessCountElements": {
        "type": "object",
        "properties": {
          "countResult": {
            "description": "Result of the countprocess.",
            "$ref": "#/components/schemas/CountResult"
          }
        },
        "description": "This class make possible the count of the archive elements.\n\u003cp\u003e\n Copyright: Copyright (c) 2008\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_restoreSord": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          },
          "restoreOptions": {
            "$ref": "#/components/schemas/RestoreOptions"
          }
        }
      },
      "BResult_1535847981": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/HashSetOfHashTag"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "HealthCheckInfos": {
        "type": "object",
        "properties": {
          "infos": {
            "description": "Health check data. If returned from {@link HealthCheckService#read(de.elo.ix.client.\nClientInfo, List)}, this list\n is sorted by {@link HealthCheckInfo#getName()}.",
            "$ref": "#/components/schemas/ListOfHealthCheckInfo"
          },
          "archiveGuid": {
            "type": "string",
            "description": "Archive GUID."
          },
          "customerLicenseKeyHash": {
            "type": "string",
            "description": "MD5 hash of license key.\nThe part of the license key used to compute this hash can be obtained by\n \u003ccode\u003e\u003cpre\u003econn.getServerInfo().getLicense().getSerno();\u003c/pre\u003e\u003c/code\u003e"
          }
        },
        "description": "This class holds the values for health check evaluation."
      },
      "BRequest_IXServicePortIF_registerOcrWorker": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ocrWorker": {
            "$ref": "#/components/schemas/OcrWorker"
          }
        }
      },
      "BRequest_MyELOService_readHashTagCloud": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "info": {
            "$ref": "#/components/schemas/HtCloudInfo"
          }
        }
      },
      "CopyResult": {
        "type": "object",
        "properties": {
          "mapIdsSource2Copy": {
            "description": "Maps the Ids of the source elements to the copied element\u0027s Ids.\n\u003cp\u003e\n To reduce memory consumption, this map only contains the mapping for elements in the\n {@link NavigationInfo#startIDs} when using\n {@link IXServicePortIF#processTrees(ClientInfo, NavigationInfo, ProcessInfo)} .\n \u003c/p\u003e\n \u003cp\u003e\n In case of using {@link IXServicePortIF#processFindResult(ClientInfo, String, ProcessInfo)}, each element found by\n the search will be listed in this map!\n \u003c/p\u003e",
            "$ref": "#/components/schemas/MapToInteger"
          },
          "mapGuidsSource2Copy": {
            "description": "Maps the GUIDs of the source elements to the copied element\u0027s GUIDs.\n\u003cp\u003e\n The same rules apply as for {@link CopyResult#mapIdsSource2Copy}.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/MapToString"
          }
        },
        "description": "Results of a {@link ProcessCopyElements}-Operation."
      },
      "FindDirect": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Search query."
          },
          "searchInSordName": {
            "type": "boolean"
          },
          "searchInMemo": {
            "type": "boolean",
            "description": "\u003ci\u003eIs ignored, reserved for future use\u003c/i\u003e"
          },
          "searchInIndex": {
            "type": "boolean"
          },
          "searchInFulltext": {
            "type": "boolean"
          },
          "searchInNotes": {
            "type": "boolean",
            "description": "\u003ci\u003eIs ignored, reserved for future use\u003c/i\u003e"
          },
          "searchInVersions": {
            "type": "boolean"
          }
        },
        "description": "\u003cp\u003e\nSearch query for locating text in the archive.\n \u003c/p\u003e\n \n \u003cp\u003e\n The fulltext search is performed via iSearch. Therefore, use {@link de.elo.ix.client.esearch.FindByESearch} instead.\n The {@link #query} should be replaces by the actual query term and additional filters (e.g. DocMask) should be\n submitted by {@link de.elo.ix.client.esearch.ESearchParams#queryOperator}. The areas in which should be search should\n be set in {@link de.elo.ix.client.esearch.ESearchParams#searchIn}.\u003cbr\u003e\n Searches using this class are still executed but internally mapped to {@link de.elo.ix.client.esearch.FindByESearch}\n objects and some values might be ignored.\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_deleteMap": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "domainName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "keyNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BResult_2056457945": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ArchiveStatistics"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "OrgUnitInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "OU identifier",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "OU name"
          },
          "desc": {
            "type": "string",
            "description": "OU description."
          },
          "ouProps": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tStamp": {
            "type": "string",
            "description": "Timestamp The format is JJJJ.MM.DD.hh.mm.\nss"
          },
          "guid": {
            "type": "string",
            "description": "GUID"
          }
        },
        "description": "\u003cp\u003e\nData class containing organizational unit information data. Information includes ID, name, etc.\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2013\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_checkinUsers": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserInfo"
            }
          },
          "checkinUsersZ": {
            "$ref": "#/components/schemas/CheckinUsersZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "FindHashTagInfo": {
        "type": "object",
        "properties": {
          "hashtagGuidOrName": {
            "type": "string",
            "description": "HashTag Guid or Name"
          },
          "createDateIso": {
            "type": "string",
            "description": "Search by create date. A date range can be specified by using the default range delimiter \"...\n\" or the one defined\n in {@link de.elo.ix.client.FindOptions#getRangeDelimiter()}."
          },
          "lastUsedIso": {
            "type": "string",
            "description": "Search by last used. A date range can be specified by using the default range delimiter \"...\n\" or the one defined in\n {@link de.elo.ix.client.FindOptions#getRangeDelimiter()}."
          },
          "minCount": {
            "type": "integer",
            "description": "Filter the result by number of use.\nOnly HashTags with \u003e\u003d minCount will be returned",
            "format": "int32"
          },
          "actionZ": {
            "description": "Action element selector.",
            "$ref": "#/components/schemas/ActionZ"
          },
          "sordZ": {
            "description": "Sord element selector.",
            "$ref": "#/components/schemas/SordZ"
          },
          "findFeeds": {
            "type": "boolean",
            "description": "If true a Map\u0026lt;String, Feed\u0026gt; will be set in the FindResult.\nby default true"
          },
          "findHashTags": {
            "type": "boolean"
          },
          "findSubscriptions": {
            "type": "boolean",
            "description": "If true a Map\u0026lt;String, Subscription\u0026gt; will be set in the FindResult"
          },
          "findResultAccessMode": {
            "description": "Describes how the client application will access the results.",
            "$ref": "#/components/schemas/FindResultAccessMode"
          }
        }
      },
      "ArrayOfKeyInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/KeyInfo"
        }
      },
      "Document": {
        "type": "object",
        "properties": {
          "atts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocVersion"
            }
          },
          "docs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocVersion"
            }
          },
          "objId": {
            "type": "string",
            "description": "Object ID for the document."
          }
        },
        "description": "Document object with identifier and version arrays for the document and attachments.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "NoteC": {
        "type": "object",
        "properties": {
          "mbObjId": {
            "type": "string",
            "description": "Member objId."
          },
          "mbLockId": {
            "type": "string",
            "description": "Member lockId"
          },
          "mbNoteText": {
            "type": "string",
            "description": "Member noteText"
          },
          "mbNoteImage": {
            "type": "string",
            "description": "Member noteImage"
          },
          "mbNoteFreehand": {
            "type": "string",
            "description": "Member noteFreehand"
          },
          "mbAll": {
            "description": "All members.",
            "$ref": "#/components/schemas/NoteZ"
          },
          "mbNoDesc": {
            "description": "All members but without note text.",
            "$ref": "#/components/schemas/NoteZ"
          },
          "mbOnlyLock": {
            "description": "Only remove or set lock.",
            "$ref": "#/components/schemas/NoteZ"
          },
          "mbDeleted": {
            "type": "string"
          },
          "mbAclItems": {
            "type": "string"
          },
          "mbCreateDateIso": {
            "type": "string"
          },
          "TYPE_ANNOTATION_MARKER": {
            "type": "integer",
            "description": "Note type: highlighting rectange (filled) on the document.\n\u003cp\u003e\n If the note is assigned the colour 0xC0C0C0 the note will be interpreted by ELODM. In this case a black rectangle\n will painted on the document, using the note coordinates supplied, if the note ACL does not contain sufficient read\n access rights for the current user. This allows document contact to be blacked out for certain users The document\n must be a graphic based document, eg. tiff, bmp etc.\n \u003c/p\u003e",
            "format": "int32"
          },
          "TYPE_ANOTEW_MARKER": {
            "type": "integer",
            "description": "Use TYPE_ANNOTATION_MARKER",
            "format": "int32"
          },
          "TYPE_ANNOTATION_NOTE": {
            "type": "integer",
            "description": "Note type: annotation text",
            "format": "int32"
          },
          "TYPE_ANOTEWG_NOTE": {
            "type": "integer",
            "description": "Use TYPE_ANNOTATION_NOTE",
            "format": "int32"
          },
          "TYPE_ANNOTATION_FREEHAND": {
            "type": "integer",
            "description": "Note type: freehand line.",
            "format": "int32"
          },
          "TYPE_ANNOTATION_RECTANGLE": {
            "type": "integer",
            "description": "Note type: reserved",
            "format": "int32"
          },
          "TYPE_ANNOTATION_FILLEDRECTANGLE": {
            "type": "integer",
            "description": "Note type: draws a filled coloured box on the document, over the existing document.",
            "format": "int32"
          },
          "TYPE_ANNOTATION_HOLLOWRECTANGLE": {
            "type": "integer",
            "description": "Note type: draws a hollow rectangle (frame) on a document.",
            "format": "int32"
          },
          "TYPE_ANNOTATION_LINE": {
            "type": "integer",
            "description": "Note type: reserved",
            "format": "int32"
          },
          "TYPE_ANNOTATION_TEXT": {
            "type": "integer",
            "description": "Annotation with text but without a rectangle.\n\u003cp\u003e\n The font size in the client application has to be computed by FontInfo.height * 3.7 * resolution_in_dpi/100\n \u003c/p\u003e",
            "format": "int32"
          },
          "TYPE_ANNOTATION_FILETEXT": {
            "type": "integer",
            "description": "Note type: reserved",
            "format": "int32"
          },
          "TYPE_ANNOTATION_STAMP": {
            "type": "integer",
            "description": "Adds a stamp, such as a received date for example, to a document.\n\u003cp\u003e\n The font size in the client application has to be computed by FontInfo.height * 3.7 * resolution_in_dpi/100\n \u003c/p\u003e",
            "format": "int32"
          },
          "TYPE_ANNOTATION_NOTE_WITHFONT": {
            "type": "integer",
            "description": "Draws a filled rectangular box on a document and displays text in the box.",
            "format": "int32"
          },
          "TYPE_ANNOTATION_HORIZONTAL_LINE": {
            "type": "integer",
            "description": "Note type: horizontal line.",
            "format": "int32"
          },
          "TYPE_ANNOTATION_STRIKEOUT": {
            "type": "integer",
            "description": "Note type: strike out text",
            "format": "int32"
          },
          "TYPE_ANNOTATION_STAMP_NEW": {
            "type": "integer",
            "description": "Note type: adds a stamp, such as a received date for example, to a document.\n\u003cp\u003e\n The font size in the client application has to be computed by FontInfo.height * 2.2 * resolution_in_dpi/100\n \u003c/p\u003e",
            "format": "int32"
          },
          "TYPE_NONE": {
            "type": "integer",
            "description": "Note type: needed in FindByNotes to indicate typeless filtering",
            "format": "int32"
          },
          "TYPE_NORMAL": {
            "type": "integer",
            "description": "Note type: standard yellow note",
            "format": "int32"
          },
          "TYPE_PERSONAL": {
            "type": "integer",
            "description": "Note type: standard green note",
            "format": "int32"
          },
          "TYPE_STAMP": {
            "type": "integer",
            "description": "Note type: standard red note",
            "format": "int32"
          },
          "TYPE_NORMAL_ACL": {
            "type": "integer",
            "description": "Note type: standard ACL",
            "format": "int32"
          },
          "COLOR_ANNOTATION_MARKER_DM": {
            "type": "integer",
            "description": "This color is used for notes of type TYPE_ANNOTATION_MARKER to specify a black rectangle that is painted on the\ndocument by Document Manager.",
            "format": "int32"
          }
        },
        "description": "\u003cp\u003e\nConstants for notes.\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_findNextConfigFiles": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "searchId": {
            "type": "string"
          },
          "idx": {
            "type": "integer",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "configFileZ": {
            "$ref": "#/components/schemas/ConfigFileZ"
          }
        }
      },
      "MapToListOfString": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/ListOfString"
        }
      },
      "EventBusC": {
        "type": "object",
        "properties": {
          "BUSID_BROADCAST": {
            "type": "string",
            "description": "Broadcast bus ID. The EventBusC.\nBUSID_BROADCAST refers to a public communication channel that can used by all\n applications and users. Any user can send events to this bus and is allowed to listen to it."
          },
          "BUSID_USER": {
            "type": "string",
            "description": "User related bus ID. For each user, an event bus exists with the bus ID EventBusC.BUSID_USER + user-ID.\nAny user\n can send events to this bus but only the owning user can listen to it."
          },
          "BUSID_MAX_SYSTEM": {
            "type": "string",
            "description": "Reserved."
          },
          "EVENT_TYPE_OPEN_CHAT": {
            "type": "string",
            "description": "Open chat event type.\nEvents of this type are used to invite subscribers to open a public final static chat\n channel."
          },
          "EVENT_TYPE_CHAT": {
            "type": "string",
            "description": "Chat event type. Events of this type contain chat text."
          },
          "EVENT_TYPE_CLOSE_CHAT": {
            "type": "string",
            "description": "Close chat event type. An event of this type is sent to notify the subscribers that the chat channel (resp.\nevent\n bus) will be closed shortly."
          },
          "EVENT_TYPE_WATCH_FOLDER": {
            "type": "string",
            "description": "Watch folder event. An event of this type is sent, if the contents of a given folder have been changed.\n\u003cp\u003e\n In order to register a listener for such events, the folder to be watched has to be specified with an object ID\n expression in \u003ccode\u003eEventFilter.param2\u003c/code\u003e(see checkoutSord):\n \n \u003cpre\u003e\n \u003ccode\u003e\n IXConnection conn \u003d ...\n \n // Folder to be watched\n int folderId \u003d ...\n \n // Register listener  \n conn.getEventBusApi().getBroadcastBus().addListener( \n   EventBusC.EVENT_TYPE_WATCH_FOLDER, \n   Integer.toString(folderId) );\n \u003c/code\u003e\n \u003c/pre\u003e\n \u003c/p\u003e\n \u003cp\u003e\n For each modified Sord object in the watched folder, the client application receives one \u003ccode\u003eEvent\u003c/code\u003e,\n whereby the data members are set as follows:\n \n \u003cpre\u003e\n \u003ccode\u003e\n Event ev \u003d ...\n \n // Folder being watched\n int folderId \u003d Integer.parseInt(ev.getParam2());\n \n // Arguments \n Object[] args \u003d (Object[])AnyToObject.toObject(ev.getAny());\n \n // Inserted, updated (e.g. locked) or deleted Sord  \n Sord sord \u003d (Sord)args[0];\n \n // Valid members of args[0]\n SordZ sordMembersZ \u003d (SordZ)args[1];\n \n // What has happened: EventBusC.WATCH_INSERT, EventBusC.WATCH_UPDATE, EventBusC.WATCH_DELETE\n int what \u003d (Integer)args[2]; \n \u003c/code\u003e\n \u003c/pre\u003e\n \u003c/p\u003e\n \u003cp\u003e\n Watch folder events are sent to every current acitve connection, provided that a listener was registered for it and\n the associated user has at least read access to the changed object. It is also sent to the connection that fires\n this event.\n \u003c/p\u003e"
          },
          "WATCH_INSERT": {
            "type": "integer",
            "description": "An object was inserted.",
            "format": "int32"
          },
          "WATCH_UPDATE": {
            "type": "integer",
            "description": "An object was updated, locked or unlocked.",
            "format": "int32"
          },
          "WATCH_DELETE": {
            "type": "integer",
            "description": "An object was deleted.",
            "format": "int32"
          },
          "EVENT_OCR_REQUEST": {
            "type": "string",
            "description": "OCR Request Event. OCR Worker Processes listen to this event and process OCR on the supplied image data.\nIn order\n to listen for this event, the session user must have the permission FLAG_ADMIN."
          },
          "EVENT_OCR_RESULT": {
            "type": "string",
            "description": "OCR Finished Event. OCR Worker Process sends this event if the OCR processing is finished.\nThe client application\n initiates a OCR request by calling API function processOCR. It receives an Event ID"
          },
          "EVENT_FULLTEXT_INDEXING_STATUS_UPDATE": {
            "type": "string",
            "description": "Notify about status change in fulltext indexing."
          },
          "EVENT_TYPE_MAX_SYSTEM": {
            "type": "string",
            "description": "User defined events must have a higher type value than this limit."
          }
        },
        "description": "Constants related to the event bus API."
      },
      "BRequest_SystemInformation_userReport": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "si": {
            "$ref": "#/components/schemas/SystemInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_createNote": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          }
        }
      },
      "BResult_892356058": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/InheritKeywordingResult"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServerEvents_onBeforeTakeWorkFlowNode": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "workflow": {
            "$ref": "#/components/schemas/WFDiagram"
          },
          "node": {
            "$ref": "#/components/schemas/WFNode"
          },
          "user": {
            "$ref": "#/components/schemas/UserInfo"
          },
          "flags": {
            "type": "integer",
            "format": "int32"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_closeEventBus": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "busId": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_findFirstActivities": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindActivityInfo"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "activityZ": {
            "$ref": "#/components/schemas/ActivityZ"
          }
        }
      },
      "BResult_63967077": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ExecuteScriptResult"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinSubscription": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "subs": {
            "$ref": "#/components/schemas/Subscription"
          },
          "subsZ": {
            "$ref": "#/components/schemas/SubscriptionZ"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutSordPath": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "csi": {
            "$ref": "#/components/schemas/CheckoutSordPathInfo"
          }
        }
      },
      "BResult_1034263904": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/CombineAclResult"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_getDistinctValuesOfObjKey": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "okeyName": {
            "type": "string"
          },
          "opts": {
            "$ref": "#/components/schemas/ValuesOfObjKeyOptions"
          }
        }
      },
      "MapToBValueClass": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/BValueClass"
        }
      },
      "ReplSet": {
        "type": "object",
        "properties": {
          "dw": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "dwSync": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "objId": {
            "type": "integer",
            "description": "This replication information belongs to the archive entry with ID \u003ccode\u003eobjId\u003c/code\u003e",
            "format": "int32"
          },
          "TStamp": {
            "type": "string",
            "description": "Timestamp of the last alteration of replication sets for the corresponding archive entry.\nThe format is\n JJJJ.MM.DD.hh.mm.ss"
          },
          "TStampSync": {
            "type": "string",
            "description": "Timestamp of this object\u0027s last export by the replication."
          },
          "combiGuid": {
            "type": "string"
          }
        },
        "description": "\u003cp\u003e\nObjects of this class store the replication information of archive entries.\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_FeedService_checkoutHashTag": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "hashtagGuidOrName": {
            "type": "string"
          },
          "hstgZ": {
            "$ref": "#/components/schemas/HashTagZ"
          }
        }
      },
      "DateSingleValue": {
        "type": "object"
      },
      "BRequest_IXServicePortIF_findNextTasks": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "searchId": {
            "type": "string"
          },
          "idx": {
            "type": "integer",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BResult_607287445": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityProject"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BResult_382788180": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/Aspect"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_reload": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXServerEvents_executeRegisteredFunction": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "functionName": {
            "type": "string"
          },
          "any": {
            "$ref": "#/components/schemas/Any"
          }
        }
      },
      "AccessC": {
        "type": "object",
        "properties": {
          "FLAG_ADMIN": {
            "type": "integer",
            "description": "Main administrator, can edit all users and groups.",
            "format": "int32"
          },
          "FLAG_EDITCONFIG": {
            "type": "integer",
            "description": "Edit master data",
            "format": "int32"
          },
          "FLAG_EDITSTRUCTURE": {
            "type": "integer",
            "description": "Edit archive structure: create, edit, move archive entries.",
            "format": "int32"
          },
          "FLAG_EDITDOCS": {
            "type": "integer",
            "description": "Edit documents: checkin, checkout.",
            "format": "int32"
          },
          "FLAG_CHANGEPW": {
            "type": "integer",
            "description": "Change password.",
            "format": "int32"
          },
          "FLAG_CHANGEREV": {
            "type": "integer",
            "description": "Change the archiving mode of a document.",
            "format": "int32"
          },
          "FLAG_SUBADMIN": {
            "type": "integer",
            "description": "Administrator, can edit only the users and groups he created.",
            "format": "int32"
          },
          "FLAG_EDITWF": {
            "type": "integer",
            "description": "Edit work flows.",
            "format": "int32"
          },
          "FLAG_STARTWF": {
            "type": "integer",
            "description": "Start work flows.",
            "format": "int32"
          },
          "FLAG_DELDOC": {
            "type": "integer",
            "description": "Delete documents.",
            "format": "int32"
          },
          "FLAG_DELSTRUC": {
            "type": "integer",
            "description": "Delete archive entries.",
            "format": "int32"
          },
          "FLAG_SAPADMIN": {
            "type": "integer",
            "description": "SAP administrator.",
            "format": "int32"
          },
          "FLAG_IMPORT": {
            "type": "integer",
            "description": "Import.",
            "format": "int32"
          },
          "FLAG_EXPORT": {
            "type": "integer",
            "description": "Export.",
            "format": "int32"
          },
          "FLAG_EDITMASK": {
            "type": "integer",
            "description": "Create, edit, delete storage masks.",
            "format": "int32"
          },
          "FLAG_EDITSCRIPT": {
            "type": "integer",
            "description": "Create, edit, delete scripts.",
            "format": "int32"
          },
          "FLAG_EDITDUEDATE": {
            "type": "integer",
            "description": "Edit expiration date of archive entries.",
            "format": "int32"
          },
          "FLAG_EDITSWL": {
            "type": "integer",
            "description": "Edit catchwords.",
            "format": "int32"
          },
          "FLAG_DELREADONLY": {
            "type": "integer",
            "description": "Delete read only documents.",
            "format": "int32"
          },
          "FLAG_EDITREPL": {
            "type": "integer",
            "description": "Edit replication set assignment.",
            "format": "int32"
          },
          "FLAG_EDITACL": {
            "type": "integer",
            "description": "Edit security settings.",
            "format": "int32"
          },
          "FLAG_IGNOREACL": {
            "type": "integer",
            "description": "Ignore access control lists.",
            "format": "int32"
          },
          "FLAG_EDITSCAN": {
            "type": "integer",
            "description": "Edit scanner settings.",
            "format": "int32"
          },
          "FLAG_CHANGEMASK": {
            "type": "integer",
            "description": "Change the storage mask of an existing (not new) archive entry.",
            "format": "int32"
          },
          "FLAG_EDITACT": {
            "type": "integer",
            "description": "Edit activity projects.",
            "format": "int32"
          },
          "FLAG_CHANGEPATH": {
            "type": "integer",
            "description": "Change storage path settings.",
            "format": "int32"
          },
          "FLAG_NOLOGIN": {
            "type": "integer",
            "description": "User cannot login. This is not a right but a prohibition.",
            "format": "int32"
          },
          "FLAG_DELVERSION": {
            "type": "integer",
            "description": "Delete a document version in history",
            "format": "int32"
          },
          "FLAG_AUTHOR": {
            "type": "integer",
            "description": "Author for release documents",
            "format": "int32"
          },
          "FLAG_HASFILEACCESS": {
            "type": "integer",
            "description": "Read document file.",
            "format": "int32"
          },
          "FLAG_IS_OPTION_GROUP": {
            "type": "integer",
            "description": "This flag marks an option group.",
            "format": "int32"
          },
          "FLAG_ALL": {
            "type": "integer",
            "description": "All rights (without flag\n\u003cpre\u003e\n \u003ccode\u003eFLAG_NOLOGIN\u003c/code\u003e\n \u003c/pre\u003e\n \n and\n \n \u003cpre\u003e\n \u003ccode\u003eFLAG_IS_OPTION_GROUP\u003c/code\u003e\n \u003c/pre\u003e\n \n ).",
            "format": "int32"
          },
          "FLAG2_INTERACTIVE_LOGIN": {
            "type": "integer",
            "description": "User right: Allow interactive login. This value has to be used in the UserInfo.flags2 member.",
            "format": "int32"
          },
          "FLAG2_EXTEND_WORKFLOW_RIGHTS": {
            "type": "integer",
            "description": "User right: extend ACL during workflow execution. This value has to be used in the UserInfo.flags2 member.",
            "format": "int32"
          },
          "FLAG2_VISIBLE_USER": {
            "type": "integer",
            "description": "User right: user is visible in a select box. This value has to be used in the UserInfo.flags2 member.",
            "format": "int32"
          },
          "FLAG2_IS_DMS_DESKTOP_USER": {
            "type": "integer",
            "description": "User right: user works with ELO DMS Desktop. This value has to be used in the UserInfo.flags2 member.",
            "format": "int32"
          },
          "FLAG2_SHOW_EXTRA_INFO": {
            "type": "integer",
            "description": "User right: user can see additional keywording information. This value has to be used in the UserInfo.\nflags2\n member.",
            "format": "int32"
          },
          "FLAG2_VISIBLE_FEED_USER": {
            "type": "integer",
            "description": "User right: user is visible in document feed. This value has to be used in the UserInfo.flags2 member.",
            "format": "int32"
          },
          "FLAG2_WF_CONTROLLER": {
            "type": "integer",
            "description": "User right: workflow controller.\nThis right allows a user to read all active workflows - even those where she or he\n is not involved. In IX 8.x, this functionality was implemented by the IX option usersCanReadAllActiveWorkflows. IX\n 9.x does not support this option, since it was a quick and very limited solution to archive compatibility with\n Windows Client.",
            "format": "int32"
          },
          "FLAG2_LIMITED_CLIENT": {
            "type": "integer",
            "description": "User right: limited client. This right limits the functionality of the client application.\nIn AdminConsole, this\n flag ist named \"ELOxc Client User, Email only\".",
            "format": "int32"
          },
          "FLAG2_ANALYTICS_DISCOVER": {
            "type": "integer",
            "description": "User right: analytics discover.\nThis right allows a user to access the \u0027discover\u0027 area at ELO Analytics and to edit\n searches.",
            "format": "int32"
          },
          "FLAG2_ANALYTICS_VISUALIZE": {
            "type": "integer",
            "description": "User right: analytics visualize.\nThis right allows a user to access the \u0027visualize\u0027 area at ELO Analytics and to\n edit visualizations.",
            "format": "int32"
          },
          "FLAG2_ANALYTICS_DASHBOARD_EDIT": {
            "type": "integer",
            "description": "User right: analytics dashboard edit.\nThis right allows a user to access the \u0027dashboard\u0027 area at ELO Analytics and\n to edit dashboards.",
            "format": "int32"
          },
          "FLAG2_ANALYTICS_DASHBOARD_VIEW": {
            "type": "integer",
            "description": "User right: analytics dashboard view. This right allows a user to view predefined dashboards.",
            "format": "int32"
          },
          "FLAG2_CAN_BE_SUBSTITUTED": {
            "type": "integer",
            "description": "Group right: This group can be substituted to an other user.\n\u003cp\u003e\n This right cannot be inherited by sub groups and is not inherited by substituted groups or users.\n \u003c/p\u003e",
            "format": "int32"
          },
          "FLAG2_FUNCTIONAL_ROLE": {
            "type": "integer",
            "description": "Functional role that can be chosen by the user.",
            "format": "int32"
          },
          "FLAG2_DESKTOP_CLIENT_PLUS": {
            "type": "integer",
            "description": "Allows to use Desktop Client Plus. This value has to be used in the UserInfo.flags2 member.",
            "format": "int32"
          },
          "FLAG2_LAST": {
            "type": "integer",
            "description": "Highest bit currently used in {@link UserInfo#flags2}. Reserved.",
            "format": "int32"
          },
          "FLAG2_ALL": {
            "type": "integer",
            "description": "User right: all rights for {@link UserInfo#flags2}. Default flags2 value for administrators.",
            "format": "int32"
          },
          "FLAGS_NOT_TO_INHERIT": {
            "type": "integer",
            "description": "Rights (UserInfo.flags) which are not inherited from groups the user is a member.",
            "format": "int32"
          },
          "FLAGS_NOT_TO_SUBSTITUTE": {
            "type": "integer",
            "description": "Rights (UserInfo.flags) which are not substituted.\nEIX-864",
            "format": "int32"
          },
          "FLAGS_EXCLUSIVE_FOR_GROUPS": {
            "type": "integer",
            "description": "These rights are removed from UserInfo.flags if UserInfo.type \u003d\u003d UserInfoC.\nTYPE_USER",
            "format": "int32"
          },
          "FLAGS2_NOT_TO_INHERIT": {
            "type": "integer",
            "description": "Rights (UserInfo.flags2) which are not inherited from groups the user is a member.",
            "format": "int32"
          },
          "FLAGS2_NOT_TO_SUBSTITUTE": {
            "type": "integer",
            "description": "Rights (UserInfo.flags2) which are not substituted.\nEIX-864, RID11413",
            "format": "int32"
          },
          "LUR_READ": {
            "type": "integer",
            "description": "Access control right for reading an archive entry.",
            "format": "int32"
          },
          "LUR_WRITE": {
            "type": "integer",
            "description": "Access control right for writing an archive entry.",
            "format": "int32"
          },
          "LUR_DELETE": {
            "type": "integer",
            "description": "Access control right for deleting an archive entry.",
            "format": "int32"
          },
          "LUR_EDIT": {
            "type": "integer",
            "description": "Access control right for beeing able to checkin a new document version.",
            "format": "int32"
          },
          "LUR_LIST": {
            "type": "integer",
            "description": "Insert or remove an entry to the list of subentries of a Sord.",
            "format": "int32"
          },
          "LUR_PERMISSION": {
            "type": "integer",
            "description": "Access control right to change ACL of an object.",
            "format": "int32"
          },
          "LUR_ALL": {
            "type": "integer",
            "description": "All access control rights.",
            "format": "int32"
          },
          "LUR_NOTHING": {
            "type": "integer",
            "description": "No access.",
            "format": "int32"
          }
        },
        "description": "\u003cp\u003e\nThis class defines constants for access rights.\n \u003c/p\u003e\n \u003cp\u003e\n The\n \n \u003cpre\u003e\n \u003ccode\u003eFLAG_*\u003c/code\u003e\n \u003c/pre\u003e\n \n constants are used in\n \n \u003cpre\u003e\n \u003ccode\u003eUserInfo.flags.\n The \u003cpre\u003e\u003ccode\u003eLUR_*\u003c/code\u003e\n \u003c/pre\u003e\n \n constants are used in access control lists.\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "OcrResultQueryLanguages": {
        "type": "object",
        "properties": {
          "externalLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "internalLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "This class contains the result of a OcrInfoQueryLanguages request."
      },
      "DoubleListValue": {
        "type": "object",
        "properties": {
          "valueList": {
            "description": "A list of double values which is joined by AND or OR depending on \u003ccode\u003eandOperator\u003c/code\u003e.",
            "$ref": "#/components/schemas/ListOfDoubleValue"
          },
          "andOperator": {
            "type": "boolean",
            "description": "Connective of list elements (default is OR (\u003dfalse) )."
          }
        },
        "description": "A list of double values which is joined by AND or OR depending on\n\u003ccode\u003eandOpeDoubleListrator\u003c/code\u003e.\u003cbr\u003e\n Defaults to an OR-disjunction."
      },
      "BRequest_IXServicePortIF_checkoutDocMaskLineTemplates": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dmltZ": {
            "$ref": "#/components/schemas/DocMaskLineTemplateZ"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinDocBegin": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          }
        }
      },
      "BRequest_IXServicePortIF_createNoteTemplate": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "RestoreOptions": {
        "type": "object",
        "properties": {
          "minIDate": {
            "type": "string",
            "description": "\u003cp\u003e\n\u003ccode\u003eminIDate\u003c/code\u003e ist the ISO representation of the local date used to mark the lower limit for restoring.\n \u003c/p\u003e"
          },
          "singleObject": {
            "type": "boolean",
            "description": "\u003cp\u003e\n\u003ccode\u003esingleObject\u003dtrue\u003c/code\u003e restricts the operation to the specified object not traversing sub trees.\n \u003c/p\u003e"
          },
          "minDeleteDate": {
            "type": "string",
            "description": "\u003cp\u003e\nRestore only document versions that are deleted after \u003ccode\u003eminDeleteDate\u003c/code\u003e. Its String representation is the\n ISO format in the client\u0027s time zone.\n \u003c/p\u003e"
          },
          "parentId": {
            "type": "string",
            "description": "\u003cp\u003e\nSince references also got a delete date, they can be restored independently from their main reference. To restore a\n reference selectively, set parentId to the references\u0027 parentId. Restoring a reference does not affect the delete\n status of its main reference.\n \u003c/p\u003e\n \u003cp\u003e\n Setting parentId implies singleObject\u003dtrue.\n \u003c/p\u003e"
          }
        },
        "description": "\u003cp\u003e\nThis class contains several options for undeleting archive SORDs by \u003ccode\u003erestoreSord\u003c/code\u003e\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2004-2006\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BResult_954316611": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/SubstitutionsResult"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "NoteFreehandC": {
        "type": "object",
        "properties": {
          "MAX_POINTS": {
            "type": "integer",
            "description": "Maximum number of points in NoteFreehand.",
            "format": "int32"
          }
        },
        "description": "Constants for NoteFreehand"
      },
      "SessionInfo": {
        "type": "object",
        "properties": {
          "clientComputer": {
            "type": "string",
            "description": "The client computer connected with the Index Server."
          },
          "userId": {
            "type": "integer",
            "description": "The id of the user used for the connection.",
            "format": "int32"
          },
          "validSeconds": {
            "type": "integer",
            "description": "The length of time the connection is valid for.",
            "format": "int32"
          },
          "ticket": {
            "type": "string",
            "description": "The ticket of this session within the Index Server."
          },
          "userName": {
            "type": "string",
            "description": "The name of the user used for the connection."
          },
          "loginName": {
            "type": "string",
            "description": "The name of the user who initialized the runAs connection"
          },
          "bestBefore": {
            "type": "string",
            "description": "The time stamp of the session best before date."
          },
          "appName": {
            "type": "string",
            "description": "The name of the client\u0027s application connected with the Index Server."
          },
          "appVersion": {
            "type": "string",
            "description": "The version of the client\u0027s application connected with the Index Server."
          },
          "appType": {
            "type": "string",
            "description": "The type of the client\u0027s application connected with the Index Server."
          },
          "runAs": {
            "type": "string",
            "description": "Session is constrained to this account"
          },
          "sessionOptions": {
            "description": "Session options assigned by {@link IXServicePortIF#setSessionOptions(ClientInfo, SessionOptions)}.",
            "$ref": "#/components/schemas/MapToString"
          }
        },
        "description": "\u003cp\u003e\nProvides details of the current session with the Index Server\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_sendEvents": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "subsId": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      },
      "BRequest_FeedService_createHashTagSubscription": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "hashtagGuidOrName": {
            "type": "string"
          },
          "userGuidOrId": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinWorkFlow": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "wf": {
            "$ref": "#/components/schemas/WFDiagram"
          },
          "workFlowDiagramZ": {
            "$ref": "#/components/schemas/WFDiagramZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "FeedC": {
        "type": "object",
        "properties": {
          "mbAll": {
            "$ref": "#/components/schemas/FeedZ"
          }
        },
        "description": "Constants for class Feed."
      },
      "EloFtStopC": {
        "type": "object",
        "properties": {
          "mbStopword": {
            "type": "string",
            "description": "DB column: stopword"
          },
          "lnStopword": {
            "type": "integer",
            "description": "DB column: stopword",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of EloFtStop\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BResult_730157667": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/OcrWorker"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "ArrayOfDocMaskLine": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DocMaskLine"
        }
      },
      "FeedZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string"
          }
        },
        "description": "Type safe element selector for class Feed."
      },
      "Thesaurus": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "integer",
            "description": "DB column: groupid",
            "format": "int32"
          },
          "prio": {
            "type": "integer",
            "description": "DB column: prio",
            "format": "int32"
          },
          "data": {
            "type": "string",
            "description": "DB column: data"
          },
          "compare": {
            "type": "string",
            "description": "DB column: compare"
          },
          "listId": {
            "type": "integer",
            "description": "DB column: listid",
            "format": "int32"
          }
        },
        "description": "Internal class."
      },
      "MapToIndexValue": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/IndexValue"
        }
      },
      "ArrayOfint": {
        "type": "array",
        "items": {
          "type": "integer",
          "format": "int32"
        }
      },
      "BRequest_IXServicePortIF_deleteAspect": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "aspectId": {
            "type": "string"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "DeleteSubstitutionsInfo": {
        "type": "object",
        "properties": {
          "substitutionGuids": {
            "description": "List of substitution GUIDs to delete",
            "$ref": "#/components/schemas/ListOfString"
          }
        },
        "description": "Define which substitutions should be deleted."
      },
      "ArchivValue": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ArchivReport": {
        "type": "object",
        "properties": {
          "archivGUID": {
            "type": "string"
          },
          "elodmdocs": {
            "$ref": "#/components/schemas/ListOfArchivValue"
          },
          "objecte": {
            "$ref": "#/components/schemas/ListOfArchivValue"
          }
        }
      },
      "FindTranslateTermInfo": {
        "type": "object",
        "properties": {
          "terms": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "langs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "inclDeleted": {
            "type": "boolean",
            "description": "Reserved - Find deleted terms too (currently not implemented)."
          },
          "inclToBeTranslated": {
            "type": "boolean",
            "description": "Return those terms too, that should be translated into other languages: e.g. Keywording form names (DocMask.\nname),\n index value lables (DocMaskLine.name) and Keywords."
          }
        },
        "description": "This class is used to find translations of terms."
      },
      "BRequest_IXServicePortIF_changeSordMask": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "maskId": {
            "type": "string"
          },
          "editInfoZ": {
            "$ref": "#/components/schemas/EditInfoZ"
          }
        }
      },
      "SordHistKeyC": {
        "type": "object",
        "properties": {
          "ID_RESERVED_MIN": {
            "type": "integer",
            "description": "Entry IDs greater or equal of this value are used for Sord.name, Sord.xDate etc.",
            "format": "int32"
          },
          "ID_SORD_NAME": {
            "type": "integer",
            "description": "Entry ID for Sord.name.",
            "format": "int32"
          },
          "NAME_SORD_NAME": {
            "type": "string",
            "description": "Entry name for Sord.name."
          },
          "ID_SORD_XDATE": {
            "type": "integer",
            "description": "Entry ID for Sord.xDate.",
            "format": "int32"
          },
          "NAME_SORD_XDATE": {
            "type": "string",
            "description": "Entry name for Sord.xDate."
          },
          "ID_SORD_DESC": {
            "type": "integer",
            "description": "Entry ID for Sord.desc.",
            "format": "int32"
          },
          "NAME_SORD_DESC": {
            "type": "string",
            "description": "Entry name for Sord.desc."
          },
          "ID_DOCMASK_NAME": {
            "type": "integer",
            "description": "Entry ID for Sord.mask.",
            "format": "int32"
          },
          "NAME_DOCMASK_NAME": {
            "type": "string",
            "description": "Entry mame for Sord.name."
          },
          "ID_SORD_ACL": {
            "type": "integer",
            "description": "Entry ID for Sord.\nacl",
            "format": "int32"
          },
          "NAME_SORD_ACL": {
            "type": "string",
            "description": "Entry ID for Sord.\nacl"
          },
          "ID_SORD_DELDATE": {
            "type": "integer",
            "description": "Entry ID for Sord.delDate.",
            "format": "int32"
          },
          "NAME_SORD_DELDATE": {
            "type": "string",
            "description": "Entry name for Sord.delDate."
          }
        }
      },
      "BValueClass": {
        "type": "object"
      },
      "LdapService": {
        "type": "object"
      },
      "ObjKey": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "displayData": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "type": "integer",
            "description": "ID of the index line",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The group name of the index line"
          },
          "objId": {
            "type": "integer",
            "description": "The ELO object ID this object belongs to",
            "format": "int32"
          }
        },
        "description": "This class wraps the ObjKeyData class to provide a convenient way to access the index lines that have multiple\ncolumns. Unlike ObjKeyData the getData and setData functions work with String arrays inspite of single String\n objects.\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "QueryObject": {
        "type": "object",
        "description": "\u003cp\u003e\nA QueryObject is used to build a search query.\n \u003c/p\u003e\n \u003cp\u003e\n It can either be a QueryOperator, which is a either a list of concatenated QueryObjects or a negated QueryObject, or\n a QueryFilter which describes an actual value of a document.\n \u003c/p\u003e"
      },
      "ArrayOfWFNode": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WFNode"
        }
      },
      "BRequest_IXServerEvents_onAfterDeleteSord": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "parentSord": {
            "$ref": "#/components/schemas/Sord"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "delOpts": {
            "$ref": "#/components/schemas/DeleteOptions"
          },
          "ret": {
            "type": "boolean"
          }
        }
      },
      "SubsInfoC": {
        "type": "object",
        "properties": {
          "mbSubsId": {
            "type": "string"
          },
          "mbSubsName": {
            "type": "string"
          },
          "mbUserId": {
            "type": "string"
          },
          "mbUserName": {
            "type": "string"
          },
          "mbActiveId": {
            "type": "string"
          },
          "mbInheritRights": {
            "type": "string"
          }
        },
        "description": "Constants for class SubsInfo."
      },
      "BRequest_IXServicePortIF_provideSystemCryptPassword": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "encryptionSet": {
            "type": "string"
          },
          "pwd": {
            "type": "string"
          }
        }
      },
      "DoubleValue": {
        "type": "object",
        "description": "Class to commit a numeric double value to iSearch via QueryFilter."
      },
      "SordHistC": {
        "type": "object",
        "properties": {
          "SRC_NONE": {
            "type": "integer",
            "description": "History entry created by unknown program.",
            "format": "int32"
          },
          "SRC_CLIENT": {
            "type": "integer",
            "description": "History entry created by ELO Windows Client.",
            "format": "int32"
          },
          "SRC_OLE": {
            "type": "integer",
            "description": "History entry created by ELO Automation Interface.",
            "format": "int32"
          },
          "SRC_IGW": {
            "type": "integer",
            "description": "History entry created by ELO Internet Gateway.",
            "format": "int32"
          },
          "SRC_XML": {
            "type": "integer",
            "description": "History entry created by ELO XML Importer",
            "format": "int32"
          },
          "SRC_SAP": {
            "type": "integer",
            "description": "History entry created by ELO SAPALINK.",
            "format": "int32"
          },
          "SRC_IX": {
            "type": "integer",
            "description": "History entry created by Indexserver.",
            "format": "int32"
          },
          "SRC_REPL": {
            "type": "integer",
            "description": "History entry created by ELO Replication.",
            "format": "int32"
          },
          "SRC_SYNC": {
            "type": "integer",
            "description": "History entry created by ELO Archive Synchronisation.",
            "format": "int32"
          }
        },
        "description": "Constanst for class SordHist."
      },
      "WFNodeAssoc": {
        "type": "object",
        "properties": {
          "done": {
            "type": "boolean",
            "description": "Indicates whether the bridge has been passed through/over (used).\nFor a condition node, this member is true for\n both paths (TRUE and FALSE) if either has been passed. Thus it cannot be used in a client application to find out,\n which path the workflow has taken."
          },
          "nodeFrom": {
            "type": "integer",
            "description": "Start node (starting location)",
            "format": "int32"
          },
          "nodeTo": {
            "type": "integer",
            "description": "Destination (end) node",
            "format": "int32"
          },
          "type": {
            "type": "integer",
            "description": "Type of bridge (connection).\n{@link WFNodeMatrixC#ALWAYS}, {@link WFNodeMatrixC#IF_TRUE},\n {@link WFNodeMatrixC#IF_FALSE}.",
            "format": "int32"
          }
        },
        "description": "\u003cp\u003e\nRepresents a bridge (connection) in a workflow diagram\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_findNextReportInfos": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "searchId": {
            "type": "string"
          },
          "idx": {
            "type": "integer",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ColorDataC": {
        "type": "object",
        "properties": {
          "GUID_SYSTEM": {
            "type": "string",
            "description": "System color"
          },
          "GUID_RED": {
            "type": "string",
            "description": "Color red"
          },
          "GUID_GREEN": {
            "type": "string",
            "description": "Color green"
          },
          "GUID_BLUE": {
            "type": "string",
            "description": "Color blue"
          },
          "mbDeleted": {
            "type": "string"
          },
          "mbHidden": {
            "type": "string",
            "description": "Hidden flag."
          },
          "SORD_COLORS": {
            "type": "integer",
            "description": "Read colors that can be assigned to Sord objects.\nThis option can be passed to\n {@link IXServicePortIF#checkoutColors2(ClientInfo, int, LockZ)}.",
            "format": "int32"
          },
          "INCLUSIVE_HIDDEN": {
            "type": "integer",
            "description": "Read colors inclusive hidden colors.\nThis option can be passed to\n {@link IXServicePortIF#checkoutColors2(ClientInfo, int, LockZ)}.",
            "format": "int32"
          },
          "INCLUSIVE_DELETED": {
            "type": "integer",
            "description": "Read colors inclusive logically deleted colors.\nThis option can be passed to\n {@link IXServicePortIF#checkoutColors2(ClientInfo, int, LockZ)}.",
            "format": "int32"
          },
          "ALL_COLORS": {
            "type": "integer",
            "description": "Read all colors. This option can be passed to {@link IXServicePortIF#checkoutColors2(ClientInfo, int, LockZ)}.",
            "format": "int32"
          }
        }
      },
      "BResult_1756288553": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MapHist"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "PurgeStatus": {
        "type": "object",
        "properties": {
          "isRunning": {
            "type": "boolean",
            "description": "if the ELOdm purge task is running (it can only run in combination with the backup task)"
          },
          "numberOfDocsPurged": {
            "type": "integer",
            "description": "number of purged documents",
            "format": "int32"
          },
          "lastPurgeTime": {
            "type": "string",
            "description": "last purge work time (ISO UTC date and time without dots) If no purge has been done yet, the variable is empty."
          },
          "errorMessage": {
            "type": "string",
            "description": "an error message, if an error occured, else an empty String"
          }
        },
        "description": "This class represents the status of the ELOdm purge task"
      },
      "CheckinSubstitutionsInfo": {
        "type": "object",
        "properties": {
          "substitutions": {
            "description": "List of substitutions to be inserted/ updated",
            "$ref": "#/components/schemas/ListOfSubstitution"
          }
        },
        "description": "Object to define substitutions to be checked in.\n\u003cp\u003e\n Substitutions which do not have a {@link Substitution#guid} are new substitutions. If a {@link Substitution#guid} is\n set, the corresponding substitution is updated.\n \u003c/p\u003e"
      },
      "SubstitutionSettings": {
        "type": "object",
        "properties": {
          "canAccessPostbox": {
            "type": "boolean",
            "description": "Define if the substitute can access the user\u0027s postbox."
          },
          "canBeActivatedManually": {
            "type": "boolean",
            "description": "Define if the substitution can be activated manually."
          },
          "canBeForwarded": {
            "type": "boolean",
            "description": "Define if the the substitution can be forwarded to an other user."
          },
          "activatePeriodsAutomatically": {
            "type": "boolean",
            "description": "Define if substitution is activated automatically during a {@link SubstitutionPeriod}."
          },
          "superiorSubstitution": {
            "type": "boolean",
            "description": "\u003cp\u003e\nDefines if a substitution was created as a superior substitution with all rights set.\n \u003c/p\u003e\n \u003cp\u003e\n This flag cannot be set by a user himself, but the superior and administrators.\n \u003c/p\u003e\n \u003cp\u003e\n To create such a substitution, call {@link IXServicePortIF#createSuperiorSubstitution}.\n \u003c/p\u003e"
          },
          "isActivatedManually": {
            "type": "boolean",
            "description": "Is the substitution activated manually by calling\n{@link IXServicePortIF#activateSubstitution(de.elo.ix.client.ClientInfo, String, de.elo.ix.client.LockZ)}\n \u003ci\u003eRead-only\u003c/i\u003e"
          },
          "canAccessPersonalTasks": {
            "type": "boolean",
            "description": "Define if the substitute is allowed to find and access tasks (e.g.\n{@link WFDiagram}, {@link Activity},\n {@link Reminder}) which are assigned to the user ({@link Substitution#userId} himself and not a substituted group\n ({@link Substitution#groupsToInheritRights}."
          },
          "inheritEffectivePrincipalRights": {
            "type": "boolean",
            "description": "If set to true, the principals effective rights (with all groups and so on) are inherited to the substitute.\nThe\n substitute then is able to do everything the principal could."
          }
        },
        "description": "This class wraps various boolean settings and parameters for {@link Substitution}"
      },
      "BRequest_IXServicePortIF_processTrees": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "navigationInfo": {
            "$ref": "#/components/schemas/NavigationInfo"
          },
          "procInfo": {
            "$ref": "#/components/schemas/ProcessInfo"
          }
        }
      },
      "ArrayOfIdName": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/IdName"
        }
      },
      "SystemInfo": {
        "type": "object",
        "properties": {
          "storePathID": {
            "type": "integer",
            "description": "ID of the {@link StoreInfo} where the documents should be counted.",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "description": "Select documents created on or after this date. This is an ISODate in UTC."
          },
          "endDate": {
            "type": "string",
            "description": "Select documents created before or on this date. This is an ISODate in UTC."
          },
          "userReportMode": {
            "type": "string"
          },
          "reportMode": {
            "description": "Report mode for {@link SystemInformation#userReport(de.elo.ix.client.\nClientInfo, SystemInfo)} to determine which\n information should be reported.",
            "$ref": "#/components/schemas/UserReportZ"
          }
        },
        "description": "This class controls the report functions\n{@link SystemInformation#countDocsInStorePath(de.elo.ix.client.ClientInfo, SystemInfo)} and\n {@link SystemInformation#userReport(de.elo.ix.client.ClientInfo, SystemInfo)}."
      },
      "ArrayOfSubsInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SubsInfo"
        }
      },
      "ArrayOfMapHist": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MapHist"
        }
      },
      "MapToSubscription": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/Subscription"
        }
      },
      "ListOfResolveRightsResult": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ResolveRightsResult"
        }
      },
      "BRequest_FeedService_findNextActions": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "searchId": {
            "type": "string"
          },
          "idx": {
            "type": "integer",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "actionZ": {
            "$ref": "#/components/schemas/ActionZ"
          }
        }
      },
      "ArchiveStatisticsOptionsC": {
        "type": "object",
        "properties": {
          "mbMaxDocId": {
            "type": "string",
            "description": "Find the maximum document (version) ID"
          },
          "mbMaxObjId": {
            "type": "string",
            "description": "Find the maximum object ID"
          }
        },
        "description": "An object of this class controls the function getArchiveStatistics."
      },
      "BRequest_IXServicePortIF_checkoutKeys": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ListOfSord": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Sord"
        }
      },
      "PointInfo": {
        "type": "object",
        "properties": {
          "x": {
            "type": "integer",
            "description": "X coordinate",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "description": "Y coordinate",
            "format": "int32"
          }
        },
        "description": "This class describes a 2D point."
      },
      "ArrayOfSordLink": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SordLink"
        }
      },
      "HashSetOfInteger": {
        "type": "array",
        "items": {
          "type": "integer",
          "format": "int32"
        }
      },
      "BRequest_IXServerEvents_hasMethod": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "methodName": {
            "type": "string"
          }
        }
      },
      "HashTagC": {
        "type": "object",
        "properties": {
          "mbAll": {
            "$ref": "#/components/schemas/HashTagZ"
          },
          "mbGuid": {
            "$ref": "#/components/schemas/HashTagZ"
          },
          "mbLastUsed": {
            "$ref": "#/components/schemas/HashTagZ"
          }
        },
        "description": "Constants for class HashTag"
      },
      "CopyOptions": {
        "type": "object",
        "properties": {
          "targetName": {
            "type": "string",
            "description": "Name of the target archive element."
          },
          "newParentId": {
            "type": "integer",
            "description": "ParentId of the new element.",
            "format": "int32"
          },
          "copyOnlyBaseElement": {
            "type": "boolean",
            "description": "Copy only the base element."
          },
          "copyStructuresAndDocuments": {
            "type": "boolean",
            "description": "Copy all structures with the documents."
          },
          "copyOnlyWorkAttachment": {
            "type": "boolean",
            "description": "If inclAttachments and copyOnlyWorkAttachment are true, copy only the work attachments.\nSetting\n copyOnlyWorkAttachment to true when inclAttachments is false is invalid."
          },
          "keepOriginalOwner": {
            "type": "boolean",
            "description": "Keep the original owner of the archive element."
          },
          "keepCurrentNotes": {
            "type": "boolean",
            "description": "Keep the current documentnotes."
          },
          "inclAttachments": {
            "type": "boolean",
            "description": "Also copy all attachments."
          },
          "keepOriginalPermissions": {
            "type": "boolean",
            "description": "Keep the current permissions.\nOnly one of the three options keepOriginalPermissions, takeTargetPermissions and\n acceptChanges can be true."
          },
          "takeTargetPermissions": {
            "type": "boolean",
            "description": "Take the target permissions.\nOnly one of the three options keepOriginalPermissions, takeTargetPermissions and\n acceptChanges can be true."
          },
          "acceptChanges": {
            "type": "boolean",
            "description": "Accept the change.\nOnly one of the three options keepOriginalPermissions, takeTargetPermissions and acceptChanges\n can be true."
          },
          "keepReferences": {
            "type": "boolean",
            "description": "Keep references to original objects in copied parents. This member is ignored, if ProcessInfo.inclReferences\u003dfalse.\nIf this member is true or only the parent is included in the tree, the copied reference links the copied parent to\n the original object. If this member is false and both the parent and object of a reference is included in the tree,\n the copied reference links the copied parent to the copied object."
          },
          "copyOnlyWorkversion": {
            "type": "boolean",
            "description": "Do not copy all documents versions but only workversion"
          },
          "moveOnly": {
            "type": "boolean",
            "description": "Only move the element."
          },
          "adjustAclDifference": {
            "type": "boolean",
            "description": "The permissions of the moved objects are modified.\nThe permissions inherited from the old parent are substracted\n and the permissions of the new parent are added to the object."
          }
        },
        "description": "Structure for the options for the copy-process.\n\u003cp\u003e\n Copyright: Copyright (c) 2009\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "DeleteActivityOptions": {
        "type": "object",
        "properties": {
          "deleteFinally": {
            "type": "boolean",
            "description": "Delete activity finally. The database information for the activity is deleted, if this member is true.\nOtherwise\n the Activity.backAt is set to the current date."
          }
        },
        "description": "This class defines options for the API function deleteActivity."
      },
      "PluginMessageSource": {
        "type": "object",
        "properties": {
          "NOTIHNG": {
            "description": "Used as default if source is undefined.",
            "$ref": "#/components/schemas/PluginMessageSource"
          },
          "IXAPI": {
            "description": "Message was sent over Indexserver API.",
            "$ref": "#/components/schemas/PluginMessageSource"
          },
          "HTTP": {
            "description": "Message was sent by HTTP request.",
            "$ref": "#/components/schemas/PluginMessageSource"
          }
        },
        "description": "Source of plugin message."
      },
      "BRequest_IXServicePortIF_alive": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXEventBusHandler_processEventBusEvents": {
        "type": "object",
        "properties": {
          "subsId": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      },
      "DateNowValue": {
        "type": "object",
        "properties": {
          "roundTo": {
            "description": "Define to which time unit this date should be rounded.\n\u003cbr\u003e\n If it is !\u003d null, a range query is performed.",
            "$ref": "#/components/schemas/DateRoundE"
          },
          "relative": {
            "description": "Relative time differences to now.\n\u003cbr\u003e\n Can be null.",
            "$ref": "#/components/schemas/DateRelative"
          }
        },
        "description": "\u003cp\u003e\nClass to commit a time which refers to the current time.\n \u003c/p\u003e\n \u003cp\u003e\n Depending on the committed values, different searches are performed:\n \u003cul\u003e\n \u003cli\u003eIf \u003ccode\u003eroundTo \u003d\u003d null\u003c/code\u003e and \u003ccode\u003erelative \u003d\u003d null\u003c/code\u003e, a search for the exact current times is\n performed.\n \u003cli\u003eIf \u003ccode\u003eroundTo !\u003d null\u003c/code\u003e and \u003ccode\u003erelative \u003d\u003d null\u003c/code\u003e, a range query is performed.\u003cbr\u003e\n From is current time rounded down, To is current time rounded up, defined by \u003ccode\u003eroundTo\u003c/code\u003e.\n \u003cli\u003eIf \u003ccode\u003erelative !\u003d null\u003c/code\u003e: A range query relative to current time is performed.\u003cbr\u003e\n \u003cul\u003e\n \u003cli\u003eIf the biggest relative value is negative, a range query into the past is performed.\u003cbr\u003e\n \u003ccode\u003eFrom\u003c/code\u003e is current time - \u003ccode\u003erelative\u003c/code\u003e, rounded down if \u003ccode\u003eroundTo !\u003d null\u003c/code\u003e.\n \u003ccode\u003eTo\u003c/code\u003e is current time, rounded up if \u003ccode\u003eroundTo !\u003d null\u003c/code\u003e.\n \u003cli\u003eIf the biggest relative value is positive, a range query into the future is performed.\u003cbr\u003e\n \u003ccode\u003eFrom\u003c/code\u003e is current time, rounded down if \u003ccode\u003eroundTo !\u003d null\u003c/code\u003e. \u003ccode\u003eTo\u003c/code\u003e is current time +\n \u003ccode\u003erelative\u003c/code\u003e, rounded to if \u003ccode\u003eroundTo !\u003d null\u003c/code\u003e.\n \u003c/ul\u003e\n \u003cp\u003e\n The delivered date is converted to the time zone submitted in ClientInfo\n \u003c/p\u003e\n \u003c/ul\u003e\n \n \u003cp\u003e\n A time offset to UTC time can be delivered by \u003ccode\u003ediffToUtc\u003c/code\u003e.\u003cbr\u003e\n {@link SearchFieldE#X_DATE}, {@link SearchFieldE#I_DATE}, {@link SearchFieldE#DELETED_DATE} and\n {@link SearchFieldE#TIMESTAMP} are converted to UTC prior to saving them, index lines in date format are not\n converted.\u003cbr\u003e\n Therefore, a timezone should always be commited for these four.\n \u003c/p\u003e"
      },
      "CombineAclResult": {
        "type": "object",
        "properties": {
          "compareCode": {
            "type": "integer",
            "description": "Compare result. Negative if ACL lhs is less than rhs. Posiitve if ACL lhs is greater than rhs.\nZero if ACLs are\n equal.",
            "format": "int32"
          },
          "compareIgnoreAccessCode": {
            "type": "integer",
            "description": "Compare result by ignoring the member AclItem.access. Negative if ACL lhs is less than rhs.\nPosiitve if ACL lhs is\n greater than rhs. Zero if ACLs are equal.",
            "format": "int32"
          },
          "intersection": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "intersectionAclStr": {
            "type": "string",
            "description": "String representation of AclItem array intersection."
          },
          "sum": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "sumAclStr": {
            "type": "string",
            "description": "String representation of AclItem array sum."
          },
          "difference": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "differenceAclStr": {
            "type": "string",
            "description": "String representation of AclItem array difference."
          },
          "inverseDifference": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "inverseDifferenceAclStr": {
            "type": "string",
            "description": "String representation of AclItem array inverseDifference."
          }
        },
        "description": "This class contains the results returned by the function combineAcl."
      },
      "DeleteOptions": {
        "type": "object",
        "properties": {
          "deleteFinally": {
            "type": "boolean",
            "description": "deleteFinally\u003dtrue causes the objects to be removed physically.\nWhen used together with \u003ccode\u003ecleanupStart\u003c/code\u003e,\n this option is always true. Exception: see {@link #deleteExpiredOnly}"
          },
          "maxIDate": {
            "type": "string",
            "description": "maxIDate ist the ISO representation of the local date used to mark the upper limit for\ndeleting."
          },
          "deleteExpiredOnly": {
            "type": "boolean",
            "description": "Delete only expired objects. Only supported in function \u003ccode\u003ecleanupStart\u003c/code\u003e.\nThis option can be combined with\n \u003ccode\u003edeleteFinally\u003c/code\u003e.\n \u003ctable border\u003d\"2\" summary\u003d\"\"\u003e\n \u003ctr\u003e\n \u003ctd\u003e\u003ccode\u003edeleteFinally\u003c/code\u003e\u003c/td\u003e\n \u003ctd\u003eAction\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n \u003ctd\u003eAll expired objects will be marked as deleted (but not finally deleted). The objects ACL is checked before it\n is deleted. LockC.FORCE is applied when deleting an object.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n \u003ctd\u003eObjects that are expired and marked are deleted finally.\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e"
          },
          "maxTStamp": {
            "type": "string",
            "description": "Delete objects modified last time before this date. Only supported in function \u003ccode\u003ecleanupStart\u003c/code\u003e.\nIf\n deleteFinally is true and this member is set, ony those objects are deleted finally, which were deleted logically\n before the given time. It must be an ISO value in the local time zone."
          },
          "deleteDocumentVersionsOnly": {
            "type": "boolean",
            "description": "Delete the document versions of the objects but keep keywording information.\nIn order to delete only the document\n versions, call deleteSord on an maybe undeleted object and set DeleteOptions.deleteFinally\u003dtrue and\n DeleteOptions.deleteDocumentVersionsOnly\u003dtrue."
          },
          "deleteCertainDocumentVersionsOnly": {
            "type": "boolean",
            "description": "Delete physically certain document versions of the objects.\nIn order to delete physically certain document\n versions, first mark document versions as deleted (using DocVersion.setDeleted, followed by checkinDocEnd). Then\n call deleteSord after having set DeleteOptions.deleteFinally\u003dtrue and\n DeleteOptions.deleteCertainDocumentVersionsOnly\u003dtrue. (In order to delete all document versions, use field\n deleteDocumentVersionsOnly)"
          },
          "deleteResidueFree": {
            "type": "boolean",
            "description": "Delete all references to the objects in the database.\nThis includes reporting, replication control information,\n fulltext, etc. This option is ignroed, if deleteFinally is false."
          },
          "folderMustBeEmpty": {
            "type": "boolean",
            "description": "Delete a folder only if it is empty. Set this member to true, if deleteSord should delete only empty folders.\nIf\n the parameters to deleteSord specify the original location of a non-empty folder, the exception\n IXExceptionC.ACCESS_DENIED is thrown. This option is ignored, if deleteSord is invokded with a reference."
          },
          "deleteExpiredFolders": {
            "type": "boolean",
            "description": "Delete only expired folders and documents. Only expired empty folders can be deleted.\nOnly supported in function\n \u003ccode\u003ecleanupStart\u003c/code\u003e. This option can be combined with \u003ccode\u003edeleteFinally\u003c/code\u003e.\n \u003ctable border\u003d\"2\" summary\u003d\"\"\u003e\n \u003ctr\u003e\n \u003ctd\u003e\u003ccode\u003edeleteFinally\u003c/code\u003e\u003c/td\u003e\n \u003ctd\u003eAction\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e\u003ccode\u003efalse\u003c/code\u003e\u003c/td\u003e\n \u003ctd\u003eAll expired objects will be marked as deleted (but not finally deleted). The objects ACL is checked before it\n is deleted. LockC.FORCE is applied when deleting an object.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e\u003ccode\u003etrue\u003c/code\u003e\u003c/td\u003e\n \u003ctd\u003eObjects that are expired and marked are deleted finally.\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e"
          }
        },
        "description": "This class contains options for deleting archive SORDs using the deleteSord function.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServerEvents_onInheritKeywording": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "parentSord": {
            "$ref": "#/components/schemas/Sord"
          },
          "okeyNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reserved": {
            "type": "string"
          }
        }
      },
      "CryptInfoC": {
        "type": "object",
        "properties": {
          "DELETE_SYSTEM_PART": {
            "type": "string",
            "description": "Marker for the action \"delete the system part from an encryption set\".\nThis is used within the field\n {@link CryptInfo#systemPwd} to indicate the above desired action."
          },
          "ENCRYPTION_VERSION_AES_V1": {
            "type": "string",
            "description": "Denotes the current internal version of encryption method used for file encryption."
          },
          "MAX_LENGTH_ENCRYPTIONSET_NAME": {
            "type": "integer",
            "description": "Maximum length of encryption set name.",
            "format": "int32"
          }
        }
      },
      "BResult_1712381166": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/InvalidateCacheResult"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BResult_491352407": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SordHist"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_findFirstSords": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindInfo"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          }
        }
      },
      "ArrayOfWFDiagram": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WFDiagram"
        }
      },
      "BRequest_IXServicePortIF_deleteSord": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "parentId": {
            "type": "string"
          },
          "objId": {
            "type": "string"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "deleteOptions": {
            "$ref": "#/components/schemas/DeleteOptions"
          }
        }
      },
      "FindByIndex": {
        "type": "object",
        "properties": {
          "delDateIso": {
            "type": "string",
            "description": "Find objects with this due date. It is a single date value or a date range in ISO format."
          },
          "desc": {
            "type": "string",
            "description": "Find objects with this term included in the description of the object (case insensitive).\nThis value can be a list\n of terms separated by blanks. The terms are concatinated with the operator specified by FindOptions.searchMode. The\n wildcard * is allowed, it matches any number of characters. If desc is to be ignored this value must be set to\n null."
          },
          "iDateIso": {
            "type": "string",
            "description": "Find objects with this internal date. It is a single date value or a date range in ISO format."
          },
          "maskId": {
            "type": "string",
            "description": "Find objects related to this mask ID or name.\nIf the mask relation is to be ignored this value must be set to an\n empty string or null."
          },
          "name": {
            "type": "string",
            "description": "Find objects with this term(s) included in the name of the object (case insensitive).\nThis value can be a list of\n terms separated with blanks. They are concatinated with the operator specified by FindOptions.searchMode. The\n wildcard * is allowed, it matches any number of characters. If name is to be ignored this value must be set to\n null."
          },
          "exactName": {
            "type": "boolean",
            "description": "If this option is false, all objects are found that contain the term specified in \u003ccode\u003ename\u003c/code\u003e anywhere in\ntheir short description (Sord.name). In other words: a search by \u003ccode\u003e*name*\u003c/code\u003e is executed. Set this option\n true, if wildcards should not added implicitly to the search term."
          },
          "objKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjKey"
            }
          },
          "ownerId": {
            "type": "string",
            "description": "Find objects owned by the user with this user ID or name.\nIf the owner is to be ignored this value must be set to\n null."
          },
          "xDateIso": {
            "type": "string",
            "description": "Find objects with this external date. It is a single date value or a date range in ISO format.\n\u003cp\u003e\n IX versions from 9.00.060 support relative date values. Relative date values give an offset to the current date and\n use a format similar to ISO format: \"{+|-}YYYY-MM-DD hh:mm:ss\", whereby the separator characters can be omitted:\n \"{+|-}YYYYMMDDhhmmss\". A relative date has to be prefixed by + (date is added) or - (date is subtracted).\n \u003c/p\u003e\n \u003cp\u003e\n Examples, assuming the current date is 2016-06-24 16:29:00\n \u003ctable border\u003d\"2\"\u003e\n \u003ctr\u003e\n \u003ctd\u003eRelative date\u003c/td\u003e\n \u003ctd\u003eResulting absolute date\u003c/td\u003e\n \u003ctd\u003eRemark\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e+0001-00-00 00:00:00\u003c/td\u003e\n \u003ctd\u003e2017-06-24 16:29\u003c/td\u003e\n \u003ctd\u003eNext year, same month etc.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e-0000-01-00 00:00:00\u003c/td\u003e\n \u003ctd\u003e2016-05-24 16:29\u003c/td\u003e\n \u003ctd\u003ePrevious month, same day etc.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e+0000\u003c/td\u003e\n \u003ctd\u003e2016-01-01 00:00...2016-12-31 23:59\u003c/td\u003e\n \u003ctd\u003eSearch documents of this year. Incomplete relative dates are automatically expanded to a date range.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e+0000-00\u003c/td\u003e\n \u003ctd\u003e2016-06-01 00:00...2016-06-30 23:59\u003c/td\u003e\n \u003ctd\u003eSearch documents of this month.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e-0000-01\u003c/td\u003e\n \u003ctd\u003e2016-05-01 00:00...2016-05-31 23:59\u003c/td\u003e\n \u003ctd\u003eSearch documents of the last month.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e-0000-00-10...+0000-00-00 00:00:00\u003c/td\u003e\n \u003ctd\u003e2016-06-14 00:00...2016-06-24 16:29\u003c/td\u003e\n \u003ctd\u003eSearch documents from the last 10 days.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e-0001...\u003c/td\u003e\n \u003ctd\u003e2015-01-01 00:00...\u003c/td\u003e\n \u003ctd\u003eSearch documents from last year or newer.\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e\n \u003c/p\u003e\n \u003cp\u003e\n \u003ci\u003eHint: Only relative date values are allowed that could also be an absolute date. E.g. a relative date of 100\n days or 13 months cannot be specified.\u003c/i\u003e\n \u003c/p\u003e"
          },
          "acl": {
            "type": "string",
            "description": "Constrain results to objects with this access control list."
          },
          "pathId": {
            "type": "string",
            "description": "Storage path ID or name"
          },
          "kind": {
            "type": "string",
            "description": "Colour. If the colour is to be ignored this value must be set to null."
          },
          "lockId": {
            "type": "string",
            "description": "Set this value to an user\u0027s id or name to search for objects currently locked by that user.\nTo ignore this option,\n set this value to \u003ccode\u003enull\u003c/code\u003e (default)."
          },
          "maskIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deleteUser": {
            "type": "string",
            "description": "Find objects deleted by the user with this user ID or name.\nIf the deleted user is to be ignored this value must be\n set to null."
          },
          "deleteDateIso": {
            "type": "string",
            "description": "Find objects with this delete date. It is a single date value or a date range in ISO format."
          }
        },
        "description": "Finds an object according to the object\u0027s index properties.\nThe search terms are concatinated by the operator\n specified with FindOptions.searchMode. If FindOptionsC.OPERATOR_OR is the specified searchMode the members of this\n class are concatinated in the search string with the boolean operator \"OR\". Any other searchMode concatinates with\n \"AND\".\n\n Exception: userId and maskId are always used as \"AND\" terms.\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ArrayOfSessionInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SessionInfo"
        }
      },
      "ESNodeObj": {
        "type": "object",
        "properties": {
          "ip": {
            "type": "string"
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "Status": {
            "type": "string"
          },
          "discSpaceUsage": {
            "type": "string"
          }
        },
        "description": "\u003cb\u003e\u003ci\u003eNote: For internal use only. Might change in the near future.\n\u003c/i\u003e\u003c/b\u003e"
      },
      "ArrayOfNoteTemplate": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/NoteTemplate"
        }
      },
      "ActivityOption": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Option ID. This value can be one of the predefined option IDs in ActivityOptionC.\nOr you can use an application\n defined value greater or equal to ActivityOptionC.ID_VALUE.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Activity option name.\nThe name must not contain one of this characters: ! $ - + *"
          },
          "onlyKeyword": {
            "type": "boolean",
            "description": "The value can only be selected from the associated keyword list.\nThis option has to be checked by the client\n application. It is not checked by Indexserver."
          },
          "readOnly": {
            "type": "boolean",
            "description": "The value can not be edited in the user interface. This option has to be checked by the client application.\nIt is\n not checked by Indexserver."
          },
          "sorted": {
            "type": "boolean",
            "description": "The value has to be displayed in an appropriate order. This option has to be checked by the client application.\nIt\n is not checked by Indexserver."
          },
          "stamp": {
            "type": "boolean",
            "description": "This option is a stamp field. This option has to be checked by the client application.\nIt is not checked by\n Indexserver."
          },
          "mandatory": {
            "type": "boolean",
            "description": "A value must be defined for this option. This option has to be checked by the client application.\nIt is not checked\n by Indexserver."
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "This class represents an option for an activity project."
      },
      "Domain": {
        "type": "object",
        "properties": {
          "FILTER_PERSON": {
            "type": "string",
            "description": "Filter expression used to find a person by her/his sAMAccountName."
          },
          "FILTER_PERSON_USER_PRINCIPAL_NAME": {
            "type": "string",
            "description": "Filter expression used to find a person by her/his userPrinicpalName."
          },
          "FILTER_PERSON_MAIL": {
            "type": "string",
            "description": "Filter expression used to find a person by her mail address."
          },
          "FILTER_GROUPS": {
            "type": "string",
            "description": "Filter expression used to find groups of a given user."
          },
          "AD_ATTRIBUTE_MEMBER_OF": {
            "type": "string",
            "description": "LDAP attribute ID that specifies the group list of a given user or group."
          },
          "AD_ATTRIBUTE_MAIL": {
            "type": "string",
            "description": "LDAP attribute ID that specifies the mail address of a given user."
          },
          "AD_SAM_ACCOUNT_NAME": {
            "type": "string",
            "description": "LDAP attribute ID for sAMAccountName."
          },
          "AD_USER_PRINCIPAL_NAME": {
            "type": "string",
            "description": "LDAP attribute ID for userPrincipalName."
          },
          "DEFAULT_ENVIRONMENT": {
            "description": "Default properties for LDAP connection via Java.",
            "$ref": "#/components/schemas/Array2OfString"
          },
          "DEFAULT_ATTRIBUTES": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "servers": {
            "description": "List of LDAP servers of the domain.",
            "$ref": "#/components/schemas/ListOfServer"
          },
          "attributeForUserPropOS": {
            "type": "string",
            "description": "LDAP attribute to be used as OS name for {@link UserInfoC#PROP_NAME_OS}.\nThis value is either\n {@link #AD_SAM_ACCOUNT_NAME} or {@link #AD_USER_PRINCIPAL_NAME}. If set as {@link #AD_USER_PRINCIPAL_NAME}, also\n set {@link #searchFilterForPerson} to {@link #FILTER_PERSON_USER_PRINCIPAL_NAME}. Default is sAMAccountName."
          },
          "name": {
            "type": "string",
            "description": "Domain name. E.g. ELO.\nLOCAL"
          },
          "domainPrefix": {
            "type": "string",
            "description": "Domain prefix.\nThe login name of the user is prefixed by this value to build the user property\n {@link UserInfoC#PROP_NAME_OS}. When using this prefix, users should also use this prefix for login. This value\n must end with a separator char, e.g. backslash. E.g. ELO\\\\"
          },
          "defaultUserName": {
            "type": "string",
            "description": "Optional user name to connect to the LDAP servers.\nThis account must have the permission to list the group\n associations of all users. It does not need to be an ELO account too."
          },
          "defaultUserPasswordEncr": {
            "type": "string",
            "description": "Optional encrypted user password to connect to the LDAP servers. This password can also be set in plain text.\nIt is\n automatically encrypted when stored into a file or database."
          },
          "personSearchDNList": {
            "description": "Search paths to find persons. Only users that are found in one of this DN can login to ELO. E.g.\n\"cn\u003dusers,dc\u003delotest2,dc\u003dlocal\".",
            "$ref": "#/components/schemas/ListOfString"
          },
          "groupSearchDNList": {
            "description": "Search paths to find groups.\nIf empty, only those groups are assigned to the user in ELO the user is a direct\n member of in LDAP. If not empty, the user\u0027s groups are recursively searched through group in group membership. A\n group found via this search is always added to the user regardless of whether its location fits to the given list.\n But groups that do not match any location are not investigated deeper.",
            "$ref": "#/components/schemas/ListOfString"
          },
          "connectionTimeoutSeconds": {
            "type": "integer",
            "description": "Timeout limit when connecting to a LDAP server.",
            "format": "int32"
          },
          "searchTimeLimitSeconds": {
            "type": "integer",
            "description": "Search for groups can least up to this number of seconds.",
            "format": "int32"
          },
          "maxGroupNesting": {
            "type": "integer",
            "description": "Groups are collected recursively up to this depth. A value of 0 means no depth limit.\nThis value is ignored, if\n {@link #groupSearchDNList} is empty.",
            "format": "int32"
          },
          "requiredGroup": {
            "type": "string",
            "description": "Users must be member of this LDAP group.\nOptional, short LDAP group name (not a DN) the user must be a member of in\n order to login. The membership in this group is checked after the group list has been collected. Hence,\n {@link #groupSearchDNList} and {@link #maxGroupNesting} have an effect on this check too. The comparison to this\n value is case-sensitive."
          },
          "nameFormatter": {
            "type": "string",
            "description": "Format string to build a unique ELO account name from LDAP attributes. LDAP attributes have to be enclosed in $.\nExamples: 1. $cn$, $department$ ; 2. $sAMAccountName$ $department$"
          },
          "attributeNameMemberOf": {
            "type": "string",
            "description": "Name of attribute that contains the user\u0027s groups. Defaults to \"memberOf\"."
          },
          "attributeNameMail": {
            "type": "string",
            "description": "Name of attribute that contains the user\u0027s mail address. Defaults to \"mail\"."
          },
          "searchFilterForGroups": {
            "type": "string",
            "description": "Name of attribute that contains the user\u0027s groups.\nDefaults to \"(\u0026amp;(objectCategory\u003dgroup)(member\u003d{0}))\""
          },
          "searchFilterForMail": {
            "type": "string",
            "description": "Search filter for mail address.\nDefaults to \"(\u0026amp;(objectclass\u003dperson)(mail\u003d{0}))\""
          },
          "searchFilterForPerson": {
            "type": "string",
            "description": "Search filter for person.\nDefaults to \"(\u0026amp;(objectclass\u003dperson)(sAMAccountName\u003d{0}))\""
          },
          "initialContextEnvironment": {
            "description": "Additional properties to build the login environment.\nExample:\n initialContextEnvironment.put(Context.SECURITY_AUTHENTICATION, \"DIGEST-MD5\");",
            "$ref": "#/components/schemas/MapToString"
          },
          "attributesToRead": {
            "description": "Read this LDAP attributes into ldapProperties of UserInfo.\nThe attributes {@link #getAttributeNameMail()} and\n {@link #getAttributeNameMemberOf()} are always read and need not to be included in this collection.",
            "$ref": "#/components/schemas/SetOfString"
          },
          "attributeSuperior": {
            "type": "string",
            "description": "Attribute to determine the superior of an ELO user. Set this attribute ID e.g.\nto {@link #AD_ATTRIBUTE_MANAGER} to\n assign the superior of a user on login. This value is empty by default, which means that ELO Administrator (user ID\n 0) is assigned as superior."
          },
          "parentOfNewUser": {
            "type": "string",
            "description": "Assign this user as parent for a new ELO user.\nID, GUID or name of existing ELO user or group that is assigned as\n UserInfo#parent when a new ELO user is created. This value is empty by default, which means that ELO Administrator\n (user ID 0) is assigned as parent."
          },
          "AD_ATTRIBUTE_MANAGER": {
            "type": "string",
            "description": "AD attribute ID -manager- that specifies the superior of an ELO user."
          }
        },
        "description": "This class defines how to connect to a domain controller, login a user and find her groups."
      },
      "AspectLine": {
        "type": "object",
        "properties": {
          "aspectId": {
            "type": "integer",
            "description": "This line information belongs to an aspect with the ID AspectId.",
            "format": "int32"
          },
          "type": {
            "type": "integer",
            "description": "The type of the line information. This can be one of the \u003ccode\u003eDocMaskLineC.TYPE_*\u003c/code\u003e constants.",
            "format": "int32"
          },
          "displayName": {
            "type": "string",
            "description": "The display name of the attribute. This value is displayed in the lable before the edit field.\nIt can be translated\n into reps. from the users language: set \u003ccode\u003eSessionOptionsC.TRANSLATE_TERM\u003c/code\u003e."
          },
          "key": {
            "type": "string",
            "description": "The attribute identifier."
          },
          "externalData": {
            "type": "string",
            "description": "External data. Can be used to store an arbitary string."
          },
          "access": {
            "type": "integer",
            "description": "Bitset of AccessC.LUR_* constants. It contains the access bits for the current user. Only AccessC.\nLUR_READ and\n AccessC.LUR_WRITE are used.",
            "format": "int32"
          },
          "defaultValue": {
            "type": "string",
            "description": "This value is assigned to the element for a new Sord object."
          },
          "nameTranslationKey": {
            "type": "string",
            "description": "Translation-keyword for {@link AspectLine#displayName}."
          },
          "allowedMaskIdsForKeywordingRelation": {
            "description": "Specifies the {@link DocMask#id} allowed in a {@link DocMaskLineC#TYPE_RELATION}.\nMandatory if DocMaskLine is of type {@link DocMaskLineC#TYPE_RELATION}. Only Sords with the specified\n {@link DocMask#id} can be referenced in this DocMaskLine.",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "postfixAsterix": {
            "type": "boolean",
            "description": "Add \"*\" after index value in search operation."
          },
          "prefixAsterix": {
            "type": "boolean",
            "description": "Add \"*\" before index value in search operation."
          },
          "important": {
            "type": "boolean",
            "description": "Display index value next to the objects short description.\nThis element has to be interpreted by the client\n application. Further it is used while generating dynamic keywords."
          },
          "notTokenized": {
            "type": "boolean",
            "description": "Defines whether a index value should be searchable as TOKENIZED or UN_TOKENIZED"
          },
          "excludeFromISearch": {
            "type": "boolean",
            "description": "If true a index value will not be searchable via iSearch. Does not affect the index search."
          },
          "translate": {
            "type": "boolean",
            "description": "Translate index values into or from the users language."
          }
        },
        "description": "This class contains data for a line in a document mask, if {@link DocMask#dataOrganisation} \u003d\n{@link DocMaskC#DATA_ORGANISATION_ASPECT}. AspectLines are contained in keywording {@link Aspect}s."
      },
      "FindBackgroundThreadOptions": {
        "type": "object",
        "properties": {
          "inclActiveJobs": {
            "type": "boolean",
            "description": "Includes running Jobs in the result. Defaults to true."
          },
          "inclFinishedJobs": {
            "type": "boolean",
            "description": "Includes finished Jobs in the result. Defaults to false."
          },
          "inclFullInfo": {
            "type": "boolean",
            "description": "enables extended result information in the ProcessInfo member (if available)"
          },
          "sortOrder": {
            "type": "integer",
            "description": "The order in which the results has to be sorted.",
            "format": "int32"
          },
          "userInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserInfo"
            }
          },
          "guids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateAfter": {
            "type": "string",
            "description": "Filter jobs started after this date."
          },
          "dateBefore": {
            "type": "string",
            "description": "Filter jobs started before this date."
          }
        }
      },
      "CheckinDocOptions": {
        "type": "object",
        "properties": {
          "keepIds": {
            "type": "boolean",
            "description": "If \u003ctt\u003etrue\u003c/tt\u003e, the DocVersion to check-in will use the ID and GUID you specify.\nIn order to only set the GUID,\n set the ID to 0."
          }
        },
        "description": "This class defines options for the API function checkinDocBegin2."
      },
      "Bitset": {
        "type": "object",
        "properties": {
          "v": {
            "type": "string",
            "description": "Internal 64 bit integer value"
          }
        },
        "description": "This class is used in the scripting API of Indexserver and provides bit operations on 64 bit integers.\nJavaScript\n does not support bit operations for 64 bit integers. The global context of the JavaScripts executed by Indexserver\n contain an object named Bitset which is an instance of this class."
      },
      "BRequest_ClientNotification_updateTask": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userTask": {
            "$ref": "#/components/schemas/UserTask"
          },
          "notifyType": {
            "$ref": "#/components/schemas/TaskNotifyType"
          }
        }
      },
      "ListOfListOfString": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ListOfString"
        }
      },
      "BResult_1143177929": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/HashTag"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "FileDataZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from the DocMaskC class."
          }
        },
        "description": "Member selector for class FileData."
      },
      "IXEventBusHandler": {
        "type": "object"
      },
      "MasterDataE": {
        "type": "object",
        "properties": {
          "USERS": {
            "description": "Include all users",
            "$ref": "#/components/schemas/MasterDataE"
          },
          "ORGANIZATIONAL_UNITS": {
            "description": "Include all organizational units",
            "$ref": "#/components/schemas/MasterDataE"
          },
          "KEYWORDING_FORMS": {
            "description": "Include all keywording forms",
            "$ref": "#/components/schemas/MasterDataE"
          },
          "INDEX_FIELD_TEMPLATES": {
            "description": "Include all index field templates",
            "$ref": "#/components/schemas/MasterDataE"
          },
          "KEYWORD_LISTS": {
            "description": "Include keyword lists",
            "$ref": "#/components/schemas/MasterDataE"
          },
          "ENTRY_TYPES": {
            "description": "Include entry type",
            "$ref": "#/components/schemas/MasterDataE"
          },
          "COLORS": {
            "description": "Include colors",
            "$ref": "#/components/schemas/MasterDataE"
          }
        },
        "description": "Enumeration for the master data"
      },
      "CheckoutSubstitutionsInfo": {
        "type": "object",
        "properties": {
          "substitutionGuids": {
            "description": "GUID of the substitutions to checkout.",
            "$ref": "#/components/schemas/ListOfString"
          },
          "userNames": {
            "description": "Returns all substitutions of this users where this user is set as {@link Substitution#userId}.",
            "$ref": "#/components/schemas/ListOfString"
          },
          "userIds": {
            "description": "Returns all substitutions of this users substitutes where this user is set as {@link Substitution#userId}.",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "substituteNames": {
            "description": "Returns all substitutions this users substitutes.\n(This user is set as {@link Substitution#substituteId})",
            "$ref": "#/components/schemas/ListOfString"
          },
          "substituteIds": {
            "description": "Returns all substitutions this users substitutes.\n(This user is set as {@link Substitution#substituteId})",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "creatorNames": {
            "description": "Returns all substitutions this users created.\n(This user is set as {@link Substitution#creatorId})",
            "$ref": "#/components/schemas/ListOfString"
          },
          "creatorIds": {
            "description": "Returns all substitutions this users created.\n(This user is set as {@link Substitution#creatorId})",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "andOperator": {
            "type": "boolean",
            "description": "Search for elements of different lists with OR operator (default) or AND (set value to true)"
          },
          "includeSubstitutesGroups": {
            "type": "boolean",
            "description": "Include substitutions where {@link Substitution#substituteId} is set to the provided substitutes or any of their\ngroups."
          }
        },
        "description": "This object is used to define which substitutions should be returned by\n{@link IXServicePortIF#checkoutSubstitutions}.\n \n \u003cp\u003e\n The elements in one list are always search with an OR operation. If various list are provided, they are connected\n using OR (default) (set {@link #andOperator} to true to use AND operator)\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_deleteUsers": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BResult_1112009864": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyInfo"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "MapDomain": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Map domain name. This can be a user definined name or one of the predefined names in MapDomainC.\nThe value is\n internally used as part of a database table name. Thus only alphanumeric characters are allowed."
          },
          "copy": {
            "type": "boolean",
            "description": "This value is true, if the map items should be copied when the associated Sord object is copied."
          },
          "replicate": {
            "type": "boolean",
            "description": "This value is true, if the map items should be replicated with the associated Sord object."
          },
          "history": {
            "type": "boolean",
            "description": "This value is true, if a history should be maintained for map items.\nA history is always available for\n {@link MapDomainC#DOMAIN_SORD} and {@link MapDomainC#DOMAIN_WORKFLOW_ACTIVE}."
          }
        },
        "description": "This class contains the information of a map domain.\nA map is a set of key value pairs and can be addressed by a map\n domain name and a map ID. All maps with the same domain name are stored in the same database tables. These maps are\n distinguished by their ID, which can be an arbitary string. A map can be attached to a Sord object by setting the map\n ID to the Sord ID. Attached maps are deleted, when the Sord object is finally deleted. Furthermore they can be copied\n with the Sord object."
      },
      "BRequest_IXServicePortIF_checkinActivity": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "act": {
            "$ref": "#/components/schemas/Activity"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "FindByRegisteredFunction": {
        "type": "object",
        "properties": {
          "functionName": {
            "type": "string"
          },
          "args": {
            "$ref": "#/components/schemas/Any"
          }
        }
      },
      "ArrayOfAclItem": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AclItem"
        }
      },
      "BRequest_IXServicePortIF_deleteKeys": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ObjChangeC": {
        "type": "object",
        "properties": {
          "mbObjId": {
            "type": "string",
            "description": "DB column: chgobjid"
          },
          "lnObjId": {
            "type": "integer",
            "description": "DB column: chgobjid",
            "format": "int32"
          },
          "mbTStamp": {
            "type": "string",
            "description": "DB column: chgtstamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "DB column: chgtstamp",
            "format": "int32"
          },
          "mbCode": {
            "type": "string",
            "description": "DB column: chgcode"
          },
          "mbParam": {
            "type": "string",
            "description": "DB column: chgparam"
          },
          "mbParam2": {
            "type": "string",
            "description": "DB column: chgparam2"
          },
          "lnParam2": {
            "type": "integer",
            "description": "DB column: chgparam2",
            "format": "int32"
          },
          "mbUser": {
            "type": "string",
            "description": "DB column: chguser"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of ObjChange\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_deleteDocMaskLineTemplates": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "HashTagZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string"
          }
        }
      },
      "UserName": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "User ID",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "User name."
          },
          "guid": {
            "type": "string",
            "description": "User GUID."
          },
          "type": {
            "type": "integer",
            "description": "User type.",
            "format": "int32"
          },
          "flags": {
            "type": "integer",
            "description": "User rights. To detect a suspended user, test bit AccessC.FLAG_NOLOGIN.",
            "format": "int32"
          },
          "flags2": {
            "type": "integer",
            "description": "User rights, second set. This member is a bit set of AccessC.FLAGS2_* constants.",
            "format": "int32"
          }
        },
        "description": "\u003cp\u003e\nContains user name, ID and type (group or user).\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "MapItemC": {
        "type": "object",
        "properties": {
          "mbId": {
            "type": "string",
            "description": "DB column: mapid"
          },
          "lnId": {
            "type": "integer",
            "description": "DB column: mapid",
            "format": "int32"
          },
          "mbKey": {
            "type": "string",
            "description": "DB column: mapkey"
          },
          "lnKey": {
            "type": "integer",
            "description": "DB column: mapkey",
            "format": "int32"
          },
          "mbValue": {
            "type": "string",
            "description": "DB column: mapvalue"
          },
          "lnValue": {
            "type": "integer",
            "description": "DB column: mapvalue",
            "format": "int32"
          },
          "mbContentType": {
            "type": "string",
            "description": "Member bit: Content Type.\nDB column: mapcontenttype"
          },
          "lnContentType": {
            "type": "integer",
            "description": "Column length: Content Type.\nDB column: mapcontenttype",
            "format": "int32"
          },
          "mbBlobData": {
            "type": "string",
            "description": "Member bit: Blob data.\nDB column: mapblob"
          },
          "lnBlobData": {
            "type": "integer",
            "description": "Column length: Blob data.\nDB column: mapblob",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of MapItem\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "FileDataC": {
        "type": "object",
        "properties": {
          "mbContentType": {
            "type": "string"
          },
          "mbData": {
            "type": "string"
          },
          "mbStream": {
            "type": "string"
          },
          "mbDataArray": {
            "$ref": "#/components/schemas/FileDataZ"
          },
          "mbDataStream": {
            "$ref": "#/components/schemas/FileDataZ"
          },
          "CONTENT_TYPE_IMAGE_JPEG": {
            "type": "string",
            "description": "Mime type image/jpeg."
          },
          "CONTENT_TYPE_IMAGE_PNG": {
            "type": "string",
            "description": "Mime type image/png."
          },
          "CONTENT_TYPE_IMAGE_X_ICON": {
            "type": "string",
            "description": "Mime type image/x-icon."
          },
          "CONTENT_TYPE_IMAGE_X_ICO": {
            "type": "string",
            "description": "Mime type image/x-ico."
          },
          "CONTENT_TYPE_IMAGE_BMP": {
            "type": "string",
            "description": "Mime type image/bmp."
          },
          "MAX_BLOB_LENGTH": {
            "type": "string",
            "description": "Maximum length of BLOB fields. This value is set to 1MB."
          },
          "lnContentType": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Member constants for class FileData."
      },
      "KeywordListC": {
        "type": "object",
        "properties": {
          "mbStatus": {
            "type": "string",
            "description": "DB column: swlstatus"
          },
          "mbId": {
            "type": "string",
            "description": "Member bit: ID DB column: swlgroupid"
          },
          "lnId": {
            "type": "integer",
            "description": "Column length: ID DB column: swlgroupid",
            "format": "int32"
          },
          "mbGuid": {
            "type": "string",
            "description": "Member bit: GUID DB column: swlguid"
          },
          "lnGuid": {
            "type": "integer",
            "description": "Column length: GUID DB column: swlguid",
            "format": "int32"
          },
          "mbTStamp": {
            "type": "string",
            "description": "Member bit: Last modified, ISO - UTC DB column: swltstamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "Column length: Last modified, ISO - UTC DB column: swltstamp",
            "format": "int32"
          },
          "mbUserId": {
            "type": "string",
            "description": "Member bit: ID of the user that has written the keyword list at last.\nDB column: swluser"
          },
          "mbLockId": {
            "type": "string",
            "description": "Member bit: ID of the user who holds a lock on the keyword list.\nDB column: swllock"
          },
          "mbTStampSync": {
            "type": "string",
            "description": "Member bit: Timestamp of this object\u0027s last export by the replication.\nDB column: swltstampsync"
          },
          "lnTStampSync": {
            "type": "integer",
            "description": "Column length: Timestamp of this object\u0027s last export by the replication.\nDB column: swltstampsync",
            "format": "int32"
          },
          "mbPackageName": {
            "type": "string",
            "description": "Member bit: Package name of KeywordList DB column: packagename"
          },
          "lnPackageName": {
            "type": "integer",
            "description": "Column length: Package name of KeywordList DB column: packagename",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of KeywordList\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_checkinConfigFilesEnd": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "configFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigFile"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "SetOfObject": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "SubstitutionC": {
        "type": "object",
        "properties": {
          "mbUserName": {
            "type": "string",
            "description": "Member bit to select {@link Substitution#userName}"
          },
          "mbSubstituteName": {
            "type": "string",
            "description": "Member bit to select {@link Substitution#substituteName}"
          },
          "mbCreatorName": {
            "type": "string",
            "description": "Member bit to select {@link Substitution#creatorName}"
          },
          "mbSubstituionPeriods": {
            "type": "string",
            "description": "Member bit to select {@link Substitution#substitutionPeriods}"
          },
          "mbStatus": {
            "type": "string",
            "description": "Member bit to select {@link Substitution#status}"
          },
          "mbLockName": {
            "type": "string",
            "description": "Member bit to select {@link Substitution#lockName}"
          },
          "mbSubstituteType": {
            "type": "string",
            "description": "Member bit to select {@link Substitution#substituteType}"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "Select all members"
          },
          "mbAll": {
            "description": "All Substitution members.",
            "$ref": "#/components/schemas/SubstitutionZ"
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of {@link Substitution}\n \u003c/p\u003e"
      },
      "FioFinishOptions": {
        "type": "object",
        "properties": {
          "jobState": {
            "$ref": "#/components/schemas/JobState"
          }
        }
      },
      "BRequest_IXServerEvents_onAfterRefSord": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "parentSordOld": {
            "$ref": "#/components/schemas/Sord"
          },
          "parentSordNew": {
            "$ref": "#/components/schemas/Sord"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "manSortIndex": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BRequest_IXServicePortIF_setServerInfoDM": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "serverInfo": {
            "$ref": "#/components/schemas/ServerInfoDM"
          }
        }
      },
      "BRequest_SystemInformation_countDocsInStorePath": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "si": {
            "$ref": "#/components/schemas/SystemInfo"
          }
        }
      },
      "BResult_202623104": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ESStatusObj"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BResult_52201250": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/BackupPurgeStatus"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutTranslateTerms": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "termIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "DeleteOrgUnitInfo": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Objects of this class specify the selection criteria for \u003ccode\u003edeleteOrgUnits\u003c/code\u003e.\nOU IDs or names can be set or\n both.\n \n \u003cp\u003e\n Copyright: Copyright (c) 2013\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ListOfServer": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Server"
        }
      },
      "BRequest_IXServicePortIF_checkoutKeywords": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "kwids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "keywordZ": {
            "$ref": "#/components/schemas/KeywordZ"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ArrayListOfSearchFieldE": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SearchFieldE"
        }
      },
      "EloIxOpt_oldC": {
        "type": "object",
        "properties": {
          "mbOptNo": {
            "type": "string",
            "description": "DB column: optno"
          },
          "mbOptVal": {
            "type": "string",
            "description": "DB column: optval"
          },
          "lnOptVal": {
            "type": "integer",
            "description": "DB column: optval",
            "format": "int32"
          },
          "mbRemark": {
            "type": "string",
            "description": "DB column: remark"
          },
          "lnRemark": {
            "type": "integer",
            "description": "DB column: remark",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of EloIxOpt_old\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "LoginScriptOptionsC": {
        "type": "object",
        "properties": {
          "CLIENT_NAME_FULLCLIENT": {
            "type": "string",
            "description": "Constant for the name of the Windows/Java Client."
          },
          "CLIENT_NAME_WEBCLIENT": {
            "type": "string",
            "description": "Constant for the name of the Web and Mobile Client."
          },
          "CLIENT_NAME_ELOAPP": {
            "type": "string",
            "description": "Constant for the name ELO applications."
          },
          "CLIENT_NAME_PARTNERAPP": {
            "type": "string",
            "description": "Constant for the name of partner applications."
          },
          "CLIENT_NAME_DMS_DESKTOP": {
            "type": "string",
            "description": "DMS Desktop"
          },
          "CLIENT_NAME_MOBILE_CLIENT": {
            "type": "string",
            "description": "Mobile client (Android, iOS)"
          },
          "CLIENT_NAME_WINDOWS_CLIENT": {
            "type": "string",
            "description": "Windows Client"
          },
          "CLIENT_NAME_DESKTOP_PLUS": {
            "type": "string",
            "description": "Desktop Plus."
          },
          "CLIENT_NAME_DESKTOP_LIGHT": {
            "type": "string",
            "description": "Desktop Plus."
          },
          "CLIENT_NAME_INTEGRATION": {
            "type": "string",
            "description": "Integration client."
          },
          "CLIENT_NAME_LIMITED_WEB_CLIENT_D": {
            "type": "string",
            "description": "Web Client with limited access for special customer project."
          },
          "CLIENT_NAME_TASK": {
            "type": "string",
            "description": "Task client (a.k.a. Workflow Client)."
          },
          "CLIENT_NAME_WORKFLOW_SAP": {
            "type": "string",
            "description": "Workflow Client für SAP ECM."
          },
          "CLIENT_NAME_UNKNOWN": {
            "type": "string",
            "description": "Constant for the name of unknown type."
          }
        },
        "description": "Constants for {@link LoginScriptOptions}."
      },
      "NoteZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from the NoteC class."
          }
        },
        "description": "This class encapsulates the constants of the NoteC class.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "Alert": {
        "type": "object",
        "properties": {
          "dest": {
            "type": "integer",
            "format": "int32"
          },
          "destName": {
            "type": "string",
            "description": "User name of the recipient."
          },
          "source": {
            "type": "integer",
            "description": "User ID of the sender.\nDB column: source",
            "format": "int32"
          },
          "sourceName": {
            "type": "string",
            "description": "User name of the sender."
          },
          "type": {
            "type": "integer",
            "description": "Alert type.\nDB column: alerttype",
            "format": "int32"
          },
          "objId": {
            "type": "integer",
            "description": "Object ID.\nDB column: objid",
            "format": "int32"
          },
          "extra1": {
            "type": "integer",
            "description": "Extra data 1.\nDB column: extra1",
            "format": "int32"
          },
          "extra2": {
            "type": "integer",
            "description": "Extra data 2.\nDB column: extra2",
            "format": "int32"
          },
          "memo": {
            "type": "string",
            "description": "Comment text.\nDB column: alertmemo"
          },
          "time": {
            "type": "integer",
            "description": "Date and time when the alert was created.\nDB column: alerttime",
            "format": "int32"
          },
          "timeIso": {
            "type": "string",
            "description": "ISO date when the alert was created. Timezone is related to ClientInfo.timezone."
          }
        },
        "description": "Alerts are messages shown in the alert tab of ELO client."
      },
      "NotOperator": {
        "type": "object",
        "properties": {
          "queryFilter": {
            "description": "A negated QueryObject.",
            "$ref": "#/components/schemas/QueryFilter"
          }
        },
        "description": "This operator contains a single QueryObject which is excluded from the search.\nThis means, a document is returned if\n the QueryObject is not present in the document."
      },
      "AutoFilingOptions": {
        "type": "object",
        "properties": {
          "autoFilingDefinition": {
            "type": "string",
            "description": "Auto filing index string.\nIf this option is set, paramter \u003ccode\u003emaskId\u003c/code\u003e in\n {@link IXServicePortIF#evalAutoFiling(ClientInfo, String, Sord, AutoFilingOptions)} is ignored."
          }
        },
        "description": "Options for function\n{@link IXServicePortIF#evalAutoFiling(ClientInfo, String, Sord, AutoFilingOptions)}"
      },
      "BResult_776454091": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "SubstitutionZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from {@link SubstitutionC}."
          }
        },
        "description": "This class encapsulates the constants of {@link SubstitutionC}"
      },
      "ListOfSubstitutionPeriod": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SubstitutionPeriod"
        }
      },
      "BResult_1118179461": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ListOfPluginInfo"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "AutoFilingResult": {
        "type": "object",
        "properties": {
          "pathsAsString": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parentIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "description": "Contains the archive destination returned by a call to\n{@link IXServicePortIF#evalAutoFiling(ClientInfo, String, Sord, AutoFilingOptions)}."
      },
      "BRequest_IXServicePortIF_createKey": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXServerEvents_onAfterCheckinSord": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "sordDB": {
            "$ref": "#/components/schemas/Sord"
          },
          "parentSord": {
            "$ref": "#/components/schemas/Sord"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ListOfSubsInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SubsInfo"
        }
      },
      "BRequest_IXServicePortIF_deleteKeywords": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "kwids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "NoteTemplateC": {
        "type": "object",
        "properties": {
          "mbId": {
            "type": "string",
            "description": "Member bit: id"
          },
          "mbName": {
            "type": "string",
            "description": "Member bit: name"
          },
          "mbUserId": {
            "type": "string",
            "description": "Member bit: UserId"
          },
          "mbNoteText": {
            "type": "string",
            "description": "Member bit: noteText"
          },
          "mbNoteImage": {
            "type": "string",
            "description": "Member bit: noteImage"
          },
          "mbAcl": {
            "type": "string",
            "description": "Member bit: acl, aclItems"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "Member bit: all members"
          },
          "mbMin": {
            "description": "Elementselector: mbId",
            "$ref": "#/components/schemas/NoteTemplateZ"
          },
          "mbAll": {
            "description": "Elementselector: mbAllMembers",
            "$ref": "#/components/schemas/NoteTemplateZ"
          },
          "PLACEHOLDER_USERNAME": {
            "type": "string",
            "description": "Placeholder for user name. This constant can be used in NoteTemplate.textInfo.\ntext as a placeholder for the current\n user name."
          },
          "PLACEHOLDER_DATE": {
            "type": "string",
            "description": "Placeholder for date. This constant can be used in NoteTemplate.textInfo.\ntext as a placeholder for the current\n date."
          },
          "PLACEHOLDER_TIME": {
            "type": "string",
            "description": "Placeholder for time. This constant can be used in NoteTemplate.textInfo.\ntext as a placeholder for the current\n time."
          },
          "USERID_ALL": {
            "type": "string",
            "description": "Read/write note template visible for all users"
          },
          "RAW_ITEM_SEPARATOR": {
            "type": "string",
            "description": "Separates the values in the raw data representation."
          },
          "RAW_SUBITEM_SEPARATOR": {
            "type": "string",
            "description": "Separates the values of the subitems in the raw data representation."
          },
          "RAW_STAMPINFO_SEPARATOR": {
            "type": "string",
            "description": "Separates the values of the name and text in the raw data representation."
          },
          "lnName": {
            "type": "integer",
            "description": "Length of note template name.",
            "format": "int32"
          },
          "lnText": {
            "type": "integer",
            "description": "Length of text in class NoteText.",
            "format": "int32"
          }
        },
        "description": "Constants for class NoteTemplate"
      },
      "BRequest_IXServicePortIF_checkinWorkflowTemplate": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "wf": {
            "$ref": "#/components/schemas/WFDiagram"
          },
          "wfZ": {
            "$ref": "#/components/schemas/WFDiagramZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ConfigFileC": {
        "type": "object",
        "properties": {
          "COLD": {
            "type": "string",
            "description": "Directory for COLD background files."
          },
          "ELO_SCRIPTS": {
            "type": "string",
            "description": "Directory for scripts."
          },
          "INIT_DATA": {
            "type": "string",
            "description": "Directory of initialization data."
          },
          "POSTBOX": {
            "type": "string",
            "description": "Directory of Intray/postbox."
          },
          "CHECKOUT": {
            "type": "string",
            "description": "Server side checkout directory."
          },
          "TEMPLATE": {
            "type": "string",
            "description": "Old document template directory (ELO 5.0)."
          },
          "VIEWER_POSTBOX": {
            "type": "string",
            "description": "RESERVED"
          },
          "mbName": {
            "type": "string",
            "description": "Member bit: name"
          },
          "mbFileData": {
            "type": "string",
            "description": "Member bit: fileData"
          },
          "mbLastModified": {
            "type": "string",
            "description": "Member bit: lastModified"
          },
          "mbSize": {
            "type": "string",
            "description": "Member bit: size"
          },
          "mbUrl": {
            "type": "string",
            "description": "Member bit: URL"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "Member bit set: all members."
          },
          "mbAll": {
            "description": "Constant object for mbAllMembers.",
            "$ref": "#/components/schemas/ConfigFileZ"
          },
          "mbNoFileData": {
            "description": "Constant object for mbAllmembers without file data.",
            "$ref": "#/components/schemas/ConfigFileZ"
          }
        },
        "description": "Constants for the ConfigFile class. These are used for accessing server directories.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ArchivingModeC": {
        "type": "object",
        "properties": {
          "READWRITE": {
            "type": "integer",
            "description": "Version flag: no versioning.",
            "format": "int32"
          },
          "VERSION": {
            "type": "integer",
            "description": "Version flag: version controlled.",
            "format": "int32"
          },
          "READONLY": {
            "type": "integer",
            "description": "Version flag: read only.",
            "format": "int32"
          },
          "DEFAULT": {
            "type": "integer",
            "format": "int32"
          },
          "NONE": {
            "type": "integer",
            "format": "int32"
          },
          "dummy": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "KeywordsDynamicInfo": {
        "type": "object",
        "properties": {
          "sord": {
            "description": "\u003cp\u003e\nThis value contains data gathered by the client. The contents of sord will be given to the script to execute.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/Sord"
          },
          "maskLineFocus": {
            "description": "\u003cp\u003e\nAt the client, set this value to the mask line that currently has the focus. This value determines the server\n script to be executed. The server only reads the members maskId and id. For the server-side processing necessary\n residual values are read from the database.\n \u003c/p\u003e\n \u003cp\u003e\n The focused mask line is passed to the script to execute. Ignoring this value in the script is a valid use case.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/DocMaskLine"
          },
          "mapScriptName": {
            "type": "string",
            "description": "Determines the script to execute.\n\u003cp\u003e\n This value has only an effect if sord and maskLineFocus are set to null. Setting this value requires to set the\n values mapLineFocus and mapData also.\n \u003c/p\u003e"
          },
          "mapLineFocus": {
            "type": "string",
            "description": "Represents the id of a field in a form."
          },
          "mapData": {
            "description": "Represents the input data of a form.\n\u003cp\u003e\n The script to execute uses the values in this map to filter the resulting data set.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/MapToString"
          }
        },
        "description": "This Class contains parameters for the IX call\n{@link IXServicePortIF#checkoutKeywordsDynamic(ClientInfo, KeywordsDynamicInfo)} .\n \u003cp\u003e\n There are two ways to execute the script for dynamic keyword lists. According to the parameter in this class, the one\n way or the other is chosen. The first way is to specify {@link KeywordsDynamicInfo#sord} and\n {@link KeywordsDynamicInfo#maskLineFocus}. Then, the IX passes these parameters to the script via the script-function\n open(ec, sord, fieldName). The other parameters will be overwritten by \u003ccode\u003enull\u003c/code\u003e and completely ignored. The\n other way is to set the fields {@link KeywordsDynamicInfo#mapData}, {@link KeywordsDynamicInfo#mapLineFocus} and\n {@link KeywordsDynamicInfo#mapScriptName}. In this case, the IX passes these parameters to the scripting function\n openMap(ec, data, fieldName). To achieve this, \u003ccode\u003esord\u003c/code\u003e as well as \u003ccode\u003emaskLineFocus\u003c/code\u003e must be\n \u003ccode\u003enull\u003c/code\u003e.\n \u003c/p\u003e"
      },
      "ConfigFileZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants of the ConfigFileC class."
          }
        },
        "description": "This class encapsulates the constants of ConfigFileC."
      },
      "ForwardSubstitutionInfo": {
        "type": "object",
        "properties": {
          "substitutionGuid": {
            "type": "string",
            "description": "GUID of substitution to be forwarded or transfered."
          },
          "newSubstituteId": {
            "type": "integer",
            "description": "\u003cp\u003e\nId of the new substitute.\n \u003c/p\u003e\n \u003cp\u003e\n This value is ignored if {@link #newSubstituteName} is set.\n \u003c/p\u003e",
            "format": "int32"
          },
          "newSubstituteName": {
            "type": "string",
            "description": "\u003cp\u003e\nUser name of the new substitute.\n \u003c/p\u003e\n \u003cp\u003e\n {@link #newSubstituteId} is ignored if this member is set.\n \u003c/p\u003e"
          },
          "substitutionPeriods": {
            "description": "\u003cp\u003e\nNew substitution periods is a substitution if forwarded.\n \u003c/p\u003e\n \u003cp\u003e\n Must be set if a substitution is forwarded (set {@link #transferSubstitution} to false) and is ignored if a\n substitution if transfered (set {@link #transferSubstitution} to true)\n \u003c/p\u003e",
            "$ref": "#/components/schemas/ListOfSubstitutionPeriod"
          },
          "transferSubstitution": {
            "type": "boolean",
            "description": "Define if the substitution should be forwarded or transfered.\n\u003c/p\u003e"
          }
        },
        "description": "Forward a substitution from the its current substitute to a new substitute.\n\u003cp\u003e\n A substitution can either be forwarded or transfered.\n \u003c/p\u003e\n \u003cp\u003e\n \u003cb\u003eForward a substitution\u003c/b\u003e: The original substitution is not altered. An additional {@link Substitution} object is\n created by copying the original one and setting the new substitute.\u003cbr\u003e\n \u003cul\u003e\n \u003cli\u003eIf {@link SubstitutionSettings#canBeActivatedManually} is set to \u003ccode\u003etrue\u003c/code\u003e, an arbitrary number of\n SubstitutionPeriods (also 0) can be provided. The original ones are replaced with the new ones.\n \u003cli\u003eIf {@link SubstitutionSettings#canBeActivatedManually} is set to \u003ccode\u003efalse\u003c/code\u003e, all provided\n SubstitutionPeriods must be sub-periods of the original ones.\n \u003c/ul\u003e\n Set {@link #transferSubstitution} to false to forward a substitution.\n \u003c/p\u003e\n \u003cp\u003e\n \u003cb\u003eTransfer a substitution\u003c/b\u003e: A new {@link Substitution} object is created by copying it from the original one,\n only replacing the {@link Substitution#substituteId} by the provided new substitute. The original substitution is\n deleted. Set {@link #transferSubstitution} to true to transfer a substitution.\n \u003c/p\u003e"
      },
      "ESStatusObj": {
        "type": "object",
        "properties": {
          "esConnection": {
            "type": "boolean",
            "description": "Is this IX connected to the Elasticsearch server."
          },
          "runningUpdaters": {
            "description": "List of all IXs with an active updater process. It returns the IX ID and its progress percent.",
            "$ref": "#/components/schemas/MapToString"
          },
          "runningReindexers": {
            "description": "List of all IXs with an active reindex process. It returns the IX ID and its progress percent.",
            "$ref": "#/components/schemas/MapToString"
          },
          "lastExceptionUpdater": {
            "type": "string",
            "description": "Last exception of updater of this IX"
          },
          "lastExceptionReindexer": {
            "type": "string",
            "description": "Last exception of reindexer of this IX"
          }
        },
        "description": "Calling checkoutEsStatus returns this object to inform about the current status of connection to Elasticsearch and\nrunning processes."
      },
      "HtCloudInfo": {
        "type": "object",
        "description": "Currently unused."
      },
      "ArrayOfUserName": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserName"
        }
      },
      "BRequest_IXServicePortIF_findNextSords": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "searchId": {
            "type": "string"
          },
          "idx": {
            "type": "integer",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          }
        }
      },
      "StringValue": {
        "type": "object",
        "description": "Class to commit a text value to iSearch via QueryFilter."
      },
      "Subscription": {
        "type": "object",
        "properties": {
          "userGuid": {
            "type": "string",
            "description": "GUID of user who registered the subscription."
          },
          "watchGuid": {
            "type": "string",
            "description": "GUID of Object to be watched.\nThis is either a {@link de.elo.ix.client.feed.Feed#getGuid()}, {@link de.elo.ix.client.feed.Action#getGuid()} or\n {@link de.elo.ix.client.feed.HashTag#getHstgGuid()}."
          },
          "createDateIso": {
            "type": "string",
            "description": "Create date of the subscription."
          }
        },
        "description": "This class describes a subscription. A user can subscribe for changes to an object.\nCurrently, the only supported\n object type is a document feed. If the feed receives new comments, notification information is inserted into the\n database for the user. By calling FeedService.findFirstActions and setting FindActionsInfo.findNotifications\u003dtrue,\n the user can search for her notifications."
      },
      "BResult_1552114559": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/KeywordsDynamicResult"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BResult_341056676": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/Document"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_getServerInfoDM": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "HashSetOfHashTag": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/HashTag"
        }
      },
      "BRequest_IXServicePortIF_collectMapDomains": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ProcessInfoC": {
        "type": "object",
        "properties": {
          "DELSTATUS_ALL": {
            "type": "integer",
            "description": "Do not filter by SORD status.",
            "format": "int32"
          },
          "DELSTATUS_DELETED": {
            "type": "integer",
            "description": "filter ony deleted SORDs.",
            "format": "int32"
          },
          "DELSTATUS_VALID": {
            "type": "integer",
            "description": "Filter only undeleted SORDs.",
            "format": "int32"
          },
          "ERRORMODE_ALL": {
            "type": "integer",
            "description": "Processing will be stopped when an error occurs, regardless of the error type.",
            "format": "int32"
          },
          "ERRORMODE_CRITICAL_ONLY": {
            "type": "integer",
            "description": "Stop only on non-recoverable errors.",
            "format": "int32"
          },
          "ERRORMODE_SKIP_PROCINFO": {
            "type": "integer",
            "description": "Stop the ProcessInfo sequence for the current Node.",
            "format": "int32"
          },
          "ERRORMODE_SKIP_SUBTREE": {
            "type": "integer",
            "description": "Stop the subtree processing (processTrees only), but continue with list elements respectively siblings.",
            "format": "int32"
          },
          "PROCMSGMAX": {
            "type": "integer",
            "description": "Maximum allowed amount of error messages.",
            "format": "int32"
          }
        },
        "description": "Constants class for the ProcessInfo class.\nErrors: The error modes are ordered by increasing failure tolerance. In most cases a tree walk will traverse nodes in\n prefix mode except scripts, that may have an user defined processing position, so the operational success of a given\n node directly influences further processing. ERRORMODE_ALL, the zero failure tolerance, stops the job (nearly)\n immediately, while ERRORMODE_SKIP_SUBTREE just skips subtree traversals, but continues with lists or siblings. If you\n pass ERRORMODE_SKIP_PROCINFO the sequence of ProcessInfo members will be executed completely, whether errors occur or\n not. The most tolerant mode is ERRORMODE_SKIP_PROCINFO where only errors impeding further traversing stop the job.\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BResult_998509414": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/OcrResult"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "CheckoutWorkflowHistoryResult": {
        "type": "object",
        "properties": {
          "nodeHistories": {
            "description": "Map of the node histories. Node ID is the key.",
            "$ref": "#/components/schemas/MapToArrayListOfWFNodeHistory"
          }
        },
        "description": "This class contains the results returned by the function checkoutWorkflowHistory."
      },
      "DocMaskLineDataC": {
        "type": "object",
        "properties": {
          "mbMaskId": {
            "type": "string",
            "description": "DB column: maskno"
          },
          "mbId": {
            "type": "string",
            "description": "DB column: mlineno"
          },
          "mbRawType": {
            "type": "string",
            "description": "DB column: linetype"
          },
          "mbName": {
            "type": "string",
            "description": "DB column: linebez"
          },
          "lnName": {
            "type": "integer",
            "description": "DB column: linebez",
            "format": "int32"
          },
          "mbKey": {
            "type": "string",
            "description": "DB column: linekey"
          },
          "lnKey": {
            "type": "integer",
            "description": "DB column: linekey",
            "format": "int32"
          },
          "mbMin": {
            "type": "string",
            "description": "DB column: linemin"
          },
          "mbMax": {
            "type": "string",
            "description": "DB column: linemax"
          },
          "mbLKey": {
            "type": "string",
            "description": "DB column: linelkey"
          },
          "mbRawFlags": {
            "type": "string",
            "description": "DB column: lineflags"
          },
          "mbComment": {
            "type": "string",
            "description": "DB column: linecomment"
          },
          "lnComment": {
            "type": "integer",
            "description": "DB column: linecomment",
            "format": "int32"
          },
          "mbExternalData": {
            "type": "string",
            "description": "Member bit: External data.\nDB column: lineext"
          },
          "lnExternalData": {
            "type": "integer",
            "description": "Column length: External data.\nDB column: lineext",
            "format": "int32"
          },
          "mbInternalAcl": {
            "type": "string",
            "description": "Member bit: Internal acl.\nDB column: lineacl"
          },
          "lnInternalAcl": {
            "type": "integer",
            "description": "Column length: Internal acl.\nDB column: lineacl",
            "format": "int32"
          },
          "mbDefaultValue": {
            "type": "string",
            "description": "Member bit: This value is assigned to the ObjKey.data element for a new Sord object.\nDB column: linedefault"
          },
          "lnDefaultValue": {
            "type": "integer",
            "description": "Column length: This value is assigned to the ObjKey.data element for a new Sord object.\nDB column: linedefault",
            "format": "int32"
          },
          "mbTabIndex": {
            "type": "string",
            "description": "Member bit: This value represents the number of the tab, this line has to appear on.\nDB column: linetab"
          },
          "mbServerScriptName": {
            "type": "string",
            "description": "Member bit: A script or plugin at the server can serve as the data source of a dynamic keyword DB column:\nlinescript"
          },
          "lnServerScriptName": {
            "type": "integer",
            "description": "Column length: A script or plugin at the server can serve as the data source of a dynamic keyword DB column:\nlinescript",
            "format": "int32"
          },
          "mbNameTranslationKey": {
            "type": "string",
            "description": "Member bit: Translation-keyword for {@link DocMaskLine#name}.\nDB column: linebeztrkey"
          },
          "lnNameTranslationKey": {
            "type": "integer",
            "description": "Column length: Translation-keyword for {@link DocMaskLine#name}.\nDB column: linebeztrkey",
            "format": "int32"
          },
          "mbCommentTranslationKey": {
            "type": "string",
            "description": "Member bit: Translation-keyword for {@link DocMaskLine#comment}.\nDB column: linecommenttrkey"
          },
          "lnCommentTranslationKey": {
            "type": "integer",
            "description": "Column length: Translation-keyword for {@link DocMaskLine#comment}.\nDB column: linecommenttrkey",
            "format": "int32"
          },
          "mbValidateExpression": {
            "type": "string",
            "description": "Member bit: RegEx to validate user input for entry.\nDB column: validateexpression"
          },
          "lnValidateExpression": {
            "type": "integer",
            "description": "Column length: RegEx to validate user input for entry.\nDB column: validateexpression",
            "format": "int32"
          },
          "mbAllowedReferencedMaskIdsRaw": {
            "type": "string",
            "description": "Member bit: Specifies the {@link DocMask#id} allowed in a {@link DocMaskLineC#TYPE_RELATION}.\nDB column:\n allowedrefmaskids"
          },
          "lnAllowedReferencedMaskIdsRaw": {
            "type": "integer",
            "description": "Column length: Specifies the {@link DocMask#id} allowed in a {@link DocMaskLineC#TYPE_RELATION}.\nDB column:\n allowedrefmaskids",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of DocMaskLine\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ArrayOfIndexServerForArchive": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/IndexServerForArchive"
        }
      },
      "FindByType": {
        "type": "object",
        "properties": {
          "typeDocuments": {
            "type": "boolean",
            "description": "Include all document types"
          },
          "typeExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "typeIDs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "typeNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "typeStructures": {
            "type": "boolean",
            "description": "Include all structure elements"
          }
        },
        "description": "This class holds additional information for FindInfo, in order to restrict a search using document types.\nThe default\n resolving sequence is ordered by the grade of restriction: \u003cbr\u003e\n 1. typeIDs, typeNames, typeExtensions is the most specialised information, \u003cbr\u003e\n 2. typeDocuments containing all document types (IDs, Names, Extensions), \u003cbr\u003e\n 3. and typeStructures including all levels of structure elements. \u003cbr\u003e\n 4. If none of the parameters above is valid, the complete restriction FindByType is omitted. \u003cbr\u003e\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_checkoutActivityProject": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "projectName": {
            "type": "string"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BResult_333475674": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/HealthCheckInfos"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "NoteTemplateZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string"
          }
        }
      },
      "PhysDel": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "description": "GUID of deleted object."
          },
          "type": {
            "type": "integer",
            "description": "Type of deleted object.",
            "format": "int32"
          },
          "TStamp": {
            "type": "string",
            "description": "The object is deleted at this timestamp. Measured in the UTC time-zone."
          },
          "TStampSync": {
            "type": "string",
            "description": "Timestamp of this object\u0027s last export by the replication."
          }
        },
        "description": "This class represents one row in the database table physdel.\nThis table contains the guids of physically deleted\n objects. Those objects can be any objects with a guid: e.g. folders, documents, versions, users, workflows..."
      },
      "CheckinReportInfo": {
        "type": "object",
        "description": "Objects of this class specify the selection criteria for \u003ccode\u003echeckinReport\u003c/code\u003e.\n\u003cp\u003e\n Copyright: Copyright (c) 2014\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "QueryFilter": {
        "type": "object",
        "properties": {
          "boost": {
            "type": "number",
            "description": "Boost for calculated relevance.\n\u003cbr\u003e\n A field can be boosted and therefore has a higher influence on the calculated relevance.\u003cbr\u003e\n For more information, refere to \u003ca href\u003d\n \u0027https://www.elastic.co/guide/en/elasticsearch/guide/current/multi-query-strings.html#prioritising-clauses\u0027\u003ehttps://www.elastic.co/guide/en/elasticsearch/guide/current/multi-query-strings.html#prioritising-clauses\u003c/a\u003e",
            "format": "float"
          },
          "value": {
            "description": "The value for the QueryFilter.",
            "$ref": "#/components/schemas/FilterValue"
          },
          "docMaskLine": {
            "type": "string",
            "description": "Provide the name of the index field here.\n\u003cbr\u003e\n If searchField !\u003d SearchFieldC.INDEXFIELD, this value is ignored."
          },
          "searchField": {
            "description": "Provide the constant of the field to search in.\n\u003cbr\u003e\n To search in a index field, set this to SearchFieldC.INDEXFIELD and provide its name in docMaskLine.",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "fieldType": {
            "description": "Define how to search for a value.\n\u003cbr\u003e\n Options are tokenized, not tokenized, numeric, date.\u003cbr\u003e\n The delivered FilterValue must match this fieldType, if not, an exception is thrown.\u003cbr\u003e",
            "$ref": "#/components/schemas/FieldTypeE"
          },
          "indexFieldKey": {
            "type": "string",
            "description": "Provide the name of the index field here.\n\u003cbr\u003e\n If searchField !\u003d SearchFieldC.INDEXFIELD, this value is ignored. If the associated docmask is of type\n DocMaskC.DATA_ORGANISATION_OBJKEYS or DATA_ORGANISATION_TABLE the value of this field should be the line key of the\n docMaskLine. If the associated docMask is of type DocMaskC.DATA_ORGANISATION_ASPECT the value of this field should\n be the name of the aspectAssoc followed by \"_\" followed by the line key of the aspectLine, e.g.\n CUSTOMERADDRESS_STREET."
          }
        },
        "description": "\u003cp\u003e\nA QueryFilter is used to describe a value to search for in a document.\n \u003c/p\u003e\n \u003cp\u003e\n It references a field in which should be searched and its value.\n \u003c/p\u003e\n \u003cp\u003e\n There are other usecases, in which a QueryFilter is used to describe a certain field and its value is not needed and\n therefore ignored: To retrieve context terms and completions.\n \u003c/p\u003e\n \u003cp\u003e\n \u003cb\u003eUsage:\u003c/b\u003e Define where to search for the value by the parameters searchField and indexFieldKey. If the field you\n want to search in is defined in SearchFieldC, use one of the constants. In this case, the value of indexFieldKey is\n ignored.\u003cbr\u003e\n If you want to search in an index field, set searchField \u003d SearchFieldC.INDEXFIELD and provide its name in\n indexFieldKey. For a DocMask with data organization \"Aspect\" the indexFieldKey must contain the name of the\n aspectAssoc and the lineKey of the aspectLine separated by \"_\". For a DocMask with data organization \"ObjKey\" or\n \"Table\" the indexFieldKey must contain the lineKey of the docMaskLine.\n \u003cp\u003e\n \u003cb\u003eExamples:\u003c/b\u003e\n \u003cul\u003e\n \u003cli\u003eSearch for \"Hello World\" in the title:\u003cbr\u003e\n \u003ccode\u003efieldType \u003d SearchFieldC.TITLE; FilterValue \u003d new StringValue(\"Hello World\"); fieldType \u003d FieldTypeC.tokenized;\u003c/code\u003e\n \u003cli\u003eSearch for \"200\" in a numeric index line called NUMERICFIELD:\u003cbr\u003e\n \u003ccode\u003efieldType \u003d SearchFieldC.INDEXFIELD; docMaskLine\u003d\"NUMERICFIELD\", FilterValue \u003d new IntValue(200); fieldType \u003d FieldTypeC.numeric;\u003c/code\u003e\n \u003c/ul\u003e\n \u003c/p\u003e"
      },
      "WorkFlowNodeMatrix": {
        "type": "object",
        "properties": {
          "flowId": {
            "type": "integer",
            "description": "Workflow ID",
            "format": "int32"
          },
          "nodeId": {
            "type": "integer",
            "description": "Node ID",
            "format": "int32"
          },
          "isNext": {
            "type": "integer",
            "description": "Contains 1, if this node is active.\nDB column: wf_is_next",
            "format": "int32"
          },
          "terminate": {
            "type": "integer",
            "description": "ELO-date when the node was exited.\nDB column: wf_terminate",
            "format": "int32"
          },
          "succType": {
            "type": "integer",
            "description": "Type of successor node.",
            "format": "int32"
          },
          "succ_0": {
            "type": "integer",
            "format": "int32"
          },
          "succ_1": {
            "type": "integer",
            "format": "int32"
          },
          "succ_2": {
            "type": "integer",
            "format": "int32"
          },
          "succ_3": {
            "type": "integer",
            "format": "int32"
          },
          "succ_4": {
            "type": "integer",
            "format": "int32"
          },
          "succ_5": {
            "type": "integer",
            "format": "int32"
          },
          "succ_6": {
            "type": "integer",
            "format": "int32"
          },
          "succ_7": {
            "type": "integer",
            "format": "int32"
          },
          "succ_8": {
            "type": "integer",
            "format": "int32"
          },
          "succ_9": {
            "type": "integer",
            "format": "int32"
          },
          "succ_10": {
            "type": "integer",
            "format": "int32"
          },
          "succ_11": {
            "type": "integer",
            "format": "int32"
          },
          "succ_12": {
            "type": "integer",
            "format": "int32"
          },
          "succ_13": {
            "type": "integer",
            "format": "int32"
          },
          "succ_14": {
            "type": "integer",
            "format": "int32"
          },
          "succ_15": {
            "type": "integer",
            "format": "int32"
          },
          "succ_16": {
            "type": "integer",
            "format": "int32"
          },
          "succ_17": {
            "type": "integer",
            "format": "int32"
          },
          "succ_18": {
            "type": "integer",
            "format": "int32"
          },
          "succ_19": {
            "type": "integer",
            "format": "int32"
          },
          "succOvertime": {
            "type": "integer",
            "description": "Id of successor node, which should be activated by the escalation.",
            "format": "int32"
          },
          "versionId": {
            "type": "integer",
            "description": "Version ID.",
            "format": "int32"
          }
        },
        "description": "Helperclass to access the node matrix."
      },
      "BRequest_IXServicePortIF_linkSords": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "fromId": {
            "type": "string"
          },
          "toIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "linkZ": {
            "$ref": "#/components/schemas/LinkSordZ"
          }
        }
      },
      "DocVersionC": {
        "type": "object",
        "properties": {
          "UPLOAD_RESULT_ERROR": {
            "type": "string",
            "description": "This value should be set in DocVersion.uploadResult, if preview creation fails."
          },
          "URL_PARAM_OFFSET": {
            "type": "string",
            "description": "URL parameter offset. Used to read a file at a particular offset.\nDo not position offset after the length of the\n file. Example: String readUrl \u003d docVersion.url + \"\u0026amp;\" + URL_PARAM_OFFSET + \"\u003d\" + 123;"
          },
          "URL_PARAM_LENGTH": {
            "type": "string",
            "description": "URL parameter length. Used to read length bytes from a file. Do not read more bytes than the legnth of the file.\nExample: String readUrl \u003d docVersion.url + \"\u0026amp;\" + URL_PARAM_LENGTH + \"\u003d\" + 123;"
          },
          "URL_PARAM_CREATE_DATE": {
            "type": "string",
            "description": "URL parameter create date. Used to set the create date of the file. ISO date in UTC timezone.\nExample: String\n writeUrl \u003d docVersion.url + \"\u0026amp;\" + URL_PARAM_CREATE_DATE + \"\u003d\" + 20010203040506;"
          },
          "URL_PARAM_LAST_UPDATE": {
            "type": "string",
            "description": "URL parameter last write date. Used to set the last write time of the file. ISO date in UTC timezone.\nExample:\n String writeUrl \u003d docVersion.url + \"\u0026amp;\" + URL_PARAM_LAST_UPDATE + \"\u003d\" + 20010203040506;"
          },
          "URL_PARAM_LAST_ACCESS": {
            "type": "string",
            "description": "URL parameter last access date. Used to set the last access time of the file. ISO date in UTC timezone.\nExample:\n String writeUrl \u003d docVersion.url + \"\u0026amp;\" + URL_PARAM_LAST_ACCESS + \"\u003d\" + 20010203040506;"
          },
          "FLAG_MILESTONE": {
            "type": "integer",
            "description": "Document versions marked with this flag cannot be deleted.",
            "format": "int32"
          },
          "TYPE_DOCVERSION": {
            "type": "integer",
            "format": "int32"
          },
          "TYPE_ATTACHMENT": {
            "type": "integer",
            "format": "int32"
          },
          "lnComment": {
            "type": "integer",
            "description": "Length of version comment.",
            "format": "int32"
          },
          "lnVersion": {
            "type": "integer",
            "description": "Length of version number (like 1.0).",
            "format": "int32"
          },
          "lnExt": {
            "type": "integer",
            "description": "Length of file extension.",
            "format": "int32"
          }
        }
      },
      "ListOfContextTermQuery": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ContextTermQuery"
        }
      },
      "BRequest_IXServerEvents_onBeforeCheckinSord": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "sordDB": {
            "$ref": "#/components/schemas/Sord"
          },
          "parentSord": {
            "$ref": "#/components/schemas/Sord"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BResult_1768472140": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFVersion"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "PhysDelC": {
        "type": "object",
        "properties": {
          "ERROR": {
            "type": "integer",
            "description": "Unknown object type deleted.",
            "format": "int32"
          },
          "USER": {
            "type": "integer",
            "description": "User deleted.",
            "format": "int32"
          },
          "MASK": {
            "type": "integer",
            "description": "Keywording form deleted.",
            "format": "int32"
          },
          "COLOR": {
            "type": "integer",
            "description": "Color deleted.",
            "format": "int32"
          },
          "KEYWORDLIST": {
            "type": "integer",
            "description": "Keyword list deleted.",
            "format": "int32"
          },
          "SORD": {
            "type": "integer",
            "description": "Folder or document deleted.",
            "format": "int32"
          },
          "RELATION": {
            "type": "integer",
            "description": "Relation deleted.",
            "format": "int32"
          },
          "VERSION": {
            "type": "integer",
            "description": "Document version or attachment deleted.",
            "format": "int32"
          },
          "NOTE": {
            "type": "integer",
            "description": "Note or annotation deleted.",
            "format": "int32"
          },
          "ACTIVITY": {
            "type": "integer",
            "description": "Activity deleted.",
            "format": "int32"
          },
          "WORKFLOW": {
            "type": "integer",
            "description": "Workflow deleted.",
            "format": "int32"
          },
          "MAP": {
            "type": "integer",
            "description": "Map deleted.",
            "format": "int32"
          },
          "LINK": {
            "type": "integer",
            "description": "Link deleted.",
            "format": "int32"
          }
        },
        "description": "Constants for the PhysDel.type member."
      },
      "BRequest_IXServerEvents_onAfterEndEditWorkFlowNode": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "workflow": {
            "$ref": "#/components/schemas/WFDiagram"
          },
          "nodeId": {
            "type": "integer",
            "format": "int32"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          }
        }
      },
      "BResult_888671717": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/FileData"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "KeyValue": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key or identifying name."
          },
          "value": {
            "type": "string",
            "description": "Associated value."
          }
        },
        "description": "This class contains a name and an associated value.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_checkoutActivity": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "actGuid": {
            "type": "string"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ServerInfo": {
        "type": "object",
        "properties": {
          "indexServers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndexServerForArchive"
            }
          },
          "license": {
            "description": "License key for the Index Server. Read only.",
            "$ref": "#/components/schemas/License"
          },
          "version": {
            "type": "string",
            "description": "The version of the Index Server. Read only."
          },
          "replProcessOnServerId": {
            "type": "string",
            "description": "This value defines the server ID which is checked when a workflow is forwared."
          },
          "databaseEngine": {
            "type": "string",
            "description": "Database engine name. E. g.\nMSSQL, ORACLE, DB2 If connected to DB2, the character set UTF-8 is assumed for database\n columns that store Strings. In this case the length members of the constant classes (e.g. SordC.lnName resp.\n CONST.SORD.lnName) contain the column widths in bytes rather than characters. Use the IXConnection.truncate\n function to truncate a String value to fit the corresponding database column."
          },
          "instanceName": {
            "type": "string",
            "description": "Indexserver name. This is the name configured in config.xml or web.xml as \"ixid\"."
          }
        },
        "description": "\u003cp\u003e\nLicense key, version and list of other Indexservers\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "IXServicePortC": {
        "type": "object",
        "properties": {
          "STREAM_VERSION": {
            "type": "string",
            "description": "Version information used in binary serialization."
          },
          "ACCESS": {
            "description": "Constants for access rights.",
            "$ref": "#/components/schemas/AccessC"
          },
          "ACL_ITEM": {
            "description": "Constants for access control lists.",
            "$ref": "#/components/schemas/AclItemC"
          },
          "ACTIVITY": {
            "description": "Constants for Activities",
            "$ref": "#/components/schemas/ActivityC"
          },
          "ACTIVITY_PROJECT": {
            "description": "Constants for Activity project options.",
            "$ref": "#/components/schemas/ActivityProjectC"
          },
          "ALERT": {
            "description": "Constants for Alerts (messages).",
            "$ref": "#/components/schemas/AlertC"
          },
          "ARCHIVING_MODE": {
            "description": "Archiving modes like version controlled, read-only,...",
            "$ref": "#/components/schemas/ArchivingModeC"
          },
          "CHECKIN_USERS": {
            "description": "Options for the \u003ccode\u003echeckinUsers\u003c/code\u003e function.",
            "$ref": "#/components/schemas/CheckinUsersC"
          },
          "CHECKOUT_USERS": {
            "description": "Options for the \u003ccode\u003echeckoutUsers\u003c/code\u003e function.",
            "$ref": "#/components/schemas/CheckoutUsersC"
          },
          "COLOR": {
            "description": "Constants for colours",
            "$ref": "#/components/schemas/ColorDataC"
          },
          "CONFIG_FILE": {
            "description": "Constanst for ConfigFile.",
            "$ref": "#/components/schemas/ConfigFileC"
          },
          "COPY_SORD": {
            "description": "Constants (options) for the \u003ccode\u003ecopySord\u003c/code\u003e function.",
            "$ref": "#/components/schemas/CopySordC"
          },
          "COUNTER_INFO": {
            "description": "Constants for CounterInfo.",
            "$ref": "#/components/schemas/CounterInfoC"
          },
          "DOC_MASK": {
            "description": "Constants for storage masks.",
            "$ref": "#/components/schemas/DocMaskC"
          },
          "DOC_MASK_LINE": {
            "description": "Constants for storage mask index lines.",
            "$ref": "#/components/schemas/DocMaskLineC"
          },
          "DOC_VERSION": {
            "description": "Constants for document or attachment version history.",
            "$ref": "#/components/schemas/DocVersionC"
          },
          "EDIT_INFO": {
            "description": "Constants for editing indexing information and documents.",
            "$ref": "#/components/schemas/EditInfoC"
          },
          "EXPORT_OPTIONS": {
            "description": "Export options constants.",
            "$ref": "#/components/schemas/ExportOptionsC"
          },
          "IMPORT_OPTIONS": {
            "description": "Import options constants.",
            "$ref": "#/components/schemas/ImportOptionsC"
          },
          "IXEXCEPTION": {
            "description": "Error numbers used in Indexserver exceptions.",
            "$ref": "#/components/schemas/IXExceptionC"
          },
          "KEYWORD": {
            "description": "Keyword constants.",
            "$ref": "#/components/schemas/KeywordC"
          },
          "LINK_SORD": {
            "description": "Constants for linkSords",
            "$ref": "#/components/schemas/LinkSordC"
          },
          "LOCK": {
            "description": "Constants to lock and unlock data against concurrent modification.",
            "$ref": "#/components/schemas/LockC"
          },
          "NAV_INFO": {
            "description": "Constants for navigation information.",
            "$ref": "#/components/schemas/NavigationInfoC"
          },
          "NOTE": {
            "description": "Note.",
            "$ref": "#/components/schemas/NoteC"
          },
          "OBJ_KEY": {
            "description": "Index lines of indexing information.",
            "$ref": "#/components/schemas/ObjKeyC"
          },
          "PROCESS_INFO": {
            "description": "Constants for process information",
            "$ref": "#/components/schemas/ProcessInfoC"
          },
          "REMINDER": {
            "description": "Constants for reminders.",
            "$ref": "#/components/schemas/ReminderC"
          },
          "REPL_SET_NAME": {
            "description": "Constants for replication set names.",
            "$ref": "#/components/schemas/ReplSetNameC"
          },
          "REPORT": {
            "description": "Constants for report.",
            "$ref": "#/components/schemas/ReportC"
          },
          "REPORT_INFO": {
            "description": "ReportInfo constants including report action codes.",
            "$ref": "#/components/schemas/ReportInfoC"
          },
          "REPORT_MODE": {
            "description": "Constants for report modes (no, limited, verbose, full).",
            "$ref": "#/components/schemas/ReportModeC"
          },
          "REPORT_OPTIONS": {
            "description": "Constants for report options containing report erp codes",
            "$ref": "#/components/schemas/ReportOptionsC"
          },
          "SEARCH_MODE": {
            "description": "Constants for find options.",
            "$ref": "#/components/schemas/SearchModeC"
          },
          "SERVER_STATE": {
            "description": "Constants for server state providing the status of server modules.",
            "$ref": "#/components/schemas/ServerStateC"
          },
          "SESSION_OPTIONS": {
            "description": "Constants for session options.",
            "$ref": "#/components/schemas/SessionOptionsC"
          },
          "SORD": {
            "description": "Constants for the indexing information (Sord object).",
            "$ref": "#/components/schemas/SordC"
          },
          "SORD_HIST": {
            "description": "Constants for sord history.",
            "$ref": "#/components/schemas/SordHistC"
          },
          "SORD_HIST_KEY": {
            "description": "Constants for sord history entries.",
            "$ref": "#/components/schemas/SordHistKeyC"
          },
          "SORD_TYPE": {
            "description": "Constants for sord type.",
            "$ref": "#/components/schemas/SordTypeC"
          },
          "SORT_ORDER": {
            "description": "Sort orders like manually, alphabetically, ...",
            "$ref": "#/components/schemas/SortOrderC"
          },
          "STORE_INFO": {
            "description": "Constants for store info.",
            "$ref": "#/components/schemas/StoreInfoC"
          },
          "TAKE_NODE": {
            "description": "Constants for take node.",
            "$ref": "#/components/schemas/WFTakeNodeC"
          },
          "THESAURUS": {
            "description": "Constants for thesaurus.",
            "$ref": "#/components/schemas/ThesaurusC"
          },
          "USER_INFO": {
            "description": "Constants for user information.",
            "$ref": "#/components/schemas/UserInfoC"
          },
          "USER_PROFILE": {
            "description": "Constants for user profile.",
            "$ref": "#/components/schemas/UserProfileC"
          },
          "USER_TASK_PRIORITY": {
            "description": "Priority constants.",
            "$ref": "#/components/schemas/UserTaskPriorityC"
          },
          "USER_TASK_SORT_ORDER": {
            "description": "Sort order used when collecting tasks.",
            "$ref": "#/components/schemas/UserTaskSortOrderC"
          },
          "VT_DOC": {
            "description": "Constants for the control of the fulltext service.",
            "$ref": "#/components/schemas/VtDocC"
          },
          "WORKFLOW": {
            "description": "Constants for Workflows",
            "$ref": "#/components/schemas/WFDiagramC"
          },
          "WORKFLOW_NODE": {
            "description": "Constants for workflow nodes",
            "$ref": "#/components/schemas/WFNodeC"
          },
          "WORKFLOW_NODE_ASSOC_TYPE": {
            "description": "Constants for workflow node association types used by WFNodeMatrix",
            "$ref": "#/components/schemas/WFNodeMatrixC"
          },
          "WORKFLOW_TYPE": {
            "description": "Constants for workflows",
            "$ref": "#/components/schemas/WFTypeC"
          },
          "INVALIDATE_CACHE": {
            "description": "Constants for function invalidateCache.",
            "$ref": "#/components/schemas/InvalidateCacheC"
          },
          "WORKFLOW_VERSION": {
            "description": "Constants for WFVersion.",
            "$ref": "#/components/schemas/WFVersionC"
          },
          "NOTE_TEMPLATE": {
            "description": "Constants for NoteTemplate",
            "$ref": "#/components/schemas/NoteTemplateC"
          },
          "NOTE_FREEHAND": {
            "description": "Constants for NoteFreehand",
            "$ref": "#/components/schemas/NoteFreehandC"
          },
          "ARCHIVE_STATISTICS_OPTIONS": {
            "description": "Constants for getArchiveStatistics",
            "$ref": "#/components/schemas/ArchiveStatisticsOptionsC"
          },
          "MAP_CONFIG": {
            "description": "Constants for MapDomain, checkoutMap etc.",
            "$ref": "#/components/schemas/MapDomainC"
          },
          "MAP_DOMAIN": {
            "description": "Constants for MapDomain, checkoutMap etc.",
            "$ref": "#/components/schemas/MapDomainC"
          },
          "ELO_IX_OPT": {
            "description": "Constants for Indexserver options.",
            "$ref": "#/components/schemas/EloIxOptC"
          },
          "ANY": {
            "description": "Constants for class Any.",
            "$ref": "#/components/schemas/AnyC"
          },
          "SEARCH_TERMS": {
            "description": "Constants for {@link IXServicePortIF#getSearchTerms(ClientInfo, FindInfo, int)}.",
            "$ref": "#/components/schemas/SearchTermsC"
          },
          "ADMIN_MODE": {
            "description": "Constants for the administration mode.",
            "$ref": "#/components/schemas/AdminModeC"
          },
          "FULLTEXT_CONFIG": {
            "description": "Constanst for the fulltext configuration.",
            "$ref": "#/components/schemas/FulltextConfigC"
          },
          "SERVER_INFO_DM": {
            "description": "Constants for the class ServerInfoDM.",
            "$ref": "#/components/schemas/ServerInfoDMC"
          },
          "FIND_DIRECT": {
            "description": "Constants for the class FindDirect.",
            "$ref": "#/components/schemas/FindDirectC"
          },
          "ACTION": {
            "description": "Constants for feed actions.",
            "$ref": "#/components/schemas/ActionC"
          },
          "FEED": {
            "description": "Constants for document feed.",
            "$ref": "#/components/schemas/FeedC"
          },
          "TRANSLATE_TERM": {
            "description": "Constants for translate term.",
            "$ref": "#/components/schemas/TranslateTermC"
          },
          "EVENT_BUS": {
            "description": "Constants for event busses.",
            "$ref": "#/components/schemas/EventBusC"
          },
          "PREVIEW_IMAGE_INFO": {
            "description": "Constants for preview image info.",
            "$ref": "#/components/schemas/PreviewImageInfoC"
          },
          "RESOLVE_RIGHTS": {
            "description": "Constants for resolving rights.",
            "$ref": "#/components/schemas/ResolveRightsResultC"
          },
          "FIND_ACTIONS_INFO": {
            "description": "Constants for\n{@link de.elo.ix.client.feed.FeedService#findFirstActions(ClientInfo, de.elo.ix.client.feed.FindActionsInfo, int, de.elo.ix.client.feed.ActionZ)}.",
            "$ref": "#/components/schemas/FindActionsInfoC"
          },
          "SUBSCRIPTION": {
            "description": "Constants for Subscription",
            "$ref": "#/components/schemas/SubscriptionC"
          },
          "MAP_DATA": {
            "description": "Constants for MapData",
            "$ref": "#/components/schemas/MapDataC"
          },
          "MAP_HIST": {
            "description": "Constants for class MapHist.",
            "$ref": "#/components/schemas/MapHistC"
          },
          "WORKFLOW_EXPORT_OPTIONS": {
            "description": "Constants for function {@link IXServicePortIF#exportWorkflow(ClientInfo, WorkflowExportOptions)}.",
            "$ref": "#/components/schemas/WorkflowExportOptionsC"
          },
          "WORKFLOW_NODE_HISTORY": {
            "description": "Constants for workflow history.",
            "$ref": "#/components/schemas/WFNodeHistoryC"
          },
          "DOC_MASK_LINE_TEMPLATE": {
            "description": "Constants for storage mask index line templates.",
            "$ref": "#/components/schemas/DocMaskLineTemplateC"
          },
          "PUBLIC_DOWNLOAD": {
            "description": "Constants for public download.",
            "$ref": "#/components/schemas/PublicDownloadC"
          },
          "FILE_DATA": {
            "description": "Constants for FileDataC.",
            "$ref": "#/components/schemas/FileDataC"
          },
          "OCR_INFO": {
            "description": "Constants for OcrInfoC.",
            "$ref": "#/components/schemas/OcrInfoC"
          },
          "E_SEARCH_PARAMS": {
            "description": "Constants for ESearchParams.\nsearchIn",
            "$ref": "#/components/schemas/ESearchParamsC"
          },
          "ORG_UNIT_INFO": {
            "description": "Constants for OrgUnitInfo.",
            "$ref": "#/components/schemas/OrgUnitInfoC"
          },
          "SUBS_INFO": {
            "description": "Constants for SubsInfo.",
            "$ref": "#/components/schemas/SubsInfoC"
          },
          "SUBSTITUTION": {
            "description": "Constants for Substitution",
            "$ref": "#/components/schemas/SubstitutionC"
          },
          "CRYPT_INFO": {
            "description": "Constants for CryptInfo.",
            "$ref": "#/components/schemas/CryptInfoC"
          }
        },
        "description": "\u003cp\u003e\nConstants for options and classes used by Indexserver.\n \u003c/p\u003e\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_findNextSubscriptions": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "searchId": {
            "type": "string"
          },
          "idx": {
            "type": "integer",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "subsZ": {
            "$ref": "#/components/schemas/SubscriptionZ"
          }
        }
      },
      "BRequest_IXServicePortIF_startWorkFlow2": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          },
          "startWorkflowInfo": {
            "$ref": "#/components/schemas/StartWorkflowInfo"
          }
        }
      },
      "BRequest_PluginService_getHistory": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "VtDocC": {
        "type": "object",
        "properties": {
          "mbObjId": {
            "type": "string",
            "description": "DB column: objid"
          },
          "mbDocId": {
            "type": "string",
            "description": "DB column: objdoc"
          },
          "mbCode": {
            "type": "string",
            "description": "DB column: vtcode"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of VtDoc\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "FindByVersion": {
        "type": "object",
        "properties": {
          "versionComment": {
            "type": "string",
            "description": "User defined version description. The wildcard * is allowed, it matches any number of characters."
          },
          "versionMD5": {
            "type": "string",
            "description": "The md5 Hash value for the file."
          },
          "versionNumber": {
            "type": "string",
            "description": "User defined version number or version id. The wildcard * is allowed, it matches any number of characters."
          },
          "workVersionOnly": {
            "type": "boolean",
            "description": "Optional flag to restrict the search to active versions only."
          }
        },
        "description": "This class holds additional information for FindInfo, in order to restrict a search using the document history\n(version).\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "MapToNotification": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/Notification"
        }
      },
      "BResult_1078168929": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileData"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "RelationC": {
        "type": "object",
        "properties": {
          "mbParentId": {
            "type": "string",
            "description": "DB column: parentid"
          },
          "mbObjId": {
            "type": "string",
            "description": "DB column: objectid"
          },
          "mbOrdinal": {
            "type": "string",
            "description": "DB column: ordinal"
          },
          "mbStatus": {
            "type": "string",
            "description": "DB column: relstatus"
          },
          "mbTStamp": {
            "type": "string",
            "description": "DB column: reltstamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "DB column: reltstamp",
            "format": "int32"
          },
          "mbGuid": {
            "type": "string",
            "description": "Member bit: GUID DB column: relguid"
          },
          "lnGuid": {
            "type": "integer",
            "description": "Column length: GUID DB column: relguid",
            "format": "int32"
          },
          "mbDeleteDate": {
            "type": "string",
            "description": "Member bit: The Relation is deleted at this date. ClientInfo determines the Timezone.\nDB column: reldeletedate"
          },
          "mbRelMain": {
            "type": "string",
            "description": "Member bit: This Relation represents the main relation of an object, if this value is DB column: relmain"
          },
          "mbTStampSync": {
            "type": "string",
            "description": "Member bit: Timestamp of this object\u0027s last export by the replication.\nDB column: reltstampsync"
          },
          "lnTStampSync": {
            "type": "integer",
            "description": "Column length: Timestamp of this object\u0027s last export by the replication.\nDB column: reltstampsync",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of Relation\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_createEventBusSubscriber": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ListOfString": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "ServerState": {
        "type": "object",
        "properties": {
          "actionId": {
            "type": "integer",
            "description": "DB column: actionid",
            "format": "int32"
          },
          "subKey": {
            "type": "integer",
            "description": "DB column: subkey",
            "format": "int32"
          },
          "action": {
            "type": "string",
            "description": "DB column: action"
          }
        },
        "description": "Internal class."
      },
      "HealthCheckValueNameC": {
        "type": "object",
        "properties": {
          "DYNAMIC": {
            "type": "string",
            "description": "Name of dynamically evaluated values starts with this prefix."
          },
          "NB_OF_DOCUMENTS": {
            "type": "string",
            "description": "Number of logically documents."
          },
          "NB_OF_DOCUMENT_FILES": {
            "type": "string",
            "description": "Number of document files (resp. number of document versions)."
          },
          "TOTAL_SIZE_OF_DOCUMENT_FILES": {
            "type": "string",
            "description": "Total size of document files (resp. document versions)."
          },
          "NB_OF_DOCUMENT_FILES_WITH_BACKUP": {
            "type": "string",
            "description": "Number of document files with backup."
          },
          "NB_OF_DOCUMENT_FILES_WITHOUT_BACKUP": {
            "type": "string",
            "description": "Number of logically documents without backup."
          },
          "NB_OF_FAILED_LOGINS": {
            "type": "string",
            "description": "Number of failed logins. Due to wrong name or password."
          },
          "NB_OF_SUCCESSFUL_LOGINS": {
            "type": "string",
            "description": "Number of successful logins.\nthe full number of attempted logins, whether successful or not is the sum of\n successful and failed logins."
          },
          "NB_OF_SESSIONS": {
            "type": "string",
            "description": "Number of current sessions."
          },
          "STATUS_OF_VERSIONS": {
            "type": "string",
            "description": "Version status."
          },
          "FREE_SPACE_OF_SQL_SERVER": {
            "type": "string",
            "description": "Freier Speicher SQL Server."
          },
          "SIZE_OF_USED_JAVA_HEAP": {
            "type": "string",
            "description": "Java Heap Size."
          },
          "NB_OF_GARBAGE_COLLECTIONS": {
            "type": "string",
            "description": "Number of Garbage Collections."
          },
          "DURATION_OF_SEARCH_QUERY": {
            "type": "string",
            "description": "Search Task duration."
          },
          "DURATION_OF_SQL_QUERY": {
            "type": "string",
            "description": "Duration of SQL queries."
          },
          "DURATION_OF_WORKFLOW_FORWARDING": {
            "type": "string",
            "description": "Duration of Workflow forwarding."
          },
          "NB_OF_IX_METHOD_CALLS": {
            "type": "string",
            "description": "Number of IX-method calls."
          },
          "DURATION_OF_IX_METHOD_CALLS": {
            "type": "string",
            "description": "Duration of IX-method calls."
          },
          "NB_OF_CHECKINSORD": {
            "type": "string",
            "description": "Number of checkinSord calls."
          },
          "DURATION_OF_CHECKINSORD": {
            "type": "string",
            "description": "Duration of checkinSord calls."
          },
          "NB_OF_CHECKOUTSORD": {
            "type": "string",
            "description": "Number of checkoutSord calls."
          },
          "DURATION_OF_CHECKOUTSORD": {
            "type": "string",
            "description": "Duration of checkoutSord calls."
          }
        },
        "description": "Predefined value names for HealthCheckInfo objects."
      },
      "BResult_105830886": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubsInfo"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "MapToUserName": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/UserName"
        }
      },
      "BResult_1425760760": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ServerInfoDM"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "PublicDownloadOptions": {
        "type": "object",
        "properties": {
          "downloadIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expiration": {
            "type": "string",
            "description": "The expired time."
          },
          "remaining": {
            "type": "integer",
            "description": "The remaining download.",
            "format": "int32"
          },
          "docId": {
            "type": "string",
            "description": "The doc id."
          },
          "objId": {
            "type": "string",
            "description": "The obj id."
          },
          "fileNameFromSordName": {
            "type": "boolean",
            "description": "If true, the short description of the sord is used as file name in the download URL.\nOtherwise the original file\n name is used."
          },
          "contentDispositionAttachment": {
            "type": "boolean",
            "description": "If true, the document is downloaded as an attachment. Otherwise it content is shown in-line in the browser."
          }
        },
        "description": "This class contains several options that are used to get the public downloads.\n\u003cp\u003e\n Copyright: Copyright (c) 2014\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "WFVersionC": {
        "type": "object",
        "properties": {
          "lnComment": {
            "type": "integer",
            "description": "Length of WFVersion.comment.",
            "format": "int32"
          },
          "lnVersion": {
            "type": "integer",
            "description": "Length of WFVersion.version.",
            "format": "int32"
          }
        },
        "description": "Constants for WFVersion"
      },
      "BRequest_PluginService_upload": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "istream": {
            "$ref": "#/components/schemas/BStreamReference"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinAspect": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "aspect": {
            "$ref": "#/components/schemas/Aspect"
          },
          "aspectZ": {
            "$ref": "#/components/schemas/AspectZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_linkSords2": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "fromId": {
            "type": "string"
          },
          "toIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "linkSordZ": {
            "$ref": "#/components/schemas/LinkSordZ"
          },
          "linkSordInfo": {
            "$ref": "#/components/schemas/LinkSordInfo"
          }
        }
      },
      "ListOfESNodeObj": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ESNodeObj"
        }
      },
      "NavigationInfo": {
        "type": "object",
        "properties": {
          "ignoreDocuments": {
            "type": "boolean",
            "description": "ignore the navigation of documents"
          },
          "maxCount": {
            "type": "integer",
            "description": "maxCount is the overall maximum amount of visited nodes and is independent of successful processing.\nmaxCount does\n not depend on successful processing to be incremented, and it can stop the traversal before any of the other limits\n have been reached. Passing maxCount \u0026lt; 1 will turn off this limit.",
            "format": "int32"
          },
          "maxDepth": {
            "type": "integer",
            "description": "The maximum depth of the tree walk. Passing maxDepth \u0026lt; 1 turns off this limit.",
            "format": "int32"
          },
          "maxSiblings": {
            "type": "integer",
            "description": "The maximum number of siblings for one tree level.\nThis limit is most useful for ignoring the contents of large\n folders. Passing maxSiblings \u0026lt; 1 will turn the limit off.",
            "format": "int32"
          },
          "startIDs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "findInfo": {
            "description": "Specify additional filters for the tree walk.\n\u003cp\u003e\n Please note that specifying a custom findInfo always leads to a second search for each directory decreasing the\n overall performance. Use this only if processFindResult is not suitable.\n \u003c/p\u003e\n \u003cp\u003e\n Then, not every feature is supported which findInfo offers. Firstly, the member findChildren will be overwritten\n during the tree walk. Secondly, as a fulltext or direct search respectively influence the search for children, they\n are unsupported also.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/FindInfo"
          }
        },
        "description": "NavigationInfo is used as traversal information for structured bulk operations restricting specific processsing, e.g.\npooled jobs, to scalable amounts. It provides parameters controlling the traversal.\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "SystemInformation": {
        "type": "object"
      },
      "ESInfoObj": {
        "type": "object",
        "properties": {
          "STATUS_RED": {
            "type": "integer",
            "format": "int32"
          },
          "STATUS_YELLOW": {
            "type": "integer",
            "format": "int32"
          },
          "STATUS_GREEN": {
            "type": "integer",
            "format": "int32"
          },
          "documentCount": {
            "type": "integer",
            "format": "int32"
          },
          "connectionCount": {
            "type": "integer",
            "format": "int32"
          },
          "lastUpdate": {
            "type": "string"
          },
          "installedPlugins": {
            "$ref": "#/components/schemas/ListOfString"
          },
          "installedVersion": {
            "type": "string"
          },
          "arhiveStatus": {
            "type": "integer",
            "format": "int32"
          },
          "thesaurusStatus": {
            "type": "integer",
            "format": "int32"
          },
          "thesaurusLangs": {
            "$ref": "#/components/schemas/ListOfString"
          },
          "langsWithDocCount": {
            "$ref": "#/components/schemas/ListOfString"
          },
          "nodeList": {
            "$ref": "#/components/schemas/ListOfESNodeObj"
          }
        },
        "description": "\u003cb\u003e\u003ci\u003eNote: For internal use only. Might change in the near future.\n\u003c/i\u003e\u003c/b\u003e"
      },
      "ObjKeyC": {
        "type": "object",
        "properties": {
          "DUMMY_KEY_ID": {
            "type": "integer",
            "description": "This ID marks an ObjKey as Dummy.",
            "format": "int32"
          }
        },
        "description": "\u003cp\u003e\nConstants for the ObjKey class.\n \u003c/p\u003e\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "MapItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Map id."
          },
          "key": {
            "type": "string",
            "description": "Map key."
          },
          "value": {
            "type": "string",
            "description": "Map value."
          },
          "contentType": {
            "type": "string",
            "description": "Content Type."
          },
          "blobData": {
            "description": "Blob data.",
            "$ref": "#/components/schemas/BStreamReference"
          }
        },
        "description": "Internal class."
      },
      "BRequest_IXServicePortIF_forwardWorkflowNode": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "flowId": {
            "type": "integer",
            "format": "int32"
          },
          "nodeId": {
            "type": "integer",
            "format": "int32"
          },
          "fwdInfo": {
            "$ref": "#/components/schemas/ForwardWorkflowNodeInfo"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ProcessMoveDocumentsToStoragePath": {
        "type": "object",
        "properties": {
          "pathId": {
            "type": "string",
            "description": "Name or ID of the storage path"
          }
        },
        "description": "This class specifies the options for moving a document into another storage path.\nIt is used as member in\n \u003ccode\u003eProcessInfo\u003c/code\u003e and is interpreted in the functions \u003ccode\u003eprocessFindResult\u003c/code\u003e and\n \u003ccode\u003eprocessTrees\u003c/code\u003e."
      },
      "DocumentEvents": {
        "type": "object"
      },
      "ObjChange": {
        "type": "object",
        "properties": {
          "objId": {
            "type": "string",
            "description": "DB column: chgobjid"
          },
          "tStamp": {
            "type": "string",
            "description": "DB column: chgtstamp"
          },
          "code": {
            "type": "integer",
            "description": "DB column: chgcode",
            "format": "int32"
          },
          "param": {
            "type": "integer",
            "description": "DB column: chgparam",
            "format": "int32"
          },
          "param2": {
            "type": "string",
            "description": "DB column: chgparam2"
          },
          "user": {
            "type": "integer",
            "description": "DB column: chguser",
            "format": "int32"
          }
        },
        "description": "Internal class."
      },
      "BRequest_IXServicePortIF_checkinNotification": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "notif": {
            "$ref": "#/components/schemas/Notification"
          },
          "notiZ": {
            "$ref": "#/components/schemas/NotificationZ"
          }
        }
      },
      "ArrayOfTranslateTerm": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TranslateTerm"
        }
      },
      "BResult_1": {
        "type": "object",
        "properties": {
          "result": {
            "type": "boolean"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "AlertC": {
        "type": "object",
        "properties": {
          "MASKALARM": {
            "type": "integer",
            "description": "(to be defined)",
            "format": "int32"
          },
          "MASKWV": {
            "type": "integer",
            "description": "(to be defined)",
            "format": "int32"
          },
          "MASKPOST": {
            "type": "integer",
            "description": "(to be defined)",
            "format": "int32"
          },
          "MASKWF": {
            "type": "integer",
            "description": "(to be defined)",
            "format": "int32"
          },
          "MASKSONST": {
            "type": "integer",
            "description": "(to be defined)",
            "format": "int32"
          },
          "MASKVERT": {
            "type": "integer",
            "description": "(to be defined)",
            "format": "int32"
          },
          "MASKWVEDMSG": {
            "type": "integer",
            "description": "(to be defined)",
            "format": "int32"
          },
          "MASKWVDELMSG": {
            "type": "integer",
            "description": "(to be defined)",
            "format": "int32"
          },
          "WVSEEN": {
            "type": "integer",
            "description": "(to be defined)",
            "format": "int32"
          },
          "WVDELETED": {
            "type": "integer",
            "description": "(to be defined)",
            "format": "int32"
          },
          "WVEDITED": {
            "type": "integer",
            "description": "(to be defined)",
            "format": "int32"
          },
          "POSTMOVE": {
            "type": "integer",
            "description": "(to be defined)",
            "format": "int32"
          },
          "WFSTART": {
            "type": "integer",
            "description": "(to be defined)",
            "format": "int32"
          },
          "WFARRIVED": {
            "type": "integer",
            "description": "(to be defined)",
            "format": "int32"
          },
          "MESSAGE": {
            "type": "integer",
            "description": "(to be defined)",
            "format": "int32"
          },
          "NEWVERT": {
            "type": "integer",
            "description": "(to be defined)",
            "format": "int32"
          },
          "DELVERT": {
            "type": "integer",
            "description": "(to be defined)",
            "format": "int32"
          },
          "REPLERR": {
            "type": "integer",
            "description": "Alert is a message from the replication module",
            "format": "int32"
          }
        }
      },
      "BRequest_RawStreamService_download": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "params": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BResult_6": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BResult_5": {
        "type": "object",
        "properties": {
          "result": {
            "type": "integer",
            "format": "int32"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "ListOfContextTermResults": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ContextTermResults"
        }
      },
      "BRequest_IXServicePortIF_checkinKeys": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "keyInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyInfo"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "TranslateTermC": {
        "type": "object",
        "properties": {
          "GUID_SYSTEM_LANGUAGES": {
            "type": "string",
            "description": "Use this value in parameter \u003ccode\u003etermIds[.]\u003c/code\u003e to retrieve the system languages."
          },
          "TASKIDS_FOR_SYSTEM_LANGUAGES": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lnTermLang": {
            "type": "integer",
            "description": "Maximum term length;",
            "format": "int32"
          }
        },
        "description": "Constants for class TranslateTerm."
      },
      "BRequest_IXServicePortIF_findSearchTerms": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindInfo"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BRequest_IXServicePortIF_terminatePublicDownloadUrls": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "opts": {
            "$ref": "#/components/schemas/PublicDownloadOptions"
          }
        }
      },
      "HashTagDataC": {
        "type": "object",
        "properties": {
          "mbHstgGuid": {
            "type": "string",
            "description": "Member bit: HashTag GUID.\nDB column: hstgguid"
          },
          "lnHstgGuid": {
            "type": "integer",
            "description": "Column length: HashTag GUID.\nDB column: hstgguid",
            "format": "int32"
          },
          "mbHstgName": {
            "type": "string",
            "description": "Member bit: HashTag Name.\nDB column: hstgname"
          },
          "lnHstgName": {
            "type": "integer",
            "description": "Column length: HashTag Name.\nDB column: hstgname",
            "format": "int32"
          },
          "mbCreateDateIso": {
            "type": "string",
            "description": "Member bit: Create date.\nDB column: createdateiso"
          },
          "lnCreateDateIso": {
            "type": "integer",
            "description": "Column length: Create date.\nDB column: createdateiso",
            "format": "int32"
          },
          "mbLastUsedIso": {
            "type": "string",
            "description": "Member bit: Last used.\nDB column: lastusediso"
          },
          "lnLastUsedIso": {
            "type": "integer",
            "description": "Column length: Last used.\nDB column: lastusediso",
            "format": "int32"
          },
          "mbTStamp": {
            "type": "string",
            "description": "Member bit: Timestamp for replication.\nDB column: tstamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "Column length: Timestamp for replication.\nDB column: tstamp",
            "format": "int32"
          },
          "mbStatus": {
            "type": "string",
            "description": "Member bit: Status.\nDB column: status"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of HashTag\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "WorkflowExportOptions": {
        "type": "object",
        "properties": {
          "flowId": {
            "type": "string",
            "description": "Id of the workflow, that will be exported."
          },
          "flowVersId": {
            "type": "string",
            "description": "Reserved."
          },
          "characterSet": {
            "type": "string",
            "description": "Character set for the export-data."
          },
          "wordWrap": {
            "type": "string",
            "description": "Word wrap for the export-data."
          },
          "format": {
            "type": "integer",
            "description": "Export format.",
            "format": "int32"
          }
        },
        "description": "Structure for the options for the workflow-export.\n\u003cp\u003e\n Copyright: Copyright (c) 2009\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_getCompiledScripts": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "NavigationInfoC": {
        "type": "object",
        "properties": {
          "MIN_NAV_DEPTH": {
            "type": "integer",
            "description": "The minimum depth for tree walks.",
            "format": "int32"
          },
          "MIN_NAV_MAX_COUNT": {
            "type": "integer",
            "description": "The overall limit for any visited element.",
            "format": "int32"
          },
          "MIN_NAV_SIBLINGS": {
            "type": "integer",
            "description": "The minimum amount of collected siblings.",
            "format": "int32"
          },
          "SKIP_NAV_LIMIT": {
            "type": "integer",
            "description": "This constant is used to override the navigation limit.",
            "format": "int32"
          }
        },
        "description": "Constants class for the NavigationInfo class.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ArrayListOfString": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "MapToListOfMapToIndexValue": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/ListOfMapToIndexValue"
        }
      },
      "BRequest_IXServicePortIF_login": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userName": {
            "type": "string"
          },
          "userPwd": {
            "type": "string"
          },
          "clientComputer": {
            "type": "string"
          },
          "runAsUser": {
            "type": "string"
          }
        }
      },
      "PurgeSettingsC": {
        "type": "object",
        "properties": {
          "START_EVERY_HOUR": {
            "type": "integer",
            "description": "for startHour: when the purge task is starting and then every 60 minutes",
            "format": "int32"
          },
          "COMPARE_OFF": {
            "type": "integer",
            "description": "for fileCheckMode: no file comparison (not recommended)",
            "format": "int32"
          },
          "COMPARE_SIZE": {
            "type": "integer",
            "description": "for fileCheckMode: file comparison by file size",
            "format": "int32"
          },
          "COMPARE_CONTENT": {
            "type": "integer",
            "description": "for fileCheckMode: file comparision by file content",
            "format": "int32"
          }
        },
        "description": "Constants for class PurgeSettings"
      },
      "BRequest_IXServicePortIF_createDocMask": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "maskId": {
            "type": "string"
          }
        }
      },
      "BResult_1107316733": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocMaskLineTemplate"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "ReportErpCode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ERP code",
            "format": "int32"
          },
          "limited": {
            "type": "boolean",
            "description": "This code is wirtten in limited report"
          },
          "name": {
            "type": "string",
            "description": "ERP name"
          },
          "verbose": {
            "type": "boolean",
            "description": "This code is written in verbose report"
          }
        },
        "description": "This class describes an ERP code - a filter code number in the ELO report.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "QueryJobProtocolInfo": {
        "type": "object",
        "properties": {
          "jobGuid": {
            "type": "string",
            "description": "The GUID of the background thread to query the log informations. Mandatory."
          },
          "startDateISO": {
            "type": "string",
            "description": "Marks the earliest date at which log information has to be reported.\nAs only cached values are returned, the value\n is ignored, if the oldest cached log information is younger that that date. Optional."
          },
          "startEventId": {
            "type": "integer",
            "description": "If the value of startEventId is \u0026ge;0, only eventIds \u0026ge; that value will be returned. Optional.",
            "format": "int32"
          },
          "level": {
            "type": "integer",
            "description": "Filter for the level of log messages.\nIf set, it has to be one of {@link QueryJobProtocolC#LOG_LEVEL_ERROR},\n {@link QueryJobProtocolC#LOG_LEVEL_WARN}, or {@link QueryJobProtocolC#LOG_LEVEL_INFO}. Multiple values can be set\n via the bit operation \"|\". If not set, only messages of LOG_LEVEL_ERROR are returned.",
            "format": "int32"
          }
        },
        "description": "This class contains the parameters for the interface function\n{@link IXServicePortIF#queryJobProtocol(ClientInfo, QueryJobProtocolInfo)}."
      },
      "BRequest_FioService_startImport": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "options": {
            "$ref": "#/components/schemas/ImportOptions"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinTranslateTerms": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "tterms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslateTerm"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutReportOptions": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "DocMaskLineTemplateZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string"
          }
        },
        "description": "This class encapsulates the constants of the DocMaskLineTemplateC class."
      },
      "BResult_1383534582": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ArchivReport"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "ClientInfo": {
        "type": "object",
        "properties": {
          "callId": {
            "type": "string",
            "description": "This string is used for debugging purposes only. It is displayed in error messages and reports."
          },
          "country": {
            "type": "string",
            "description": "Country in ISO 3166 format - this is the country for the ELO Client.\n\u003ctable border\u003d\"2\" summary\u003d\"\"\u003e\n \u003ctr\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eCZ\u003c/td\u003e\n \u003ctd\u003eCzeach Republic\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eFR\u003c/td\u003e\n \u003ctd\u003eFrance\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eDE\u003c/td\u003e\n \u003ctd\u003eGermany\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eGR\u003c/td\u003e\n \u003ctd\u003eGreece\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eES\u003c/td\u003e\n \u003ctd\u003eSpain\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003ePL\u003c/td\u003e\n \u003ctd\u003ePoland\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eGB\u003c/td\u003e\n \u003ctd\u003eUnited Kingdom\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eUS\u003c/td\u003e\n \u003ctd\u003eUnited States\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e"
          },
          "language": {
            "type": "string",
            "description": "The users language in ISO 639 format. Exception messages will be supplied in this language.\n\u003ctable border\u003d\"2\" summary\u003d\"\"\u003e\n \u003ctr\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003ecs\u003c/td\u003e\n \u003ctd\u003eCzech\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003ede\u003c/td\u003e\n \u003ctd\u003eGerman\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eel\u003c/td\u003e\n \u003ctd\u003eGreek\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003een\u003c/td\u003e\n \u003ctd\u003eEnglish\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003ees\u003c/td\u003e\n \u003ctd\u003eSpanish\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003efr\u003c/td\u003e\n \u003ctd\u003eFrench\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003epl\u003c/td\u003e\n \u003ctd\u003ePolish\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e\n Only languages for which the localisations of the Indexserver resources exist can be selected, otherwise the\n messages are displayed in the default language."
          },
          "ticket": {
            "type": "string",
            "description": "\u003cp\u003e\nThis is the session ID in the communication between the client and the Indexserver. It has a limited lifetime. The\n lifetime can be configured at the ELOAM (access manager server). The Indexserver returns a valid ticket if the\n IXServicePortIF.login call succeeds. The lifetime of the ticket can be extended by calling IXServicePortIF.alive.\n \u003c/p\u003e"
          },
          "timeZone": {
            "type": "string",
            "description": "The time zone for the ELO client.\nCan be one of the predefined time zone IDs in the Java platform or a string of\n format \"GMT\" + sign + hh + \":\" + mm."
          },
          "options": {
            "type": "integer",
            "description": "Internal use only.\nBit 0 of this member is set for requests that are send from one Indexserver instance to another\n instance in load balancing scenarios.",
            "format": "int32"
          }
        },
        "description": "Contains the session ticket and the users language and country.\nEach Indexserver interface function, except the\n login, requires a \u003ccode\u003eClientInfo\u003c/code\u003e object as parameter with a valid session ticket.\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BResult_206201524": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Keyword"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "MapHeadC": {
        "type": "object",
        "properties": {
          "mbId": {
            "type": "string",
            "description": "DB column: mapid"
          },
          "lnId": {
            "type": "integer",
            "description": "DB column: mapid",
            "format": "int32"
          },
          "mbLockId": {
            "type": "string",
            "description": "DB column: maplockid"
          },
          "mbObjId": {
            "type": "string",
            "description": "DB column: mapobjid"
          },
          "mbTStamp": {
            "type": "string",
            "description": "DB column: maptstamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "DB column: maptstamp",
            "format": "int32"
          },
          "mbGuid": {
            "type": "string",
            "description": "DB column: mapguid"
          },
          "lnGuid": {
            "type": "integer",
            "description": "DB column: mapguid",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of MapHead\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ActivityDataC": {
        "type": "object",
        "properties": {
          "mbGuid": {
            "type": "string",
            "description": "DB column: actguid"
          },
          "lnGuid": {
            "type": "integer",
            "description": "DB column: actguid",
            "format": "int32"
          },
          "mbObjGuid": {
            "type": "string",
            "description": "DB column: docguid"
          },
          "lnObjGuid": {
            "type": "integer",
            "description": "DB column: docguid",
            "format": "int32"
          },
          "mbTStamp": {
            "type": "string",
            "description": "DB column: acttstamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "DB column: acttstamp",
            "format": "int32"
          },
          "mbProject": {
            "type": "string",
            "description": "DB column: project"
          },
          "lnProject": {
            "type": "integer",
            "description": "DB column: project",
            "format": "int32"
          },
          "mbRevVers": {
            "type": "string",
            "description": "DB column: revvers"
          },
          "lnRevVers": {
            "type": "integer",
            "description": "DB column: revvers",
            "format": "int32"
          },
          "mbReceiverId": {
            "type": "string",
            "description": "DB column: owner"
          },
          "mbSenderId": {
            "type": "string",
            "description": "DB column: creator"
          },
          "mbPrio": {
            "type": "string",
            "description": "DB column: prio"
          },
          "mbName": {
            "type": "string",
            "description": "DB column: shortdesc"
          },
          "lnName": {
            "type": "integer",
            "description": "DB column: shortdesc",
            "format": "int32"
          },
          "mbDestination": {
            "type": "string",
            "description": "DB column: destination"
          },
          "lnDestination": {
            "type": "integer",
            "description": "DB column: destination",
            "format": "int32"
          },
          "mbSentAtIso": {
            "type": "string",
            "description": "DB column: sentat"
          },
          "lnSentAtIso": {
            "type": "integer",
            "description": "DB column: sentat",
            "format": "int32"
          },
          "mbSentMode": {
            "type": "string",
            "description": "DB column: sentmode"
          },
          "lnSentMode": {
            "type": "integer",
            "description": "DB column: sentmode",
            "format": "int32"
          },
          "mbDueDateIso": {
            "type": "string",
            "description": "DB column: duedate"
          },
          "lnDueDateIso": {
            "type": "integer",
            "description": "DB column: duedate",
            "format": "int32"
          },
          "mbBackAt": {
            "type": "string",
            "description": "DB column: backat"
          },
          "lnBackAt": {
            "type": "integer",
            "description": "DB column: backat",
            "format": "int32"
          },
          "mbBackMode": {
            "type": "string",
            "description": "DB column: backmode"
          },
          "lnBackMode": {
            "type": "integer",
            "description": "DB column: backmode",
            "format": "int32"
          },
          "mbComment": {
            "type": "string",
            "description": "DB column: actcomment"
          },
          "lnComment": {
            "type": "integer",
            "description": "DB column: actcomment",
            "format": "int32"
          },
          "mbFileName": {
            "type": "string",
            "description": "DB column: filename"
          },
          "lnFileName": {
            "type": "integer",
            "description": "DB column: filename",
            "format": "int32"
          },
          "mbUd0": {
            "type": "string",
            "description": "DB column: ud0"
          },
          "lnUd0": {
            "type": "integer",
            "description": "DB column: ud0",
            "format": "int32"
          },
          "mbUd1": {
            "type": "string",
            "description": "DB column: ud1"
          },
          "lnUd1": {
            "type": "integer",
            "description": "DB column: ud1",
            "format": "int32"
          },
          "mbUd2": {
            "type": "string",
            "description": "DB column: ud2"
          },
          "lnUd2": {
            "type": "integer",
            "description": "DB column: ud2",
            "format": "int32"
          },
          "mbUd3": {
            "type": "string",
            "description": "DB column: ud3"
          },
          "lnUd3": {
            "type": "integer",
            "description": "DB column: ud3",
            "format": "int32"
          },
          "mbUd4": {
            "type": "string",
            "description": "DB column: ud4"
          },
          "lnUd4": {
            "type": "integer",
            "description": "DB column: ud4",
            "format": "int32"
          },
          "mbUd5": {
            "type": "string",
            "description": "DB column: ud5"
          },
          "lnUd5": {
            "type": "integer",
            "description": "DB column: ud5",
            "format": "int32"
          },
          "mbUd6": {
            "type": "string",
            "description": "DB column: ud6"
          },
          "lnUd6": {
            "type": "integer",
            "description": "DB column: ud6",
            "format": "int32"
          },
          "mbUd7": {
            "type": "string",
            "description": "DB column: ud7"
          },
          "lnUd7": {
            "type": "integer",
            "description": "DB column: ud7",
            "format": "int32"
          },
          "mbUd8": {
            "type": "string",
            "description": "DB column: ud8"
          },
          "lnUd8": {
            "type": "integer",
            "description": "DB column: ud8",
            "format": "int32"
          },
          "mbUd9": {
            "type": "string",
            "description": "DB column: ud9"
          },
          "lnUd9": {
            "type": "integer",
            "description": "DB column: ud9",
            "format": "int32"
          },
          "mbTransId": {
            "type": "string",
            "description": "Member bit: Application defined value.\nDB column: transmitid"
          },
          "lnTransId": {
            "type": "integer",
            "description": "Column length: Application defined value.\nDB column: transmitid",
            "format": "int32"
          },
          "mbObjId": {
            "type": "string",
            "description": "Member bit: Object ID of the associated folder or document.\nDB column: objid"
          },
          "mbObjType": {
            "type": "string",
            "description": "Member bit: Object type of the associated folder or document.\nDB column: objtype"
          },
          "mbTStampSync": {
            "type": "string",
            "description": "Member bit: Timestamp of this object\u0027s last export by the replication.\nDB column: acttstampsync"
          },
          "lnTStampSync": {
            "type": "integer",
            "description": "Column length: Timestamp of this object\u0027s last export by the replication.\nDB column: acttstampsync",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of Activity\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BResult_1001617329": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserName"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_findFirstTasks": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindTasksInfo"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BRequest_MyELOService_cleanUpNotifications": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "info": {
            "$ref": "#/components/schemas/CleanUpInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_getPublicDownloads": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "opts": {
            "$ref": "#/components/schemas/PublicDownloadOptions"
          }
        }
      },
      "ListOfInteger": {
        "type": "array",
        "items": {
          "type": "integer",
          "format": "int32"
        }
      },
      "AdminModeC": {
        "type": "object",
        "properties": {
          "ON": {
            "type": "integer",
            "description": "Administration mode is active",
            "format": "int32"
          },
          "OFF": {
            "type": "integer",
            "description": "Administration mode is inactive",
            "format": "int32"
          },
          "QUERY": {
            "type": "integer",
            "description": "Query administration mode",
            "format": "int32"
          }
        },
        "description": "Constants for the administration mode."
      },
      "BRequest_FeedService_findHashTagByActions": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "actionGuids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hashTagZ": {
            "$ref": "#/components/schemas/HashTagZ"
          }
        }
      },
      "BResult_2011132580": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/MapData"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "EloIxOpt_old": {
        "type": "object",
        "properties": {
          "optNo": {
            "type": "integer",
            "description": "DB column: optno",
            "format": "int32"
          },
          "optVal": {
            "type": "string",
            "description": "DB column: optval"
          },
          "remark": {
            "type": "string",
            "description": "DB column: remark"
          }
        },
        "description": "Internal class."
      },
      "CreateSuperiorSubstitutionInfo": {
        "type": "object",
        "properties": {
          "userToSubstituteId": {
            "type": "integer",
            "description": "\u003cp\u003e\nUser to be substituted by superior.\n \u003c/p\u003e\n \u003cp\u003e\n This value is ignored if {@link #userToSubstituteName} is set.\n \u003c/p\u003e",
            "format": "int32"
          },
          "userToSubstituteName": {
            "type": "string",
            "description": "\u003cp\u003e\nUser to be substituted by superior.\n \u003c/p\u003e\n \u003cp\u003e\n {@link #userToSubstituteId} is ignored if this member is set.\n \u003c/p\u003e"
          }
        },
        "description": "Define how a superior substitution is created.\n\u003cp\u003e\n A superior has the right to substitute any of its subordinates.\n \u003c/p\u003e\n \u003cp\u003e\n A superior substitution has {@link SubstitutionSettings#superiorSubstitution} set to true.\n \u003c/p\u003e"
      },
      "BRequest_IXServerEvents_getUserNames": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "checkoutUsersZ": {
            "$ref": "#/components/schemas/CheckoutUsersZ"
          }
        }
      },
      "ReplSetCombinationC": {
        "type": "object",
        "properties": {
          "mbCombiGuid": {
            "type": "string",
            "description": "DB column: combiid"
          },
          "lnCombiGuid": {
            "type": "integer",
            "description": "DB column: combiid",
            "format": "int32"
          },
          "mbCombi": {
            "type": "string",
            "description": "DB column: dw"
          },
          "lnCombi": {
            "type": "integer",
            "description": "DB column: dw",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of ReplSetCombination\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "HealthCheckInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Value name."
          },
          "timeStamp": {
            "type": "string"
          },
          "stringValue": {
            "type": "string",
            "description": "String value. Either this or {@link #doubleValue} has to be set."
          },
          "doubleValue": {
            "type": "number",
            "description": "Numeric value. Either this value or {@link #stringValue} has to be set.",
            "format": "double"
          },
          "sampleSize": {
            "type": "string",
            "description": "Sample size for mean values.\nIf {@link #doubleValue} is a arithmetic mean, this value gives the number of the\n underlying samples. If {@link #stringValue} is set, this value has to be 0."
          },
          "minValue": {
            "type": "string",
            "description": "Minimaler Wert für mean values.\n\u003cp\u003e\n EIX-1408\n \u003c/p\u003e"
          },
          "maxValue": {
            "type": "string",
            "description": "Maximaler Wert für mean values.\n\u003cp\u003e\n EIX-1408\n \u003c/p\u003e"
          },
          "operation": {
            "description": "Operation to process when updating the value.",
            "$ref": "#/components/schemas/HealthCheckValueOperation"
          },
          "type": {
            "description": "Type defining interpretation of the given data.\n\u003cp\u003e\n EIX-1408\n \u003c/p\u003e",
            "$ref": "#/components/schemas/HealthCheckInfoType"
          }
        },
        "description": "This class represents one value for health check evaluation."
      },
      "IndexValueC": {
        "type": "object",
        "properties": {
          "TYPE_INT": {
            "type": "integer",
            "format": "int32"
          },
          "TYPE_DOUBLE": {
            "type": "integer",
            "format": "int32"
          },
          "TYPE_STRING": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "This class defines the constants for the type member in IndexValue."
      },
      "DocMaskLineTemplateC": {
        "type": "object",
        "properties": {
          "mbType": {
            "type": "string",
            "description": "Member bit: The type of the line information. This can be one of the \u003ccode\u003eDocMaskLineC.\nLINETYPE_*\u003c/code\u003e\n constants."
          },
          "mbFlags": {
            "type": "string",
            "description": "Member bit: Line flags"
          },
          "mbAcl": {
            "type": "string",
            "description": "Member bit: ACL"
          },
          "mbAllowedMaskIdsForKeywordingRelation": {
            "type": "string",
            "description": "Member bit: allowedMaskIds"
          },
          "mbOnlyLock": {
            "description": "Only lock or unlock",
            "$ref": "#/components/schemas/DocMaskLineTemplateZ"
          },
          "mbAll": {
            "description": "Read or write all elements.",
            "$ref": "#/components/schemas/DocMaskLineTemplateZ"
          },
          "lnAcl": {
            "type": "integer",
            "description": "ACL length",
            "format": "int32"
          },
          "mbAclItems": {
            "type": "string"
          },
          "mbHidden": {
            "type": "string"
          },
          "mbOnlyBuzzwords": {
            "type": "string"
          },
          "mbPostfixAsterix": {
            "type": "string"
          },
          "mbPrefixAsterix": {
            "type": "string"
          },
          "mbReadOnly": {
            "type": "string"
          },
          "mbTranslate": {
            "type": "string"
          },
          "mbImportant": {
            "type": "string"
          },
          "mbVersion": {
            "type": "string"
          }
        },
        "description": "\u003cp\u003e\nConstants related to class \u003ccode\u003eDocMaskLineTemplate\u003c/code\u003e."
      },
      "MapToArrayOfbyte": {
        "type": "object",
        "additionalProperties": {
          "type": "string",
          "format": "byte"
        }
      },
      "LicenseType": {
        "type": "object",
        "properties": {
          "PRODUCTION": {
            "description": "Production system.",
            "$ref": "#/components/schemas/LicenseType"
          },
          "TEST": {
            "description": "Test system.",
            "$ref": "#/components/schemas/LicenseType"
          },
          "DEVELOPMENT": {
            "description": "Development system.",
            "$ref": "#/components/schemas/LicenseType"
          }
        },
        "description": "This enumeration defines constants for the license type.\nThe license type is set during installation as production,\n test or development."
      },
      "MapToHashTag": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/HashTag"
        }
      },
      "BResult_1556767716": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/HashMapToHashTag"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "InvalidateCacheInfo": {
        "type": "object",
        "properties": {
          "flags": {
            "type": "integer",
            "description": "A combination of bits defined in InvalidateCacheC.",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "A numeric ID to specify an object, workflow etc. If \u003ccode\u003eflags\u003c/code\u003e contains \u003ccode\u003eInvalidateC.\nWORKFLOWS\u003c/code\u003e\n this element defines the ID of the active workflow to be updated in the cache.",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "description": "A GUID to specify the modified object."
          },
          "value": {
            "type": "string",
            "description": "Optional value related to {@link #flags} member.\nIf flags specifies {@link InvalidateCacheC#OBJKEY_DISPLAY_DATA},\n this value contains the"
          },
          "parameters": {
            "$ref": "#/components/schemas/ListOfInvalidateCacheInfoParam"
          },
          "workflowCacheSyncInfos": {
            "description": "Data for workflow cache synchronisation.",
            "$ref": "#/components/schemas/ListOfWFCacheSyncInfo"
          },
          "ticket": {
            "type": "string",
            "description": "Refresh options of this session."
          }
        },
        "description": "This class contains the parameters for the API function invalidateCache2"
      },
      "AclAccessResult": {
        "type": "object",
        "properties": {
          "access": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "This class contains the result return by the method getAclAccess."
      },
      "BRequest_IXServerEvents_onFindSordsResult": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindInfo"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "findResult": {
            "$ref": "#/components/schemas/FindResult"
          }
        }
      },
      "ContextTerm": {
        "type": "object",
        "properties": {
          "term": {
            "type": "string"
          },
          "docNum": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BRequest_IXServicePortIF_getImportZipUrl": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "importId": {
            "type": "string"
          }
        }
      },
      "ArrayOfConfigFile": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ConfigFile"
        }
      },
      "BRequest_IXServicePortIF_getExportZipUrl": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "exportId": {
            "type": "string"
          }
        }
      },
      "ESearchParamsC": {
        "type": "object",
        "properties": {
          "TITLE": {
            "type": "string",
            "description": "Search in title"
          },
          "FULLTEXT": {
            "type": "string",
            "description": "Search in FULLTEXT"
          },
          "INDEX_FIELDS": {
            "type": "string",
            "description": "Search in INDEX_FIELDS"
          },
          "EXTRA_TEXT": {
            "type": "string",
            "description": "Search in EXTRA_TEXT"
          },
          "VERSION": {
            "type": "string",
            "description": "Search in latest VERSION"
          },
          "FEED": {
            "type": "string",
            "description": "Search in FEED"
          }
        },
        "description": "\u003cp\u003e\nConstants for searchIn selector.\n \u003c/p\u003e\n \u003cp\u003e\n Example for multiple selection to search in title and fulltext:\u003cbr\u003e\n \u003ccode\u003esearchIn \u003d SearchObjectC.TITLE | SearchObjectC.FULLTEXT\u003c/code\u003e\n \u003c/p\u003e"
      },
      "EloFtOptDataC": {
        "type": "object",
        "properties": {
          "mbId": {
            "type": "string",
            "description": "DB column: optid"
          },
          "mbValue": {
            "type": "string",
            "description": "DB column: optval"
          },
          "lnValue": {
            "type": "integer",
            "description": "DB column: optval",
            "format": "int32"
          },
          "mbRemark": {
            "type": "string",
            "description": "DB column: remark"
          },
          "lnRemark": {
            "type": "integer",
            "description": "DB column: remark",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of EloFtOpt\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_checkinDocDupl": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "MapToAspectAssoc": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/AspectAssoc"
        }
      },
      "BRequest_IXServicePortIF_activateSubstitution": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "substitutionGuid": {
            "type": "string"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ArrayOfColorData": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ColorData"
        }
      },
      "SordHist": {
        "type": "object",
        "properties": {
          "histGuid": {
            "type": "string",
            "description": "GUID of the SordHist object."
          },
          "histSource": {
            "type": "integer",
            "description": "Identifies the application with which changes were made to the keywording.",
            "format": "int32"
          },
          "objGuid": {
            "type": "string",
            "description": "GUID of the sord object."
          },
          "timeStampLocal": {
            "type": "string",
            "description": "Timestamp of the change in the timezone of the client. The format is JJJJ.MM.DD.hh.mm.\nss"
          },
          "timeStampUTC": {
            "type": "string",
            "description": "Timestamp of the change in the timezone of the client, in UTC form. The format is JJJJ.MM.DD.hh.mm.\nss"
          },
          "userName": {
            "type": "string",
            "description": "The name of the user who carried out the changes."
          },
          "userNo": {
            "type": "integer",
            "description": "The user who carried out the changes.",
            "format": "int32"
          },
          "workStation": {
            "type": "string",
            "description": "The name of the computer from which the change was carried out.\nThis is the parameter clientComputer which is\n provided by the ix.login function."
          },
          "histKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SordHistKey"
            }
          }
        },
        "description": "Version history for the keywording from an object.\nA version history is created for a sord object when the keywording\n is changed for the first time (a newly created sord has no version history). Once created only one SordHist object\n exist for the sord object and is assigned to the sord object via the Sord.guid \u003d SordHist.objGuid relationship. The\n keywording properties that were altered in the change process are saved in an array of SordHistKey objects.\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ArrayOfJobState": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/JobState"
        }
      },
      "BRequest_PluginService_getPlugins": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXServerEvents_onAfterCheckinMap": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "domainName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "objId": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_applyForNotifications": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "info": {
            "$ref": "#/components/schemas/ApplyForNotificationsInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_checkLicense": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "licenseInfo": {
            "$ref": "#/components/schemas/LicenseInfo"
          }
        }
      },
      "KeywordList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID"
          },
          "guid": {
            "type": "string",
            "description": "GUID"
          },
          "tStamp": {
            "type": "string",
            "description": "Last modified, ISO - UTC Read-only."
          },
          "deleted": {
            "type": "boolean",
            "description": "RESERVED"
          },
          "userId": {
            "type": "integer",
            "description": "ID of the user that has written the keyword list at last. Read-only.",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "Name of the user that has written the keyword list at last. Read-only."
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Keyword"
            }
          },
          "lockId": {
            "type": "integer",
            "description": "ID of the user who holds a lock on the keyword list.",
            "format": "int32"
          },
          "TStampSync": {
            "type": "string",
            "description": "Timestamp of this object\u0027s last export by the replication."
          },
          "packageName": {
            "type": "string",
            "description": "Package name of KeywordList"
          }
        },
        "description": "This class provides general informations for a keyword list."
      },
      "ExportFileC": {
        "type": "object",
        "properties": {
          "MAGIC": {
            "type": "integer",
            "description": "Identifier for Export files",
            "format": "int32"
          },
          "FILE_EXTENSION": {
            "type": "string",
            "description": "Filename Extension for export data files"
          },
          "CONTENT_TYPE": {
            "type": "string",
            "description": "Content Type for export data files"
          },
          "FILE_VERSION": {
            "type": "string",
            "description": "The export file version this IX creates."
          }
        }
      },
      "AspectDataC": {
        "type": "object",
        "properties": {
          "mbId": {
            "type": "string",
            "description": "Member bit: Aspect ID.\nDB column: id"
          },
          "mbName": {
            "type": "string",
            "description": "Member bit: Aspect name.\nDB column: name"
          },
          "lnName": {
            "type": "integer",
            "description": "Column length: Aspect name.\nDB column: name",
            "format": "int32"
          },
          "mbLockId": {
            "type": "string",
            "description": "Member bit: User ID that holds a lock on this object.\nDB column: lockid"
          },
          "mbTranslationKey": {
            "type": "string",
            "description": "Member bit: Translation key.\nDB column: translationkey"
          },
          "lnTranslationKey": {
            "type": "integer",
            "description": "Column length: Translation key.\nDB column: translationkey",
            "format": "int32"
          },
          "mbGuid": {
            "type": "string",
            "description": "Member bit: Aspect GUID.\nDB column: guid"
          },
          "lnGuid": {
            "type": "integer",
            "description": "Column length: Aspect GUID.\nDB column: guid",
            "format": "int32"
          },
          "mbTStamp": {
            "type": "string",
            "description": "Member bit: Timestamp of last modification.\nDB column: tstamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "Column length: Timestamp of last modification.\nDB column: tstamp",
            "format": "int32"
          },
          "mbStatus": {
            "type": "string",
            "description": "DB column: status"
          },
          "mbTStampSync": {
            "type": "string",
            "description": "Member bit: Timestamp of this object\u0027s last export by the replication.\nDB column: tstampsync"
          },
          "lnTStampSync": {
            "type": "integer",
            "description": "Column length: Timestamp of this object\u0027s last export by the replication.\nDB column: tstampsync",
            "format": "int32"
          },
          "mbPackageName": {
            "type": "string",
            "description": "Member bit: Package name of Aspect.\nDB column: packagename"
          },
          "lnPackageName": {
            "type": "integer",
            "description": "Column length: Package name of Aspect.\nDB column: packagename",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of Aspect\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ClientInfoC": {
        "type": "object",
        "properties": {
          "OPTION_REPLICATION_REQUEST": {
            "type": "integer",
            "description": "Replication requests are marked with this bit.",
            "format": "int32"
          }
        },
        "description": "Constants for ClientInfo. These constanse are only for internal usage."
      },
      "BRequest_IXServicePortIF_addUrlParams": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "url": {
            "type": "string"
          },
          "params": {
            "$ref": "#/components/schemas/UrlParams"
          }
        }
      },
      "BResult_1881161566": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/AutoFilingResult"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "NotificationDataC": {
        "type": "object",
        "properties": {
          "mbUserGuid": {
            "type": "string",
            "description": "Member bit: GUID of user who should receive this notification.\nDB column: userguid"
          },
          "lnUserGuid": {
            "type": "integer",
            "description": "Column length: GUID of user who should receive this notification.\nDB column: userguid",
            "format": "int32"
          },
          "mbWatchGuid": {
            "type": "string",
            "description": "Member bit: GUID of changed Object.\nDB column: watchguid"
          },
          "lnWatchGuid": {
            "type": "integer",
            "description": "Column length: GUID of changed Object.\nDB column: watchguid",
            "format": "int32"
          },
          "mbCreateDateIso": {
            "type": "string",
            "description": "Member bit: Create date of the notification.\nDB column: createdateiso"
          },
          "lnCreateDateIso": {
            "type": "integer",
            "description": "Column length: Create date of the notification.\nDB column: createdateiso",
            "format": "int32"
          },
          "mbPrio": {
            "type": "string",
            "description": "Member bit: Indicates if the Notification is marked as important DB column: prio"
          },
          "mbWhat": {
            "type": "string",
            "description": "Member bit: Indicates the type of the watched Element.\nDB column: what"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of Notification\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_finishExport": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "exportId": {
            "type": "string"
          }
        }
      },
      "WorkFlowActiveDoc": {
        "type": "object",
        "properties": {
          "flowId": {
            "type": "integer",
            "description": "Workflow ID.\nDB column: wf_flowid",
            "format": "int32"
          },
          "nodeId": {
            "type": "integer",
            "description": "Node ID.\nDB column: wf_nodeid",
            "format": "int32"
          },
          "flowName": {
            "type": "string",
            "description": "Workflow name.\nDB column: wf_flow_name"
          },
          "name": {
            "type": "string",
            "description": "Node name (work instruction).\nDB column: wf_name"
          },
          "nodeType": {
            "type": "integer",
            "description": "Node type (begin node, split node, etc.).\nDB column: wf_node_type",
            "format": "int32"
          },
          "succType": {
            "type": "integer",
            "description": "This value depends on the node type and is not processed anymore by Indexserver.\nIt is written for compability with\n workflows of older CLIENT versions. DB column: wf_succ_type",
            "format": "int32"
          },
          "department": {
            "type": "integer",
            "description": "ID of user who has to process the node. Might be a group ID too. Only valid for person nodes.\nDB column:\n wf_department",
            "format": "int32"
          },
          "alertTo": {
            "type": "integer",
            "description": "ID of user who should be informed, if a time-limit exceeds.\nIt might be the time-limit for the entire workflow or\n for a signle person node. DB column: wf_alert_to",
            "format": "int32"
          },
          "alertFromBegin": {
            "type": "integer",
            "description": "Time-limt for the entire workflow in minutes. This value is only valid for the begin node.\nDB column:\n wf_alert_from_begin",
            "format": "int32"
          },
          "alertWait": {
            "type": "integer",
            "description": "Time-limit for a single node. This value is only valid for person nodes.\nDB column: wf_alert_wait",
            "format": "int32"
          },
          "yNCondition": {
            "type": "string",
            "description": "IF-Nodes: test condition, person nodes: index values or scripts, split nodes: workflow status.\nDB column:\n wf_yesnocondition"
          },
          "condition": {
            "type": "string",
            "description": "Contains the ACL of the workflow template. Only valid for begin nodes.\nDB column: wf_condition"
          },
          "comment": {
            "type": "string",
            "description": "Comment, only valid for person nodes.\nDB column: wf_comment"
          },
          "succ_0": {
            "type": "integer",
            "description": "Successor node(s) succ_0 ... Succ 19 DB column: wf_succ_0 This mebers are moved into WorkFlowNodeMatrix.\nThey are\n still here due to compatibiltiy with older stream versions.",
            "format": "int32"
          },
          "succ_1": {
            "type": "integer",
            "description": "DB column: wf_succ_1",
            "format": "int32"
          },
          "succ_2": {
            "type": "integer",
            "description": "DB column: wf_succ_2",
            "format": "int32"
          },
          "succ_3": {
            "type": "integer",
            "description": "DB column: wf_succ_3",
            "format": "int32"
          },
          "succ_4": {
            "type": "integer",
            "description": "DB column: wf_succ_4",
            "format": "int32"
          },
          "succ_5": {
            "type": "integer",
            "description": "DB column: wf_succ_5",
            "format": "int32"
          },
          "succ_6": {
            "type": "integer",
            "description": "DB column: wf_succ_6",
            "format": "int32"
          },
          "succ_7": {
            "type": "integer",
            "description": "DB column: wf_succ_7",
            "format": "int32"
          },
          "succ_8": {
            "type": "integer",
            "description": "DB column: wf_succ_8",
            "format": "int32"
          },
          "succ_9": {
            "type": "integer",
            "description": "DB column: wf_succ_9",
            "format": "int32"
          },
          "succ_10": {
            "type": "integer",
            "description": "DB column: wf_succ_10",
            "format": "int32"
          },
          "succ_11": {
            "type": "integer",
            "description": "DB column: wf_succ_11",
            "format": "int32"
          },
          "succ_12": {
            "type": "integer",
            "description": "DB column: wf_succ_12",
            "format": "int32"
          },
          "succ_13": {
            "type": "integer",
            "description": "DB column: wf_succ_13",
            "format": "int32"
          },
          "succ_14": {
            "type": "integer",
            "description": "DB column: wf_succ_14",
            "format": "int32"
          },
          "succ_15": {
            "type": "integer",
            "description": "DB column: wf_succ_15",
            "format": "int32"
          },
          "succ_16": {
            "type": "integer",
            "description": "DB column: wf_succ_16",
            "format": "int32"
          },
          "succ_17": {
            "type": "integer",
            "description": "DB column: wf_succ_17",
            "format": "int32"
          },
          "succ_18": {
            "type": "integer",
            "description": "DB column: wf_succ_18",
            "format": "int32"
          },
          "succ_19": {
            "type": "integer",
            "description": "DB column: wf_succ_19",
            "format": "int32"
          },
          "locked": {
            "type": "integer",
            "description": "If node is locked, it contains 1 otherwise 0 DB column: wf_locked",
            "format": "int32"
          },
          "posX": {
            "type": "integer",
            "description": "Node X position in designer view.\nDB column: pos_x",
            "format": "int32"
          },
          "posY": {
            "type": "integer",
            "description": "Node Y position in designer view.\nDB column: pos_y",
            "format": "int32"
          },
          "onActivate": {
            "type": "string",
            "description": "Name of script to be executed, if the node is activated (entered).\nDB column: wf_ev_on_activate"
          },
          "onTerminate": {
            "type": "string",
            "description": "Name of script to be executed, if the node is leaved (exited).\nDB column: wf_ev_on_terminate"
          },
          "nodeFlags": {
            "type": "integer",
            "description": "Node flags.\nDB column: wf_nodeflags",
            "format": "int32"
          },
          "eloObjId": {
            "type": "integer",
            "description": "Associated object ID. Only valid for non-template workflows.\nDB column: wf_eloobjid",
            "format": "int32"
          },
          "lockId": {
            "type": "integer",
            "description": "User ID of the owner of the lock.\nDB column: wf_locked_owner",
            "format": "int32"
          },
          "isNext": {
            "type": "integer",
            "description": "Contains 1, if this node is active.\nDB column: wf_is_next",
            "format": "int32"
          },
          "activate": {
            "type": "integer",
            "description": "ELO-date when the node was entered.\nDB column: wf_activate",
            "format": "int32"
          },
          "terminate": {
            "type": "integer",
            "description": "ELO-date when the node was exited.\nDB column: wf_terminate",
            "format": "int32"
          },
          "inUseDate": {
            "type": "integer",
            "description": "ELO-date when the node was visited the last time.\nDB column: wf_in_use_date",
            "format": "int32"
          },
          "completionDate": {
            "type": "integer",
            "description": "ELO-date when the workflow was finished. All nodes contain the same value.\nDB column: wf_completion_date",
            "format": "int32"
          },
          "templateId": {
            "type": "integer",
            "description": "Workflow template ID. Not valid for template workflows.\nFor active and finished workflows this member specifies the\n template ID that was used to start the workflow. If the workflow is started as an adhoc workflow, this member is 0\n and flags contains the bit FLAG_ROOT_ADHOC. DB column: wf_template",
            "format": "int32"
          },
          "userTerminate": {
            "type": "string",
            "description": "The ID of the user who has forwarded the node. Not valid for template workflows. Only valid for person nodes.\nDB\n column: wf_userterminate"
          },
          "tag": {
            "type": "integer",
            "description": "reserved.\nDB column: wf_tag",
            "format": "int32"
          },
          "designDepartment": {
            "type": "integer",
            "description": "A group ID or user ID that was originally assigned in the designer.\nDB column: wf_designdepartment",
            "format": "int32"
          },
          "moveCyclePosX": {
            "type": "integer",
            "description": "If a cycle is re-entered, the nodes in the cycle are duplicated.\nThe copied nodes will be placed in the designer\n moved by this value to the right. If this value is 0, the nodes are moved 60 points right and 20 points up. DB\n column: wf_dx",
            "format": "int32"
          },
          "department2": {
            "type": "integer",
            "description": "A group ID to constrain access to the node. Only members of this group are allowed to see and process the node.\nOnly valid for person nodes. DB column: wf_department2",
            "format": "int32"
          },
          "delayDays": {
            "type": "integer",
            "description": "An active person node (Activate is set) might be displayed to the user delayed by this number of days.\nOnly valid\n for person nodes. DB column: wf_delaydays",
            "format": "int32"
          },
          "delayDate": {
            "type": "integer",
            "description": "Activate + DelayDays. Not valid for template workflows. Only valid for person nodes.\nDB column: wf_duedate",
            "format": "int32"
          },
          "deleted": {
            "type": "integer",
            "description": "Flag that indicates whether the workflow template is deleted.\nIf the value is not 0, the workflow template is\n deleted. Only valid for template workflows. DB column: wf_deleted",
            "format": "int32"
          },
          "prio": {
            "type": "integer",
            "description": "Workflow priority: 0...high, 1...medium, 2...low.\nDB column: wf_prio",
            "format": "int32"
          },
          "userDelayDate": {
            "type": "integer",
            "description": "The workflow node is deferred until this date. ELO date format.\nDB column: wf_user_delaydate",
            "format": "int32"
          },
          "versionId": {
            "type": "integer",
            "description": "Version ID.",
            "format": "int32"
          },
          "versionName": {
            "type": "string",
            "description": "Version comment."
          },
          "alertTo2": {
            "type": "integer",
            "description": "ID of user who should be informed, if the time-limit alertWait2 exceeds.",
            "format": "int32"
          },
          "alertWait2": {
            "type": "integer",
            "description": "Second Time-limit for a person node or begin node.",
            "format": "int32"
          },
          "alertTo3": {
            "type": "integer",
            "description": "ID of user who should be informed, if the time-limit alertWait2 exceeds.",
            "format": "int32"
          },
          "alertWait3": {
            "type": "integer",
            "description": "Third Time-limit for a person node or begin node.",
            "format": "int32"
          },
          "nextServerId": {
            "type": "string",
            "description": "Next server name. This value is used in replication environments and defines the ID of the next server (resp.\nreplication branch) where the workflow continues processing."
          },
          "versionTag": {
            "type": "string",
            "description": "Version number."
          },
          "versionUserId": {
            "type": "integer",
            "description": "ID of the user who created the workflow version.",
            "format": "int32"
          },
          "versionCreateDate": {
            "type": "integer",
            "description": "ID of the user who created the workflow version.",
            "format": "int32"
          },
          "iconId": {
            "type": "string",
            "description": "Object-GUID of an icon file that is displayed in the designer."
          },
          "formSpec": {
            "type": "string",
            "description": "User defined data to be stored in the database."
          },
          "flowNameTranslationKey": {
            "type": "string",
            "description": "Translation-keyword for {@link WFDiagram#name}."
          },
          "nameTranslationKey": {
            "type": "string",
            "description": "Translation-keyword for {@link WFNode#name}."
          },
          "commentTranslationKey": {
            "type": "string",
            "description": "Translation-keyword for {@link WFNode#comment}."
          },
          "label": {
            "type": "string",
            "description": "Display name by forwarding."
          },
          "properties": {
            "type": "string",
            "description": "Properties field of node."
          },
          "departmentGroup": {
            "type": "integer",
            "description": "Grouping of nodes for function takeWorkFlowNode.",
            "format": "int32"
          },
          "retVal": {
            "type": "integer",
            "description": "Return value of an end node.",
            "format": "int32"
          },
          "returnValue": {
            "type": "string",
            "description": "Return value of an end node."
          },
          "subWorkflow": {
            "type": "integer",
            "description": "ID of the active sub-workflow.",
            "format": "int32"
          },
          "labelTranslationKey": {
            "type": "string",
            "description": "Translation-keyword for {@link WorkFlowActiveDoc#label}."
          },
          "subWorkflowTemplate": {
            "type": "integer",
            "description": "ID of the sub-workflow template.",
            "format": "int32"
          },
          "activeAcl": {
            "type": "string",
            "description": "Contains the ACL of the workflow. Only valid for begin nodes."
          },
          "packageName": {
            "type": "string",
            "description": "PackageName of a Workflow, only used for workflow templates"
          }
        },
        "description": "Internal class."
      },
      "BResult_460462395": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ESSettingsObj"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinDocEnd": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ReportInfoUserProps": {
        "type": "object",
        "properties": {
          "userInfo": {
            "description": "UserInfo object.",
            "$ref": "#/components/schemas/UserInfo"
          },
          "userInfoEff": {
            "description": "UserInfo object with effective permissions.",
            "$ref": "#/components/schemas/UserInfo"
          },
          "subsInfos": {
            "description": "Substitution information.\nReplaced by {@link #substitutions}",
            "$ref": "#/components/schemas/ListOfSubsInfo"
          },
          "substitutions": {
            "description": "List of active Substitution where the user or any of his groups is set as {@link Substitution#substituteId}.",
            "$ref": "#/components/schemas/ListOfSubstitution"
          },
          "idsToNames": {
            "description": "Map of user IDs to user names.\nThis map contains all users referred by {@link #userInfo}, {@link #userInfoEff}, and\n {@link #subsInfos}.",
            "$ref": "#/components/schemas/MapToString"
          }
        },
        "description": "Additional report information for user modifications."
      },
      "BRequest_IXServicePortIF_getSessionFromTicket": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "options": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DocMask": {
        "type": "object",
        "properties": {
          "DAcl": {
            "type": "string",
            "description": "New objects are created with these ACL permission settings."
          },
          "DKind": {
            "type": "integer",
            "description": "The marker color ID for new objects created with this mask.",
            "format": "int32"
          },
          "DPath": {
            "type": "integer",
            "description": "Document storage path name where the documents of this mask should be stored.",
            "format": "int32"
          },
          "TStamp": {
            "type": "string",
            "description": "Last update time of the storage mask data."
          },
          "barcode": {
            "type": "string",
            "description": "Barcode string."
          },
          "flowId": {
            "type": "integer",
            "description": "The ID of a workflow that is started if a new object with this mask is created.\nIf the SessionOption\n START_DOCMASK_WORKFLOWS is set, the Indexserver starts this workflow, if an associated document is created.\n Otherwise the client application is responsible for starting the workflow.",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "Storage mask ID.",
            "format": "int32"
          },
          "index": {
            "type": "string",
            "description": "This control string provides a way of storing new storage mask objects automatically in a particular archive path."
          },
          "lifetime": {
            "type": "string",
            "description": "New objects are valid for this length of time."
          },
          "lockId": {
            "type": "integer",
            "description": "User ID of the user that has locked the storage mask. If -1, no lock is held.",
            "format": "int32"
          },
          "lockName": {
            "type": "string",
            "description": "Name of the user that has locked th storage mask. Read-only, ignored in checkinDocMask."
          },
          "name": {
            "type": "string",
            "description": "Storage mask name. It can be translated into reps.\nfrom the users language: set\n \u003ccode\u003eSessionOptionsC.TRANSLATE_TERM\u003c/code\u003e."
          },
          "text": {
            "type": "string",
            "description": "Tab captions. List of tab captions separated by pipe char |."
          },
          "acl": {
            "type": "string",
            "description": "Access control for the mask line"
          },
          "aclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "details": {
            "description": "Detailed properties for the DocMask object.",
            "$ref": "#/components/schemas/DocMaskDetails"
          },
          "docAclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocMaskLine"
            }
          },
          "guid": {
            "type": "string",
            "description": "GUID"
          },
          "deleted": {
            "type": "boolean",
            "description": "Deleted status."
          },
          "flowId2": {
            "type": "integer",
            "description": "The ID of a workflow that is to be started if a new version of an associated document is checked in.\nIf the\n SessionOption START_DOCMASK_WORKFLOWS is set, the Indexserver starts this workflow, if an associated document is\n checked in. Otherwise the client application is responsible for starting the workflow.",
            "format": "int32"
          },
          "TStampSync": {
            "type": "string",
            "description": "Timestamp of this object\u0027s last export by the replication."
          },
          "textTranslationKey": {
            "type": "string",
            "description": "Translation-keyword for {@link DocMask#text}."
          },
          "nameTranslationKey": {
            "type": "string",
            "description": "Translation-keyword for {@link DocMask#name}."
          },
          "dataOrganisation": {
            "type": "integer",
            "description": "This member specifies how the index values are stored in database.",
            "format": "int32"
          },
          "sordType": {
            "type": "integer",
            "description": "Prepare this type for a new Sord object.\n\u003cp\u003e\n If this value is 0, the Sord type is {@link SordC#LBT_DOCUMENT} for a new document. For a new folder, the default\n sord type is set as the parent\u0027s sord type plus 1. If the parent is undefined, the default type is 1.\n \u003c/p\u003e\n \u003cp\u003e\n If this value is not 0, it must be given between 1 and {@link SordC#LBT_DOCUMENT}-1 for folder types and between\n {@link SordC#LBT_DOCUMENT} and {@link SordC#LBT_DOCUMENT_MAX} for document types.\n \u003c/p\u003e",
            "format": "int32"
          },
          "maskIdsForChildEntries": {
            "description": "Child entries in the archive hierarchy should only use this keywording forms.\nIf this element is null or empty,\n child entries can use any keywording form. Otherwise, new child entries have to be assigned to one of the listed\n form. This rule only applies to physical and not to logical references. The maximum number of keywording forms is\n defined by {@link DocMaskC#MAX_MASK_IDS_FOR_CHILD_ENTRIES}.",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "packageName": {
            "type": "string",
            "description": "Package name of DocMask"
          },
          "inheritFromMasks": {
            "description": "Inherit aspects from this keywording forms.\nOnly valid for {@link #dataOrganisation} \u003d\n {@link DocMaskC#DATA_ORGANISATION_ASPECT}.",
            "$ref": "#/components/schemas/ListOfDocMaskInherit"
          },
          "aspectAssocs": {
            "description": "Keywording aspect associations.\nThese are the effective aspect associations inluding locally defined associations\n and inherited associations. Only valid for {@link #dataOrganisation} \u003d {@link DocMaskC#DATA_ORGANISATION_ASPECT}.",
            "$ref": "#/components/schemas/MapToAspectAssoc"
          },
          "localAspectAssocs": {
            "description": "Keywording aspect associations which are defined locally in this mask.\nOnly valid for {@link #dataOrganisation} \u003d\n {@link DocMaskC#DATA_ORGANISATION_ASPECT}.",
            "$ref": "#/components/schemas/MapToAspectAssoc"
          },
          "deletionDeadline": {
            "type": "string",
            "description": "Deletion deadline for new objects."
          }
        },
        "description": "\u003cp\u003e\nContains the data for a storage mask.\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "LockZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from the LockC class."
          }
        },
        "description": "This class encapsulates the constants of the LockC class.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_createAspectMask": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "name": {
            "type": "string"
          },
          "aspectAssocs": {
            "$ref": "#/components/schemas/ListOfAspectAssoc"
          }
        }
      },
      "PreviewImageInfoC": {
        "type": "object",
        "properties": {
          "DEFAULT_DPI": {
            "type": "integer",
            "description": "Default dots per inch for scalable vector graphics.",
            "format": "int32"
          },
          "SIZE_ORIGINAL": {
            "type": "integer",
            "description": "Flag that signalizes the server to process preview images in the size of the original document.\nIn case scalable\n documents sources like PDF, {@link PreviewImageInfoC#DEFAULT_DPI} is used.",
            "format": "int32"
          },
          "SIZE_TINY": {
            "type": "integer",
            "description": "Flag that signalizes the server to process preview images in a size for thumbnails.",
            "format": "int32"
          },
          "SIZE_MEDIUM": {
            "type": "integer",
            "description": "Flag that signalizes the server to process preview images in a medium size.\nImages of this size are optimized in\n memory usage. They lack readability of text smaller than 10 points.",
            "format": "int32"
          },
          "SIZE_TINIER": {
            "type": "integer",
            "description": "Flag that signalizes the server to process preview images in a size for tiny thumbnails.\nThe maximum length of an\n edge will be 100 pixels.",
            "format": "int32"
          },
          "SIZE_LARGE": {
            "type": "integer",
            "description": "Flag that signalizes the server to scale down preview images to a size suitable for most browser\u0027s canvas element.\nChoosing this settings will scale down only very large images.",
            "format": "int32"
          }
        }
      },
      "Substitution": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "description": "\u003cp\u003e\nGUID of substitution\n \u003c/p\u003e\n \u003cp\u003e\n A new substitution is saved if guid is empty on checkin. An existing substitution is updated if a guid is provided.\n \u003c/p\u003e"
          },
          "userId": {
            "type": "integer",
            "description": "\u003cp\u003e\nThe user or group which is substituted by this object.\n \u003c/p\u003e\n \u003cp\u003e\n This variable is ignored when calling {@link IXServicePortIF#checkinSubstitutions} if {@link #userName} is set.\n \u003c/p\u003e",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "\u003cp\u003e\nThe user or group which is substituted by this object.\n \u003c/p\u003e\n \u003cp\u003e\n {@link #userId} is ignored if this member is set when calling {@link IXServicePortIF#checkinSubstitutions}.\n \u003c/p\u003e"
          },
          "substituteId": {
            "type": "integer",
            "description": "\u003cp\u003e\nUser or group to whom the substitution is directed.\n \u003c/p\u003e\n \u003cp\u003e\n This variable is ignored when calling {@link IXServicePortIF#checkinSubstitutions} if {@link #substituteName} is\n set.\n \u003c/p\u003e",
            "format": "int32"
          },
          "substituteName": {
            "type": "string",
            "description": "\u003cp\u003e\nUser or group to whom the substitution is directed.\n \u003c/p\u003e\n \u003cp\u003e\n {@link #substituteId} is ignored if this member is set when calling {@link IXServicePortIF#checkinSubstitutions}.\n \u003c/p\u003e"
          },
          "substituteType": {
            "type": "integer",
            "description": "\u003cp\u003e\nType of the substitute.\n \u003c/p\u003e\n \u003cp\u003e\n Read-only, refers to {@link UserInfoC#TYPE_GROUP} or {@link UserInfoC#TYPE_USER}\n \u003c/p\u003e",
            "format": "int32"
          },
          "creatorId": {
            "type": "integer",
            "description": "\u003cp\u003e\nUser who created the Substitution. Read-only.\n \u003c/p\u003e",
            "format": "int32"
          },
          "creatorName": {
            "type": "string",
            "description": "\u003cp\u003e\nUser who created the Substitution. Read-only.\n \u003c/p\u003e"
          },
          "access": {
            "type": "integer",
            "description": "The current users access rights for this Substitution. Returns a combination of AccessC.LUR_ constants. Read-only.",
            "format": "int32"
          },
          "groupsToInheritRights": {
            "description": "\u003cp\u003e\nList of groups of which the substitute inherits the rights.\n \u003c/p\u003e\n \u003cp\u003e\n It is not possible to inherit rights from a user, only from groups. Every group needs to have the the right\n {@link AccessC#FLAG2_CAN_BE_SUBSTITUTED}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "substitutionPeriods": {
            "description": "\u003cp\u003e\nList of time periods in which the substitution is activated automatically if\n {@link SubstitutionSettings#activatePeriodsAutomatically} is set to true.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/ListOfSubstitutionPeriod"
          },
          "settings": {
            "description": "Contains all boolean settings for a Substitution",
            "$ref": "#/components/schemas/SubstitutionSettings"
          },
          "status": {
            "description": "\u003cp\u003e\nReturns the status of the substitution.\n \u003c/p\u003e\n \u003cp\u003e\n In case of checking in a substitution, this variable is ignored.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SubstitutionStatus"
          },
          "forwardedTo": {
            "type": "string",
            "description": "\u003cp\u003e\nIf a substitution was forwarded to an other one, this references the {@link #guid} of the substitution it was\n forwarded to.\n \u003c/p\u003e\n Read-only."
          },
          "forwardedFrom": {
            "type": "string",
            "description": "\u003cp\u003e\nIf a substitution was forwarded to an other one, this references the {@link #guid} of the substitution it was\n forwarded from.\n \u003c/p\u003e\n Read-only."
          },
          "message": {
            "type": "string",
            "description": "Message to add to the substitution."
          },
          "lockId": {
            "type": "integer",
            "description": "\u003cp\u003e\nUser ID of the user that has locked the Substitution\n \u003c/p\u003e\n \u003cp\u003e\n If -1, no lock is held. Read-only, ignored in {@link IXServicePortIF#checkinSubstitutions}\n \u003c/p\u003e",
            "format": "int32"
          },
          "lockName": {
            "type": "string",
            "description": "\u003cp\u003e\nName of the user that has locked the Substitution\n \u003c/p\u003e\n \u003cp\u003e\n Read-only, ignored in {@link IXServicePortIF#checkinSubstitutions}\n \u003c/p\u003e"
          },
          "tstamp": {
            "type": "string",
            "description": "Timestamp of last update. Read-only."
          },
          "tstampsync": {
            "type": "string",
            "description": "Timestamp of last update. Read-only."
          },
          "forwardedBy": {
            "description": "If the substitution was forwarded by {@link IXServicePortIF#forwardSubstitution}, the original substitutes\n({@link #substituteId} are saved here.\n \n Read-only",
            "$ref": "#/components/schemas/ListOfInteger"
          }
        },
        "description": "A Substitution is used to create, update and read substitutions."
      },
      "BRequest_IXServicePortIF_checkoutNoteTemplates": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userId": {
            "type": "string"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ntemplZ": {
            "$ref": "#/components/schemas/NoteTemplateZ"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinCryptInfos": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "cryptInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CryptInfo"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "OcrWorkerC": {
        "type": "object",
        "properties": {
          "REGISTERED": {
            "type": "integer",
            "format": "int32"
          },
          "UNREGISTERED": {
            "type": "integer",
            "format": "int32"
          },
          "BUSY": {
            "type": "integer",
            "format": "int32"
          },
          "IDLE": {
            "type": "integer",
            "format": "int32"
          },
          "DEAD": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BRequest_IXServicePortIF_loginAdmin": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userName": {
            "type": "string"
          },
          "userPwd": {
            "type": "string"
          },
          "clientComputer": {
            "type": "string"
          },
          "reportAsUser": {
            "type": "string"
          }
        }
      },
      "BRequest_FeedService_findNextNotification": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "searchId": {
            "type": "string"
          },
          "idx": {
            "type": "integer",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BRequest_IXServicePortIF_getSessionOptions": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinCounters": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "counterInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CounterInfo"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ListOfNote": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Note"
        }
      },
      "BResult_777531606": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/LoginResult"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BResult_910482075": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "IXServerEvents": {
        "type": "object"
      },
      "MapHead": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Map id."
          },
          "lockId": {
            "type": "integer",
            "description": "Lock status. -1: unlocked, \u0026gt;\u003d0 user-ID.",
            "format": "int32"
          },
          "objId": {
            "type": "integer",
            "description": "Associated object ID or 0.",
            "format": "int32"
          },
          "TStamp": {
            "type": "string",
            "description": "Timestamp."
          },
          "guid": {
            "type": "string",
            "description": "GUID."
          }
        },
        "description": "Internal class."
      },
      "QueryJobProtocolC": {
        "type": "object",
        "properties": {
          "LOG_LEVEL_ERROR": {
            "type": "integer",
            "description": "Return only errors.",
            "format": "int32"
          },
          "LOG_LEVEL_WARN": {
            "type": "integer",
            "description": "Return only warnings.",
            "format": "int32"
          },
          "LOG_LEVEL_INFO": {
            "type": "integer",
            "description": "Return only normal informations.",
            "format": "int32"
          },
          "OBJID_NOT_SET": {
            "type": "integer",
            "description": "This value indicates that the object-ID is not set.",
            "format": "int32"
          }
        },
        "description": "\u003cp\u003e\nConstants for querying log messages of background jobs.\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_setSessionOptions": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "opts": {
            "$ref": "#/components/schemas/SessionOptions"
          }
        }
      },
      "BResult_1995912373": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/NoteTemplate"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "DocumentOptions": {
        "type": "object",
        "properties": {
          "sort": {
            "description": "Results are ordered by this parameter.",
            "$ref": "#/components/schemas/ESearchOrderE"
          },
          "highlightedText": {
            "type": "boolean",
            "description": "Return highlighted result text for each sord.\n\u003cbr\u003e\n Highlighted text is retrieved from fulltext and surrounded by b-tags.\u003cbr\u003e\n Defaults to false."
          },
          "resultField": {
            "type": "boolean",
            "description": "Return fields in which search terms are found for each sord.\n\u003cbr\u003e\n Defaults to false."
          },
          "relevance": {
            "type": "boolean",
            "description": "Calculate relevance for each sord.\n\u003cbr\u003e\n Defaults to false."
          },
          "currentFolderId": {
            "type": "integer",
            "description": "Provide this ID to restrict search on current folder.\n\u003cbr\u003e",
            "format": "int32"
          }
        },
        "description": "Use this class to search for documents by\n{@link de.elo.ix.client.IXServicePortIF#findFirstSords(de.elo.ix.client.ClientInfo, de.elo.ix.client.FindInfo, int, de.elo.ix.client.SordZ)}\n and\n {@link de.elo.ix.client.IXServicePortIF#findNextSords(de.elo.ix.client.ClientInfo, String, int, int, de.elo.ix.client.SordZ)}.\u003cbr\u003e\n Deliver query by {@link de.elo.ix.client.esearch.ESearchParams}."
      },
      "BRequest_FeedService_internalInsertSystemAction": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutUserProfile": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userProfile": {
            "$ref": "#/components/schemas/UserProfile"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "Note": {
        "type": "object",
        "properties": {
          "TStamp": {
            "type": "string",
            "description": "Timestamp of the last change to the note. The format is JJJJ.MM.DD.hh.mm.\nss"
          },
          "XPos": {
            "type": "integer",
            "description": "The position in the x axis when the note is displayed on a document in ELO.\nTaken from the top left corner of the\n document.\n \u003cp\u003e\n For NoteC.TYPE_ANNOTATION_FREEHAND and NoteC.TYPE_ANNOTATION_HORIZONTAL_LINE the values XPos, YPos, Width, Height\n describe the enveloping rectangle of the line including the line width. This values are computed by the Indexserver\n if the note is stored.\n \u003c/p\u003e",
            "format": "int32"
          },
          "YPos": {
            "type": "integer",
            "description": "The position in the Y axis when the note is displayed on a document in ELO.\nTaken from the top left corner of the\n document.",
            "format": "int32"
          },
          "desc": {
            "type": "string",
            "description": "The text for the note."
          },
          "guid": {
            "type": "string",
            "description": "The GUID for the note."
          },
          "height": {
            "type": "integer",
            "description": "The height of the note (y axis), when displayed on a document in ELO.",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "The unique id for the note.",
            "format": "int32"
          },
          "ownerId": {
            "type": "integer",
            "description": "The ID of the user who created the note. Administrators can set the ownerId to an arbitary user ID in checkinNotes.\nSet ownerName\u003d\u0026quot;\u0026quot; in this case.",
            "format": "int32"
          },
          "pageNo": {
            "type": "integer",
            "description": "The page number to which the note is attached.",
            "format": "int32"
          },
          "type": {
            "type": "integer",
            "description": "The note type.",
            "format": "int32"
          },
          "width": {
            "type": "integer",
            "description": "Width ( x axis) of the note when displayed on a document in ELO.",
            "format": "int32"
          },
          "createDateIso": {
            "type": "string",
            "description": "ISO encoded external (user defined) date."
          },
          "deleted": {
            "type": "boolean",
            "description": "True if the note is deleted, otherwise false."
          },
          "lockId": {
            "type": "integer",
            "description": "The ID of the user that holds the lock or -1, if the note is not locked.",
            "format": "int32"
          },
          "lockName": {
            "type": "string",
            "description": "The user name that holds the lock or an empty string if the note is not locked."
          },
          "objId": {
            "type": "string",
            "description": "Object ID of the associated Sord object or any of the ID specifiers that are valid for checkoutSord too.\nFunctions\n createNote and checkoutNotes return only numerical object IDs."
          },
          "ownerName": {
            "type": "string",
            "description": "The name of the user that has created the note.\nAdministrators can set the ownerName to an arbitary user name in\n checkinNotes. Set ownerId\u003d-1 in this case."
          },
          "acl": {
            "type": "string",
            "description": "Access control list. Only used for notes of type TYPE_ANNOTATION_MARKER.\nSet member aclItems\u003dnull on check in\n otherwise it is ignored."
          },
          "aclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "color": {
            "type": "integer",
            "description": "RGB value. Undefined for notes of type TYPE_ANNOTATION_STAMP and TYPE_ANNOTATION_NOTE_WITHFONT.",
            "format": "int32"
          },
          "noteText": {
            "description": "Additional information for textual stamps.\nValid only for notes of type TYPE_ANNOTATION_NOTE, TYPE_ANNOTATION_STAMP\n and TYPE_ANNOTATION_NOTE_WITHFONT. Either desc, noteText, noteImage or noteFreehand can be set.",
            "$ref": "#/components/schemas/NoteText"
          },
          "noteImage": {
            "description": "Additional information for image stamps. Valid only for notes of type TYPE_ANNOTATION_STAMP.\nEither desc, noteText,\n noteImage or noteFreehand can be set.",
            "$ref": "#/components/schemas/NoteImage"
          },
          "noteFreehand": {
            "description": "Point information for a freehand line.\nValid only for notes of type TYPE_ANNOTATION_FREEHAND and\n TYPE_ANNOTATION_HORIZONTAL_LINE. Either desc, noteText, noteImage or noteFreehand can be set.",
            "$ref": "#/components/schemas/NoteFreehand"
          },
          "access": {
            "type": "integer",
            "description": "Access rights for the current user. Read-only.",
            "format": "int32"
          },
          "deleteDateIso": {
            "type": "string",
            "description": "The Note is deleted at this date. ClientInfo determines the Timezone.\n\u003cp\u003e\n Is undefined if isDeleted() returns false.\n \u003c/p\u003e"
          },
          "TStampSync": {
            "type": "string",
            "description": "Timestamp of this object\u0027s last export by the replication."
          }
        },
        "description": "\u003cp\u003e\nThis helper class inherits all members from \u003ccode\u003eNoteData\u003c/code\u003e and adds a static member to access the bit\n constants for the \u003ccode\u003eNoteData\u003c/code\u003e members.\n \u003c/p\u003e"
      },
      "OcrInfoQueryLanguages": {
        "type": "object",
        "properties": {
          "ctrl": {
            "type": "integer",
            "description": "Reserved.",
            "format": "int32"
          }
        },
        "description": "This class describes a request for querying the supported languages of the OCR."
      },
      "LockC": {
        "type": "object",
        "properties": {
          "bsetNO": {
            "type": "string"
          },
          "bsetYES": {
            "type": "string"
          },
          "bsetFORCE": {
            "type": "string"
          },
          "bsetIF_FREE": {
            "type": "string"
          },
          "bsetSORD": {
            "type": "string"
          },
          "bsetDOC": {
            "type": "string"
          },
          "NO": {
            "description": "Do not lock the requested record(s).",
            "$ref": "#/components/schemas/LockZ"
          },
          "YES": {
            "description": "Lock or unlock. The lock is set, if the record is unlocked or locked by the current user.\nWith respect to locking\n the indexing information (LockC.SORD) and document versions (LockC.DOC), LockC.YES locks and unlocks both since ELO\n 10. In order to successfully complete an operation with this type of Lock, another user must not hold even one of\n them.",
            "$ref": "#/components/schemas/LockZ"
          },
          "FORCE": {
            "description": "Lock or unlock regardless of whether the data is locked by another user.\nThis requires main administration\n privileges in most cases.",
            "$ref": "#/components/schemas/LockZ"
          },
          "IF_FREE": {
            "description": "A lock is only set, if the record is unlocked.\nA lock request is refused too, if the record is already a lock by\n the current user.",
            "$ref": "#/components/schemas/LockZ"
          },
          "SORD": {
            "description": "Lock or unlock the indexing information.\nWorks like {@link LockC#YES} but is only valid at check*Sord() and\n check*Doc() respectively.",
            "$ref": "#/components/schemas/LockZ"
          },
          "DOC": {
            "description": "Lock or unlock document versions.\nWorks like {@link LockC#YES} but is only valid at check*Sord() and check*Doc()\n respectively.",
            "$ref": "#/components/schemas/LockZ"
          }
        },
        "description": "\u003cp\u003e\nConstants to lock data against concurrent modification.\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_getArchiveStatistics": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "opts": {
            "type": "string"
          }
        }
      },
      "ImportOptions": {
        "type": "object",
        "properties": {
          "conflictHandling": {
            "$ref": "#/components/schemas/ConflictHandlingE"
          },
          "uploadStream": {
            "$ref": "#/components/schemas/BStreamReference"
          }
        },
        "description": "Internal class."
      },
      "BRequest_MyELOService_readContent": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "state": {
            "$ref": "#/components/schemas/MyELOState"
          },
          "info": {
            "$ref": "#/components/schemas/MyELOInfo"
          }
        }
      },
      "ProcessAcl": {
        "type": "object",
        "properties": {
          "addAclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "andAclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "setAclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "subAclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "addAcl": {
            "type": "string",
            "description": "ACL to be added in raw database format. Ignored, if addAclItems is not null."
          },
          "subAcl": {
            "type": "string",
            "description": "ACL to be added in raw database format. Ignored, if subAclItems is not null."
          },
          "andAcl": {
            "type": "string",
            "description": "ACL to be added in raw database format. Ignored, if andAclItems is not null."
          },
          "setAcl": {
            "type": "string",
            "description": "ACL to be added in raw database format. Ignored, if setAclItems is not null."
          }
        },
        "description": "This class is used to assign or remove ACLs to an object.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "FindOptions": {
        "type": "object",
        "properties": {
          "escapeChar": {
            "type": "string",
            "description": "SQL escape character. Overwrites the character that can be specified by setSessionOptions."
          },
          "inclDeleted": {
            "type": "boolean",
            "description": "Include logically deleted objects."
          },
          "objIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "orderBy": {
            "type": "string",
            "description": "An SQL ORDER BY clause can be provided here, if required."
          },
          "rangeDelimiter": {
            "type": "string",
            "description": "Range values can be used to search many index and date attribute values.\nThe delimiter between the lower limit and\n upper limit value is defined by rangeDelimiter. The default rangeDelimiter is \"...\"."
          },
          "replSet": {
            "description": "Results are returned only for objects that reside in this replication set.",
            "$ref": "#/components/schemas/ReplSet"
          },
          "reserved": {
            "type": "string",
            "description": "This value is reserved for internal testing purposes and must be set to 0 in all cases."
          },
          "searchId": {
            "type": "string",
            "description": "Restricts the results to objects returned by a previous search."
          },
          "searchMode": {
            "description": "The searchMode describes how search terms are concatinated with the boolean operators AND or OR.",
            "$ref": "#/components/schemas/SearchModeZ"
          },
          "sortOrder": {
            "type": "integer",
            "description": "Defines the sort order of the results.\nIf sortOrder is 0 and the search process searches for child objects\n (FindInfo.findChildren!\u003dnull), the objects are sorted by the sort flags of the parent. If sortOrder is 0 and the\n search uses FindInfo.findByIndex, the objects are sorted alphabetically.",
            "format": "int32"
          },
          "timeoutSeconds": {
            "type": "integer",
            "description": "Specifies the time limit for the search. If the limit is exceeded, the search is interruped.\nIf the search is not\n to have a time limit timeoutSeconds\u003d0 must be used.",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "description": "The search is terminated if this number of objects are found.\nIf the number of results should not be constrained,\n set this value to 2^32-1 \u003d 2147483647 (maximum value of a positive 32bit integer minus 1). If totalCount is not\n set, the Indexserver option totalCount is used, which is 10000 by default. If this value is set to 1,\n findFirstSords will not generate a report entry {@link ReportInfoC#ACT_CLIENT_SEARCH}.",
            "format": "int32"
          },
          "evalCount": {
            "type": "boolean",
            "description": "Compute the number of results. The number of results are returned in FindResult.count.\nBe aware of the fact that\n this option needs to read all database result rows and check user access before findFirstSords returns."
          },
          "onlyDeleted": {
            "type": "boolean",
            "description": "Only logically deleted objects. If this member is true, inclDeleted is ignored."
          },
          "TStamp": {
            "type": "string",
            "description": "Return objects that were last modified at this time or in this time range.\nThe time stamp is an ISO formatted value\n in the UTC timezone. It might include dots to separate the date and time elements. A time range is separated by the\n \u003ccode\u003erangeDelimiter\u003c/code\u003e. The selection includes the range limits. Because the FindOptions cannot be the only\n criteria in FindInfo, use FindByIndex.name\u003d\"*\" to select over the entire archive."
          },
          "wildcards": {
            "type": "string",
            "description": "This characters are used as wildcards in search terms. The first wildcard is used for zero or more characters.\nThe\n second wildcard is used for exactly one character. By default (if this member is null or empty), only the first\n wildcard is defined: *."
          },
          "lockZ": {
            "description": "Lock all result Sords. If at least one of the sords cannot be locked, an exception is thrown from findFirstSords.\nBe aware of the fact that this option needs to read all database result rows and check user access. The objects are\n unlocked by a call to findClose.",
            "$ref": "#/components/schemas/LockZ"
          },
          "searchLifetimeSeconds": {
            "type": "integer",
            "description": "Lifetime of cached search results. This value overrides the ELOix configuration option searchLifetimeSeconds.\nThe\n value determines the time in seconds, how long the search results are cached. As long the results are valid, they\n can be read by findNext-functions of the API.",
            "format": "int32"
          },
          "excludeSummary": {
            "type": "boolean",
            "description": "Do not generate summary information. Retrieving summaries is very expensive for the iSearch module."
          },
          "findResultAccessMode": {
            "description": "Describes how the client application will access the results.",
            "$ref": "#/components/schemas/FindResultAccessMode"
          },
          "docMaskZ": {
            "$ref": "#/components/schemas/DocMaskZ"
          }
        },
        "description": "This class contains several options to control the search process of findFirstSords."
      },
      "BRequest_IXServerEvents_onAfterCheckinReminder": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "remiArray": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reminder"
            }
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_findFirstReportInfos": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "opts": {
            "$ref": "#/components/schemas/FindReportInfo"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpDownloadEventInfo": {
        "type": "object",
        "properties": {
          "kind": {
            "description": "Kind of document related stream.",
            "$ref": "#/components/schemas/UpDownloadKind"
          },
          "usage": {
            "description": "From where an event is called.",
            "$ref": "#/components/schemas/UpDownloadUsage"
          },
          "sord": {
            "description": "Sord object. Check {@link Sord#getChangedMembers()} to find out, which members of the Sord object are valid.\nUsually, only {@link Sord#getId()} is set. This member is null, if the client application uses\n {@link de.elo.ix.client.IXServicePortIF#checkinDocBegin(de.elo.ix.client.ClientInfo, de.elo.ix.client.Document) to\n prepare a document upload.",
            "$ref": "#/components/schemas/Sord"
          },
          "docId": {
            "type": "integer",
            "description": "Document version ID.\nOnly valid for\n {@link DocumentEvents#beginDownload(de.elo.ix.client.IXServerEventsContext, UpDownloadEventInfo)}.",
            "format": "int32"
          },
          "offset": {
            "type": "string",
            "description": "Document related stream should be downloaded starting at this position.\nOnly valid for\n {@link DocumentEvents#beginDownload(de.elo.ix.client.IXServerEventsContext, UpDownloadEventInfo)}. If the entire\n stream should be read, {@link #offset} is 0 and {@link #length} is -1."
          },
          "length": {
            "type": "string",
            "description": "Number of bytes to download from a document related stream.\nOnly valid for\n {@link DocumentEvents#beginDownload(de.elo.ix.client.IXServerEventsContext, UpDownloadEventInfo)}. If this element\n is -1, read up to the end of the stream. If the entire stream should be read, {@link #offset} is 0 and\n {@link #length} is -1."
          },
          "preliminaryTest": {
            "type": "boolean",
            "description": "A preliminary test for a later uploaded stream.\nWhile uploading a content stream for a new document via\n {@link de.elo.ix.client.IXConnectionIF#upload(String, java.io.File)} to the server, the related Sord object is\n unknown. So the information that usually controls, whether a document processor shall handle the stream is\n unavailable. To solve this situation, the uploaded stream is stored temporarily and the actual upload is deferred\n to the function {@link de.elo.ix.client.IXServicePortIF#checkinDocEnd}. In order to know whether a stream should be\n temporarily stored, function {@link de.elo.ix.client.IXServicePortIF#checkinDocBegin2} calls the event\n {@link DocumentEvents#beginUpload}. The returned document processor is only checked to be non-null but is never\n invoked. The document processor used to process the stream is requested in {@link IXServicePortIF#checkinDocEnd}."
          }
        },
        "description": "This class describes a document stream (version, attachment, preview, fulltext, signature) being uploaded or\ndownloaded in an event of {@link DocumentEvents}."
      },
      "DocInfoDM": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Document version ID.\nDB column: docid",
            "format": "int32"
          },
          "guid": {
            "type": "string",
            "description": "Document GUID.\nDB column: docguid"
          },
          "size": {
            "type": "integer",
            "description": "File size.\nDB column: docsize",
            "format": "int32"
          },
          "md5": {
            "type": "string",
            "description": "MD5 hash.\nDB column: md5"
          },
          "pathId": {
            "type": "integer",
            "description": "Storage path ID DB column: pathid",
            "format": "int32"
          },
          "pathId2": {
            "type": "integer",
            "description": "reserved DB column: pathid2",
            "format": "int32"
          },
          "createDateIso": {
            "type": "string",
            "description": "Create date ISO.\nDB column: createdate"
          },
          "lastAccessIso": {
            "type": "string",
            "description": "Last access date ISO.\nDB column: lastaccess"
          },
          "lastUpdateIso": {
            "type": "string",
            "description": "Last update date ISO.\nDB column: lastupdate"
          },
          "owner": {
            "type": "integer",
            "description": "User ID.\nDB column: owner",
            "format": "int32"
          },
          "ext": {
            "type": "string",
            "description": "File extension DB column: ext"
          },
          "fclip": {
            "type": "string",
            "description": "reserved DB column: fclip"
          },
          "extOrig": {
            "type": "string",
            "description": "Original file extension for encrypted documents"
          },
          "sizeOrig": {
            "type": "integer",
            "description": "Original file size for encrypted documents",
            "format": "int32"
          },
          "encrSet": {
            "type": "integer",
            "description": "Encryption set.",
            "format": "int32"
          },
          "previewSize": {
            "type": "integer",
            "description": "Size of preview file. Is 0, if there is no preview file assigned. Is -1, if preview creation has failed.",
            "format": "int32"
          },
          "previewExt": {
            "type": "string",
            "description": "Preview file extension."
          },
          "fulltextContentTStamp": {
            "type": "string",
            "description": "Fulltext content timestamp"
          },
          "fulltextContentSize": {
            "type": "integer",
            "description": "Fulltext content file size.\nSince the fulltext content file is usually stored in UTF-8 encoding, the file size\n might be different from the number of characters.",
            "format": "int32"
          },
          "sizeL": {
            "type": "string",
            "description": "Document file size."
          },
          "sizeOrigL": {
            "type": "string",
            "description": "Original file extension for encrypted documents"
          },
          "previewSizeL": {
            "type": "string",
            "description": "Size of preview file. Is 0, if there is no preview file assigned. Is -1, if preview creation has failed."
          },
          "relFilePath": {
            "type": "string",
            "description": "Relative file path"
          },
          "ftExt": {
            "type": "string",
            "description": "Fulltext file extension."
          },
          "previewExtOrig": {
            "type": "string",
            "description": "Original preview file extension for encrypted previews."
          }
        },
        "description": "\u003cp\u003e\nDocument information table of DM. For performance reason directly read by IX\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "DocMaskZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from the DocMaskC class."
          }
        },
        "description": "This class encapsulates the constants of the DocMaskC class.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "TranslateTerm": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "description": "GUID"
          },
          "deleted": {
            "type": "boolean",
            "description": "True, if this entry is logically deleted."
          },
          "tStamp": {
            "type": "string",
            "description": "Last modified. ISO date with seaparator \".\" measured in UTC."
          },
          "termLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "langs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tStampSync": {
            "type": "string",
            "description": "Timestamp of this object\u0027s last export by the replication."
          },
          "translationKey": {
            "type": "string",
            "description": "Read-only member. The IX sets this member when a client searches for translation keys from property files."
          }
        },
        "description": "Objects of this class represent one term in different languages."
      },
      "BRequest_FeedService_findNextHashTagRelation": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "searchId": {
            "type": "string"
          },
          "idx": {
            "type": "integer",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "hashTagZ": {
            "$ref": "#/components/schemas/HashTagZ"
          }
        }
      },
      "ArrayOfDocument": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Document"
        }
      },
      "BRequest_IXServicePortIF_createActivityProject": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "projectName": {
            "type": "string"
          }
        }
      },
      "RepliHist": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "DB column: rhrowid",
            "format": "int32"
          },
          "tSDate": {
            "type": "string",
            "description": "DB column: rhtsdate"
          },
          "imEx": {
            "type": "integer",
            "description": "DB column: rhimex",
            "format": "int32"
          },
          "succ": {
            "type": "integer",
            "description": "DB column: rhsucc",
            "format": "int32"
          },
          "arcGuid": {
            "type": "string",
            "description": "DB column: rharcguid"
          },
          "arcShort": {
            "type": "string",
            "description": "DB column: rharcshort"
          },
          "arcDesc": {
            "type": "string",
            "description": "DB column: rharcdesc"
          },
          "tSBegin": {
            "type": "string",
            "description": "DB column: rhtsbegin"
          },
          "tSEnd": {
            "type": "string",
            "description": "DB column: rhtsend"
          },
          "arcPriorityLocal": {
            "type": "integer",
            "format": "int32"
          },
          "arcPriorityRemote": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Internal class"
      },
      "CopyInfo": {
        "type": "object",
        "properties": {
          "depth": {
            "type": "integer",
            "description": "Depth up to which the structure is to be copied.\nTHIS FUNCTION IS NOT CURRENTLY SUPPORTED!",
            "format": "int32"
          },
          "manSortIdx": {
            "type": "integer",
            "description": "Manually determine the position. Use 0 to insert at the beginning of the child list.\nUse -1 to insert at the end of\n the child list ( this is the fastest mode). A value n greater then 0 inserts the object at the position n.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "COPY-Mode: Name of the destination archive entry.\nTHIS FUNCTION IS NOT CURRENTLY SUPPORTED!"
          },
          "adjustAclDifference": {
            "type": "boolean",
            "description": "The permissions of the moved object are modified.\nThe permissions inherited from the old parent are substracted and\n the permissions of the new parent are added to the object."
          },
          "adjustAclOverwrite": {
            "type": "boolean",
            "description": "Set the permissions of the moved object equal to the permissions of the new parent."
          },
          "adjustAclIgnoreFolders": {
            "type": "boolean",
            "description": "Recursivly adjust the permissions of the sub-folders of the moved object too."
          },
          "adjustAclIgnoreDocuments": {
            "type": "boolean",
            "description": "Recursivly adjust the permissions of the child-documents of the moved object too."
          },
          "adjustAclInBackground": {
            "type": "boolean",
            "description": "Recursivly adjust the permissions of the child-elements in the background."
          },
          "checkRecursion": {
            "type": "boolean",
            "description": "Check for recursion.\nIf this member is set, the function\n {@link IXServicePortIF#copySord(ClientInfo, String, String, CopyInfo, CopySordZ)} checks whether the copy or move\n operation causes a recursion in the archive hierarchy. If so, the function throws an exception with\n {@link IXExceptionC#ACCESS_DENIED}."
          },
          "oldParentId": {
            "type": "string",
            "description": "Parent ID for move operation. Set this element to the old parent ID when a reference has to be moved.\nIf an\n original entry has to be moved, set the main parent ID or leave the value empty."
          }
        },
        "description": "Controls the options of de.elo.ix.IXServicePortIF.copySord().\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ESSettingsObj": {
        "type": "object",
        "properties": {
          "instanceName": {
            "type": "string",
            "description": "Name of this IX instance"
          },
          "instanceSettings": {
            "description": "List of instance settings.\nContains settings (as in database) for instance _ALL and every IX\n instance.",
            "$ref": "#/components/schemas/ArrayListOfESInstanceSettings"
          },
          "allInstanceNames": {
            "description": "List of all instance names",
            "$ref": "#/components/schemas/ArrayListOfString"
          }
        },
        "description": "\u003cp\u003e\n\u003cb\u003echeckoutEsSettings\u003c/b\u003e returns the current IX instance name, a list of all available IX instances as well as one\n EsInstanceSettings object for every IX instance of the archive and one for the setting \"_ALL\". If there is no entry\n for a setting in the database, the default value is returned as value.\n \u003c/p\u003e\n \n \u003cp\u003e\n \u003cb\u003echeckinEsSettings\u003c/b\u003e writes entries for every EsInstanceSettings to the database:\n \u003c/p\u003e\n \u003cul\u003e\n \u003cli\u003eIf a EsSettingsProperty member is null, nothing is written or deleted.\n \u003cli\u003eTo delete a setting, the EsSettingsProperty member must be set, but its member \u0027value\u0027 must\n be set to \u0027null\u0027\n \u003c/ul\u003e"
      },
      "BRequest_IXServicePortIF_checkoutColors2": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "options": {
            "type": "integer",
            "format": "int32"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BResult_323351719": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/Subscription"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "SearchFieldE": {
        "type": "object",
        "properties": {
          "INDEXFIELD": {
            "description": "\u003cp\u003e\nUse this constant if a index field is searched.\n \u003c/p\u003e\n \u003cp\u003e\n Submit name of indexfield by {@link QueryFilter#docMaskLine}\n \u003c/p\u003e\n \u003cp\u003e\n Depending on type of the corresponding DocMaskLine ({@link DocMaskLine#type}, the corresponding {@link FieldTypeE}\n can be used.\u003cbr\u003e\n DocMaskLines of type {@link DocMaskLineC#TYPE_RELATION} can be used with {@link FieldTypeE#tokenized} or\n {@link FieldTypeE#notTokenized} to search for the short name ({@link Sord#name} of the related Sord), or\n {@link FieldTypeE#guid} to search for the GUID of the related Sord.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "OBJ_ID": {
            "description": "\u003cp\u003e\nObject id\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#numeric}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "GUID": {
            "description": "\u003cp\u003e\nGUID\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#notTokenized}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "TITLE": {
            "description": "\u003cp\u003e\nsord\u0027s short name\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#tokenized}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "FULLTEXT": {
            "description": "\u003cp\u003e\nfulltext content\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#tokenized}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "EXTRA_TEXT": {
            "description": "\u003cp\u003e\nExtra text\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#tokenized}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "OWNER_ID": {
            "description": "\u003cp\u003e\nID of sord\u0027s creator\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#numeric}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "OWNER_NAME": {
            "description": "\u003cp\u003e\nName of sord\u0027s creator\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with either {@link FieldTypeE#tokenized} or {@link FieldTypeE#notTokenized}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "FILE_EXTENSION": {
            "description": "\u003cp\u003e\nfile extension\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#notTokenized}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "FILENAME": {
            "description": "\u003cp\u003e\nfile name\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with either {@link FieldTypeE#tokenized} or {@link FieldTypeE#notTokenized}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "TIMESTAMP": {
            "description": "\u003cp\u003e\nTime of sord\u0027s last change\n \u003c/p\u003e\n \u003cp\u003e\n Value is not always synchronized with DB because {@link Sord#TStamp} is updated by changes not relevant for\n iSearch.\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#date}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "I_DATE": {
            "description": "\u003cp\u003e\ninternal date\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#date}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "X_DATE": {
            "description": "\u003cp\u003e\nexternal date\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#date}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "DELETED_DATE": {
            "description": "\u003cp\u003e\nExpiration date\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#date}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "DOCUMENT_SIZE": {
            "description": "\u003cp\u003e\ndocument size\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#numeric}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "MASK_ID": {
            "description": "\u003cp\u003e\nmask id\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#numeric}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "MASK_NAME": {
            "description": "\u003cp\u003e\nmask name\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with either {@link FieldTypeE#tokenized} or {@link FieldTypeE#notTokenized}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "TYPE": {
            "description": "\u003cp\u003e\nsord\u0027s type\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#numeric}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "PARENT_GUID": {
            "description": "\u003cp\u003e\nparent guid\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#notTokenized}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "VERSION_NUMBER": {
            "description": "\u003cp\u003e\nall version numbers\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with either {@link FieldTypeE#tokenized} or {@link FieldTypeE#notTokenized}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "VERSION_COMMENT": {
            "description": "\u003cp\u003e\nall version comments\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#tokenized}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "VERSION_OWNER_ID": {
            "description": "\u003cp\u003e\nall version\u0027s creators\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#numeric}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "FEED_TEXT": {
            "description": "\u003cp\u003e\nContains all feed text including hashtags, mentions and references\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#tokenized}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "FEED_AUTHOR": {
            "description": "\u003cp\u003e\nID of author\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#numeric}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "FEED_HASHTAG": {
            "description": "\u003cp\u003e\nFeed\u0027s Hashtags\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with either {@link FieldTypeE#tokenized} or {@link FieldTypeE#notTokenized}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "FEED_MENTION": {
            "description": "\u003cp\u003e\nMention of other users\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#notTokenized}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "FEED_REFERENCE": {
            "description": "\u003cp\u003e\nGUID of referenced sord\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#notTokenized}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "FEED_TYPE": {
            "description": "\u003cp\u003e\nFeed type as String\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#notTokenized}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "FEED_DATE_CREATED": {
            "description": "\u003cp\u003e\nCreate dates of feed actions\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#date}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "FEED_DATE_UPDATED": {
            "description": "\u003cp\u003e\nLast update dates of feed actions\n \u003c/p\u003e\n \u003cp\u003e\n Must be combined with {@link FieldTypeE#date}\n \u003c/p\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "SORD_HASH": {
            "description": "Hash value based on Sord\u0027s parameters indexed in iSearch \u003ci\u003eFor internal use only\u003c/i\u003e",
            "$ref": "#/components/schemas/SearchFieldE"
          }
        },
        "description": "\u003cp\u003e\nUse this class of constants to define in which field should be searched.\n \u003c/p\u003e\n \u003cp\u003e\n For every option, allowed {@link FieldTypeE} is given which is also the fallback type if provided type is incorrect.\n \u003c/p\u003e"
      },
      "ControlBackupInfoC": {
        "type": "object",
        "properties": {
          "MODE_STATUS": {
            "type": "integer",
            "description": "Query the status of the backup and purge tasks",
            "format": "int32"
          },
          "MODE_START_BACKUP": {
            "type": "integer",
            "description": "Start the backup task (if it is already running, nothing happens).\nIf the purge task is already running, it is\n stopped.",
            "format": "int32"
          },
          "MODE_START_BACKUP_PURGE": {
            "type": "integer",
            "description": "Start the backup and the purge task. If the backup task is already running, only the purge task is started.",
            "format": "int32"
          },
          "MODE_STOP": {
            "type": "integer",
            "description": "Stop the backup and purge tasks",
            "format": "int32"
          }
        },
        "description": "Constants for class ControlBackupInfo (mode for the ELOdm backup and purge tasks)"
      },
      "WorkFlowActiveDocC": {
        "type": "object",
        "properties": {
          "mbFlowId": {
            "type": "string",
            "description": "DB column: wf_flowid"
          },
          "mbNodeId": {
            "type": "string",
            "description": "DB column: wf_nodeid"
          },
          "mbFlowName": {
            "type": "string",
            "description": "DB column: wf_flow_name"
          },
          "lnFlowName": {
            "type": "integer",
            "description": "DB column: wf_flow_name",
            "format": "int32"
          },
          "mbName": {
            "type": "string",
            "description": "DB column: wf_name"
          },
          "lnName": {
            "type": "integer",
            "description": "DB column: wf_name",
            "format": "int32"
          },
          "mbNodeType": {
            "type": "string",
            "description": "DB column: wf_node_type"
          },
          "mbDepartment": {
            "type": "string",
            "description": "DB column: wf_department"
          },
          "mbAlertTo": {
            "type": "string",
            "description": "DB column: wf_alert_to"
          },
          "mbAlertFromBegin": {
            "type": "string",
            "description": "DB column: wf_alert_from_begin"
          },
          "mbAlertWait": {
            "type": "string",
            "description": "DB column: wf_alert_wait"
          },
          "mbYNCondition": {
            "type": "string",
            "description": "DB column: wf_yesnocondition"
          },
          "lnYNCondition": {
            "type": "integer",
            "description": "DB column: wf_yesnocondition",
            "format": "int32"
          },
          "mbCondition": {
            "type": "string",
            "description": "DB column: wf_condition"
          },
          "lnCondition": {
            "type": "integer",
            "description": "DB column: wf_condition",
            "format": "int32"
          },
          "mbComment": {
            "type": "string",
            "description": "DB column: wf_comment"
          },
          "lnComment": {
            "type": "integer",
            "description": "DB column: wf_comment",
            "format": "int32"
          },
          "mbLocked": {
            "type": "string",
            "description": "DB column: wf_locked"
          },
          "mbPosX": {
            "type": "string",
            "description": "DB column: pos_x"
          },
          "mbPosY": {
            "type": "string",
            "description": "DB column: pos_y"
          },
          "mbOnActivate": {
            "type": "string",
            "description": "DB column: wf_ev_on_activate"
          },
          "lnOnActivate": {
            "type": "integer",
            "description": "DB column: wf_ev_on_activate",
            "format": "int32"
          },
          "mbOnTerminate": {
            "type": "string",
            "description": "DB column: wf_ev_on_terminate"
          },
          "lnOnTerminate": {
            "type": "integer",
            "description": "DB column: wf_ev_on_terminate",
            "format": "int32"
          },
          "mbNodeFlags": {
            "type": "string",
            "description": "DB column: wf_nodeflags"
          },
          "mbEloObjId": {
            "type": "string",
            "description": "DB column: wf_eloobjid"
          },
          "mbLockId": {
            "type": "string",
            "description": "DB column: wf_locked_owner"
          },
          "mbIsNext": {
            "type": "string",
            "description": "DB column: wf_is_next"
          },
          "mbActivate": {
            "type": "string",
            "description": "DB column: wf_activate"
          },
          "mbTerminate": {
            "type": "string",
            "description": "DB column: wf_terminate"
          },
          "mbInUseDate": {
            "type": "string",
            "description": "DB column: wf_in_use_date"
          },
          "mbCompletionDate": {
            "type": "string",
            "description": "DB column: wf_completion_date"
          },
          "mbTemplateId": {
            "type": "string",
            "description": "DB column: wf_template"
          },
          "mbUserTerminate": {
            "type": "string",
            "description": "DB column: wf_userterminate"
          },
          "lnUserTerminate": {
            "type": "integer",
            "description": "DB column: wf_userterminate",
            "format": "int32"
          },
          "mbTag": {
            "type": "string",
            "description": "DB column: wf_tag"
          },
          "mbDesignDepartment": {
            "type": "string",
            "description": "DB column: wf_designdepartment"
          },
          "mbMoveCyclePosX": {
            "type": "string",
            "description": "DB column: wf_dx"
          },
          "mbDepartment2": {
            "type": "string",
            "description": "DB column: wf_department2"
          },
          "mbDelayDays": {
            "type": "string",
            "description": "DB column: wf_delaydays"
          },
          "mbDelayDate": {
            "type": "string",
            "description": "DB column: wf_duedate"
          },
          "mbDeleted": {
            "type": "string",
            "description": "DB column: wf_deleted"
          },
          "mbPrio": {
            "type": "string",
            "description": "DB column: wf_prio"
          },
          "mbUserDelayDate": {
            "type": "string",
            "description": "Member bit: The workflow node is deferred until this date.\nDB column: wf_user_delaydate"
          },
          "mbVersionId": {
            "type": "string",
            "description": "Member bit: Version ID.\nDB column: wf_version"
          },
          "mbVersionName": {
            "type": "string",
            "description": "Member bit: Version comment.\nDB column: wf_version_name"
          },
          "lnVersionName": {
            "type": "integer",
            "description": "Column length: Version comment.\nDB column: wf_version_name",
            "format": "int32"
          },
          "mbAlertTo2": {
            "type": "string",
            "description": "Member bit: ID of user who should be informed, DB column: wf_alert_to2"
          },
          "mbAlertWait2": {
            "type": "string",
            "description": "Member bit: Second Time-limit for a person node or begin node.\nDB column: wf_alert_wait2"
          },
          "mbAlertTo3": {
            "type": "string",
            "description": "Member bit: ID of user who should be informed, DB column: wf_alert_to3"
          },
          "mbAlertWait3": {
            "type": "string",
            "description": "Member bit: Third Time-limit for a person node or begin node.\nDB column: wf_alert_wait3"
          },
          "mbNextServerId": {
            "type": "string",
            "description": "Member bit: Next server name.\nThis value is used in replication environments DB column: nextserverid"
          },
          "lnNextServerId": {
            "type": "integer",
            "description": "Column length: Next server name.\nThis value is used in replication environments DB column: nextserverid",
            "format": "int32"
          },
          "mbVersionTag": {
            "type": "string",
            "description": "Member bit: Version number.\nDB column: wf_version_tag"
          },
          "lnVersionTag": {
            "type": "integer",
            "description": "Column length: Version number.\nDB column: wf_version_tag",
            "format": "int32"
          },
          "mbVersionUserId": {
            "type": "string",
            "description": "Member bit: ID of the user who created the workflow version.\nDB column: wf_version_userid"
          },
          "mbVersionCreateDate": {
            "type": "string",
            "description": "Member bit: ID of the user who created the workflow version.\nDB column: wf_version_createdate"
          },
          "mbIconId": {
            "type": "string",
            "description": "Member bit: Object-GUID of an icon file that is displayed in the designer.\nDB column: wf_icon_guid"
          },
          "lnIconId": {
            "type": "integer",
            "description": "Column length: Object-GUID of an icon file that is displayed in the designer.\nDB column: wf_icon_guid",
            "format": "int32"
          },
          "mbFormSpec": {
            "type": "string",
            "description": "Member bit: User defined data to be stored in the database.\nDB column: wf_form_spec"
          },
          "lnFormSpec": {
            "type": "integer",
            "description": "Column length: User defined data to be stored in the database.\nDB column: wf_form_spec",
            "format": "int32"
          },
          "mbFlowNameTranslationKey": {
            "type": "string",
            "description": "Member bit: Translation-keyword for {@link WFDiagram#name}.\nDB column: wf_flownametrkey"
          },
          "lnFlowNameTranslationKey": {
            "type": "integer",
            "description": "Column length: Translation-keyword for {@link WFDiagram#name}.\nDB column: wf_flownametrkey",
            "format": "int32"
          },
          "mbNameTranslationKey": {
            "type": "string",
            "description": "Member bit: Translation-keyword for {@link WFNode#name}.\nDB column: wf_nametrkey"
          },
          "lnNameTranslationKey": {
            "type": "integer",
            "description": "Column length: Translation-keyword for {@link WFNode#name}.\nDB column: wf_nametrkey",
            "format": "int32"
          },
          "mbCommentTranslationKey": {
            "type": "string",
            "description": "Member bit: Translation-keyword for {@link WFNode#comment}.\nDB column: wf_commenttrkey"
          },
          "lnCommentTranslationKey": {
            "type": "integer",
            "description": "Column length: Translation-keyword for {@link WFNode#comment}.\nDB column: wf_commenttrkey",
            "format": "int32"
          },
          "mbLabel": {
            "type": "string",
            "description": "Member bit: Display name by forwarding.\nDB column: wf_label"
          },
          "lnLabel": {
            "type": "integer",
            "description": "Column length: Display name by forwarding.\nDB column: wf_label",
            "format": "int32"
          },
          "mbProperties": {
            "type": "string",
            "description": "Member bit: Properties field of node.\nDB column: wf_properties"
          },
          "lnProperties": {
            "type": "integer",
            "description": "Column length: Properties field of node.\nDB column: wf_properties",
            "format": "int32"
          },
          "mbDepartmentGroup": {
            "type": "string",
            "description": "Member bit: Grouping of nodes for function takeWorkFlowNode.\nDB column: wf_departmentgroup"
          },
          "mbRetVal": {
            "type": "string",
            "description": "Member bit: Return value of an end node.\nDB column: wf_retval"
          },
          "mbReturnValue": {
            "type": "string",
            "description": "Member bit: Return value of an end node.\nDB column: wf_returnvalue"
          },
          "lnReturnValue": {
            "type": "integer",
            "description": "Column length: Return value of an end node.\nDB column: wf_returnvalue",
            "format": "int32"
          },
          "mbSubWorkflow": {
            "type": "string",
            "description": "Member bit: ID of the active sub-workflow.\nDB column: wf_sub_wf"
          },
          "mbLabelTranslationKey": {
            "type": "string",
            "description": "Member bit: Translation-keyword for {@link WorkFlowActiveDoc#label}.\nDB column: wf_labeltrkey"
          },
          "lnLabelTranslationKey": {
            "type": "integer",
            "description": "Column length: Translation-keyword for {@link WorkFlowActiveDoc#label}.\nDB column: wf_labeltrkey",
            "format": "int32"
          },
          "mbSubWorkflowTemplate": {
            "type": "string",
            "description": "Member bit: ID of the sub-workflow template.\nDB column: wf_sub_wf_templ"
          },
          "mbActiveAcl": {
            "type": "string",
            "description": "Member bit: Contains the ACL of the workflow. Only valid for begin nodes.\nDB column: wf_active_acl"
          },
          "lnActiveAcl": {
            "type": "integer",
            "description": "Column length: Contains the ACL of the workflow. Only valid for begin nodes.\nDB column: wf_active_acl",
            "format": "int32"
          },
          "mbPackageName": {
            "type": "string",
            "description": "Member bit: PackageName of a Workflow, only used for workflow templates DB column: packagename"
          },
          "lnPackageName": {
            "type": "integer",
            "description": "Column length: PackageName of a Workflow, only used for workflow templates DB column: packagename",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of WorkFlowActiveDoc\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "DateRelative": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "description": "\u003cp\u003e\nTime shift for years.\n \u003c/p\u003e\n \n example: -3 means three years to the past. 3 means three years to the future.",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "description": "\u003cp\u003e\nTime shift for months.\n \u003c/p\u003e\n \n example: -3 means three months to the past. 3 means three months to the future.",
            "format": "int32"
          },
          "day": {
            "type": "integer",
            "description": "\u003cp\u003e\nTime shift for days.\n \u003c/p\u003e\n \n example: -3 means three days to the past. 3 means three days to the future.",
            "format": "int32"
          },
          "hour": {
            "type": "integer",
            "description": "\u003cp\u003e\nTime shift for hours.\n \u003c/p\u003e\n \n example: -3 means three hours to the past. 3 means three hours to the future.",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "description": "\u003cp\u003e\nTime shift for minutes.\n \u003c/p\u003e\n \n example: -3 means three minutes to the past. 3 means three minutes to the future.",
            "format": "int32"
          }
        },
        "description": "\u003cp\u003e\nProvides relative time differences for DateNowValues.\n \u003c/p\u003e\n \u003cp\u003e\n If a range query into the past or future is performed, is defined if the biggest delivered value is positive or\n negative.\u003cbr\u003e\n e.g.: If \u003ccode\u003eyear\u003d0, month\u003d-2\u003c/code\u003e, a range query from now to two months into the past is performed.\u003cbr\u003e\n e.g.: If \u003ccode\u003eyear\u003d0, month\u003d-2, days\u003d10\u003c/code\u003e, a range query from now to one month, 20 days into the past is\n performed.\u003cbr\u003e\n \u003c/p\u003e"
      },
      "ClientNotification": {
        "type": "object"
      },
      "MapToInteger": {
        "type": "object",
        "additionalProperties": {
          "type": "integer",
          "format": "int32"
        }
      },
      "BRequest_IXServicePortIF_findFirstNotes": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindInfo"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "noteZ": {
            "$ref": "#/components/schemas/NoteZ"
          }
        }
      },
      "BRequest_IXServicePortIF_getSearchTerms": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindInfo"
          },
          "termType": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SearchModeC": {
        "type": "object",
        "properties": {
          "bsetAND": {
            "type": "string"
          },
          "bsetOR": {
            "type": "string"
          },
          "bsetONE_TERM": {
            "type": "string"
          },
          "bsetEXPRESSION": {
            "type": "string"
          },
          "AND": {
            "description": "The search terms are concatinated with the boolean AND operator.",
            "$ref": "#/components/schemas/SearchModeZ"
          },
          "OR": {
            "description": "The search terms are concatinated with the boolean OR operator.",
            "$ref": "#/components/schemas/SearchModeZ"
          },
          "ONE_TERM": {
            "description": "A blank separated list in \u003ccode\u003eFindByIndex.name\u003c/code\u003e or \u003ccode\u003eFindByIndex.desc\u003c/code\u003e is used as a single term.",
            "$ref": "#/components/schemas/SearchModeZ"
          },
          "EXPRESSION": {
            "description": "The value of \u003ccode\u003eFindByIndex.name\u003c/code\u003e or \u003ccode\u003eFindByIndex.\ndesc\u003c/code\u003e contains the operators \"AND\" (\u0026amp;),\n \"OR\" (|), \"NOT\" (!) for concatination.",
            "$ref": "#/components/schemas/SearchModeZ"
          }
        },
        "description": "\u003cp\u003e\nThis class defines options used in \u003ccode\u003eFindOptions.searchMode\u003c/code\u003e.\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_deleteWorkFlow": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "flowId": {
            "type": "string"
          },
          "typeZ": {
            "$ref": "#/components/schemas/WFTypeZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BResult_736983867": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ESInfoObj"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "DocMaskC": {
        "type": "object",
        "properties": {
          "GUID_BASIC": {
            "type": "string",
            "description": "Predefined GUID for keywording form \"Freie Eingabe\"."
          },
          "GUID_EMAIL": {
            "type": "string",
            "description": "Predefined GUID for keywording form \"EMail\"."
          },
          "GUID_STRUCTURE_ELEMENT": {
            "type": "string",
            "description": "Predefined GUID for keywording form \"Strukturelement\"."
          },
          "GUID_CONTACT": {
            "type": "string",
            "description": "Predefined GUID for keywording form \"Kontakt\"."
          },
          "GUID_FOLDER": {
            "type": "string",
            "description": "Predefined GUID for the keywording form used for folders by default."
          },
          "GUID_SEARCH": {
            "type": "string",
            "description": "Predefined GUID for the keywording form used to search entries regardless of their storage mask."
          },
          "GUID_ELOSCRIPTS": {
            "type": "string",
            "description": "Predefined GUID for the keywording form used for scripts."
          },
          "GUID_USER_FOLDER": {
            "type": "string",
            "description": "Predefined GUID for the keywording form used by user folders."
          },
          "GUID_MS_SHAREPOINT_DOCUMENT": {
            "type": "string",
            "description": "Prefefined GUID for a keywording form for MS Sharepoint documents."
          },
          "mbAcl": {
            "type": "string",
            "description": "Member bit: ACL"
          },
          "lnAcl": {
            "type": "integer",
            "description": "ACL length",
            "format": "int32"
          },
          "mbAclItems": {
            "type": "string",
            "description": "Member bit: use the ACL items in the member DocMask.aclItems and DocMask.docAclItems for reading and writing."
          },
          "mbMaskLines": {
            "type": "string",
            "description": "Member bit: read or write index lines."
          },
          "mbInheritFromMasks": {
            "type": "string",
            "description": "Member bit for {@link DocMask#inheritFromMasks}."
          },
          "mbSortOrderNotArchivingMode": {
            "type": "string",
            "description": "Member bit: this bit should be set if the Mask is to be used for structure elements and not for documents.\nThe\n effect is that the member DocMask.details.sortOrder is filled instead of DocMask.details.archivingMode."
          },
          "mbDeletionDeadline": {
            "type": "string",
            "description": "Member bit for {@link DocMask#deletionDeadline}."
          },
          "mbAllMembers": {
            "type": "string",
            "description": "Member bit: read or write all elements."
          },
          "mbAspectAssocs": {
            "type": "string",
            "description": "Member bit for {@link DocMask#aspectAssocs}."
          },
          "mbAll": {
            "description": "Read or write all elements.",
            "$ref": "#/components/schemas/DocMaskZ"
          },
          "mbOnlyLock": {
            "description": "Only lock or unlock",
            "$ref": "#/components/schemas/DocMaskZ"
          },
          "mbDetails": {
            "type": "string"
          },
          "mbDocAclItems": {
            "type": "string"
          },
          "mbLines": {
            "type": "string"
          },
          "mbDeleted": {
            "type": "string"
          },
          "DATA_ORGANISATION_OBJKEYS": {
            "type": "integer",
            "description": "Store index values as key-value-pairs in the objkeys table.",
            "format": "int32"
          },
          "DATA_ORGANISATION_TABLE": {
            "type": "integer",
            "description": "Store index values in columns of a dedicated table.",
            "format": "int32"
          },
          "DATA_ORGANISATION_ASPECT": {
            "type": "integer",
            "description": "Keywording form is based on aspects.",
            "format": "int32"
          },
          "MAX_MASK_IDS_FOR_CHILD_ENTRIES": {
            "type": "integer",
            "description": "Maximum number of keywording form IDs for {@link DocMask#maskIdsForChildEntries}.",
            "format": "int32"
          }
        },
        "description": "\u003cp\u003e\nConstants related to class \u003ccode\u003eDocMask\u003c/code\u003e. Some of the \u003ccode\u003eMFG_\u003c/code\u003e values are used in the member\n \u003ccode\u003eFlags\u003c/code\u003e of class \u003ccode\u003eSord\u003c/code\u003e too. Each member of this class with prefix \"mb\" has a corresponding\n member in class \u003ccode\u003eDocMask\u003c/code\u003e\n \u003c/p\u003e\n *\n \u003c/p\u003e"
      },
      "BRequest_IXServerEvents_onBeforeFindSords": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindInfo"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          }
        }
      },
      "BResult_42339713": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/MapDomain"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "IXExceptionData": {
        "type": "object",
        "properties": {
          "callId": {
            "type": "string",
            "description": "String containing the ClientInfo.callId for the ClientInfo object.\nThis is given to the function which\n triggered/caused the error."
          },
          "details": {
            "type": "string",
            "description": "Detail text for the exception."
          },
          "exceptionType": {
            "type": "integer",
            "description": "This is the type of exception. This is one of the constants from IXExceptionC.",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "The error message text for the exception."
          },
          "ticket": {
            "type": "string",
            "description": "Ticket given to the function."
          }
        },
        "description": "This class describes an exception that can occur during the execution of an Index server function.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "WorkflowExchangeInfo": {
        "type": "object",
        "properties": {
          "workflow": {
            "description": "The exchanged workflow.",
            "$ref": "#/components/schemas/WFDiagram"
          },
          "userNames": {
            "description": "The users associated with the workflow",
            "$ref": "#/components/schemas/MapToUserName"
          },
          "subWorkflowMap": {
            "description": "Map contains the all direct und indirect subworkflows. The workflow ID is the key.",
            "$ref": "#/components/schemas/MapToWFDiagram"
          },
          "workflowVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFDiagram"
            }
          },
          "subWorkflowVersionMap": {
            "description": "Map contains the workflow verions of the sub workflows.",
            "$ref": "#/components/schemas/MapToArrayListOfWFDiagram"
          }
        },
        "description": "This class represents a workflow export data."
      },
      "EsSettingsProperty": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Value of property as set in database. If empty, default value is used."
          },
          "defaultValue": {
            "type": "string",
            "description": "Default value of property."
          },
          "possibleValues": {
            "description": "List of all possible values. If empty, there are no specified possible values.",
            "$ref": "#/components/schemas/ArrayListOfString"
          }
        },
        "description": "Properties of ESInstanceSettings"
      },
      "MapValue": {
        "type": "object",
        "properties": {
          "blobValue": {
            "description": "BLOB value.",
            "$ref": "#/components/schemas/FileData"
          }
        },
        "description": "This class represents map values.\nA map value is either a string, stored in member {@link KeyValue#value} of the\n super class. Or a map value is a BLOB available in {@link #blobValue}."
      },
      "SearchModeZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from SearchModeC class."
          }
        },
        "description": "\u003cp\u003e\nThis class encapsulates the constants of \u003ccode\u003eSearchModeC\u003c/code\u003e\n \u003c/p\u003e\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ResolveRightsResultC": {
        "type": "object",
        "properties": {
          "DIRECT": {
            "type": "integer",
            "description": "Indicates that the user got the right directly.",
            "format": "int32"
          },
          "INHERITED": {
            "type": "integer",
            "description": "Indicates that the user got the right by inheritance of a group.",
            "format": "int32"
          },
          "SUBSTITUTION": {
            "type": "integer",
            "description": "Indicates that the user got the right by a substitution rule.",
            "format": "int32"
          }
        },
        "description": "Constants for {@link ResolveRightsResult}."
      },
      "ContextTermReturnTypeE": {
        "type": "object",
        "properties": {
          "tokenized": {
            "description": "tokenized context terms. e.\ng: index field \u003d \"Hello world\", resulting context terms \u003d \"hello\",\n \"world\"",
            "$ref": "#/components/schemas/ContextTermReturnTypeE"
          },
          "notTokenized": {
            "description": "not tokenized context terms. e.\ng: index field \u003d \"Hello world\", resulting context terms \u003d \"Hello\n World\"",
            "$ref": "#/components/schemas/ContextTermReturnTypeE"
          },
          "numericSingleValues": {
            "description": "Use this to retrieve context term for numeric values and return every single value. e.g.\nuse for\n {@link SearchFieldE#MASK_ID} to get the amount of documents for each mask.",
            "$ref": "#/components/schemas/ContextTermReturnTypeE"
          },
          "numericBuckets": {
            "description": "Numeric values are separated into bins and returned with the following syntax:\u003cbr\u003e\n\u003ccode\u003e\"0 TO 10, \"11 TO 20\", \"21 TO *\"\u003c/code\u003e",
            "$ref": "#/components/schemas/ContextTermReturnTypeE"
          },
          "dateYearBuckets": {
            "description": "Use this for date values. A bin for every available year is returned.",
            "$ref": "#/components/schemas/ContextTermReturnTypeE"
          }
        },
        "description": "Specifies the return type for context terms."
      },
      "EventFilter": {
        "type": "object",
        "properties": {
          "busId": {
            "type": "string",
            "description": "Event bus ID"
          },
          "type": {
            "type": "string",
            "description": "Event type.\nThis must be one of the predefined event types or an application defined type with a larger value than\n EventBusC.EVENT_TYPE_MAX_SYSTEM."
          },
          "param1": {
            "type": "string",
            "description": "First event param. Optional. Depends on event type."
          },
          "param2": {
            "type": "string",
            "description": "Second event param. Optional. Depends on event type."
          }
        },
        "description": "This class describes an event filter."
      },
      "MapToUserInfo": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/UserInfo"
        }
      },
      "WorkFlowHeadC": {
        "type": "object",
        "properties": {
          "mbFlowId": {
            "type": "string",
            "description": "Member bit: Workflow ID DB column: wfflowid"
          },
          "mbTStamp": {
            "type": "string",
            "description": "Member bit: Timestamp DB column: wftstamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "Column length: Timestamp DB column: wftstamp",
            "format": "int32"
          },
          "mbGuid": {
            "type": "string",
            "description": "Member bit: GUID DB column: wfguid"
          },
          "lnGuid": {
            "type": "integer",
            "description": "Column length: GUID DB column: wfguid",
            "format": "int32"
          },
          "mbStatus": {
            "type": "string",
            "description": "Member bit: Status, !\u003d 0 means deleted DB column: wfstatus"
          },
          "mbType": {
            "type": "string",
            "description": "Member bit: Workflow type.\nDB column: wftype"
          },
          "mbActServerId": {
            "type": "string",
            "description": "Member bit: The current sever ID (resp.\nreplication branch) where the DB column: actserverid"
          },
          "lnActServerId": {
            "type": "integer",
            "description": "Column length: The current sever ID (resp.\nreplication branch) where the DB column: actserverid",
            "format": "int32"
          },
          "mbParentWorkflow": {
            "type": "string",
            "description": "Member bit: Id of the main workflow.\nDB column: wfParent"
          },
          "mbCallNodeId": {
            "type": "string",
            "description": "Member bit: The call node id of the main workflow, which call this sub workflow.\nDB column: callnodeid"
          },
          "mbTStampSync": {
            "type": "string",
            "description": "Member bit: Timestamp of this object\u0027s last export by the replication.\nDB column: wftstampsync"
          },
          "lnTStampSync": {
            "type": "integer",
            "description": "Column length: Timestamp of this object\u0027s last export by the replication.\nDB column: wftstampsync",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of WorkFlowHead\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ListOfMapToString": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MapToString"
        }
      },
      "ArchiveStatistics": {
        "type": "object",
        "properties": {
          "maxDocId": {
            "type": "integer",
            "description": "Last document (version) ID.",
            "format": "int32"
          },
          "maxObjId": {
            "type": "integer",
            "description": "Last object ID.",
            "format": "int32"
          }
        },
        "description": "Characteristic properties of the archive."
      },
      "ArrayOfAny": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Any"
        }
      },
      "QueryJobProtocolResult": {
        "type": "object",
        "properties": {
          "downloadUrl": {
            "type": "string",
            "description": "This String contains a URL where the whole protocol can be downloaded. Empty, if no protocol file exists."
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueryJobProtocolEvent"
            }
          }
        },
        "description": "\u003cp\u003e\nThis class contains the results from querying the protocol of a background thread.\n \u003c/p\u003e"
      },
      "CounterInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the counter"
          },
          "value": {
            "type": "integer",
            "description": "The current value of the counter",
            "format": "int32"
          }
        },
        "description": "This class provides counters for use by the access manager.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_FeedService_checkoutAction": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "actionGuid": {
            "type": "string"
          },
          "actionZ": {
            "$ref": "#/components/schemas/ActionZ"
          }
        }
      },
      "WFDiagramZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from the WFDiagramC class."
          }
        },
        "description": "This class encapsulates the constants of the WFDiagramC class.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "DocMaskDetails": {
        "type": "object",
        "properties": {
          "archivingMode": {
            "type": "integer",
            "description": "Archiving mode. Sort order and archiving mode share the same database column.\nIf the mask is used for documents,\n set \u003ccode\u003esortOrder\u003dSordOrderC.NONE\u003c/code\u003e. ELO 7.0: This value is only valid for document masks,\n \u003ccode\u003edocumentMask\u003dtrue\u003c/code\u003e.",
            "format": "int32"
          },
          "encryptionSet": {
            "type": "integer",
            "description": "Encryption set number.",
            "format": "int32"
          },
          "fulltext": {
            "type": "boolean",
            "description": "Document is or should be containted in the fultext database."
          },
          "sortOrder": {
            "type": "integer",
            "description": "Sort order of child entries. Sort order and archiving mode share the same database column.\nIf the mask is used for\n folders, set \u003ccode\u003earchivingMode\u003dArchivingModeC.NONE\u003c/code\u003e. If both \u003ccode\u003esortOrder\u003c/code\u003e and\n \u003ccode\u003earchivingMode\u003c/code\u003e are set, \u003ccode\u003esortOrder\u003c/code\u003e has precedence and \u003ccode\u003earchivingMode\u003c/code\u003e is\n ignored. ELO 7.0: This value is only valid for folder masks, \u003ccode\u003efolderMask\u003dtrue\u003c/code\u003e.",
            "format": "int32"
          },
          "documentMask": {
            "type": "boolean",
            "description": "Mask can be used to edit indexing information of a document."
          },
          "searchMask": {
            "type": "boolean",
            "description": "Mask can be used to search for indexing information."
          },
          "folderMask": {
            "type": "boolean",
            "description": "Mask can be used to edit indexing information of a folder"
          },
          "createIndexPath": {
            "type": "boolean",
            "description": "If \u003ccode\u003eDocMask.\nindex\u003c/code\u003e is defined, this option effects that the resulting archieve path is created, if it\n does not exist."
          },
          "createIndexReferencesPaths": {
            "type": "boolean",
            "description": "If \u003ccode\u003eDocMask.\nindex\u003c/code\u003e is defined including reference paths, this option effects that the resulting\n reference paths are created, if they do not exist."
          },
          "releaseDocument": {
            "type": "boolean",
            "description": "Documents using this mask may be used as release notes"
          },
          "documentContainer": {
            "type": "boolean",
            "description": "Folders indexed with this mask get the flag {@link SordDetails#documentContainer} set accordingly."
          },
          "translateSordName": {
            "type": "boolean",
            "description": "If \u003ctt\u003etrue\u003c/tt\u003e translate the sord\u0027s short description into or from the user language."
          },
          "enabledByParent": {
            "type": "boolean",
            "description": "Usage depends on the keywording form of the parent entry.\nThis keywording form should only be used for a Sord, if\n the keywording form of the parent Sord explicitly allows that in it\u0027s member\n {@link DocMask#maskIdsForChildEntries}."
          },
          "inheritAclDisabled": {
            "type": "boolean",
            "description": "Do not inherit permissions from parent Sords."
          },
          "keywordingRelationAllowed": {
            "type": "boolean",
            "description": "Mask can be referenced from a DocMaskLine of type {@link DocMaskLineC#TYPE_RELATION}"
          }
        },
        "description": "This class contains a member of a \u003ccode\u003eDocMask\u003c/code\u003e object.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_HealthCheckService_updateMeanValue": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "name": {
            "type": "string"
          },
          "meanValue": {
            "type": "number",
            "format": "double"
          },
          "sampleSize": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteKeywordList": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "kwid": {
            "type": "string"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "UserProfileC": {
        "type": "object",
        "properties": {
          "DATE_FORMAT": {
            "type": "string"
          },
          "SORD_DATE_FORMAT": {
            "type": "string"
          },
          "SORD_IDATE_FORMAT": {
            "type": "string"
          },
          "SORD_XDATE_FORMAT": {
            "type": "string"
          },
          "SORD_DELDATE_FORMAT": {
            "type": "string"
          },
          "DOC_VERSION_DATE_FORMAT": {
            "type": "string"
          },
          "DOC_VERSION_CREATE_FORMAT": {
            "type": "string"
          },
          "DOC_VERSION_ACCESS_FORMAT": {
            "type": "string"
          },
          "DOC_VERSION_UPDATE_FORMAT": {
            "type": "string"
          },
          "USERID_ALL": {
            "type": "string",
            "description": "Read/write user profile options for all users."
          },
          "KEY_EXTEND_DOCUMENT_ACCESS_IN_WORKFLOW": {
            "type": "string",
            "description": "Extended access control for documents or folders used in workflows.\n\u003cp\u003e\n There are two concepts of extending access control for folders and documents routed though a workflow. The rules\n are only applied if (a) the current user has an active workflow task for the folder or document and (b) the right\n AccessC.FLAG2_EXTEND_WORKFLOW_RIGHTS is assigned to the current user.\n \u003c/p\u003e\n \u003cp\u003e\n 1. Overlay additional access rights over the objects ACL: the lower 8 bits of the keys value specify a combination\n of AccessC.LUR_* constants that are added to the ACL access rights when access checking is performed. The objects\n ACL is not modified, this rule only changes the internal program logic.\n \u003c/p\u003e\n \u003cp\u003e\n 2. Permanently add additional access to the ACL: the higher 8 bits of the keys value specify a combination of\n AccessC.LUR_* constants for a new ACL entry to be added for the current user. The ACL is only extended, if\n checkoutSord or checkoutDoc detects less access for the current user."
          },
          "KEY_PASSWORD_RULES": {
            "type": "string",
            "description": "Password rules. The password rules are stored as a comma separated list of 5 Integers, e.g. \"7,1,1,0,0\". 1.\nMinimum\n password length 2. Is !\u003d 0, if password must contain at least one letter. 3. Is !\u003d 0, if password must contain at\n least one special character (not letter and not digit). 4. Is !\u003d 0, if password must contain at least one lower\n case and one upper case letter. 5. Is !\u003d 0, if password must contain at least one digit."
          },
          "KEY_PASSWORD_VALID_DAYS": {
            "type": "string",
            "description": "The password has to be changed after this number of days.\nThe value corresponds to\n UserInfo.userProps[UserInfoC.PROP_ACTION]."
          },
          "KEY_ARCHIVE_LANGUAGE": {
            "type": "string",
            "description": "Give the archive\u0027s language (set by a new installation since Server Setup 9.00.004)."
          },
          "KEY_FEED_SUBSCRIBE_MYDOC": {
            "type": "string",
            "description": "Automatically subscribe Feed if the User creates a new Document"
          },
          "KEY_FEED_SUBSCRIBE_MYFOLDER": {
            "type": "string",
            "description": "Automatically subscribe Feed if the User creates a new Folder"
          },
          "KEY_FEED_SUBSCRIBE_NEWVERSION": {
            "type": "string",
            "description": "Automatically subscribe Feed if the User creates a new Version of a Document"
          },
          "KEY_FEED_SUBSCRIBE_NEWCOMMENT": {
            "type": "string",
            "description": "Automatically subscribe Feed if the User adds a comment to a Feed"
          },
          "KEY_PREFIX_FULLTEXT_SEARCH_OPTIONS": {
            "type": "string",
            "description": "Prefix for fulltext search options."
          },
          "KEY_DEFAULT_DOCMASK_DOC": {
            "type": "string",
            "description": "Default mask for new document."
          },
          "KEY_DEFAULT_DOCMASK_FOLDER": {
            "type": "string",
            "description": "Default mask for new structure element."
          },
          "KEY_SERVER_ID": {
            "type": "string",
            "description": "Server-ID for WF-Replication"
          },
          "KEY_PREFIX_SYSTEM_ENCRYPTION_PASSWORD": {
            "type": "string",
            "description": "Prefix for system encryption password options."
          },
          "lnKey": {
            "type": "integer",
            "description": "Maximum length of key",
            "format": "int32"
          },
          "lnValue": {
            "type": "integer",
            "description": "Maximum length of value",
            "format": "int32"
          }
        },
        "description": "The constants in this class exist due to compatibility requirements with older Index Server versions, which gave back\nformatted data (Sord.xDataDispl).\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServerEvents_onSendSordToISearch": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "mask": {
            "$ref": "#/components/schemas/DocMask"
          },
          "fulltext": {
            "type": "string"
          }
        }
      },
      "BResult_1788243283": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobState"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutWorkflowTemplate": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "flowId": {
            "type": "string"
          },
          "versionId": {
            "type": "string"
          },
          "wfZ": {
            "$ref": "#/components/schemas/WFDiagramZ"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_findCompletion": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindInfo"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BResult_1426941339": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/MyELOState"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServerEvents_onAfterCheckinDocEnd": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "sordDB": {
            "$ref": "#/components/schemas/Sord"
          },
          "parentSord": {
            "$ref": "#/components/schemas/Sord"
          },
          "doc": {
            "$ref": "#/components/schemas/Document"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServerEvents_onBeforeCheckinActivity": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "act": {
            "$ref": "#/components/schemas/Activity"
          },
          "isNew": {
            "type": "boolean"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "KeywordsDynamicResult": {
        "type": "object",
        "properties": {
          "table": {
            "description": "\u003cp\u003e\nThis value contains the result set as a table. Each entry of the outer list represents a row in the table. Thus,\n the entry \u003cb\u003ei\u003c/b\u003e of an inner list represents the value of the \u003cb\u003ei\u003c/b\u003e. column of the actual row. The length of\n each inner list is identical to the total amount of columns. Entries without a value are represented by an empty\n string.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/ListOfListOfString"
          },
          "header": {
            "description": "\u003cp\u003e\nThis list contains the column descriptions to be displayed as the header of the \u003ccode\u003etable\u003c/code\u003e at the client.\n The size of this list matches the amount of columns in \u003ccode\u003etable\u003c/code\u003e. The value at index \u003cb\u003ei\u003c/b\u003e represents\n the column description of the column \u003cb\u003ei\u003c/b\u003e. The first column index is 0. Columns without a header value must be\n represented by an empty or undefined string.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/ListOfString"
          },
          "keyNames": {
            "description": "\u003cp\u003e\nList of key names. The size of this list equals to \u003ccode\u003eheader\u003c/code\u003e. In this list, columns without a key name\n are represented by null or an empty String.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/ListOfString"
          },
          "message": {
            "type": "string",
            "description": "\u003cp\u003e\nThe executed script may provide additional informations to the client such as \"Please fill field XYZ\". Such\n informations are stored in the value \u003ccode\u003emessage\u003c/code\u003e. The script has to provide the translation to the\n client\u0027s language.\n \u003c/p\u003e"
          },
          "moreResults": {
            "type": "boolean",
            "description": "\u003cp\u003e\nIs true if there are more results.\n \u003c/p\u003e"
          },
          "title": {
            "type": "string",
            "description": "\u003cp\u003e\nA brief and succinctly description about the represented data. The script developer must provide a title, otherwise\n an exception is thrown.\n \u003c/p\u003e"
          },
          "columnProperties": {
            "description": "\u003cp\u003e\nList of column properties. The size of this list equals to \u003ccode\u003eheader\u003c/code\u003e. If the value at position \u003ci\u003ei\u003c/i\u003e\n is null, the client will use a default value for the properties of column \u003ci\u003ei\u003c/i\u003e.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/ListOfMapToString"
          }
        },
        "description": "\u003cp\u003e\nThe class KeywordsDynamicResult defines the return value of the IX call\n {@link IXServicePortIF#checkoutKeywordsDynamic(ClientInfo, KeywordsDynamicInfo)} .\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_checkinKeywords": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "kws": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Keyword"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "WFDelegateNodeInfo": {
        "type": "object",
        "properties": {
          "flowId": {
            "type": "string",
            "description": "Workflow ID, GUID or name"
          },
          "nodeId": {
            "type": "integer",
            "description": "Node ID",
            "format": "int32"
          },
          "delegateToUserId": {
            "type": "string",
            "description": "Name or ID of user or group to whom the workflow is delegated."
          },
          "delegateToUserIds": {
            "description": "Names or IDs of users or groups to whom the workflow is delegated.\nThe delegation nodes are organized serial or\n parallel as defined by member {@link #delegateParallel}.",
            "$ref": "#/components/schemas/ListOfString"
          },
          "delegateParallel": {
            "type": "boolean",
            "description": "Delegate parallel or serial to the list of users.\nif {@link #delegateToUserIds} is not null or empty, this member\n describes how the nodes created for delegation are connected.\n \u003cp\u003e\n Set this member as true, if all delegation nodes should be activated directly. The delegation returns, if at least\n one of the users forwards her/his node.\n \u003c/p\u003e\n \u003cp\u003e\n Set this member as false, if the delegation nodes should be lined up one after another. The delegation returns, if\n all users have forwarded their nodes.\n \u003c/p\u003e\n Ignored, if {@link #delegateToUserIds} is null or empty."
          },
          "delegateNodeName": {
            "type": "string",
            "description": "Name of the new node"
          },
          "delegateNodeComment": {
            "type": "string",
            "description": "Description of the new node"
          },
          "backNodeName": {
            "type": "string",
            "description": "Name of the back node."
          },
          "backNodeComment": {
            "type": "string",
            "description": "Description of the back node."
          },
          "delegateNodeMoveX": {
            "type": "integer",
            "description": "Horizontal distance between the active node and the delegation node. Recommended value is 240.",
            "format": "int32"
          },
          "delegateNodeMoveY": {
            "type": "integer",
            "description": "Vertical distance between the active node and the delegation node. Recommended value is 0.",
            "format": "int32"
          },
          "backNodeMoveX": {
            "type": "integer",
            "description": "Horizontal distance between the active node and the back node. Recommended value is 0.",
            "format": "int32"
          },
          "backNodeMoveY": {
            "type": "integer",
            "description": "Vertical distance between the active node and the back node. Recommended value is 80.",
            "format": "int32"
          },
          "copyMembersToDelegateNodeZ": {
            "description": "This selector defines which members of the node specified by nodeId are copied to the delegated node.\nIf this value\n is null, all node members are copied except the following: WFNodeC.mbId|\n WFNodeC.mbDelayDate|WFNodeC.mbDelayDateIso| WFNodeC.mbEnterDate|WFNodeC.mbEnterDateIso|\n WFNodeC.mbExitDate|WFNodeC.mbExitDateIso| WFNodeC.mbInUseDate|WFNodeC.mbInUseDateIso|\n WFNodeC.mbUserDelayDate|WFNodeC.mbUserDelayDateIso| WFNodeC.mbIsNext overwrite the members copied due\n copyMembersToDelegateNodeZ. The member WFNode.formSpec is always copied from the current node and need not to be\n included in copyMembersToDelegateNodeZ.",
            "$ref": "#/components/schemas/WFNodeZ"
          },
          "copyMembersToBackNodeZ": {
            "description": "This selector defines which members of the current node are copied to the node that leads back to the current user.\nIf this value is null, the following members are copied by default:\n \u003ccode\u003eWFNodeC.mbFlags|WFNodeC.mbMoveCyclePosX|WFNodeC.mbObjKeyNames|WFNodeC.mbScriptNames|WFNodeC.mbTag|WFNodeC.mbTimeLimit|WFNodeC.mbTimeLimitEscalations\u003c/code\u003e.\n The members given or evaluated by backNodeName, backNodeComment, backNodeMoveX and backNodeMoveY overwrite the\n members copied due copyMembersToBackNodeZ. The following members are always copied from the current node:\n WFNode.userId, WFNode.userName, WFNode.designDepartment, WFNode.department2, WFNode.formSpec and need not to be\n included in copyMembersToBackNodeZ.",
            "$ref": "#/components/schemas/WFNodeZ"
          }
        },
        "description": "This class is used as a parameter in the function\n{@link IXServicePortIF#delegateWorkFlowNode(ClientInfo, WFDelegateNodeInfo, LockZ)}."
      },
      "BRequest_IXServicePortIF_invalidateCache2": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "info": {
            "$ref": "#/components/schemas/InvalidateCacheInfo"
          }
        }
      },
      "MyELOState": {
        "type": "object",
        "properties": {
          "userGuid": {
            "type": "string"
          },
          "newFeed": {
            "type": "boolean"
          },
          "newWorkflow": {
            "type": "boolean"
          },
          "newTask": {
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_beginEditWorkFlowNode": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "nFlowId": {
            "type": "integer",
            "format": "int32"
          },
          "nNodeId": {
            "type": "integer",
            "format": "int32"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ProcessFulltext": {
        "type": "object",
        "properties": {
          "addToFulltext": {
            "type": "boolean",
            "description": "Add to the fulltext-service"
          }
        },
        "description": "Fulltext-Property to be added to/removed from an object.\n\u003cp\u003e\n Copyright: Copyright (c) 2008\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_findClose": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "searchId": {
            "type": "string"
          }
        }
      },
      "OcrInfo": {
        "type": "object",
        "properties": {
          "busId": {
            "type": "string",
            "description": "Return OCR result over this event bus.\nIf the OCR request should be performed asynchronously, this value must\n contain the event bus ID on which the result event is sent. If this value is 0, the OCR request is performed\n synchronously."
          },
          "eventId": {
            "type": "string",
            "description": "OCR result should be sent in an event with this event ID.\nThis member helps to map the OCR request to the OCR\n result. Optional."
          },
          "messagesLanguage": {
            "type": "integer",
            "description": "Language of error messages produced by the OCR engine. One of the OcrInfoC.MESSAGES_LANGUAGE_ constants. Optional.",
            "format": "int32"
          },
          "recognizeFile": {
            "description": "Recognize file information. Set this member in order to process OCR on a file or an archive document. Optional.",
            "$ref": "#/components/schemas/OcrInfoRecognizeFile"
          },
          "queryLanguages": {
            "description": "This member is set in order to query the languages supported by the OCR engine. Optional.",
            "$ref": "#/components/schemas/OcrInfoQueryLanguages"
          }
        },
        "description": "This class defines the properties of an OCR request."
      },
      "BRequest_IXServicePortIF_deleteOrgUnits": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "MapToWFDiagram": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/WFDiagram"
        }
      },
      "SordHistKey": {
        "type": "object",
        "properties": {
          "histGuid": {
            "type": "string",
            "description": "GUID of the assigned SordHist object."
          },
          "keyData": {
            "type": "string",
            "description": "Value of dat of the attribute."
          },
          "keyName": {
            "type": "string",
            "description": "Name of the attribute."
          },
          "keyNo": {
            "type": "integer",
            "description": "ID of the attribute.",
            "format": "int32"
          },
          "keyIndex": {
            "type": "integer",
            "description": "Index of the attribute within an array of attributes.",
            "format": "int32"
          },
          "keyId": {
            "type": "integer",
            "description": "External ID of the attribute, serves as an identifier for keyNames.",
            "format": "int32"
          }
        },
        "description": "This class provides the version information for a keywording attribute that has been modified.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ListOfUserName": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserName"
        }
      },
      "BResult_937420667": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/Note"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "CheckoutOrgUnitInfo": {
        "type": "object",
        "description": "Objects of this class specify the selection criteria for \u003ccode\u003echeckoutOrgUnits\u003c/code\u003e.\n\u003c/p\u003e\n No criterias can be set yet. All OUs are returned.\n \n \u003cp\u003e\n Copyright: Copyright (c) 2013\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "SubscriptionZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from the SubscriptionC class."
          }
        }
      },
      "ActivityZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field."
          }
        },
        "description": "Typed element selector for class Activity."
      },
      "BRequest_IXServicePortIF_deleteSubstitutions": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "deleteSubstitutionsInfo": {
            "$ref": "#/components/schemas/DeleteSubstitutionsInfo"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "SubscriptionC": {
        "type": "object",
        "properties": {
          "mbAll": {
            "$ref": "#/components/schemas/SubscriptionZ"
          }
        }
      },
      "ArrayOfCryptInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CryptInfo"
        }
      },
      "ExportOptionsC": {
        "type": "object",
        "properties": {
          "EXPORT_ALL_VERSIONS": {
            "type": "string",
            "description": "Include other versions in the export. The default is to only export the current active document."
          },
          "EXPORT_DOCUMENTS": {
            "type": "string",
            "description": "Include the document-files in the export."
          },
          "EXPORT_KEYWORDS": {
            "type": "string",
            "description": "Include the used keyword-lists in the export."
          },
          "EXPORT_REFERENCED_DOCUMENTS": {
            "type": "string",
            "description": "Include refereced documents in the export."
          }
        },
        "description": "Constants class for the ExportOptions class. Contains constants used when exporting objects from the ELO archive.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BResult_1005790586": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContextTerm"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "ServerStateC": {
        "type": "object",
        "properties": {
          "mbActionId": {
            "type": "string",
            "description": "DB column: actionid"
          },
          "mbSubKey": {
            "type": "string",
            "description": "DB column: subkey"
          },
          "mbAction": {
            "type": "string",
            "description": "DB column: action"
          },
          "lnAction": {
            "type": "integer",
            "description": "DB column: action",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of ServerState\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServerEvents_onBeforeDelegateWorkflowNode": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "delegateNodeInfo": {
            "$ref": "#/components/schemas/WFDelegateNodeInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ActionHistoryC": {
        "type": "object"
      },
      "BRequest_IXServicePortIF_checkinSordTypes": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "sordTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SordType"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BResult_1701204890": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ServerInfo"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinDocsEnd": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "sords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sord"
            }
          },
          "sordZs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SordZ"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "PluginState": {
        "type": "object",
        "properties": {
          "UNINSTALLED": {
            "description": "Plugin uninstalled.",
            "$ref": "#/components/schemas/PluginState"
          },
          "INSTALLED": {
            "description": "Plugin installed but not running.",
            "$ref": "#/components/schemas/PluginState"
          },
          "ACTIVE": {
            "description": "Plugin started.",
            "$ref": "#/components/schemas/PluginState"
          }
        },
        "description": "State of OSGi plugin."
      },
      "DocHistoryC": {
        "type": "object",
        "properties": {
          "mbObjId": {
            "type": "string",
            "description": "DB column: objectid"
          },
          "mbDocId": {
            "type": "string",
            "description": "DB column: documentid"
          },
          "mbUser": {
            "type": "string",
            "description": "DB column: userid"
          },
          "mbCreateDate": {
            "type": "string",
            "description": "DB column: createdate"
          },
          "mbComment": {
            "type": "string",
            "description": "DB column: histcomment"
          },
          "lnComment": {
            "type": "integer",
            "description": "DB column: histcomment",
            "format": "int32"
          },
          "mbVersion": {
            "type": "string",
            "description": "DB column: histversion"
          },
          "lnVersion": {
            "type": "integer",
            "description": "DB column: histversion",
            "format": "int32"
          },
          "mbDocMD5": {
            "type": "string",
            "description": "DB column: docmd5"
          },
          "lnDocMD5": {
            "type": "integer",
            "description": "DB column: docmd5",
            "format": "int32"
          },
          "mbGuid": {
            "type": "string",
            "description": "DB column: docguid"
          },
          "lnGuid": {
            "type": "integer",
            "description": "DB column: docguid",
            "format": "int32"
          },
          "mbTStamp": {
            "type": "string",
            "description": "DB column: doctstamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "DB column: doctstamp",
            "format": "int32"
          },
          "mbSigId": {
            "type": "string",
            "description": "DB column: docsignature"
          },
          "mbStatus": {
            "type": "string",
            "description": "DB column: docstatus"
          },
          "mbFlags": {
            "type": "string",
            "description": "DB column: docflags"
          },
          "mbDeleteDate": {
            "type": "string",
            "description": "Member bit: The version is deleted at this date. The value is an ELO date format.\nThe DB column: deletedate"
          },
          "mbNbOfValidSignatures": {
            "type": "string",
            "description": "Member bit: Number of valid signatures.\nDB column: nbofvalidsignatures"
          },
          "mbType": {
            "type": "string",
            "description": "Member bit: The type of this DocHistory makes the difference between attachments and DB column: doctype"
          },
          "mbTStampSync": {
            "type": "string",
            "description": "Member bit: Timestamp of this object\u0027s last export by the replication.\nDB column: doctstampsync"
          },
          "lnTStampSync": {
            "type": "integer",
            "description": "Column length: Timestamp of this object\u0027s last export by the replication.\nDB column: doctstampsync",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of DocHistory\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ReminderC": {
        "type": "object",
        "properties": {
          "mbObjGuid": {
            "type": "string",
            "description": "Sord guid."
          },
          "mbAll": {
            "type": "string",
            "description": "All valid member bits."
          },
          "mbCreateDateIso": {
            "type": "string"
          },
          "mbDeleted": {
            "type": "string"
          },
          "mbPromptDateIso": {
            "type": "string"
          },
          "mbDueDateIso": {
            "type": "string"
          },
          "mbLockName": {
            "type": "string"
          },
          "mbNotifyOnDelete": {
            "type": "string"
          },
          "mbNotifyOnView": {
            "type": "string"
          },
          "mbReceiverName": {
            "type": "string"
          },
          "mbSenderName": {
            "type": "string"
          }
        }
      },
      "ActionHistory": {
        "type": "object",
        "properties": {
          "actionGuid": {
            "type": "string",
            "description": "Action GUID. Unique identifier."
          },
          "createDateIso": {
            "type": "string",
            "description": "Create date.\nThis element is the ISO formatted create date of the action in the time zone of the client\n application. In order to convert this value into a date object, invoke function\n {@link de.elo.ix.client.IXConnection#isoToDate}."
          },
          "text": {
            "type": "string",
            "description": "Comment text. This element is only valid for {@link EActionType#UserComment}, and {@link EActionType#AutoComment}."
          }
        }
      },
      "SordDetails": {
        "type": "object",
        "properties": {
          "archivingMode": {
            "type": "integer",
            "description": "Archiving mode.\nThe possible values are:\n \u003ctable border\u003d\"2\"\u003e\n \u003ctr\u003e\n \u003ctd\u003eversion controlled\u003c/td\u003e\n \u003ctd\u003eArchivingModeC.VERSION\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eread-only\u003c/td\u003e\n \u003ctd\u003eArchivingModeC.READONLY\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eread/write\u003c/td\u003e\n \u003ctd\u003eArchivingModeC.READWRITE\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e\n This value is only valid for document objects.",
            "format": "int32"
          },
          "encryptionSet": {
            "type": "integer",
            "description": "Encryption set number.",
            "format": "int32"
          },
          "fulltext": {
            "type": "boolean",
            "description": "Document is or should be containted in the fultext database."
          },
          "sortOrder": {
            "type": "integer",
            "description": "Sort order of child entries. This value is only valid for folder objects.",
            "format": "int32"
          },
          "arcReplEnabled": {
            "type": "boolean",
            "description": "True, if replication is enabled for this archive."
          },
          "fulltextDone": {
            "type": "boolean",
            "description": "Document is indexed in the fultext database."
          },
          "replRoot": {
            "type": "boolean",
            "description": "True, if this object is a root folder for replication."
          },
          "linked": {
            "type": "boolean",
            "description": "True, if this object has links to other Sords.\nThis member is read-only and is ignored in checkinSord and\n checkinDocEnd."
          },
          "incomplete": {
            "type": "boolean",
            "description": "True, if a document or attachment version has been deleted."
          },
          "limitedReleaseDocument": {
            "type": "boolean",
            "description": "Documents using this mask may be used as release notes"
          },
          "linkedPermanent": {
            "type": "boolean",
            "description": "True, if this object has permanent links to other Sords.\nThis member is read-only and is ignored in checkinSord and\n checkinDocEnd."
          },
          "documentContainer": {
            "type": "boolean",
            "description": "Folders can be marked as a document container by this flag.\nIf true, clients are advised to preview the first\n document in this folder on selection."
          },
          "translateSordName": {
            "type": "boolean",
            "description": "If \u003ctt\u003etrue\u003c/tt\u003e translate the sord\u0027s short description into or from the user language."
          },
          "inheritAclDisabled": {
            "type": "boolean",
            "description": "Do not inherit permissions from parent Sord."
          }
        },
        "description": "Objects of this class are data elements and control the values assigned to certain boolean properties(yes/no\nattributes).\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_importWorkFlow": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "flowName": {
            "type": "string"
          },
          "fileData": {
            "type": "string",
            "format": "byte"
          }
        }
      },
      "GetWebDAVPathResult": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "The generated WEBDAV path."
          }
        },
        "description": "Class for the result of the IX function {@link IXServicePortIF#getWebDAVPathFromObjID2}"
      },
      "Relation": {
        "type": "object",
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "DB column: parentid",
            "format": "int32"
          },
          "objId": {
            "type": "integer",
            "description": "DB column: objectid",
            "format": "int32"
          },
          "ordinal": {
            "type": "integer",
            "description": "DB column: ordinal",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "DB column: relstatus",
            "format": "int32"
          },
          "tStamp": {
            "type": "string",
            "description": "DB column: reltstamp"
          },
          "guid": {
            "type": "string",
            "description": "GUID"
          },
          "deleteDateIso": {
            "type": "string",
            "description": "The Relation is deleted at this date. ClientInfo determines the Timezone.\n\u003cp\u003e\n Is undefined if status\u003d\u003d0.\n \u003c/p\u003e"
          },
          "mainRelation": {
            "type": "boolean",
            "description": "This Relation represents the main relation of an object, if this value is \u003ccode\u003etrue\u003c/code\u003e."
          },
          "TStampSync": {
            "type": "string",
            "description": "Timestamp of this object\u0027s last export by the replication."
          },
          "objGuid": {
            "type": "string",
            "description": "GUID of the child object."
          },
          "parentGuid": {
            "type": "string",
            "description": "GUID of the parent object."
          }
        },
        "description": "Internal class."
      },
      "BRequest_IXServicePortIF_checkoutUser": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "id": {
            "type": "string"
          },
          "checkoutUsersZ": {
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_collectWorkFlows": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "typeZ": {
            "$ref": "#/components/schemas/WFTypeZ"
          }
        }
      },
      "StringListValue": {
        "type": "object",
        "properties": {
          "valueList": {
            "description": "A list of strings which is joined by AND or OR depending on \u003ccode\u003eandOperator\u003c/code\u003e.",
            "$ref": "#/components/schemas/ListOfStringValue"
          },
          "andOperator": {
            "type": "boolean",
            "description": "Connective of list elements (default is OR (\u003dfalse) )."
          }
        },
        "description": "A list of strings which is joined by AND or OR depending on \u003ccode\u003eandOperator\u003c/code\u003e.\n\u003cbr\u003e\n Defaults to an OR-disjunction."
      },
      "BRequest_IXServicePortIF_checkoutDoc": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          },
          "docId": {
            "type": "string"
          },
          "editInfoZ": {
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ListOfSordPath": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SordPath"
        }
      },
      "MapHistItemC": {
        "type": "object",
        "properties": {
          "mbHistGuid": {
            "type": "string",
            "description": "Member bit: Serialisation version ID DB column: maphistguid"
          },
          "lnHistGuid": {
            "type": "integer",
            "description": "Column length: Serialisation version ID DB column: maphistguid",
            "format": "int32"
          },
          "mbKey": {
            "type": "string",
            "description": "DB column: mapkey"
          },
          "lnKey": {
            "type": "integer",
            "description": "DB column: mapkey",
            "format": "int32"
          },
          "mbValue": {
            "type": "string",
            "description": "DB column: mapvalue"
          },
          "lnValue": {
            "type": "integer",
            "description": "DB column: mapvalue",
            "format": "int32"
          },
          "mbContentType": {
            "type": "string",
            "description": "DB column: mapcontenttype"
          },
          "lnContentType": {
            "type": "integer",
            "description": "DB column: mapcontenttype",
            "format": "int32"
          },
          "mbBlobData": {
            "type": "string",
            "description": "DB column: mapblob"
          },
          "lnBlobData": {
            "type": "integer",
            "description": "DB column: mapblob",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of MapHistItem\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "OrOperator": {
        "type": "object",
        "properties": {
          "queryObjectList": {
            "description": "List of QueryObjects which are or combined.",
            "$ref": "#/components/schemas/ListOfQueryObject"
          }
        },
        "description": "This operator contains a list of QueryObjects and concatenates them with an \"OR\" operation.\nThis means, a document is\n returned if at least one of the QueryObjects is present in the document."
      },
      "BResult_2062827124": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/PublicDownload"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "FindByFulltextCtrlResultItem": {
        "type": "object",
        "properties": {
          "sord": {
            "description": "Sord object. Same as in \u003ccode\u003efindResult.sords[.\n]\u003c/code\u003e",
            "$ref": "#/components/schemas/Sord"
          },
          "TStamp": {
            "type": "string",
            "description": "Timestamp of the last change of either indexing information, note data, fulltext content or attachment fulltext\ncontent."
          },
          "note": {
            "description": "Note object. If this member is set, member \u003ccode\u003esord\u003c/code\u003e can be ignored.",
            "$ref": "#/components/schemas/Note"
          },
          "selectType": {
            "type": "integer",
            "description": "Corresponds to the table from which the Sord/ Note was selected.\n\u003cp\u003e\n \u003ci\u003eNote: For internal use only.\u003c/i\u003e\n \u003c/p\u003e",
            "format": "int32"
          }
        },
        "description": "A search using FindByFulltextCtrl returns this result items in addition to findResult.sords."
      },
      "CheckoutSordPathInfo": {
        "type": "object",
        "properties": {
          "inclRefPaths": {
            "type": "boolean"
          }
        }
      },
      "BResult_1376733713": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionInfo"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "DateListValue": {
        "type": "object",
        "properties": {
          "valueList": {
            "description": "A list of double values which is joined by AND or OR depending on \u003ccode\u003eandOperator\u003c/code\u003e.",
            "$ref": "#/components/schemas/ListOfDateValue"
          },
          "andOperator": {
            "type": "boolean",
            "description": "Connective of list elements (default is OR (\u003dfalse) )."
          }
        },
        "description": "A list of date values which is joined by AND or OR depending on\n\u003ccode\u003eandOpeDoubleListrator\u003c/code\u003e.\u003cbr\u003e\n Defaults to an OR-disjunction."
      },
      "InvalidateCacheC": {
        "type": "object",
        "properties": {
          "MASKS": {
            "type": "integer",
            "description": "Flag used to specify that the cached DocMask objects are invalid.",
            "format": "int32"
          },
          "MARKERS": {
            "type": "integer",
            "description": "Flag used to specify that the cached ColorData objects are invalid.",
            "format": "int32"
          },
          "PATHS": {
            "type": "integer",
            "description": "Flag used to specify that the cached Path objects are invalid.",
            "format": "int32"
          },
          "SORD_TYPES": {
            "type": "integer",
            "description": "Flag used to specify that the cached SordType objects are invalid.",
            "format": "int32"
          },
          "REPL_NAMES": {
            "type": "integer",
            "description": "Flag used to specify that the cached ReplName objects are invalid.",
            "format": "int32"
          },
          "CRYPT_INFO": {
            "type": "integer",
            "description": "Flag used to specify that the cached crypt keys are invalid.",
            "format": "int32"
          },
          "USERS": {
            "type": "integer",
            "description": "Flag used to specify that the cached users are invalid.",
            "format": "int32"
          },
          "KEYS": {
            "type": "integer",
            "description": "Flag used to specify that the cached keys are invalid.",
            "format": "int32"
          },
          "TRANSLATE_TERMS": {
            "type": "integer",
            "description": "Flag used to specify that the translate terms are invalid.",
            "format": "int32"
          },
          "NOTE_AND_COLD_IMAGES": {
            "type": "integer",
            "description": "Flag used to specify that the note and cold background images are invalid.",
            "format": "int32"
          },
          "WORKFLOWS": {
            "type": "integer",
            "description": "Flag used to specify that the workflow cache is invalid.",
            "format": "int32"
          },
          "SUBSCRIPTIONS": {
            "type": "integer",
            "description": "Flag used to specify that the subscription cache is invalid.",
            "format": "int32"
          },
          "HASHTAGCOUNT": {
            "type": "integer",
            "description": "Flag used to specify that the hashtag count cache is invalid.",
            "format": "int32"
          },
          "OBJKEY_DISPLAY_DATA": {
            "type": "integer",
            "description": "Flag used to specify that the display data of references in ObjKeys have changed.",
            "format": "int32"
          },
          "DOCUMENT": {
            "type": "integer",
            "description": "Flag used to specify that a cached document (script) has changed.",
            "format": "int32"
          },
          "ASPECTS": {
            "type": "integer",
            "description": "Flag used to specify that the cached Aspect objects are invalid.",
            "format": "int32"
          },
          "NO_FORWARD_TO_OTHER_IXS": {
            "type": "integer",
            "description": "Do not invalidate the caches of the other servers.",
            "format": "int32"
          },
          "SESSION": {
            "type": "integer",
            "description": "Notify about modified session options or permissions. Reserved for internal usage.",
            "format": "int32"
          },
          "ALL": {
            "type": "integer",
            "description": "Flag used to specify that all cached objects are invalid.",
            "format": "int32"
          }
        },
        "description": "Constants for cache invalidation. This constans can be used as bit combination in function invalidateCache."
      },
      "BRequest_IXServicePortIF_importWorkFlow2": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "flowName": {
            "type": "string"
          },
          "fileData": {
            "type": "string",
            "format": "byte"
          },
          "importOptions": {
            "$ref": "#/components/schemas/WorkflowImportOptions"
          }
        }
      },
      "BStreamReference": {
        "type": "object",
        "properties": {
          "streamId": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "ArrayOfWFVersion": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WFVersion"
        }
      },
      "WFDiagramC": {
        "type": "object",
        "properties": {
          "MAX_SUBNODES": {
            "type": "integer",
            "description": "Maximum number of subnodes.",
            "format": "int32"
          },
          "mbId": {
            "type": "string",
            "description": "ID"
          },
          "mbName": {
            "type": "string",
            "description": "Name"
          },
          "lnName": {
            "type": "integer",
            "description": "Maximum length of workflow name.",
            "format": "int32"
          },
          "mbObjId": {
            "type": "string",
            "description": "Object ID"
          },
          "mbObjType": {
            "type": "string",
            "description": "Object type."
          },
          "mbCompletionDate": {
            "type": "string",
            "description": "Completed at this date."
          },
          "mbNodes": {
            "type": "string",
            "description": "Nodes."
          },
          "mbMatrix": {
            "type": "string",
            "description": "Node matrix."
          },
          "mbTimeLimitUserId": {
            "type": "string",
            "description": "Member bit: Alert user."
          },
          "mbTimeLimit": {
            "type": "string",
            "description": "Member bit: Time-limit."
          },
          "mbStartDate": {
            "type": "string",
            "description": "Member bit: StartDate."
          },
          "mbAcl": {
            "type": "string",
            "description": "Member bit: acl and aclItems."
          },
          "mbOwnerId": {
            "type": "string",
            "description": "Member bit: ownerId and ownerName"
          },
          "mbLockId": {
            "type": "string",
            "description": "Member bit: lockId and lockName"
          },
          "mbPrio": {
            "type": "string",
            "description": "Member bit: prio"
          },
          "mbDeleted": {
            "type": "string",
            "description": "Member bit: deleted"
          },
          "mbTemplateId": {
            "type": "string",
            "description": "Member bit: templateId"
          },
          "mbFlags": {
            "type": "string",
            "description": "Member bit: flags"
          },
          "mbAccess": {
            "type": "string",
            "description": "Member bit: access"
          },
          "mbVersion": {
            "type": "string",
            "description": "Member bit: access"
          },
          "mbGuid": {
            "type": "string",
            "description": "Member bit: Guid"
          },
          "lnGuid": {
            "type": "integer",
            "description": "Maximum length of workflow GUID.",
            "format": "int32"
          },
          "mbTStamp": {
            "type": "string",
            "description": "Member bit: TStamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "Maximum length of workflow TStamp.",
            "format": "int32"
          },
          "mbProcessOnServerId": {
            "type": "string",
            "description": "Member bit: processOnServerId"
          },
          "lnProcessOnServerId": {
            "type": "integer",
            "description": "Maximum length of processOnServerId.",
            "format": "int32"
          },
          "mbTimeLimitEscalations": {
            "type": "string",
            "description": "Member bit: timeLimitEscalation"
          },
          "mbObjName": {
            "type": "string",
            "description": "Member bit: objName"
          },
          "mbNodesOverview": {
            "type": "string",
            "description": "Nodes required for worfklow overview in ELO Java Client. Includes begin node, active nodes, exceeded nodes."
          },
          "mbTStampSync": {
            "type": "string",
            "description": "Member bit: TStampSync"
          },
          "lnNameTranslationKey": {
            "type": "integer",
            "description": "Maximum length of the name\u0027s translation key.",
            "format": "int32"
          },
          "mbNameTranslationKey": {
            "type": "string",
            "description": "Member bit: nameTranslationKey"
          },
          "mbSubWorkflows": {
            "type": "string",
            "description": "Member bit: {@link WFDiagram#subWorkflows}."
          },
          "mbCallNodeId": {
            "type": "string",
            "description": "Member bit: {@link WFDiagram#callNodeId}."
          },
          "mbActiveAcl": {
            "type": "string",
            "description": "Member bit: {@link WFDiagram#activeAcl}."
          },
          "mbPackageName": {
            "type": "string",
            "description": "Member bit: {@link WFDiagram#packageName}."
          },
          "ADHOC_WF_FINISH_SCRIPT_PREFIX": {
            "type": "string",
            "description": "Prefix of all scripts selectable as finish scripts for adhoc workflows"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All elements."
          },
          "mbLeanMembers": {
            "type": "string"
          },
          "mbLean": {
            "$ref": "#/components/schemas/WFDiagramZ"
          },
          "mbAll": {
            "$ref": "#/components/schemas/WFDiagramZ"
          },
          "mbOnlyLock": {
            "$ref": "#/components/schemas/WFDiagramZ"
          },
          "mbAclItems": {
            "type": "string"
          },
          "mbActiveAclItems": {
            "type": "string"
          },
          "mbCompletionDateIso": {
            "type": "string"
          },
          "mbOwnerName": {
            "type": "string"
          },
          "mbStartDateIso": {
            "type": "string"
          },
          "mbTemplateName": {
            "type": "string"
          },
          "mbTimeLimitIso": {
            "type": "string"
          },
          "mbTimeLimitUserName": {
            "type": "string"
          },
          "mbType": {
            "type": "string"
          },
          "TEMPLATE_ID_ADHOC": {
            "type": "integer",
            "description": "Compare this value to WFDiagram.templateId to check whether the workflow was started as an adhoc workflow.\nThis\n member is for convenience. You can also check the flag FLAG_ROOT_ADHOC of the root node.",
            "format": "int32"
          }
        },
        "description": "\u003cp\u003e\nConstants for workflows.\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_checkoutMap": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "domainName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "keyNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ColorData": {
        "type": "object",
        "properties": {
          "RGB": {
            "type": "integer",
            "description": "RGB value.",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "Colour number (ID).",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Colour name"
          },
          "guid": {
            "type": "string",
            "description": "GUID"
          },
          "TStamp": {
            "type": "string",
            "description": "TStamp"
          },
          "deleted": {
            "type": "boolean",
            "description": "Logically deleted."
          },
          "TStampSync": {
            "type": "string",
            "description": "Timestamp of this object\u0027s last export by the replication."
          },
          "hidden": {
            "type": "boolean",
            "description": "This color should not be selectable in client applications.\nThis color is reserved as marker for technical\n purposes."
          },
          "packageName": {
            "type": "string",
            "description": "Package name of ColorData"
          }
        },
        "description": "\u003cp\u003e\nColours for marking entries in the archive.\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_combineAcl": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lhs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "rhs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "options": {
            "$ref": "#/components/schemas/CombineAclOptions"
          }
        }
      },
      "EloIxOptC": {
        "type": "object"
      },
      "Array2OfString": {
        "type": "array",
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteNotification": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objGuid": {
            "type": "string"
          },
          "userGuid": {
            "type": "string"
          }
        }
      },
      "NoteDataC": {
        "type": "object",
        "properties": {
          "mbId": {
            "type": "string",
            "description": "DB column: noteid"
          },
          "mbParentId": {
            "type": "string",
            "description": "DB column: parentid"
          },
          "mbPageNo": {
            "type": "string",
            "description": "DB column: pageno"
          },
          "mbXPos": {
            "type": "string",
            "description": "DB column: xpos"
          },
          "mbYPos": {
            "type": "string",
            "description": "DB column: ypos"
          },
          "mbOwnerId": {
            "type": "string",
            "description": "DB column: userid"
          },
          "mbType": {
            "type": "string",
            "description": "DB column: notetype"
          },
          "mbHLock": {
            "type": "string",
            "description": "DB column: hlock"
          },
          "mbCreateDate": {
            "type": "string",
            "description": "DB column: createdate"
          },
          "mbDesc": {
            "type": "string",
            "description": "DB column: pidesc"
          },
          "lnDesc": {
            "type": "integer",
            "description": "DB column: pidesc",
            "format": "int32"
          },
          "mbGuid": {
            "type": "string",
            "description": "DB column: noteguid"
          },
          "lnGuid": {
            "type": "integer",
            "description": "DB column: noteguid",
            "format": "int32"
          },
          "mbTStamp": {
            "type": "string",
            "description": "DB column: notetstamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "DB column: notetstamp",
            "format": "int32"
          },
          "mbStatus": {
            "type": "string",
            "description": "DB column: notestatus"
          },
          "mbWidth": {
            "type": "string",
            "description": "DB column: width"
          },
          "mbHeight": {
            "type": "string",
            "description": "DB column: height"
          },
          "mbAcl": {
            "type": "string",
            "description": "DB column: noteacl"
          },
          "lnAcl": {
            "type": "integer",
            "description": "DB column: noteacl",
            "format": "int32"
          },
          "mbColor": {
            "type": "string",
            "description": "DB column: color"
          },
          "mbDeleteDate": {
            "type": "string",
            "description": "Member bit: The Note is deleted at this date. ClientInfo determines the Timezone.\nDB column: deletedate"
          },
          "mbTStampSync": {
            "type": "string",
            "description": "Member bit: Timestamp of this object\u0027s last export by the replication.\nDB column: notetstampsync"
          },
          "lnTStampSync": {
            "type": "integer",
            "description": "Column length: Timestamp of this object\u0027s last export by the replication.\nDB column: notetstampsync",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of Note\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_deleteUser": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "id": {
            "type": "string"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BResult_1191976387": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/Any"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "LicenseReport": {
        "type": "object",
        "properties": {
          "nbOfServerLicenses": {
            "type": "integer",
            "description": "Number of server licenses. This field is not used anymore.",
            "format": "int32"
          },
          "nbOfIgLicenses": {
            "type": "integer",
            "description": "Number of ELO Internet Gateway users. This field is not used anymore.",
            "format": "int32"
          },
          "serno": {
            "type": "string",
            "description": "License key. This field is not used anymore."
          },
          "reportMode": {
            "type": "integer",
            "description": "report period / access mode.",
            "format": "int32"
          },
          "counterList": {
            "description": "list of counter delegated from am",
            "$ref": "#/components/schemas/ListOfLicenseCounter"
          },
          "fullUser": {
            "type": "integer",
            "format": "int32"
          },
          "ixUser": {
            "type": "integer",
            "format": "int32"
          },
          "deletedUser": {
            "type": "integer",
            "format": "int32"
          },
          "freeUser": {
            "type": "integer",
            "format": "int32"
          },
          "licenseType": {
            "description": "License type.",
            "$ref": "#/components/schemas/LicenseType"
          }
        },
        "description": "License report data evaluated by AdminConsole."
      },
      "BRequest_IXServicePortIF_deleteEventBusListener": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lsnId": {
            "type": "string"
          }
        }
      },
      "FindByFulltextResultItem": {
        "type": "object",
        "properties": {
          "relevance": {
            "type": "integer",
            "description": "Relevance in per mill.",
            "format": "int32"
          },
          "summaryFulltext": {
            "type": "string",
            "description": "Textpart from document."
          },
          "summaryDesc": {
            "type": "string",
            "description": "Textpart from memo text."
          },
          "fieldNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "resultFields": {
            "description": "List of fields where a query matched.\n\u003cbr\u003e\n See {@link de.elo.ix.client.esearch.query.SearchFieldE SearchFieldC}",
            "$ref": "#/components/schemas/ArrayListOfSearchFieldE"
          },
          "sord": {
            "description": "Sord object.",
            "$ref": "#/components/schemas/Sord"
          }
        },
        "description": "Additional information for an item found by fulltext search."
      },
      "SordPath": {
        "type": "object",
        "properties": {
          "sords": {
            "$ref": "#/components/schemas/ListOfSord"
          }
        }
      },
      "FindByFulltext": {
        "type": "object",
        "properties": {
          "term": {
            "type": "string",
            "description": "Search term to be located in the fulltext database. Can be a single word or a number of words.\nWildcard * is\n allowed, it matches any number of characters. Term is interpreted based on the options given by FindOptions in\n FindInfo. Exception: FindOptionsC.ONE_TERM is not supported."
          }
        },
        "description": "\u003cp\u003e\nPerforms a fulltext search.\n \u003c/p\u003e\n \n \u003cp\u003e\n The fulltext search is performed via iSearch. Therefore, use {@link de.elo.ix.client.esearch.FindByESearch} instead.\n The {@link #term} should be replaces by the actual query term and additional filters (e.g. DocMask) should be\n submitted by {@link de.elo.ix.client.esearch.ESearchParams#queryOperator}. The areas in which should be search should\n be set in {@link de.elo.ix.client.esearch.ESearchParams#searchIn}.\u003cbr\u003e\n Searches using this class are still executed but internally mapped to {@link de.elo.ix.client.esearch.FindByESearch}\n objects and some values might be ignored.\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_checkoutSordHistory": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_findContextTerms": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindInfo"
          },
          "maxTermsPerField": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BResult_1495731174": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/KeywordList"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "ArrayOfQueryJobProtocolEvent": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/QueryJobProtocolEvent"
        }
      },
      "BResult_1826370901": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BResult_222450704": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/QueryJobProtocolResult"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BResult_893011331": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/MapToOrgUnitInfo"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "WFNode": {
        "type": "object",
        "properties": {
          "allowActivate": {
            "type": "boolean",
            "description": "Can this node be activated? A script can set this value to prevent the activation of the node.\nThis member is valid\n for all node types."
          },
          "comment": {
            "type": "string",
            "description": "Comment text for the node. This member is valid for all node types."
          },
          "delayDays": {
            "type": "integer",
            "description": "An active person node (Activate is set) might be displayed to the user delayed by this number of days.\nOnly valid\n for person nodes.",
            "format": "int32"
          },
          "department2": {
            "type": "integer",
            "description": "A group ID to constrain access to the node. Only members of this group are allowed to see and process the node.\nOnly valid for person nodes.",
            "format": "int32"
          },
          "designDepartment": {
            "type": "integer",
            "description": "\u003cp\u003e\nA group ID or user ID that was originally assigned in the designer.\n \u003c/p\u003e\n \n \u003cul\u003e\n \u003cli\u003eOnly valid for person nodes.\u003c/li\u003e\n \u003cli\u003eIf a template is checked in, designDepartment is always set to {@link #userName} respectively\n {@link #userId}.\u003c/li\u003e\n \u003cli\u003eIf a new active workflow is checked in, it it is always set to {@link #userName} respectively\n {@link #userId}.\u003c/li\u003e\n \u003cli\u003eIf an existing active workflow is checked in, the checked in value is saved\u003c/li\u003e\n \u003c/ul\u003e",
            "format": "int32"
          },
          "enterDateIso": {
            "type": "string",
            "description": "The node was activated on this date. This member is valid for all node types."
          },
          "exitDateIso": {
            "type": "string",
            "description": "The node was exited/completed on this date. This member is valid for all node types."
          },
          "flags": {
            "type": "integer",
            "description": "Control flags for the node, a combination of WFNodeC.FLAG_* constants.\nFor start nodes (TYPE_BEGINNODE), the flags\n should be specified in WFDiagram.flags. To ensure compatibility with older client programs, the WFNode.flags of the\n start node are or-ed with the WFDiagram.flags. This member is valid for all node types.",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "Node ID. This member is valid for all node types.",
            "format": "int32"
          },
          "inUseDateIso": {
            "type": "string",
            "description": "The date when the node was last used(activated or completed). This member is valid for all node types."
          },
          "isNext": {
            "type": "integer",
            "description": "The activation state of the node. This member is valid for all node types.",
            "format": "int32"
          },
          "moveCyclePosX": {
            "type": "integer",
            "description": "If a cycle is re-entered, the nodes in the cycle are duplicated.\nThe copied nodes will be placed in the designer\n moved by this value to the right. If this value is 0, the nodes are moved 60 points right and 20 points up. This\n member is valid for all node types.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The node description (work instruction). This member is valid for all node types."
          },
          "nbOfDonesToExit": {
            "type": "integer",
            "description": "The number of predecessor nodes that must be processed to forward this collector node.\nA value of -1 means that all\n predecessor nodes must be processed. If set to 0, the collect node switches when it is activated regardless of the\n state of the predecessor nodes. This member is only valid for collect nodes.",
            "format": "int32"
          },
          "onEnter": {
            "type": "string",
            "description": "A script or plugin name that is called, if a workflow node is entered.\n\u003cp\u003e\n In order to capture this workflow event in JavaScript, store a script file that defines a function named\n onEnterNode in a sub-folder of \"Indexserver Scripting Base/_ALL\" or \"Indexserver Scripting Base/instancename\".\n \n \u003cpre\u003e\n \u003ccode class\u003d\"example\"\u003e\n function onEnterNode(ci, userId, workflow, nodeId) {\n   // ci       ... ClientInfo object of the user that forwards the workflow.\n   // userId   ... The calling user\u0027s ID (Integer)\n   // workflow ... WFDiagram object\n   // nodeId   ... The activated node ID (Integer)\n ...\n }\n \u003c/code\u003e\n \u003c/pre\u003e\n \n See Indexserver Programming Manual for more information.\n \u003c/p\u003e\n \u003cp\u003e\n If onEnter starts with a plugin\u0027s Bundle-SymbolicName, the event is delegated to function\n \u003ccode\u003eonEnterWorkflowNode\u003c/code\u003e of a \u003ccode\u003eWorkflowNodeEvents\u003c/code\u003e object. Such object is created by\n \u003ccode\u003eWorkflowNodeEventsFactory.create\u003c/code\u003e implemented in the plugin. Optionally, a path can be appended to the\n Bundle-SymbolicName which is passed to \u003ccode\u003eWorkflowNodeEventsFactory.create\u003c/code\u003e. This path has to start with a\n forward slash. E.g. onEnter\u003d\"com.partner.wfevents/invoice-solution\".\n \u003c/p\u003e\n This member is valid for all node types."
          },
          "onExit": {
            "type": "string",
            "description": "A script or plugin name that is called, if a workflow node is exited.\n\u003cp\u003e\n In order to capture this workflow event in JavaScript, store a script file that defines a function named onExitNode\n in a sub-folder of \"Indexserver Scripting Base/_ALL\" or \"Indexserver Scripting Base/instancename\".\n \n \u003cpre\u003e\n \u003ccode class\u003d\"example\"\u003e\n function onExitNode(ci, userId, workflow, nodeId) {\n   // ci       ... ClientInfo object of the user that forwards the workflow.\n   // userId   ... The calling user\u0027s ID (Integer)\n   // workflow ... WFDiagram object\n   // nodeId   ... The deactivated node ID (Integer)\n ...\n }\n \u003c/code\u003e\n \u003c/pre\u003e\n \n See Indexserver Programming Manual for more information.\n \u003c/p\u003e\n \u003cp\u003e\n If onExit starts with a plugin\u0027s Bundle-SymbolicName, the event is delegated to function\n {@link de.elo.ix.client.plugin.WorkflowNodeEvents#onExitWorkflowNode} of a \u003ccode\u003eWorkflowNodeEvents\u003c/code\u003e object\n returned from a call to {@link de.elo.ix.client.plugin.WorkflowNodeEventsFactory#create}. Optionally, a path can be\n appended to the Bundle-SymbolicName which is passed to\n {@link de.elo.ix.client.plugin.WorkflowNodeEventsFactory#create}. This path has to start with a forward slash. E.g.\n onEnter\u003d\"com.partner.wfevents/invoice-solution\".\n \u003c/p\u003e\n This member is valid for all node types."
          },
          "posX": {
            "type": "integer",
            "description": "The X position in the designer view. This member is valid for all node types.",
            "format": "int32"
          },
          "posY": {
            "type": "integer",
            "description": "The Y position in the designer view. This member is valid for all node types.",
            "format": "int32"
          },
          "tag": {
            "type": "integer",
            "description": "reserved.\nDB column: wf_tag",
            "format": "int32"
          },
          "timeLimit": {
            "type": "integer",
            "description": "The time-limit to process the node. Measured in minutes. This member is only valid for person nodes.",
            "format": "int32"
          },
          "timeLimitIso": {
            "type": "string",
            "description": "After this date the node exceeds the time-limit for processing. This member is only valid for person nodes.\nRead-only."
          },
          "type": {
            "type": "integer",
            "description": "The node type. This member is set to one of the TYPE_* constants in WFNodeC.",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "description": "This user has to edit the node. This member is only valid for person nodes.",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "The name of the user that has the ID \u003ccode\u003euserId\u003c/code\u003e This member is only valid for person nodes."
          },
          "userTerminate": {
            "type": "string",
            "description": "The ID of the user who has forwarded the node. Not valid for template workflows.\nThis member is only valid for\n person nodes."
          },
          "yesNoCondition": {
            "type": "string",
            "description": "IF node: test condition, numeric values must be formatted according to the servers locale.\nsplit node: sets the\n workflow status to this value, begin node: contains workflow status cycle node: condition that evaluates true to\n leave the cycle"
          },
          "delayDateIso": {
            "type": "string",
            "description": "The node is displayed to the user at this date. This date is computed by enterDateIso + delayDays.\nThis member is\n only valid for person nodes. Read-only."
          },
          "overTimeLimit": {
            "type": "boolean",
            "description": "True, if the node exceeds the time limit.\nThis member is only valid for person nodes in active or finished\n workflows. Read-only."
          },
          "userDelayDateIso": {
            "type": "string",
            "description": "The workflow node is deferred until this date.\nThis member is only valid for person nodes in active or finished\n workflows. ISO date format."
          },
          "processOnServerId": {
            "type": "string",
            "description": "Server ID (resp. replication branch). If the node is activated, the server ID is set to this value.\nThis member is\n only valid for nodes of type WFNodeC.TYPE_SET_SERVER_ID."
          },
          "timeLimitEscalations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFTimeLimit"
            }
          },
          "objKeyNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scriptNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "iconId": {
            "type": "string",
            "description": "Object-GUID of an icon file that is displayed in the designer."
          },
          "formSpec": {
            "type": "string",
            "description": "Multipurpose field.\n\u003cp\u003e\n If the node is a collect node (type\u003d{@link WFNodeC#TYPE_COLLECTNODE}), formSpec contains a comma separated list of\n node IDs. This nodes are deactivated when the collect node forwards the workflow. In addition to a list of IDs, the\n value of {@link WFNodeC#DEACTIVATE_ALL_PREDS} causes to deactivate all predecessor nodes.\n \u003c/p\u003e\n \u003cp\u003e\n In case of a person node ({@link WFNodeC#TYPE_PERSONNODE}), formSpec can contain proprietary encoded information\n about a workflow form.\n \u003c/p\u003e"
          },
          "nameTranslationKey": {
            "type": "string",
            "description": "Translation-keyword for {@link WFNode#name}."
          },
          "commentTranslationKey": {
            "type": "string",
            "description": "Translation-keyword for {@link WFNode#comment}."
          },
          "label": {
            "type": "string",
            "description": "Display name by forwarding."
          },
          "properties": {
            "type": "string",
            "description": "Node properties.\nMaximum byte size of this string in UTF-8 encoding is constrained to {@link FileDataC#MAX_BLOB_LENGTH}."
          },
          "departmentGroup": {
            "type": "integer",
            "description": "Grouping of nodes for function takeWorkFlowNode.\nA non-zero value binds nodes with the same value to a group of\n nodes that is evaluated in {@link IXServicePortIF#takeWorkFlowNode(ClientInfo, int, int, String, int, LockZ)}. The\n function takeWorkFlowNodes takes - in addition to the given node - all nodes with the same group assignment\n specified by this member. This member is only used as a marker and is not interpreted as a group or user ID.",
            "format": "int32"
          },
          "subFlowId": {
            "type": "integer",
            "description": "Id of the active sub-workflow. Only valid for TYPE_CALL_SUB_WORKFLOW.",
            "format": "int32"
          },
          "retVal": {
            "type": "integer",
            "description": "Return value of an end node. Only valid for TYPE_END.",
            "format": "int32"
          },
          "returnValue": {
            "type": "string",
            "description": "Return value of a sub-workflow.\nThe value defines the name of the successor node of the call-node\n {@link WFNodeC#TYPE_CALL_SUB_WORKFLOW} that will be activated when the sub-workflow returns. If the sub-workflow\n returns a node name that does not exist in the main workflow, a new person node is inserted between the call-node\n and its successors. This new node is named as the return value and is assigned to the workflow owner."
          },
          "labelTranslationKey": {
            "type": "string",
            "description": "Translation-keyword for {@link WFNode#label}."
          },
          "subTemplateId": {
            "type": "integer",
            "description": "ID, GUID or name of the sub-workflow template.",
            "format": "int32"
          },
          "prio": {
            "type": "integer",
            "description": "Node priortiy: 0...high, 1...medium, 2...low. Only valid for person nodes, type\u003d\u003d{@link WFNodeC#TYPE_PERSONNODE}.\nThe user assigned to the person node can change this value by conn.ix().forwardWorkflowNode():\n \n \u003cpre\u003e\n \u003ccode\u003e\n  WFEditNode editNode \u003d conn.ix().beginForwardWorkflowNode(flowId, nodeId, null, LockC.NO);\n  WFNode activeNode \u003d editNode.getNode();\n  activeNode.setPrio(activeNode.getPrio()-1); // One level higher.\n  ForwardWorkflowNodeInfo fwdInfo \u003d new ForwardWorkflowNodeInfo();\n  fwdInfo.setNode(activeNode);\n  conn.ix().forwardWorkflowNode(wfActive.getId(), activeNode.getId(), fwdInfo, LockC.NO);\n  \n \u003c/code\u003e\n \u003c/pre\u003e",
            "format": "int32"
          }
        },
        "description": "\u003cp\u003e\nObjects of this class represent a workflow node.\n \u003c/p\u003e\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "AspectLineC": {
        "type": "object",
        "properties": {
          "mbType": {
            "type": "string",
            "description": "Member bit: The type of the line information. This can be one of the \u003ccode\u003eDocMaskLineC.\nLINETYPE_*\u003c/code\u003e\n constants."
          },
          "mbFlags": {
            "type": "string",
            "description": "Member bit: Line flags"
          },
          "mbAllowedMaskIdsForKeywordingRelation": {
            "type": "string",
            "description": "Member bit: allowedMaskIds"
          },
          "TYPE_OFFSET_TYPES_FOR_ASPECTS": {
            "type": "integer",
            "description": "Types above this value are supported only by newer docMasks with aspects.",
            "format": "int32"
          },
          "mbPostfixAsterix": {
            "type": "string"
          },
          "mbPrefixAsterix": {
            "type": "string"
          },
          "mbTranslate": {
            "type": "string"
          },
          "mbImportant": {
            "type": "string"
          }
        },
        "description": "\u003cp\u003e\nConstants for class \u003ccode\u003eAspectLine\u003c/code\u003e\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2019\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BResult_1698110251": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CounterInfo"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "Aspect": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Aspect ID. For a new aspect, this value is -1. This value cannot be changed for an existing aspect.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Aspect name.\n\u003cbr\u003e\n This must be a String of alpha-numeric characters between \u0027A\u0027 and \u0027Z\u0027, \u0027a\u0027 and \u0027z\u0027, \u00270\u0027 and \u00279\u0027.\u003cbr\u003e\n Additionally, it can contain the underscore \u0027_\u0027 and the dot \u0027.\u0027.\u003cbr\u003e\n Underscore and dot are not allowed for the first character of the name."
          },
          "lockId": {
            "type": "integer",
            "description": "User ID that holds a lock on this object. If -1, the object is unlocked.",
            "format": "int32"
          },
          "lockName": {
            "type": "string",
            "description": "Name of the user that has locked the aspect. Read-only, ignored in checkinAspect."
          },
          "displayName": {
            "type": "string",
            "description": "Locale specific name. Readonly. This value is the resolved {@link #translationKey}."
          },
          "translationKey": {
            "type": "string",
            "description": "Translation key. Defines the {@link #displayName} as technical resource ID."
          },
          "lines": {
            "description": "Map of aspect lines. Key is the lineKey of an aspect line (technical name). Value is the AspectLine object itself.",
            "$ref": "#/components/schemas/MapToAspectLine"
          },
          "guid": {
            "type": "string",
            "description": "Aspect GUID."
          },
          "TStamp": {
            "type": "string",
            "description": "Timestamp of last modification."
          },
          "deleted": {
            "type": "boolean",
            "description": "Deleted status."
          },
          "TStampSync": {
            "type": "string",
            "description": "Timestamp of this object\u0027s last export by the replication."
          },
          "packageName": {
            "type": "string",
            "description": "Package name of Aspect."
          }
        },
        "description": "This class defines a keywording aspect."
      },
      "IndexValue": {
        "type": "object",
        "properties": {
          "type": {
            "type": "integer",
            "description": "Type. One of the type constants given in IndexValueC.",
            "format": "int32"
          },
          "intValue": {
            "type": "integer",
            "description": "Integer value.",
            "format": "int32"
          },
          "doubleValue": {
            "type": "number",
            "description": "Double value.",
            "format": "double"
          },
          "stringValue": {
            "type": "string",
            "description": "String value."
          },
          "displayData": {
            "type": "string",
            "description": "Human readable representation of value. This member is read-only and might not be set in server-side events.\nFor\n index lines of type {@link DocMaskLineC#TYPE_RELATION}, this member contains the {@link Sord#name} of the\n referenced Sord."
          }
        },
        "description": "This class is a container for one value of a serializable type.\nIt represents the value of an index line in aspect\n objects."
      },
      "FindConfigFileInfo": {
        "type": "object",
        "properties": {
          "names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "inclDeputy": {
            "type": "boolean",
            "description": "Find files in the in-tray folder of all deputized users. This member is ignored, if \u003ccode\u003enames\u003c/code\u003e is set."
          },
          "postboxUserId": {
            "type": "string",
            "description": "Find files in the in-tray of the user specified by ID or name.\nThis member is ignored, if \u003ccode\u003enames\u003c/code\u003e is\n set. If neither \u003ccode\u003enames\u003c/code\u003e nor \u003ccode\u003epostboxUserId\u003c/code\u003e is set, the in-tray of the current user is\n listed."
          }
        },
        "description": "This class describes the files to select from a postbox directory or from a configuration directory."
      },
      "BRequest_DocumentEvents_beginUpload": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "rwInfo": {
            "$ref": "#/components/schemas/UpDownloadEventInfo"
          }
        }
      },
      "ContentStream": {
        "type": "object",
        "properties": {
          "stream": {
            "description": "Document related stream.",
            "$ref": "#/components/schemas/BStreamReference"
          },
          "headers": {
            "description": "Optional HTTP headers. This headers can provide additional information for streams being downloaded. E.g.\nsupply\n byte range headers for parts of video files.",
            "$ref": "#/components/schemas/MapToListOfString"
          },
          "contentType": {
            "type": "string",
            "description": "Content type (or MIME type). Either set content type or {@link #fileExtension} to describe the stream content."
          },
          "fileExtension": {
            "type": "string",
            "description": "File extension without dot. Either set file extension or {@link #contentType} to describe the stream content."
          },
          "contentLength": {
            "type": "string",
            "description": "Stream content length. This member is set to the number of bytes in the stream.\nIf the length is unknown set\n {@link ContentStreamC#CONTENT_LENGTH_UNKNOWN}. A wrong content length can client applications cause to hang."
          },
          "responseCode": {
            "type": "integer",
            "description": "HTTP response code for streams being downloaded.\nThis status should be set as 200 (HTTP OK) if the entire document\n has been processed. If {@link DocumentProcessor#process(ContentStream)} receives an object that defines byte range\n headers in {@link ContentStream#headers}, return the appropriate byte range headers and set this member as 206\n (HTTP Partial Content). Byte ranges are usually requested for video files. This element is ignored for streams\n being uploaded.",
            "format": "int32"
          }
        },
        "description": "This class contains information about a document related stream.\nSuch a stream might be a document version,\n attachment, preview content, fulltext content or signature."
      },
      "BRequest_IXServicePortIF_resolveRights": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ui": {
            "$ref": "#/components/schemas/UserInfo"
          },
          "info": {
            "$ref": "#/components/schemas/ResolveRightsInfo"
          }
        }
      },
      "KeyInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Key ID.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Key name."
          }
        },
        "description": "\u003cp\u003e\nContains information about a key object: ID and name.\n \u003c/p\u003e\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "UserTaskPriorityC": {
        "type": "object",
        "properties": {
          "MIN": {
            "type": "integer",
            "description": "Minimum value \u003d highest priority of reminder and activity",
            "format": "int32"
          },
          "MAX": {
            "type": "integer",
            "description": "Maximum value \u003d lowest priority of reminder and activity",
            "format": "int32"
          },
          "HIGHEST": {
            "type": "integer",
            "description": "Highest priority.",
            "format": "int32"
          },
          "LOWEST": {
            "type": "integer",
            "description": "Lowest priority.",
            "format": "int32"
          }
        }
      },
      "ArrayOfCounterInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CounterInfo"
        }
      },
      "ReportC": {
        "type": "object",
        "properties": {
          "mbId": {
            "type": "string",
            "description": "DB column: reportid"
          },
          "lnId": {
            "type": "integer",
            "description": "DB column: reportid",
            "format": "int32"
          },
          "mbActionNo": {
            "type": "string",
            "description": "DB column: actionno"
          },
          "mbUserId": {
            "type": "string",
            "description": "DB column: userid"
          },
          "mbActTime": {
            "type": "string",
            "description": "DB column: acttime"
          },
          "mbObjId": {
            "type": "string",
            "description": "DB column: docid"
          },
          "mbExtra1": {
            "type": "string",
            "description": "DB column: extra1"
          },
          "mbExtra2": {
            "type": "string",
            "description": "DB column: extra2"
          },
          "mbSessionNo": {
            "type": "string",
            "description": "DB column: sessionno"
          },
          "mbText": {
            "type": "string",
            "description": "DB column: addtext"
          },
          "lnText": {
            "type": "integer",
            "description": "DB column: addtext",
            "format": "int32"
          },
          "mbExtra3": {
            "type": "string",
            "description": "Member bit: Reserved.\nDB column: extra3"
          },
          "lnExtra3": {
            "type": "integer",
            "description": "Column length: Reserved.\nDB column: extra3",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of ReportInfo\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BResult_276702696": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/SystemReport"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "HashTagRelationC": {
        "type": "object",
        "properties": {
          "mbAll": {
            "$ref": "#/components/schemas/HashTagRelationZ"
          }
        },
        "description": "Constants for class HashTag"
      },
      "PluginInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Plugin ID. This value is transient and might change after Indexserver has re-loaded or re-started."
          },
          "symbolicName": {
            "type": "string",
            "description": "Plugin name. Symbolic name of OSGi plugin."
          },
          "state": {
            "description": "Plugin state.",
            "$ref": "#/components/schemas/PluginState"
          },
          "serviceNames": {
            "description": "List of service names provides by this plugin. A list of full qualified class names, e.g.\nIXServerEvents.class.getName(), WorkflowNodeEvents.class.getName(), DynamicKeywordEvents.class.getName()",
            "$ref": "#/components/schemas/ListOfString"
          }
        },
        "description": "OSGi plugin information."
      },
      "ArrayOfWFNodeAssoc": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WFNodeAssoc"
        }
      },
      "CleanUpInfo": {
        "type": "object",
        "properties": {
          "lifetimeDays": {
            "type": "integer",
            "description": "Lifetime of notifications in days.",
            "format": "int32"
          },
          "deleteImportant": {
            "type": "boolean",
            "description": "Include Notifications marked as important."
          },
          "userGuidOrID": {
            "type": "string",
            "description": "GUID or ID or Name of the User. If null, current user will be set.\nIf GUID/ID is not the current user, admin rights\n are required to perform the cleanup"
          }
        },
        "description": "Settings Object for MyELOService.\ncleanUpNotifications()"
      },
      "DocMaskInherit": {
        "type": "object",
        "properties": {
          "parentMaskId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "This class describes how a keywording form inherits from another keywording form."
      },
      "BRequest_IXServicePortIF_getWebDAVPathFromObjID": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          }
        }
      },
      "SubstitutionDataC": {
        "type": "object",
        "properties": {
          "mbGuid": {
            "type": "string",
            "description": "DB column referenced by {@link Substitution#guid}"
          },
          "mbUserId": {
            "type": "string",
            "description": "DB column referenced by {@link Substitution#userId} and {@link Substitution#userName}"
          },
          "mbSubstituteId": {
            "type": "string",
            "description": "DB column referenced by {@link Substitution#substituteId} and {@link Substitution#substituteName}"
          },
          "mbCreatorId": {
            "type": "string",
            "description": "DB column referenced by {@link Substitution#creatorId} and {@link Substitution#creatorName}"
          },
          "mbSettings": {
            "type": "string",
            "description": "DB column referenced by {@link Substitution#settings}"
          },
          "mbGroupsToInheritRights": {
            "type": "string",
            "description": "DB column referenced by {@link Substitution#groupsToInheritRights}"
          },
          "mbForwardedTo": {
            "type": "string",
            "description": "DB column referenced by {@link Substitution#forwardedTo}"
          },
          "mbForwardedFrom": {
            "type": "string",
            "description": "DB column referenced by {@link Substitution#forwardedFrom}"
          },
          "mbMessage": {
            "type": "string",
            "description": "DB column referenced by {@link Substitution#message}"
          },
          "mbLockId": {
            "type": "string",
            "description": "DB column referenced by {@link Substitution#lockId} and {@link Substitution#lockName}"
          },
          "mbTstamp": {
            "type": "string",
            "description": "DB column referenced by {@link Substitution#tstamp}"
          },
          "mbTstampsync": {
            "type": "string",
            "description": "DB column referenced by {@link Substitution#tstampsync}"
          },
          "mbForwardedBy": {
            "type": "string",
            "description": "DB column referenced by {@link Substitution#forwardedBy}"
          },
          "mbAllMembersDB": {
            "type": "string",
            "description": "For internal use only"
          },
          "lnGuid": {
            "type": "integer",
            "description": "Max length of DB column {@link #mbGuid}",
            "format": "int32"
          },
          "lnGroupsToInheritRights": {
            "type": "integer",
            "description": "Max length of DB column {@link #mbGroupsToInheritRights}",
            "format": "int32"
          },
          "lnForwardedTo": {
            "type": "integer",
            "description": "Max length of DB column {@link #mbForwardedTo}",
            "format": "int32"
          },
          "lnForwardedFrom": {
            "type": "integer",
            "description": "Max length of DB column {@link #mbForwardedFrom}",
            "format": "int32"
          },
          "lnMessage": {
            "type": "integer",
            "description": "Max length of DB column {@link #mbMessage}",
            "format": "int32"
          },
          "lnTstamp": {
            "type": "integer",
            "description": "Max length of DB column {@link #mbTstamp}",
            "format": "int32"
          },
          "lnTstampsync": {
            "type": "integer",
            "description": "Max length of DB column {@link #mbTstampsync}",
            "format": "int32"
          },
          "lnForwardedBy": {
            "type": "integer",
            "description": "Max length of DB column {@link #mbForwardedBy}",
            "format": "int32"
          }
        },
        "description": "\u003cp\u003e\nBit constants which mirror the database classes.\n \u003c/p\u003e\n \u003ci\u003eFor internal use only. Use {@link SubstitutionC} instead.\u003c/i\u003e"
      },
      "WorkflowNodeInfo": {
        "type": "object",
        "properties": {
          "nodeName": {
            "type": "string",
            "description": "The node name"
          },
          "flags": {
            "type": "integer",
            "description": "Control flags for the node, a combination of WFNode.C.FLAG_* constants.",
            "format": "int32"
          },
          "workflow": {
            "type": "string",
            "description": "The template ID of the subworkflow to start."
          }
        }
      },
      "LinkSordInfo": {
        "type": "object",
        "properties": {
          "linkPermanent": {
            "type": "boolean",
            "description": "If true, Sords will be linked permanently. The new links between the provided Sords cannot be deleted."
          }
        },
        "description": "Additional parameters for function {@link IXServicePortIF#linkSords2}"
      },
      "BRequest_IXServicePortIF_startAdHocWorkFlow": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "name": {
            "type": "string"
          },
          "objId": {
            "type": "string"
          },
          "arrUserIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "nodeName": {
            "type": "string"
          },
          "forValidation": {
            "type": "boolean"
          },
          "serialFlow": {
            "type": "boolean"
          },
          "cancelUserId": {
            "type": "string"
          },
          "cancelMessage": {
            "type": "string"
          },
          "finishedUserId": {
            "type": "string"
          },
          "finishedMessage": {
            "type": "string"
          },
          "finishedScript": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_configureLicense": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "licenseFileContent": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_createNewEncryptionSet": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "cryptInfo": {
            "$ref": "#/components/schemas/CryptInfo"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BResult_1153931872": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ValuesOfObjKey"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutSord": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          },
          "editInfoZ": {
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "PluginMessageC": {
        "type": "object",
        "properties": {
          "BODY": {
            "type": "string"
          }
        },
        "description": "Constants related to {@link PluginMessage}."
      },
      "BResult_1737266313": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigFile"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BResult_944564842": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/LdapConfig"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_HealthCheckService_updateAll": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "hcis": {
            "$ref": "#/components/schemas/ListOfHealthCheckInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinMap": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "domainName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "objId": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "HashTagRelationZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string"
          }
        }
      },
      "ArrayOfUserInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserInfo"
        }
      },
      "InvalidateCacheResult": {
        "type": "object",
        "description": "This class contains the result of a invalidateCache2 call."
      },
      "ActionZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string"
          }
        },
        "description": "Type safe element selector for class Action."
      },
      "BRequest_IXServicePortIF_collectJobStates": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "activeJobs": {
            "type": "boolean"
          },
          "finishedJobs": {
            "type": "boolean"
          },
          "fullInfo": {
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinOrgUnits": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "orgUnitInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrgUnitInfo"
            }
          },
          "reserved": {
            "$ref": "#/components/schemas/CheckinOrgUnitInfo"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_findActivityProjects": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindActivityProjectsInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_getDebuggerPort": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_loginKerberos": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ticket": {
            "type": "string",
            "format": "byte"
          },
          "clientComputer": {
            "type": "string"
          }
        }
      },
      "StoreInfo": {
        "type": "object",
        "properties": {
          "createDateISO": {
            "type": "string",
            "description": "Create date (UTC)."
          },
          "dir": {
            "type": "string",
            "description": "Physical directory where the documents of this path are stored. Length of the field in database: 255byte."
          },
          "flags": {
            "type": "integer",
            "description": "Bitset of options.",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "Path ID Set this value to -1 in order to create a new storage path.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Path name. Length of the field in database: 16byte."
          },
          "scatter": {
            "type": "integer",
            "description": "Granularity of subdirectories in the physical directory.",
            "format": "int32"
          },
          "stdPath": {
            "type": "boolean",
            "description": "standard path? read-only"
          },
          "updateDateISO": {
            "type": "string",
            "description": "Update date (UTC)."
          },
          "previewDir": {
            "type": "string",
            "description": "Physical directory where previews stored. Length of the field in database: 255byte."
          },
          "fulltextDir": {
            "type": "string",
            "description": "Physical directory where fulltext content is stored. Length of the field in database: 255byte."
          },
          "cloudType": {
            "type": "integer",
            "description": "Type of Cloud Storage.",
            "format": "int32"
          },
          "endpoint": {
            "type": "string",
            "description": "Endpoint (URL/IP/PORT) for Cloud Storage."
          },
          "accessKey": {
            "type": "string",
            "description": "AccessKey for Cloud Storage."
          },
          "secretKey": {
            "type": "string",
            "description": "SecretKey for Cloud Storage."
          },
          "bucket": {
            "type": "string",
            "description": "Bucket name for Cloud Storage. Bucket names must be unique across all existing bucket names in Amazon S3."
          },
          "region": {
            "type": "string",
            "description": "Region for Amazon S3 Cloud Storage."
          },
          "encryptionKey": {
            "type": "string",
            "description": "Encryption key for Cloud Storage."
          }
        },
        "description": "\u003cp\u003e\nThis class represents a storage path.\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_checkinNoteTemplates": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "noteTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NoteTemplate"
            }
          },
          "ntemplZ": {
            "$ref": "#/components/schemas/NoteTemplateZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "SubsInfo": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "The deputy relationship is applied if this member is true.\nIf false, the deputy does not currently act as the user\n but may activate the relationship by themself."
          },
          "inheritRights": {
            "type": "boolean",
            "description": "The deputy inherits the rights of the user if this member is true."
          },
          "subsId": {
            "type": "integer",
            "description": "Deputy: the user that deputizes \u003ccode\u003euserId\u003c/code\u003e.",
            "format": "int32"
          },
          "subsName": {
            "type": "string",
            "description": "Deputy name. If this member is set \u003ccode\u003esubsId\u003c/code\u003e is ignored."
          },
          "userId": {
            "type": "integer",
            "description": "The user that is being deputized by \u003ccode\u003esubsId\u003c/code\u003e",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "User name. If this member is set \u003ccode\u003euserId\u003c/code\u003e is ignored."
          }
        },
        "description": "This class contains information about a user that is being deputized by another user."
      },
      "ActivityOptionC": {
        "type": "object",
        "properties": {
          "ID_RECEIVER": {
            "type": "integer",
            "description": "Option ID for receiver.",
            "format": "int32"
          },
          "ID_TYPE": {
            "type": "integer",
            "description": "Option ID for shipping type.",
            "format": "int32"
          },
          "ID_STATUS": {
            "type": "integer",
            "description": "Option ID for receiving status.",
            "format": "int32"
          },
          "ID_TRANS": {
            "type": "integer",
            "description": "Option ID for transmission number.",
            "format": "int32"
          },
          "ID_VALUE": {
            "type": "integer",
            "description": "Application defined IDs must be greater or equal to this value. Up to 10 application defined IDs can be defined.\nTheir values have to be in the range from ID_VALUE+0 to ID_VALUE+9.",
            "format": "int32"
          }
        },
        "description": "Constants for class ActivityOption"
      },
      "ListOfSubstitution": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Substitution"
        }
      },
      "ActivityC": {
        "type": "object",
        "properties": {
          "mbOnlyGuid": {
            "description": "Typesafe element selector for members Activity.guid. Contains ActivityC.\nmbGuid",
            "$ref": "#/components/schemas/ActivityZ"
          },
          "mbActivityAndObjectGuid": {
            "description": "Typesafe element selector for members Activity.guid and Activity.objGuid. Contains ActivityC.\nmbGuid |\n ActivityC.mbObjGuid",
            "$ref": "#/components/schemas/ActivityZ"
          },
          "mbAll": {
            "description": "Typesafe element selector for all members. Contains ActivityC.\nmbAllMembers",
            "$ref": "#/components/schemas/ActivityZ"
          }
        },
        "description": "Constants for class Activity."
      },
      "BRequest_IXServerEvents_onFileUploadBuildResponse": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "dv": {
            "$ref": "#/components/schemas/DocVersion"
          },
          "fileName": {
            "type": "string"
          },
          "requestInfo": {
            "$ref": "#/components/schemas/HttpRequestInfo"
          },
          "responseInfo": {
            "$ref": "#/components/schemas/HttpResponseInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_getWorkflowTemplateVersions": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "flowId": {
            "type": "string"
          },
          "onlyDeleted": {
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteTranslateTerms": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "termIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ActionC": {
        "type": "object",
        "properties": {
          "mbDocVersion": {
            "type": "string"
          },
          "mbWorkflow": {
            "type": "string"
          },
          "mbHistory": {
            "type": "string"
          },
          "mbAllMembers": {
            "type": "string"
          },
          "mbMin": {
            "description": "All Action members without text, docVersion and workflow.",
            "$ref": "#/components/schemas/ActionZ"
          },
          "mbAll": {
            "description": "All Action members.",
            "$ref": "#/components/schemas/ActionZ"
          }
        },
        "description": "Constants for class Action."
      },
      "BRequest_IXServicePortIF_createReminder": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          }
        }
      },
      "BResult_736351635": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/Action"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "FindBySordHist": {
        "type": "object",
        "properties": {
          "histKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SordHistKey"
            }
          }
        }
      },
      "SordTypeDataC": {
        "type": "object",
        "properties": {
          "mbId": {
            "type": "string",
            "description": "DB column: id"
          },
          "mbName": {
            "type": "string",
            "description": "DB column: name"
          },
          "lnName": {
            "type": "integer",
            "description": "DB column: name",
            "format": "int32"
          },
          "mbExtensions": {
            "type": "string",
            "description": "DB column: extensions"
          },
          "lnExtensions": {
            "type": "integer",
            "description": "DB column: extensions",
            "format": "int32"
          },
          "mbPackageName": {
            "type": "string",
            "description": "Member bit: Package name of SordType DB column: packagename"
          },
          "lnPackageName": {
            "type": "integer",
            "description": "Column length: Package name of SordType DB column: packagename",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of SordType\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "DocInfoDMC": {
        "type": "object",
        "properties": {
          "mbId": {
            "type": "string",
            "description": "DB column: docid"
          },
          "mbGuid": {
            "type": "string",
            "description": "DB column: docguid"
          },
          "lnGuid": {
            "type": "integer",
            "description": "DB column: docguid",
            "format": "int32"
          },
          "mbMd5": {
            "type": "string",
            "description": "DB column: md5"
          },
          "lnMd5": {
            "type": "integer",
            "description": "DB column: md5",
            "format": "int32"
          },
          "mbPathId": {
            "type": "string",
            "description": "DB column: pathid"
          },
          "mbPathId2": {
            "type": "string",
            "description": "DB column: pathid2"
          },
          "mbCreateDateIso": {
            "type": "string",
            "description": "DB column: createdate"
          },
          "lnCreateDateIso": {
            "type": "integer",
            "description": "DB column: createdate",
            "format": "int32"
          },
          "mbLastAccessIso": {
            "type": "string",
            "description": "DB column: lastaccess"
          },
          "lnLastAccessIso": {
            "type": "integer",
            "description": "DB column: lastaccess",
            "format": "int32"
          },
          "mbLastUpdateIso": {
            "type": "string",
            "description": "DB column: lastupdate"
          },
          "lnLastUpdateIso": {
            "type": "integer",
            "description": "DB column: lastupdate",
            "format": "int32"
          },
          "mbOwner": {
            "type": "string",
            "description": "DB column: owner"
          },
          "mbExt": {
            "type": "string",
            "description": "DB column: ext"
          },
          "lnExt": {
            "type": "integer",
            "description": "DB column: ext",
            "format": "int32"
          },
          "mbFclip": {
            "type": "string",
            "description": "DB column: fclip"
          },
          "lnFclip": {
            "type": "integer",
            "description": "DB column: fclip",
            "format": "int32"
          },
          "mbSize": {
            "type": "string",
            "description": "DB column: null"
          },
          "mbPreviewSize": {
            "type": "string",
            "description": "DB column: null"
          },
          "mbSizeOrig": {
            "type": "string",
            "description": "DB column: null"
          },
          "mbExtOrig": {
            "type": "string",
            "description": "Member bit: Original file extension for encrypted documents DB column: extorig"
          },
          "lnExtOrig": {
            "type": "integer",
            "description": "Column length: Original file extension for encrypted documents DB column: extorig",
            "format": "int32"
          },
          "mbEncrSet": {
            "type": "string",
            "description": "Member bit: Encryption set.\nDB column: cryptno"
          },
          "mbPreviewExt": {
            "type": "string",
            "description": "Member bit: Preview file extension.\nDB column: previewext"
          },
          "lnPreviewExt": {
            "type": "integer",
            "description": "Column length: Preview file extension.\nDB column: previewext",
            "format": "int32"
          },
          "mbFulltextContentTStamp": {
            "type": "string",
            "description": "Member bit: Fulltext content timestamp DB column: fttstamp"
          },
          "lnFulltextContentTStamp": {
            "type": "integer",
            "description": "Column length: Fulltext content timestamp DB column: fttstamp",
            "format": "int32"
          },
          "mbFulltextContentSize": {
            "type": "string",
            "description": "Member bit: Fulltext content file size.\nDB column: ftsize"
          },
          "mbSizeL": {
            "type": "string",
            "description": "Member bit: Document file size.\nDB column: docsize"
          },
          "lnSizeL": {
            "type": "integer",
            "description": "Column length: Document file size.\nDB column: docsize",
            "format": "int32"
          },
          "mbSizeOrigL": {
            "type": "string",
            "description": "Member bit: Original file extension for encrypted documents DB column: docsizeorig"
          },
          "lnSizeOrigL": {
            "type": "integer",
            "description": "Column length: Original file extension for encrypted documents DB column: docsizeorig",
            "format": "int32"
          },
          "mbPreviewSizeL": {
            "type": "string",
            "description": "Member bit: Size of preview file.\nDB column: previewsize"
          },
          "lnPreviewSizeL": {
            "type": "integer",
            "description": "Column length: Size of preview file.\nDB column: previewsize",
            "format": "int32"
          },
          "mbRelFilePath": {
            "type": "string",
            "description": "Member bit: Relative file path DB column: relfilepath"
          },
          "lnRelFilePath": {
            "type": "integer",
            "description": "Column length: Relative file path DB column: relfilepath",
            "format": "int32"
          },
          "mbFtExt": {
            "type": "string",
            "description": "Member bit: Fulltext file extension.\nDB column: ftext"
          },
          "lnFtExt": {
            "type": "integer",
            "description": "Column length: Fulltext file extension.\nDB column: ftext",
            "format": "int32"
          },
          "mbPreviewExtOrig": {
            "type": "string",
            "description": "Member bit: Original preview file extension for encrypted previews.\nDB column: previewextorig"
          },
          "lnPreviewExtOrig": {
            "type": "integer",
            "description": "Column length: Original preview file extension for encrypted previews.\nDB column: previewextorig",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of DocInfoDM\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "PhysDelDataC": {
        "type": "object",
        "properties": {
          "mbGuid": {
            "type": "string",
            "description": "DB column: pdguid"
          },
          "lnGuid": {
            "type": "integer",
            "description": "DB column: pdguid",
            "format": "int32"
          },
          "mbType": {
            "type": "string",
            "description": "DB column: pdtype"
          },
          "mbTStamp": {
            "type": "string",
            "description": "DB column: pdtstamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "DB column: pdtstamp",
            "format": "int32"
          },
          "mbTStampSync": {
            "type": "string",
            "description": "Member bit: Timestamp of this object\u0027s last export by the replication.\nDB column: tstampsync"
          },
          "lnTStampSync": {
            "type": "integer",
            "description": "Column length: Timestamp of this object\u0027s last export by the replication.\nDB column: tstampsync",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of PhysDel\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServerEvents_onBeforeRefSord": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "parentSordOld": {
            "$ref": "#/components/schemas/Sord"
          },
          "parentSordNew": {
            "$ref": "#/components/schemas/Sord"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "manSortIndex": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BRequest_FioService_startExport": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "options": {
            "$ref": "#/components/schemas/ExportOptions"
          }
        }
      },
      "BRequest_IXServerEvents_onBeforeCheckinMap": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "domainName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "objId": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BResult_2013723887": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ListOfAction"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "FindLinks": {
        "type": "object",
        "properties": {
          "objectId": {
            "type": "string",
            "description": "The Object to search for its links."
          }
        },
        "description": "Finds the links of an object."
      },
      "LinkSordZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from the LinkSordC class."
          }
        },
        "description": "This class encapsulates the constants of LinkSordC.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "CopySordC": {
        "type": "object",
        "properties": {
          "bsetMOVE": {
            "type": "string",
            "description": "Move an archive entry."
          },
          "bsetREFERENCE": {
            "type": "string",
            "description": "Create a logical link."
          },
          "bsetCOPY": {
            "type": "string",
            "description": "Reserved. Use ProcessCopyElements and processTrees to copy an archive structure."
          },
          "bsetCOPY_WITH_CHILDREN": {
            "type": "string",
            "description": "Copy archive entry with children (CURRENTLY NOT SUPPORTED!)."
          },
          "bsetCOPY_WITH_DOCUMENTS": {
            "type": "string",
            "description": "Copy archive entry with documents (CURRENTLY NOT SUPPORTED!)."
          },
          "bsetCOPY_WITH_DOCUMENT_VERSIONS": {
            "type": "string",
            "description": "Copy archive entry with document versions (CURRENTLY NOT SUPPORTED!)."
          },
          "bsetCOPY_WITH_ATTACHMENTS": {
            "type": "string",
            "description": "Copy archive entry with attachments (CURRENTLY NOT SUPPORTED!)."
          },
          "bsetCOPY_WITH_ATTACHMENT_VERSIONS": {
            "type": "string",
            "description": "Copy archive entry with attachment versions (CURRENTLY NOT SUPPORTED!)."
          },
          "bsetCOPY_WITH_NOTES_TYPE_NORMAL": {
            "type": "string",
            "description": "Copy archive entry with notes (CURRENTLY NOT SUPPORTED!)."
          },
          "bsetCOPY_WITH_NOTES_TYPE_PERSONAL": {
            "type": "string",
            "description": "Copy archive entry with personal notes (CURRENTLY NOT SUPPORTED!)."
          },
          "bsetCOPY_WITH_NOTES_TYPE_STAMP": {
            "type": "string",
            "description": "Copy archive entry with stamps (CURRENTLY NOT SUPPORTED!)."
          },
          "COPY": {
            "description": "RESERVED. Use ProcessCopyElements and processTrees to copy an archive structure.",
            "$ref": "#/components/schemas/CopySordZ"
          },
          "MOVE": {
            "description": "Move the sord. Used in ix.copySord(...).",
            "$ref": "#/components/schemas/CopySordZ"
          },
          "REFERENCE": {
            "description": "Create a reference to the sord. Used in ix.copySord(...).",
            "$ref": "#/components/schemas/CopySordZ"
          }
        },
        "description": "Constants to copy or move archive entries, or to create a logical link.\nThese constants are used as parameters in the\n copySord function.\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "IXServicePortIF": {
        "type": "object"
      },
      "ArrayOfSord": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Sord"
        }
      },
      "ArrayOfBackupProfile": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BackupProfile"
        }
      },
      "BRequest_IXServicePortIF_checkoutKeywordsDynamic": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "keywordsDynamicInfo": {
            "$ref": "#/components/schemas/KeywordsDynamicInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteReport": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "endDateISO": {
            "type": "string"
          }
        }
      },
      "BResult_1652390957": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/PluginMessage"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_createEventBusListener": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "subsId": {
            "type": "string"
          },
          "eventListener": {
            "$ref": "#/components/schemas/EventListener"
          }
        }
      },
      "FilterValue": {
        "type": "object",
        "description": "Deliver a value for QueryFilter."
      },
      "ListOfPluginInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PluginInfo"
        }
      },
      "ArrayOfEventFilter": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EventFilter"
        }
      },
      "ArrayOfFileData": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FileData"
        }
      },
      "CopySordZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from the CopySordC class."
          }
        },
        "description": "This class encapsulates the constants of the CopySordsC class.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "DocMaskLine": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Quickinfo text for the attribute."
          },
          "id": {
            "type": "integer",
            "description": "The ID of the line information.",
            "format": "int32"
          },
          "key": {
            "type": "string",
            "description": "The attribute group name. This member corresponds to \u003ccode\u003eObjKey.name\u003c/code\u003e."
          },
          "maskId": {
            "type": "integer",
            "description": "This line information belongs to a storage mask with the ID MaskId.",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "description": "The maximum value of this attribute.",
            "format": "int32"
          },
          "min": {
            "type": "integer",
            "description": "The minimum value of this attribute.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the attribute. This value is displayed in the lable before the edit field.\nIt can be translated into\n reps. from the users language: set \u003ccode\u003eSessionOptionsC.TRANSLATE_TERM\u003c/code\u003e."
          },
          "aclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "canEdit": {
            "type": "boolean",
            "description": "Determines whether the index line can be modified. Read-only."
          },
          "editCol": {
            "type": "integer",
            "description": "Column position of edit control",
            "format": "int32"
          },
          "editRow": {
            "type": "integer",
            "description": "Row postion of edit control",
            "format": "int32"
          },
          "editWidth": {
            "type": "integer",
            "description": "With of edit control",
            "format": "int32"
          },
          "hidden": {
            "type": "boolean",
            "description": "This value should not be displayed to the user."
          },
          "labelCol": {
            "type": "integer",
            "description": "Column position of label control",
            "format": "int32"
          },
          "labelRow": {
            "type": "integer",
            "description": "Row position of label control",
            "format": "int32"
          },
          "nextTab": {
            "type": "boolean",
            "description": "Creates a new tab in the keywording dialogue."
          },
          "onlyBuzzwords": {
            "type": "boolean",
            "description": "The index line can only contain buzzwords."
          },
          "postfixAsterix": {
            "type": "boolean",
            "description": "Add \"*\" after index value in search operation."
          },
          "prefixAsterix": {
            "type": "boolean",
            "description": "Add \"*\" before index value in search operation."
          },
          "readOnly": {
            "type": "boolean",
            "description": "This value should not be edited in a user interface (convention). Scripts are allowed to edit the value."
          },
          "tabOrder": {
            "type": "integer",
            "description": "Tabulator order of edit control",
            "format": "int32"
          },
          "type": {
            "type": "integer",
            "description": "The type of the line information. This can be one of the \u003ccode\u003eDocMaskLineC.TYPE_*\u003c/code\u003e constants.",
            "format": "int32"
          },
          "externalData": {
            "type": "string",
            "description": "External data. Can be used to store an arbitary string."
          },
          "important": {
            "type": "boolean",
            "description": "Display index value next to the objects short description.\nThis element has to be interpreted by the client\n application. Indexserver ignores this value."
          },
          "notTokenized": {
            "type": "boolean",
            "description": "Defines whether a index value should be searchable as TOKENIZED or UN_TOKENIZED"
          },
          "excludeFromISearch": {
            "type": "boolean",
            "description": "If true a index value will not be searchable via iSearch. Does not affect the index search."
          },
          "version": {
            "type": "boolean",
            "description": "Display index value in version information dialog when checking in a document.\nThis element has to be interpreted\n by the client application. Indexserver ignores this value."
          },
          "translate": {
            "type": "boolean",
            "description": "Translate index values into or from the users language."
          },
          "acl": {
            "type": "string",
            "description": "Access control for mask line."
          },
          "access": {
            "type": "integer",
            "description": "Bitset of AccessC.LUR_* constants. It contains the access bits for the current user. Only AccessC.\nLUR_READ and\n AccessC.LUR_WRITE are used.",
            "format": "int32"
          },
          "disableWordWheel": {
            "type": "boolean",
            "description": "Disable word wheel. Clients should not provide a function to list all existing values for this index vlaue.\nThe\n Indexserver does not set or test this value."
          },
          "defaultValue": {
            "type": "string",
            "description": "This value is assigned to the ObjKey.data element for a new Sord object."
          },
          "tabIndex": {
            "type": "integer",
            "description": "This value represents the number of the tab, this line has to appear on. The first tab\u0027s index value is 0.\nIt is on\n the client\u0027s hand to set valid values when checking in document masks.",
            "format": "int32"
          },
          "serverScriptName": {
            "type": "string",
            "description": "A script or plugin at the server can serve as the data source of a dynamic keyword list.\nThis value represents the\n name of that script or plugin. If the value is not empty, the client can request a list of available input values\n by calling the function {@link IXServicePortIF#checkoutKeywordsDynamic(ClientInfo, KeywordsDynamicInfo)}. In case\n of a plugin, this value starts with the Bundle-SymbolicName and can be optionally appended by a path. E.g.\n serverScriptName\u003d\"com.partner.dkeywords/invoice-solution\". The path has to start with a forward slash and is passed\n to {@link de.elo.ix.client.plugin.DynamicKeywordEventsFactory#create}."
          },
          "inherit": {
            "type": "boolean",
            "description": "Inherit this keywording field to subordinated entries.\n\u003cp\u003e\n This option is used to make sure, that all entries in an archive sub-tree have the same value for this keywording\n field. Thereby the field is identified by its group name ({@link DocMaskLine#key} and {@link ObjKey#name}).\n \u003c/p\u003e\n \u003cp\u003e\n The option corresponds to {@link #inheritFromParent}. As far as {@link #inheritFromParent} is also true in the\n keywording forms definition of all sub-items, the option {@link #inherit} effects the following:\n \u003cul\u003e\n \u003cli\u003eThe value of the keywording field can only be changed in the parent entry of the sub-tree. This is the\n uppermost entry that has the field, which means that the parent\u0027s parent does not have this field.\u003c/li\u003e\n \u003cli\u003eAll sub-items of the parent inherit this value during a background process. The value is forwarded recursively\n to the entire sub-tree under the parent. The recursion stops at items that are assigned to a keywording form\n without this field.\u003c/li\u003e\n \u003cli\u003eWhen a child entry under the parent is updated, this field is always corrected to the parent\u0027s value.\u003c/li\u003e\n \u003cli\u003eFor an object moved into a parent, the object and all sub-items inherit the keywording field.\u003c/li\u003e\n \u003c/ul\u003e\n \u003c/p\u003e\n \u003cp\u003e\n If {@link #inheritFromParent} is false in the keywording form definition of a sub-item, inheritance stops for the\n sub-item. Thus, the index field is treated as a different field although it has the same group name.\n \u003c/p\u003e"
          },
          "inheritFromParent": {
            "type": "boolean",
            "description": "Do not inherit the parent\u0027s value."
          },
          "nameTranslationKey": {
            "type": "string",
            "description": "Translation-keyword for {@link DocMaskLine#name}."
          },
          "commentTranslationKey": {
            "type": "string",
            "description": "Translation-keyword for {@link DocMaskLine#comment}."
          },
          "valueArray": {
            "type": "boolean",
            "description": "Allows multiple values for keywording tables.\nFor keywording forms organized as tables, see\n {@link DocMaskC#DATA_ORGANISATION_TABLE}, index lines must be explicitly declared for storing multiple values. If\n this member is true, the index line is able to store an arbitrary number of values. For keywording forms organized\n as name-value pairs, see {@link DocMaskC#DATA_ORGANISATION_OBJKEYS}, index lines can store multiple values by\n default and this member has to be ignored."
          },
          "validateExpression": {
            "type": "string",
            "description": "RegEx to validate user input for entry."
          },
          "required": {
            "type": "boolean",
            "description": "Entry is required."
          },
          "allowedMaskIdsForKeywordingRelation": {
            "description": "Specifies the {@link DocMask#id} allowed in a {@link DocMaskLineC#TYPE_RELATION}.\nMandatory if DocMaskLine is of type {@link DocMaskLineC#TYPE_RELATION}. Only Sords with the specified\n {@link DocMask#id} can be referenced in this DocMaskLine.",
            "$ref": "#/components/schemas/ListOfInteger"
          }
        },
        "description": "This class contains data for a line in the document mask."
      },
      "BRequest_IXServicePortIF_checkinStorage": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "storeInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreInfo"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ActionHistDataC": {
        "type": "object",
        "properties": {
          "mbActionGuid": {
            "type": "string",
            "description": "Member bit: Action GUID.\nDB column: actionguid"
          },
          "lnActionGuid": {
            "type": "integer",
            "description": "Column length: Action GUID.\nDB column: actionguid",
            "format": "int32"
          },
          "mbCreateDateIso": {
            "type": "string",
            "description": "Member bit: Create date.\nDB column: createdateiso"
          },
          "lnCreateDateIso": {
            "type": "integer",
            "description": "Column length: Create date.\nDB column: createdateiso",
            "format": "int32"
          },
          "mbText": {
            "type": "string",
            "description": "Member bit: Comment text.\nDB column: actiontext"
          },
          "lnText": {
            "type": "integer",
            "description": "Column length: Comment text.\nDB column: actiontext",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of ActionHistory\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_createSubscription": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "watchGuid": {
            "type": "string"
          }
        }
      },
      "ArrayOfAction": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Action"
        }
      },
      "FindByPreviewCtrl": {
        "type": "object",
        "properties": {
          "previewAvailable": {
            "type": "boolean",
            "description": "Finds all documents with previews."
          },
          "previewError": {
            "type": "boolean",
            "description": "Finds all documents for which the preview generation failed."
          },
          "fileExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "This class can be used to find the documents for which preview files have to be created.\nThe main purpose is to\n control the automatic preview generation in a server process."
      },
      "BRequest_PluginService_configure": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "id": {
            "type": "string"
          },
          "config": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_getAclAccess": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "aai": {
            "$ref": "#/components/schemas/AclAccessInfo"
          }
        }
      },
      "FindInfo": {
        "type": "object",
        "properties": {
          "findByFulltext": {
            "description": "If not null the results are constrained to documents including this fulltext term (or terms).",
            "$ref": "#/components/schemas/FindByFulltext"
          },
          "findDirect": {
            "description": "Terms for google-like search in Java-Client.",
            "$ref": "#/components/schemas/FindDirect"
          },
          "findByIndex": {
            "description": "If not null the function searches through the indexing information.",
            "$ref": "#/components/schemas/FindByIndex"
          },
          "findByNotes": {
            "description": "If not null the function searches through the notes.\n(NOT CURRENTLY IMPLEMENTED!)",
            "$ref": "#/components/schemas/FindByNotes"
          },
          "findBySordHist": {
            "description": "If not null the function searches in versioning history of indexing information.",
            "$ref": "#/components/schemas/FindBySordHist"
          },
          "findByType": {
            "description": "If not null the function searches using objtype.",
            "$ref": "#/components/schemas/FindByType"
          },
          "findByVersion": {
            "description": "If not null the function searches using histversion and histcomment.",
            "$ref": "#/components/schemas/FindByVersion"
          },
          "findChildren": {
            "description": "If not null, the results are constrained to child entries of the specified parent in this object.\nTo retrieve child\n lists for an archive entry this member must be set with the related parent ID and all others members in this class\n must be null.",
            "$ref": "#/components/schemas/FindChildren"
          },
          "findOptions": {
            "description": "This member controls several options, e. g. sorting, time limitation.",
            "$ref": "#/components/schemas/FindOptions"
          },
          "findByAcl": {
            "description": "Find sords by ACL.",
            "$ref": "#/components/schemas/FindByAcl"
          },
          "findByPreviewCtrl": {
            "description": "Find sords by preview control information.",
            "$ref": "#/components/schemas/FindByPreviewCtrl"
          },
          "findByFulltextCtrl": {
            "description": "Find the sords that have to be indexed by the fulltext engine.",
            "$ref": "#/components/schemas/FindByFulltextCtrl"
          },
          "findByRegisteredFunction": {
            "$ref": "#/components/schemas/FindByRegisteredFunction"
          },
          "findLinks": {
            "description": "If not null, the results are constrained to entries linked to the specified object in findLinks.",
            "$ref": "#/components/schemas/FindLinks"
          },
          "findByESearch": {
            "description": "If not null, the new ElasticSearch API (as of ELO 11) is used.",
            "$ref": "#/components/schemas/FindByESearch"
          },
          "findForKeywordingRelation": {
            "description": "Find Sord objects to be used in keywording relation.",
            "$ref": "#/components/schemas/FindForKeywordingRelation"
          }
        },
        "description": "This class controls the search function findFirstSords.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_FeedService_findFirstHashTagRelation": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindHashTagInfo"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "hashTagZ": {
            "$ref": "#/components/schemas/HashTagZ"
          }
        }
      },
      "BRequest_PluginService_start": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "DocMaskDataC": {
        "type": "object",
        "properties": {
          "mbId": {
            "type": "string",
            "description": "DB column: maskno"
          },
          "mbName": {
            "type": "string",
            "description": "DB column: maskname"
          },
          "lnName": {
            "type": "integer",
            "description": "DB column: maskname",
            "format": "int32"
          },
          "mbIndex": {
            "type": "string",
            "description": "DB column: maskindex"
          },
          "lnIndex": {
            "type": "integer",
            "description": "DB column: maskindex",
            "format": "int32"
          },
          "mbBarcode": {
            "type": "string",
            "description": "DB column: maskbarcode"
          },
          "lnBarcode": {
            "type": "integer",
            "description": "DB column: maskbarcode",
            "format": "int32"
          },
          "mbKey": {
            "type": "string",
            "description": "DB column: maskkey"
          },
          "mbDPath": {
            "type": "string",
            "description": "DB column: maskdpath"
          },
          "mbDKind": {
            "type": "string",
            "description": "DB column: maskdkind"
          },
          "mbDKey": {
            "type": "string",
            "description": "DB column: maskdkey"
          },
          "mbLockId": {
            "type": "string",
            "description": "DB column: masklock"
          },
          "mbFlags": {
            "type": "string",
            "description": "DB column: maskflags"
          },
          "mbFlowId": {
            "type": "string",
            "description": "DB column: maskflowid"
          },
          "mbDAcl": {
            "type": "string",
            "description": "DB column: maskdacl"
          },
          "lnDAcl": {
            "type": "integer",
            "description": "DB column: maskdacl",
            "format": "int32"
          },
          "mbLifetime": {
            "type": "string",
            "description": "DB column: lifetime"
          },
          "lnLifetime": {
            "type": "integer",
            "description": "DB column: lifetime",
            "format": "int32"
          },
          "mbText": {
            "type": "string",
            "description": "DB column: masktext"
          },
          "lnText": {
            "type": "integer",
            "description": "DB column: masktext",
            "format": "int32"
          },
          "mbTStamp": {
            "type": "string",
            "description": "DB column: masktstamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "DB column: masktstamp",
            "format": "int32"
          },
          "mbRawPosInfo": {
            "type": "string",
            "description": "DB column: maskposinfo"
          },
          "lnRawPosInfo": {
            "type": "integer",
            "description": "DB column: maskposinfo",
            "format": "int32"
          },
          "mbGuid": {
            "type": "string",
            "description": "Member bit: GUID DB column: maskguid"
          },
          "lnGuid": {
            "type": "integer",
            "description": "Column length: GUID DB column: maskguid",
            "format": "int32"
          },
          "mbStatus": {
            "type": "string",
            "description": "Member bit: Deleted status.\nDB column: maskstatus"
          },
          "mbInternalAcl": {
            "type": "string",
            "description": "Member bit: Internal acl.\nDB column: maskacl"
          },
          "lnInternalAcl": {
            "type": "integer",
            "description": "Column length: Internal acl.\nDB column: maskacl",
            "format": "int32"
          },
          "mbFlowId2": {
            "type": "string",
            "description": "Member bit: The ID of a workflow that is to be started if a new version of an associated DB column: maskflowid2"
          },
          "mbTStampSync": {
            "type": "string",
            "description": "Member bit: Timestamp of this object\u0027s last export by the replication.\nDB column: masktstampsync"
          },
          "lnTStampSync": {
            "type": "integer",
            "description": "Column length: Timestamp of this object\u0027s last export by the replication.\nDB column: masktstampsync",
            "format": "int32"
          },
          "mbTextTranslationKey": {
            "type": "string",
            "description": "Member bit: Translation-keyword for {@link DocMask#text}.\nDB column: masktexttrkey"
          },
          "lnTextTranslationKey": {
            "type": "integer",
            "description": "Column length: Translation-keyword for {@link DocMask#text}.\nDB column: masktexttrkey",
            "format": "int32"
          },
          "mbNameTranslationKey": {
            "type": "string",
            "description": "Member bit: Translation-keyword for {@link DocMask#name}.\nDB column: masknametrkey"
          },
          "lnNameTranslationKey": {
            "type": "integer",
            "description": "Column length: Translation-keyword for {@link DocMask#name}.\nDB column: masknametrkey",
            "format": "int32"
          },
          "mbDataOrganisation": {
            "type": "string",
            "description": "Member bit: This member specifies how the index values are stored in database.\nDB column: dataorg"
          },
          "mbSordType": {
            "type": "string",
            "description": "Member bit: Prepare this type for a new Sord object.\nDB column: sordType"
          },
          "mbRawMaskIdsForChildEntries": {
            "type": "string",
            "description": "Member bit: Child entries in the archive hierarchy should only use this keywording forms.\nDB column:\n maskidsforchildentries"
          },
          "lnRawMaskIdsForChildEntries": {
            "type": "integer",
            "description": "Column length: Child entries in the archive hierarchy should only use this keywording forms.\nDB column:\n maskidsforchildentries",
            "format": "int32"
          },
          "mbRawPosInfo2": {
            "type": "string",
            "description": "Member bit: This field extends \u003ccode\u003eRawPosInfo\u003c/code\u003e for more docMask lines (EIX-739).\nDB column: maskposinfo2"
          },
          "lnRawPosInfo2": {
            "type": "integer",
            "description": "Column length: This field extends \u003ccode\u003eRawPosInfo\u003c/code\u003e for more docMask lines (EIX-739).\nDB column: maskposinfo2",
            "format": "int32"
          },
          "mbRawPosInfo3": {
            "type": "string",
            "description": "Member bit: This field extends \u003ccode\u003eRawPosInfo\u003c/code\u003e for more docMask lines (EIX-739).\nDB column: maskposinfo3"
          },
          "lnRawPosInfo3": {
            "type": "integer",
            "description": "Column length: This field extends \u003ccode\u003eRawPosInfo\u003c/code\u003e for more docMask lines (EIX-739).\nDB column: maskposinfo3",
            "format": "int32"
          },
          "mbEncryptionSet": {
            "type": "string",
            "description": "Member bit: The number of the encryptionSet (the value 0 means not encrypted).\nDB column: encryptionset"
          },
          "mbPackageName": {
            "type": "string",
            "description": "Member bit: Package name of DocMask DB column: packagename"
          },
          "lnPackageName": {
            "type": "integer",
            "description": "Column length: Package name of DocMask DB column: packagename",
            "format": "int32"
          },
          "mbDeletionDeadline": {
            "type": "string",
            "description": "Member bit: Deletion deadline for new objects.\nDB column: deletiondeadline"
          },
          "lnDeletionDeadline": {
            "type": "integer",
            "description": "Column length: Deletion deadline for new objects.\nDB column: deletiondeadline",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of DocMask\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServerEvents_onBeforeDeleteMap": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "domainName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "keyNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_cookKeyword": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "kwid": {
            "type": "string"
          }
        }
      },
      "BResult_785380175": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EditInfo"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "WFTakeNodeC": {
        "type": "object",
        "properties": {
          "DEFAULT": {
            "type": "integer",
            "description": "Standard action. Neither WFNode.department2 nor WFNode.inUseDateIso are returned.",
            "format": "int32"
          },
          "RESET_DEPARTMENT2": {
            "type": "integer",
            "description": "WFNode.department2 is set when the node is taken over by another user.",
            "format": "int32"
          },
          "RESET_IN_USE_DATE": {
            "type": "integer",
            "description": "WFNode.inUseDateIso is set when the node is taken over by another user.",
            "format": "int32"
          }
        },
        "description": "Constant class for controlling the taking over(passing to another user) of a workflow object.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "LinkSordC": {
        "type": "object",
        "properties": {
          "NOTHING": {
            "description": "Used as standard in linkSord(...).",
            "$ref": "#/components/schemas/LinkSordZ"
          },
          "PAIR": {
            "description": "Link Sord objects in PAIR.",
            "$ref": "#/components/schemas/LinkSordZ"
          },
          "CROSS_LINK": {
            "description": "Link each Sord to each other Sord.",
            "$ref": "#/components/schemas/LinkSordZ"
          }
        },
        "description": "Constants for linkSord(...).\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_unlinkSords": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "fromId": {
            "type": "string"
          },
          "toIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "linkZ": {
            "$ref": "#/components/schemas/LinkSordZ"
          }
        }
      },
      "ImportOptionsC": {
        "type": "object",
        "properties": {
          "CREATE_SEPARATE_STRUCTURE": {
            "type": "string",
            "description": "Import all data in a new structure."
          },
          "GUIDS_KEEP": {
            "type": "string",
            "description": "Keep guids on import, generate new guid if guid is already used."
          },
          "GUIDS_KEEP_AND_SKIP": {
            "type": "string",
            "description": "import only guids that are not already used."
          },
          "GUIDS_NEW": {
            "type": "string",
            "description": "generate new guids during import."
          },
          "GUIDS_SCRIPT": {
            "type": "string",
            "description": "make a new version for document with this guid."
          },
          "KEEP_FILING_DATE": {
            "type": "string",
            "description": "Use original filing-date (Sord.iDateIso saved in export) when filing during import."
          },
          "USE_EXPORTED_PATH": {
            "type": "string",
            "description": "Use original filing-path for import (original path of exporting archive was saved during export)"
          },
          "IMPORT_KEYWORDS": {
            "type": "string",
            "description": "Import keywords"
          },
          "USE_PARENT_ACL": {
            "type": "string",
            "description": "Use parent\u0027s ACL in archive"
          }
        },
        "description": "Defines the Options of an Import. Each Option is represented by one bit.\nSeveral Options can be put together by a\n bit-logic and.\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ReplSetCombination": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string"
          },
          "combi": {
            "type": "string",
            "format": "byte"
          }
        },
        "description": "Internal class."
      },
      "BRequest_IXServicePortIF_processFindResult": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "searchId": {
            "type": "string"
          },
          "procInfo": {
            "$ref": "#/components/schemas/ProcessInfo"
          }
        }
      },
      "ArrayListOfESInstanceSettings": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ESInstanceSettings"
        }
      },
      "BResult_2121298555": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ActivityProject"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "ReportModeZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from ReportModeC class."
          }
        },
        "description": "\u003cp\u003e\nThis class encapsulates the constants of \u003ccode\u003eReportModeC\u003c/code\u003e\n \u003c/p\u003e\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ExportOptions": {
        "type": "object",
        "properties": {
          "compressionLevel": {
            "type": "integer",
            "description": "Enables compression mode. -1\u003dno compression, 0/1\u003dlow compression, 9\u003dstrong compression.",
            "format": "int32"
          },
          "timeStampStart": {
            "type": "string",
            "description": "This value applies to exports only. Objects modified before this timestamp will not be processed."
          },
          "timeStampEnd": {
            "type": "string",
            "description": "This value applies to exports only. Objects modified after this timestamp will not be processed."
          },
          "includeMasterData": {
            "description": "Specifies which master data to export.",
            "$ref": "#/components/schemas/SetOfMasterDataE"
          }
        },
        "description": "Options to import/export archive data for the replication."
      },
      "StoreInfoC": {
        "type": "object",
        "properties": {
          "SP_FLAT": {
            "type": "integer",
            "description": "No sub directories.",
            "format": "int32"
          },
          "SP_64K": {
            "type": "integer",
            "description": "64k documents per sub directory",
            "format": "int32"
          },
          "SP_16": {
            "type": "integer",
            "description": "16k documents per sub directory",
            "format": "int32"
          },
          "SP_4K": {
            "type": "integer",
            "description": "4k documents per sub directory",
            "format": "int32"
          },
          "SP_1K": {
            "type": "integer",
            "description": "1k documents per sub directory",
            "format": "int32"
          },
          "SP_FULL": {
            "type": "integer",
            "description": "256 folders with 256 documents",
            "format": "int32"
          },
          "SP_MD5_HASH": {
            "type": "integer",
            "description": "Store using MD5 hash.",
            "format": "int32"
          },
          "SP_CENTERA": {
            "type": "integer",
            "description": "Store on CENTERA device.",
            "format": "int32"
          },
          "SP_TSM": {
            "type": "integer",
            "description": "Store on TSM device.",
            "format": "int32"
          },
          "SP_REL_FILE_PATH": {
            "type": "integer",
            "description": "External storage definition. A physical (relative) path is specified for each document.",
            "format": "int32"
          },
          "SP_ACTIVATOR": {
            "type": "integer",
            "description": "Store in KGS Activator.",
            "format": "int32"
          },
          "SP_S3": {
            "type": "integer",
            "description": "Store on S3 Cloud Storage",
            "format": "int32"
          },
          "SP_S3_EXTERNAL": {
            "type": "integer",
            "description": "Use S3 Cloud Storage as Backup Device",
            "format": "int32"
          },
          "FLAG_ELO5_PATH_CHANGED": {
            "type": "integer",
            "description": "Only ELO 5.0: path has been changed.",
            "format": "int32"
          },
          "FLAG_ELO5_PATH_PROTECTED": {
            "type": "integer",
            "description": "Only ELO 5.0: path is protected.",
            "format": "int32"
          },
          "FLAG_ELO5_NO_NT_SECURITY": {
            "type": "integer",
            "description": "Only ELO 5.0: no NT security.",
            "format": "int32"
          },
          "FLAG_BACKUP": {
            "type": "integer",
            "description": "Backup path.",
            "format": "int32"
          },
          "FLAG_READONLY": {
            "type": "integer",
            "description": "Path is read-only.",
            "format": "int32"
          },
          "FLAG_NO_RESTORE": {
            "type": "integer",
            "description": "Used with FLAG_BACKUP, document files are not restored in a normal path.",
            "format": "int32"
          },
          "FLAG_WORM": {
            "type": "integer",
            "description": "Path can only be written once. DM does not use temporary files.",
            "format": "int32"
          },
          "DMPATH_ELOSYS": {
            "type": "string",
            "description": "Reserved path name. Documents stored within DMPATH_ELOSYS will not be purged."
          },
          "CLOUD_MINIO": {
            "type": "integer",
            "description": "Minio Cloud Storage.",
            "format": "int32"
          },
          "CLOUD_S3": {
            "type": "integer",
            "description": "Amazon S3 Cloud Storage.",
            "format": "int32"
          },
          "CLOUD_GOOGLE": {
            "type": "integer",
            "description": "Google Cloud Storage. not yet implemented.",
            "format": "int32"
          },
          "NO_FILE_ENCRYPTION": {
            "type": "string",
            "description": "Cloud storage encryption is set by default. If this constant is set in field StoreInfo.\nencryptionKey there will be\n no encryption."
          }
        },
        "description": "Definition of a document path.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ProcessReleaseLock": {
        "type": "object",
        "description": "Releases the locks on archive elements."
      },
      "MapToAspectLine": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/AspectLine"
        }
      },
      "PluginService": {
        "type": "object"
      },
      "BRequest_IXServicePortIF_startWorkFlow": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "templFlowId": {
            "type": "string"
          },
          "flowName": {
            "type": "string"
          },
          "objId": {
            "type": "string"
          }
        }
      },
      "ValueClass": {
        "type": "object"
      },
      "PhysDelDocsC": {
        "type": "object",
        "properties": {
          "mbObjId": {
            "type": "string",
            "description": "DB column: objid"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of PhysDelDocs\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_findFirstUsers": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findUserInfo": {
            "$ref": "#/components/schemas/FindUserInfo"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ArrayOfDocVersion": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DocVersion"
        }
      },
      "MapDomainDataC": {
        "type": "object",
        "properties": {
          "mbFlags": {
            "type": "string",
            "description": "DB column: mapdflags"
          },
          "mbName": {
            "type": "string",
            "description": "DB column: mapdname"
          },
          "lnName": {
            "type": "integer",
            "description": "DB column: mapdname",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of MapDomain\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "OcrResultRecognizeFile": {
        "type": "object",
        "properties": {
          "textData": {
            "description": "Binary data.\nThis member is set, if {@link OcrInfoRecognizeFile#outputFormat} was set to\n {@link OcrInfoC#CHAR_AND_RECT}.",
            "$ref": "#/components/schemas/FileData"
          },
          "text": {
            "type": "string",
            "description": "Recognized text. This member is set, if {@link OcrInfoRecognizeFile#outputFormat} was set to {@link OcrInfoC#TEXT}."
          },
          "skewAngle": {
            "type": "number",
            "description": "Skew angle. Only valid if a single page was analyzed, see {@link OcrInfoRecognizeFile#pageNo}.",
            "format": "double"
          },
          "width": {
            "type": "integer",
            "description": "Page width. Only valid if a single page was analyzed, see {@link OcrInfoRecognizeFile#pageNo}.",
            "format": "int32"
          },
          "height": {
            "type": "integer",
            "description": "Page height. Only valid if a single page was analyzed, see {@link OcrInfoRecognizeFile#pageNo}.",
            "format": "int32"
          }
        },
        "description": "This class contains the result of an OCR analysis."
      },
      "Throwable": {
        "type": "object"
      },
      "ReportModeC": {
        "type": "object",
        "properties": {
          "bsetNO": {
            "type": "string"
          },
          "bsetLIMITED": {
            "type": "string"
          },
          "bsetVERBOSE": {
            "type": "string"
          },
          "bsetFULL": {
            "type": "string"
          },
          "NO": {
            "description": "Do not write report.",
            "$ref": "#/components/schemas/ReportModeZ"
          },
          "LIMITED": {
            "description": "Write limited report.",
            "$ref": "#/components/schemas/ReportModeZ"
          },
          "VERBOSE": {
            "description": "Write verbose report.",
            "$ref": "#/components/schemas/ReportModeZ"
          },
          "FULL": {
            "description": "Write full report.",
            "$ref": "#/components/schemas/ReportModeZ"
          }
        }
      },
      "MapToOrgUnitInfo": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/OrgUnitInfo"
        }
      },
      "BResult_239574905": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/FulltextConfig"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "ArrayOfMaskName": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MaskName"
        }
      },
      "CheckAccessOptions": {
        "type": "object",
        "description": "Options for function\n{@link IXServerEvents#onCheckSordAccess(IXServerEventsContext, Sord, SordZ, int, CheckAccessOptions)}"
      },
      "BRequest_IXServicePortIF_controlBackgroundThread": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "jobState": {
            "$ref": "#/components/schemas/JobState"
          }
        }
      },
      "BRequest_IXServicePortIF_encryptStringRsa": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "key": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "encryptNotDecrypt": {
            "type": "boolean"
          }
        }
      },
      "DocMaskLineTemplateDataC": {
        "type": "object",
        "properties": {
          "mbId": {
            "type": "string",
            "description": "DB column: mlineno"
          },
          "mbRawType": {
            "type": "string",
            "description": "DB column: linetype"
          },
          "mbName": {
            "type": "string",
            "description": "DB column: linebez"
          },
          "lnName": {
            "type": "integer",
            "description": "DB column: linebez",
            "format": "int32"
          },
          "mbKey": {
            "type": "string",
            "description": "DB column: linekey"
          },
          "lnKey": {
            "type": "integer",
            "description": "DB column: linekey",
            "format": "int32"
          },
          "mbMin": {
            "type": "string",
            "description": "DB column: linemin"
          },
          "mbMax": {
            "type": "string",
            "description": "DB column: linemax"
          },
          "mbLockId": {
            "type": "string",
            "description": "DB column: linelock"
          },
          "mbLKey": {
            "type": "string",
            "description": "DB column: linelkey"
          },
          "mbRawFlags": {
            "type": "string",
            "description": "DB column: lineflags"
          },
          "mbComment": {
            "type": "string",
            "description": "DB column: linecomment"
          },
          "lnComment": {
            "type": "integer",
            "description": "DB column: linecomment",
            "format": "int32"
          },
          "mbDefaultValue": {
            "type": "string",
            "description": "DB column: linedefault"
          },
          "lnDefaultValue": {
            "type": "integer",
            "description": "DB column: linedefault",
            "format": "int32"
          },
          "mbExternalData": {
            "type": "string",
            "description": "DB column: lineext"
          },
          "lnExternalData": {
            "type": "integer",
            "description": "DB column: lineext",
            "format": "int32"
          },
          "mbInternalAcl": {
            "type": "string",
            "description": "DB column: lineacl"
          },
          "lnInternalAcl": {
            "type": "integer",
            "description": "DB column: lineacl",
            "format": "int32"
          },
          "mbCommentTranslationKey": {
            "type": "string",
            "description": "DB column: linecommenttrkey"
          },
          "lnCommentTranslationKey": {
            "type": "integer",
            "description": "DB column: linecommenttrkey",
            "format": "int32"
          },
          "mbNameTranslationKey": {
            "type": "string",
            "description": "DB column: linebeztrkey"
          },
          "lnNameTranslationKey": {
            "type": "integer",
            "description": "DB column: linebeztrkey",
            "format": "int32"
          },
          "mbServerScriptName": {
            "type": "string",
            "description": "DB column: linescript"
          },
          "lnServerScriptName": {
            "type": "integer",
            "description": "DB column: linescript",
            "format": "int32"
          },
          "mbTStamp": {
            "type": "string",
            "description": "DB column: linetstamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "DB column: linetstamp",
            "format": "int32"
          },
          "mbTStampSync": {
            "type": "string",
            "description": "DB column: linetstampsync"
          },
          "lnTStampSync": {
            "type": "integer",
            "description": "DB column: linetstampsync",
            "format": "int32"
          },
          "mbValidateExpression": {
            "type": "string",
            "description": "Member bit: RegEx to validate user input for entry.\nDB column: validateexpression"
          },
          "lnValidateExpression": {
            "type": "integer",
            "description": "Column length: RegEx to validate user input for entry.\nDB column: validateexpression",
            "format": "int32"
          },
          "mbAllowedReferencedMaskIdsRaw": {
            "type": "string",
            "description": "Member bit: Specifies the {@link DocMask#id} allowed in a {@link DocMaskLineC#TYPE_RELATION}.\nDB column:\n allowedrefmaskids"
          },
          "lnAllowedReferencedMaskIdsRaw": {
            "type": "integer",
            "description": "Column length: Specifies the {@link DocMask#id} allowed in a {@link DocMaskLineC#TYPE_RELATION}.\nDB column:\n allowedrefmaskids",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of DocMaskLineTemplate\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "userId": {
            "type": "string",
            "description": "The user name or UserProfileC.USERID_ALL, if the options for all users are represented by this object.\nThe values\n null or empty are equal to UserProfileC.USERID_ALL."
          },
          "excludeGroupValues": {
            "type": "boolean",
            "description": "Do not read values of option groups. Only valid for checkoutUserProfile."
          },
          "excludeDefaultValues": {
            "type": "boolean",
            "description": "Do not read values for all users. Only valid for checkoutUserProfile."
          },
          "userOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "groupOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "defaultOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "groupId": {
            "type": "integer",
            "description": "The users option group ID. This value is -1, if the user is not member of an option group. Read-only.",
            "format": "int32"
          },
          "includeAllGroupAndDefaultOptions": {
            "type": "boolean",
            "description": "Include all group and default options. Set this member as true, if all group and default options shall be returned.\nIf the value is false, only those options are returned that are not particularly defined for the user."
          }
        },
        "description": "User profile options\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ForwardWorkflowNodeInfo": {
        "type": "object",
        "properties": {
          "terminateWorkflow": {
            "type": "boolean",
            "description": "Terminate the workflow instead of forwarding.\nIf this member is true, {@link #successorNodesToActivate} and\n {@link #node} are ignored."
          },
          "successorNodesToActivate": {
            "description": "List of successor nodes to be activated. Set this member as null, if only node data should be changed.\nIn this\n case, the the workflow is not forwarded.",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "node": {
            "description": "Workflow node to forward.\nThe following members of this value are taken into account and update the related\n database values: {@link WFNode#name}, {@link WFNode#comment}, {@link WFNode#prio}.",
            "$ref": "#/components/schemas/WFNode"
          }
        },
        "description": "This class controls workflow node forwarding in\n{@link IXServicePortIF#forwardWorkflowNode(ClientInfo, int, int, ForwardWorkflowNodeInfo, LockZ)}."
      },
      "ArrayOfSordHist": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SordHist"
        }
      },
      "BRequest_IXServerEvents_onBeforeDeleteSord": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "parentSord": {
            "$ref": "#/components/schemas/Sord"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "delOpts": {
            "$ref": "#/components/schemas/DeleteOptions"
          }
        }
      },
      "BRequest_IXServicePortIF_createWorkFlow": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "wfName": {
            "type": "string"
          },
          "typeZ": {
            "$ref": "#/components/schemas/WFTypeZ"
          }
        }
      },
      "BRequest_IXServicePortIF_deferWorkFlowNode": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "flowId": {
            "type": "string"
          },
          "nodeId": {
            "type": "integer",
            "format": "int32"
          },
          "userDelayDateIso": {
            "type": "string"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "DocVersion": {
        "type": "object",
        "properties": {
          "accessDateIso": {
            "type": "string",
            "description": "Last access date. ClientInfo determines the Timezone.\n\u003cp\u003e\n Applies to document version and signature. Is undefined for preview and fulltextContent.\n \u003c/p\u003e"
          },
          "comment": {
            "type": "string",
            "description": "Version comment\n\u003cp\u003e\n Applies to document version. Is undefined for signature, preview and fulltextContent.\n \u003c/p\u003e"
          },
          "createDateIso": {
            "type": "string",
            "description": "Create date. ClientInfo determines the Timezone.\n\u003cp\u003e\n Applies to document version and signature. Is undefined for preview and fulltextContent.\n \u003c/p\u003e"
          },
          "deleted": {
            "type": "boolean",
            "description": "Indicates whether the version is logically deleted.\n\u003cp\u003e\n Applies to document version. Is undefined for signature, preview and fulltextContent.\n \u003c/p\u003e"
          },
          "ext": {
            "type": "string",
            "description": "Document file extension (without \".\n\")\n \u003cp\u003e\n Applies to document version, signature and preview. Is readonly for fulltextContent.\n \u003c/p\u003e\n This value has precedence before \u003ccode\u003econtentType\u003c/code\u003e."
          },
          "contentType": {
            "type": "string",
            "description": "Content-Type (MIME-Type)."
          },
          "fileData": {
            "description": "Document, preview or fulltextContent file content.\nIf \u003ccode\u003echeckoutDoc\u003c/code\u003e is called with option\n \u003ccode\u003embSordDocSmallContent\u003c/code\u003e and the requested document (version) is small (less than the configured value),\n this member contains the file data and content type. If \u003ccode\u003embPreview\u003c/code\u003e is additionally set,\n \u003ccode\u003efileData\u003c/code\u003e contains the content of the preview - REGARDLESS of the size. In case there is no preview,\n \u003ccode\u003efileData\u003c/code\u003e contains the data of the document (if it\u0027s a small file).\n \u003cp\u003e\n Applies to document version, signature and preview.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/FileData"
          },
          "guid": {
            "type": "string",
            "description": "Document GUID.\n\u003cp\u003e\n Applies to document version and signature. Is undefined for preview and fulltextContent.\n \u003c/p\u003e"
          },
          "id": {
            "type": "integer",
            "description": "Document ID\n\u003cp\u003e\n Applies to document version and signature. Is undefined for preview and fulltextContent.\n \u003c/p\u003e",
            "format": "int32"
          },
          "md5": {
            "type": "string",
            "description": "MD5 hash of the documet file.\n\u003cp\u003e\n Applies to document version and signature. Is undefined for preview and fulltextContent.\n \u003c/p\u003e"
          },
          "milestone": {
            "type": "boolean",
            "description": "Indicates whether the version is marked as a milestone version.\n\u003cp\u003e\n Applies to document version. Is undefined for signature and preview and fulltextContent.\n \u003c/p\u003e"
          },
          "ownerId": {
            "type": "integer",
            "description": "The owners user ID.\n\u003cp\u003e\n Applies to document version. Is undefined for signature and preview and fulltextContent.\n \u003c/p\u003e",
            "format": "int32"
          },
          "ownerName": {
            "type": "string",
            "description": "The owners user name. This value is read only (ignored in checkinDoc...).\n\u003cp\u003e\n Applies to document version. Is undefined for signature and preview and fulltextContent.\n \u003c/p\u003e"
          },
          "pathId": {
            "type": "integer",
            "description": "Storage path ID\n\u003cp\u003e\n Applies to document version and signature. Is undefined for preview and fulltextContent.\n \u003c/p\u003e",
            "format": "int32"
          },
          "pathId2": {
            "type": "integer",
            "description": "(to be defined)\n\u003cp\u003e\n Applies to document version and signature. Is undefined for preview and fulltextContent.\n \u003c/p\u003e",
            "format": "int32"
          },
          "physPath": {
            "type": "string",
            "description": "Physical path\n\u003cp\u003e\n Applies to document version and signature. Is undefined for preview and fulltextContent.\n \u003c/p\u003e\n Set SordC.mbPhysPath or EditInfoC.mbPhysPath in the member selector passed to checkoutSord or checkoutDoc to read\n the physical path."
          },
          "previewUrl": {
            "type": "string",
            "description": "\u003cp\u003e\nURL to up-/download a document preview.\n \u003c/p\u003e\n \u003cp\u003e\n Applies to document version. Is empty for signature and preview and fulltextContent.\n \u003c/p\u003e"
          },
          "sig": {
            "description": "Document signature\n\u003cp\u003e\n Applies to document version. Is null for signature and preview and fulltextContent.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/DocVersion"
          },
          "preview": {
            "description": "Document preview\n\u003cp\u003e\n Applies to document version. Is null for signature and preview and fulltextContent.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/DocVersion"
          },
          "size": {
            "type": "string",
            "description": "File size."
          },
          "tStamp": {
            "type": "string",
            "description": "Document timestamp\n\u003cp\u003e\n Applies to document version and signature. Is undefined for preview. (Is available for fulltextContent)\n \u003c/p\u003e\n The format is JJJJ.MM.DD.hh.mm.ss"
          },
          "updateDateIso": {
            "type": "string",
            "description": "Last update date. ClientInfo determines the Timezone.\n\u003cp\u003e\n Applies to document version and signature. Is undefined for preview and fulltextContent.\n \u003c/p\u003e"
          },
          "uploadResult": {
            "type": "string",
            "description": "Result from the ELODM if the document was uploaded.\n\u003cp\u003e\n Applies to document version, signature, preview and fulltextContent.\n \u003c/p\u003e"
          },
          "url": {
            "type": "string",
            "description": "URL to up-/download\n\u003cp\u003e\n Applies to document version, signature,preview and fulltextContent.\n \u003c/p\u003e"
          },
          "version": {
            "type": "string",
            "description": "Version number\n\u003cp\u003e\n Applies to document version. Is undefined for signature, preview and fulltextContent.\n \u003c/p\u003e"
          },
          "workVersion": {
            "type": "boolean",
            "description": "Indicates whether the version is the current work version.\n\u003cp\u003e\n Applies to document version. Is undefined for signature, preview and fulltextContent.\n \u003c/p\u003e"
          },
          "encryptionSet": {
            "type": "integer",
            "description": "ID of the encryption set. It\u0027s password is used to encrypt or decrypt the document.\nIt a new document or version\n should be checked in, this member must be set to Sord.details.encryptionSet before checkinDocBegin is called. When\n this object is retrieved via IX it is always set to Sord.details.encryptionSet.\n \u003cp\u003e\n Applies to document version. Is undefined for signature.\n \u003c/p\u003e",
            "format": "int32"
          },
          "fulltextContent": {
            "description": "This object provides the content of the fulltext database for the document version.\nThe information is read-only\n and only available for DocVersion objects that refer to a document version (and not an attachment, preview or\n signature). Currenly, only the members url, ext, contentType and encryptionSet are valid for a DocVersion object\n that belongs to fulltext content. Whereby ext is always txt and contentType is always text/plain. A Byte Order Mark\n preceedes the content data. If the related document version is encrypted, the appropriate encryption password has\n to be set, before the fulltext information can be downloaded. If the SessionOptionC.DECRYPT_DOCUMENTS is not set,\n the fulltext information is transmitted encrypted.\n \u003cp\u003e\n Applies to document version. Is undefined for signature and preview.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/DocVersion"
          },
          "deleteDateIso": {
            "type": "string",
            "description": "Delete date. ClientInfo determines the Timezone.\n\u003cp\u003e\n Is undefined if isDeleted() returns false.\n \u003c/p\u003e"
          },
          "nbOfValidSignatures": {
            "type": "integer",
            "description": "Number of valid signatures. This member holds the count of valid signatures in the signature file.\nIt is only valid\n for a DocVersion object that represents a signature (member {@link #sig}). A value of zero means, that the\n signatures are unchecked. A number greater than zero means, that all signatures are valid. In this case the member\n value is equal to the number of signatures. If at least one signature is invalid, the value is less than zero. The\n number of invalid signatures is thereby unknown. Client applications are responsible to check signatures. The ELOix\n does not check signatures.",
            "format": "int32"
          },
          "relativeFilePath": {
            "type": "string",
            "description": "Relative file path for external file. This member specifies the location of the file relative to a custom path.\nIf\n {@link #pathId} does not refer a custom path, this member is empty and ignored in\n {@link IXServicePortIF#checkinDocEnd(ClientInfo, Sord, SordZ, Document, LockZ)}."
          },
          "tStampSync": {
            "type": "string",
            "description": "Timestamp of this object\u0027s ACLs last export by the replication."
          }
        },
        "description": "\u003cp\u003e\nDescription: This class describes a document version, a document preview or a signature.\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2002\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO DIgital Office GmbH\n \u003c/p\u003e"
      },
      "ListOfValueClass": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ValueClass"
        }
      },
      "MapHistHeadC": {
        "type": "object",
        "properties": {
          "mbHistGuid": {
            "type": "string",
            "description": "Member bit: Serialisation version ID DB column: maphistguid"
          },
          "lnHistGuid": {
            "type": "integer",
            "description": "Column length: Serialisation version ID DB column: maphistguid",
            "format": "int32"
          },
          "mbTimeStampUTC": {
            "type": "string",
            "description": "DB column: maphistts"
          },
          "lnTimeStampUTC": {
            "type": "integer",
            "description": "DB column: maphistts",
            "format": "int32"
          },
          "mbMapGuid": {
            "type": "string",
            "description": "DB column: mapguid"
          },
          "lnMapGuid": {
            "type": "integer",
            "description": "DB column: mapguid",
            "format": "int32"
          },
          "mbUserId": {
            "type": "string",
            "description": "DB column: mapuser"
          },
          "mbUserName": {
            "type": "string",
            "description": "DB column: mapusername"
          },
          "lnUserName": {
            "type": "integer",
            "description": "DB column: mapusername",
            "format": "int32"
          },
          "mbHistSource": {
            "type": "string",
            "description": "DB column: maphistsrc"
          },
          "mbTimeStampLocal": {
            "type": "string",
            "description": "DB column: maphistlocts"
          },
          "lnTimeStampLocal": {
            "type": "integer",
            "description": "DB column: maphistlocts",
            "format": "int32"
          },
          "mbWorkStation": {
            "type": "string",
            "description": "DB column: maphistwks"
          },
          "lnWorkStation": {
            "type": "integer",
            "description": "DB column: maphistwks",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of MapHist\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ArrayOfSordType": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SordType"
        }
      },
      "HashMapToInteger": {
        "type": "object",
        "additionalProperties": {
          "type": "integer",
          "format": "int32"
        }
      },
      "PluginMessage": {
        "type": "object",
        "properties": {
          "source": {
            "description": "Message source. Read only.",
            "$ref": "#/components/schemas/PluginMessageSource"
          },
          "id": {
            "type": "string",
            "description": "Message ID."
          },
          "uri": {
            "type": "string",
            "description": "Message URI."
          },
          "parameters": {
            "description": "String parameters.",
            "$ref": "#/components/schemas/MapToString"
          },
          "bytes": {
            "description": "Byte array parameters.\nIn case of a HTTP request or response, this element can contain the response data at map key\n {@link PluginMessageC#BODY}.",
            "$ref": "#/components/schemas/MapToArrayOfbyte"
          },
          "objects": {
            "description": "API object parameters. E.g. Sord objects. In case of a HTTP request or response, this element is ignored.",
            "$ref": "#/components/schemas/MapToBValueClass"
          },
          "streams": {
            "description": "Stream parameters.\nIn case of a HTTP request or response, this element can contain the response data at map key\n {@link PluginMessageC#BODY}.",
            "$ref": "#/components/schemas/MapToBStreamReference"
          },
          "status": {
            "type": "integer",
            "description": "Message response status code. In case of a HTTP request, this element specifies the response status code.\nA value\n of 0 is implicitly mapped to 200.",
            "format": "int32"
          }
        },
        "description": "A message that can be sent to or received from a plugin."
      },
      "BRequest_IXServicePortIF_terminateWorkFlow": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "flowId": {
            "type": "string"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ControlBackupInfo": {
        "type": "object",
        "properties": {
          "mode": {
            "type": "integer",
            "description": "Start, stop and status of the ELOdm backup and purge tasks (constants in ControlBackupInfoC)",
            "format": "int32"
          }
        },
        "description": "Mode for the ELOdm backup and purge tasks"
      },
      "FindResult": {
        "type": "object",
        "properties": {
          "breakTimeout": {
            "type": "boolean",
            "description": "The time limit for the search is exceeded."
          },
          "breakTotalCount": {
            "type": "boolean",
            "description": "The search is breaked because the total number of results are reached."
          },
          "configFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigFile"
            }
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "moreResults": {
            "type": "boolean",
            "description": "Is true if there are more results."
          },
          "reportInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportInfo"
            }
          },
          "count": {
            "type": "integer",
            "description": "Number of results. This member is only valid, if FindInfo.findOptions.evalCount is true.",
            "format": "int32"
          },
          "estimatedCount": {
            "type": "integer",
            "description": "Estimated number of hits that can be found by the query.\nThis number cannot be computed for any search and is\n usually -1. Only if the search engine supplies an estimated count, it is \u0026gt;\u003d 0.",
            "format": "int32"
          },
          "searchId": {
            "type": "string",
            "description": "Identifier to get more results."
          },
          "sords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sord"
            }
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserTask"
            }
          },
          "workflows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFDiagram"
            }
          },
          "translateTerms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslateTerm"
            }
          },
          "fulltextResultItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FindByFulltextResultItem"
            }
          },
          "fulltextCtrlResultItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FindByFulltextCtrlResultItem"
            }
          },
          "dynamicFolder": {
            "type": "string",
            "description": "String representation of FindInfo used to define a dynamic register.\nFunction\n {@link IXServicePortIF#findFirstSords(ClientInfo, FindInfo, int, SordZ)} returns a serialized FindInfo in this\n member. It can be used to define a dynamic register by setting \u003ccode\u003eSord.desc\u003dFindResult.dynamicFolder\u003c/code\u003e."
          },
          "jobStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobState"
            }
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Action"
            }
          },
          "feeds": {
            "description": "Document feeds. Feed objects mapped to their GUID.",
            "$ref": "#/components/schemas/MapToFeed"
          },
          "subscriptions": {
            "description": "Subscriptions. Subscription objects mapped to their Subscription.watchGuid.",
            "$ref": "#/components/schemas/MapToSubscription"
          },
          "notifications": {
            "description": "Notifications. Notification objects mapped to their Notification.\nwatchGuid",
            "$ref": "#/components/schemas/MapToNotification"
          },
          "hashTagRelations": {
            "description": "HashTag Relations.",
            "$ref": "#/components/schemas/ListOfHashTagRelation"
          },
          "hashTags": {
            "description": "HashTags.\nHashTag Objects mapped to their HashTagGuid",
            "$ref": "#/components/schemas/MapToHashTag"
          },
          "notes": {
            "description": "Notes. This member returns the note objects found by findFirstNotes/findNextNotes.",
            "$ref": "#/components/schemas/ListOfNote"
          },
          "userInfos": {
            "description": "User objects. Map of user ID to user object.",
            "$ref": "#/components/schemas/MapToUserInfo"
          },
          "userNames": {
            "description": "Lean user objects. Map of user ID to user object.",
            "$ref": "#/components/schemas/MapToUserName"
          },
          "contextTerms": {
            "description": "Result for findContextTerms().",
            "$ref": "#/components/schemas/ListOfContextTermResults"
          },
          "completions": {
            "description": "Type-as-you-search Results.",
            "$ref": "#/components/schemas/ListOfString"
          },
          "corrections": {
            "description": "Corrections suggestions.",
            "$ref": "#/components/schemas/ListOfString"
          },
          "synonyms": {
            "description": "Thesaurus Resluts.",
            "$ref": "#/components/schemas/ListOfString"
          },
          "sortedResult": {
            "description": "List of result objects ordered by the given sort order.\nIf this member is not null, it repeats the list of result\n objects in sorted order. This member is only valid if returned from\n {@link IXServicePortIF#findFirstUsers(ClientInfo, FindUserInfo, int)} or\n {@link IXServicePortIF#findNextUsers(ClientInfo, String, int, int)}.",
            "$ref": "#/components/schemas/ListOfValueClass"
          },
          "masks": {
            "description": "Keywording forms related to {@link #getSords()}.\nThis member is set, if {@link FindOptions#docMaskZ} is not null\n and not empty.",
            "$ref": "#/components/schemas/MapToDocMask"
          }
        },
        "description": "\u003cp\u003e\nThis class contains the search results of a call to \u003ccode\u003eIXServicePortIF.findFirstSords\u003c/code\u003e\n \u003c/p\u003e\n or \u003ccode\u003eIXServicePortIF.findNextSords\u003c/code\u003e.\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BResult_881442092": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ListOfPublicDownload"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "GetWebDAVPathOptions": {
        "type": "object",
        "properties": {
          "tickketInPath": {
            "type": "boolean",
            "description": "If true, the ticket is inserted in the path."
          },
          "objId": {
            "type": "string",
            "description": "ObjectId or GUID of the sord to get the path."
          },
          "useShortPath": {
            "type": "boolean",
            "description": "From now on the option is no longer considered and is implicitly evaluated as true."
          }
        },
        "description": "Parameter class for the function {@link IXServicePortIF#getWebDAVPathFromObjID2}"
      },
      "AspectAssoc": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Technical aspect association name. This member must start with a character between \u0027A\u0027 and \u0027Z\u0027.\nThe following\n characters must be alpha-numeric including underscore."
          },
          "displayName": {
            "type": "string",
            "description": "Locale specific name. Readonly. This value is the resolved {@link #translationKey}."
          },
          "translationKey": {
            "type": "string",
            "description": "Translation-keyword for {@link AspectAssoc#displayName}. Defines the {@link #displayName} as technical resource ID.\nIf this value is set, translations are only based on content of properties files and not on translation table."
          },
          "aspectId": {
            "type": "integer",
            "description": "ID of the referenced aspect.",
            "format": "int32"
          },
          "cardinality": {
            "description": "Cardinality.",
            "$ref": "#/components/schemas/Cardinality"
          },
          "acl": {
            "type": "string",
            "description": "Access control list."
          },
          "aclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "regionInherit": {
            "type": "boolean",
            "description": "Indicates if the Sord object passes the aspect object to all sub-entries if this AspectAssoc object is contained in\na region mask."
          }
        },
        "description": "This class defines an aspect association.\nAn AspectAssoc defines a reference to a keywording {@link Aspect} in\n {@link DocMask#aspectAssocs}."
      },
      "ReplSetNameC": {
        "type": "object",
        "properties": {
          "mbId": {
            "type": "string",
            "description": "DB column: rsid"
          },
          "mbImage": {
            "type": "string",
            "description": "DB column: rsimage"
          },
          "mbName": {
            "type": "string",
            "description": "DB column: rsname"
          },
          "lnName": {
            "type": "integer",
            "description": "DB column: rsname",
            "format": "int32"
          },
          "mbDesc": {
            "type": "string",
            "description": "DB column: rsdesc"
          },
          "lnDesc": {
            "type": "integer",
            "description": "DB column: rsdesc",
            "format": "int32"
          },
          "mbTStamp": {
            "type": "string",
            "description": "DB column: rststamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "DB column: rststamp",
            "format": "int32"
          },
          "mbMobile": {
            "type": "string",
            "description": "DB column: rsmobile"
          },
          "mbTStampSync": {
            "type": "string",
            "description": "Member bit: Timestamp of this object\u0027s last export by the replication.\nDB column: rststampsync"
          },
          "lnTStampSync": {
            "type": "integer",
            "description": "Column length: Timestamp of this object\u0027s last export by the replication.\nDB column: rststampsync",
            "format": "int32"
          },
          "mbPriority": {
            "type": "string",
            "description": "Member bit: Priority of this replication set.\nDB column: rsprio"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of ReplSetName\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ListOfIntValue": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/IntValue"
        }
      },
      "ArrayOfSordHistKey": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SordHistKey"
        }
      },
      "BRequest_IXServicePortIF_findFirstTranslateTerms": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindTranslateTermInfo"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinDocsBegin": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          }
        }
      },
      "ListOfFeedPost": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FeedPost"
        }
      },
      "NotifyServerResult": {
        "type": "object",
        "description": "This class is used as a return value of IXServicPortIF.notifyServer."
      },
      "ReindexerConfig": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/SearchIndexerStatus"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "progressInPercent": {
            "type": "integer",
            "format": "int32"
          },
          "ixid": {
            "type": "string",
            "description": "This Indexserver instance is processing the update."
          },
          "lastException": {
            "type": "string",
            "description": "Last exception occured during processing."
          },
          "objIdRange": {
            "type": "string",
            "description": "Lower and upper limit of object IDs processed by re-indexing process."
          },
          "lockName": {
            "type": "string",
            "description": "Process runs under this user account."
          }
        },
        "description": "Configuration and status of Re-indexer process."
      },
      "WorkFlowNodeMatrixC": {
        "type": "object",
        "properties": {
          "mbEdgesOrdinals": {
            "type": "string",
            "description": "Member bit: Sort order of edges.\nDB column: wf_edges_ordinals"
          },
          "lnEdgesOrdinals": {
            "type": "integer",
            "description": "Column length: Sort order of edges.\nDB column: wf_edges_ordinals",
            "format": "int32"
          },
          "mbFlowId": {
            "type": "string",
            "description": "Member bit: Workflow ID DB column: wf_flowid"
          },
          "mbNodeId": {
            "type": "string",
            "description": "Member bit: Node ID DB column: wf_nodeid"
          },
          "mbIsNext": {
            "type": "string",
            "description": "Member bit: Contains 1, if this node is active.\nDB column: wf_is_next"
          },
          "mbTerminate": {
            "type": "string",
            "description": "Member bit: ELO-date when the node was exited.\nDB column: wf_terminate"
          },
          "mbSuccType": {
            "type": "string",
            "description": "Member bit: Type of successor node.\nDB column: wf_succ_type"
          },
          "mbSucc_0": {
            "type": "string",
            "description": "DB column: wf_succ_0"
          },
          "mbSucc_1": {
            "type": "string",
            "description": "DB column: wf_succ_1"
          },
          "mbSucc_2": {
            "type": "string",
            "description": "DB column: wf_succ_2"
          },
          "mbSucc_3": {
            "type": "string",
            "description": "DB column: wf_succ_3"
          },
          "mbSucc_4": {
            "type": "string",
            "description": "DB column: wf_succ_4"
          },
          "mbSucc_5": {
            "type": "string",
            "description": "DB column: wf_succ_5"
          },
          "mbSucc_6": {
            "type": "string",
            "description": "DB column: wf_succ_6"
          },
          "mbSucc_7": {
            "type": "string",
            "description": "DB column: wf_succ_7"
          },
          "mbSucc_8": {
            "type": "string",
            "description": "DB column: wf_succ_8"
          },
          "mbSucc_9": {
            "type": "string",
            "description": "DB column: wf_succ_9"
          },
          "mbSucc_10": {
            "type": "string",
            "description": "DB column: wf_succ_10"
          },
          "mbSucc_11": {
            "type": "string",
            "description": "DB column: wf_succ_11"
          },
          "mbSucc_12": {
            "type": "string",
            "description": "DB column: wf_succ_12"
          },
          "mbSucc_13": {
            "type": "string",
            "description": "DB column: wf_succ_13"
          },
          "mbSucc_14": {
            "type": "string",
            "description": "DB column: wf_succ_14"
          },
          "mbSucc_15": {
            "type": "string",
            "description": "DB column: wf_succ_15"
          },
          "mbSucc_16": {
            "type": "string",
            "description": "DB column: wf_succ_16"
          },
          "mbSucc_17": {
            "type": "string",
            "description": "DB column: wf_succ_17"
          },
          "mbSucc_18": {
            "type": "string",
            "description": "DB column: wf_succ_18"
          },
          "mbSucc_19": {
            "type": "string",
            "description": "DB column: wf_succ_19"
          },
          "mbSuccOvertime": {
            "type": "string",
            "description": "Member bit: Id of successor node, which should be activated by the escalation.\nDB column: wf_succ_overtime"
          },
          "mbVersionId": {
            "type": "string",
            "description": "Member bit: Version ID.\nDB column: wf_version"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of WorkFlowNodeMatrix\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_checkinReminder": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "remi": {
            "$ref": "#/components/schemas/Reminder"
          },
          "receiverIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "expandGroups": {
            "type": "boolean"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServerEvents_onAfterLogin": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "userName": {
            "type": "string"
          },
          "opts": {
            "$ref": "#/components/schemas/LoginScriptOptions"
          }
        }
      },
      "BRequest_IXServicePortIF_editPublicDownloadUrls": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "opts": {
            "$ref": "#/components/schemas/PublicDownloadOptions"
          }
        }
      },
      "BResult_148564345": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/GetWebDAVPathResult"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "SubstitutionPeriod": {
        "type": "object",
        "properties": {
          "substitutionGuid": {
            "type": "string",
            "description": "GUID of the corresponding {@link Substitution}. Read-only."
          },
          "startIsodate": {
            "type": "string",
            "description": "\u003cp\u003e\nStart date of a substitution period (inclusive)\n \u003c/p\u003e\n \u003cp\u003e\n A start date must always be set.\n \u003c/p\u003e\n \u003cp\u003e\n Date format must be either \u0027yyyyMMdd\u0027 or \u0027yyyyMMddHHmmss\u0027. If only a date (\u0027yyyyMMdd\u0027) is provided, it is adjusted\n to \u0027yyyyMMdd000000\u0027 to match the beginning of a day.\n \u003cp\u003e\n \u003cp\u003e\n Dates are always committed and returned in the client\u0027s time zone.\n \u003c/p\u003e"
          },
          "endIsodate": {
            "type": "string",
            "description": "\u003cp\u003e\nEnd date of a substitution period (inclusive).\n \u003c/p\u003e\n \u003cp\u003e\n If this value if empty, the substitution never ends.\n \u003c/p\u003e\n \u003cp\u003e\n Date format must be either \u0027yyyyMMdd\u0027 or \u0027yyyyMMddHHmmss\u0027. If only a date (\u0027yyyyMMdd\u0027) is provided, it is adjusted\n to \u0027yyyyMMdd235959\u0027 to match the end of a day.\n \u003cp\u003e\n \u003cp\u003e\n Dates are always committed and returned in the client\u0027s time zone.\n \u003c/p\u003e"
          }
        },
        "description": "A substitution period is used to define time periods for substitutions.\n\u003cp\u003e\n A substitution is automatically activated during a time period if\n {@link SubstitutionSettings#activatePeriodsAutomatically} is set to true.\n \u003c/p\u003e\n \u003cp\u003e\n A time period always needs a start date, this date must not be in the past. The earliest start date is the current\n day to start a substitution immediately.\u003cbr\u003e\n The end date can be set, then the last day of the substitution is the end date (inclusive). It can also be left empty\n to have an open end for a substitution.\n \u003c/p\u003e\n \u003cp\u003e\n A active substitution based on a time period can only be disabled by deleting the corresponding SubstitutionPeriod.\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_deleteSubscription": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "subs": {
            "$ref": "#/components/schemas/Subscription"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinEsSettings": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "settings": {
            "$ref": "#/components/schemas/ESSettingsObj"
          }
        }
      },
      "ThesaurusC": {
        "type": "object",
        "properties": {
          "mbGroupId": {
            "type": "string",
            "description": "DB column: groupid"
          },
          "mbPrio": {
            "type": "string",
            "description": "DB column: prio"
          },
          "mbData": {
            "type": "string",
            "description": "DB column: data"
          },
          "lnData": {
            "type": "integer",
            "description": "DB column: data",
            "format": "int32"
          },
          "mbCompare": {
            "type": "string",
            "description": "DB column: compare"
          },
          "lnCompare": {
            "type": "integer",
            "description": "DB column: compare",
            "format": "int32"
          },
          "mbListId": {
            "type": "string",
            "description": "DB column: listid"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of Thesaurus\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_setScriptsToDebug": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "scriptsToDebug": {
            "type": "string"
          }
        }
      },
      "BResult_1301335819": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/FindResult"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutReminders": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "reminderIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "CheckoutWorkflowHistoryParams": {
        "type": "object",
        "properties": {
          "flowId": {
            "type": "string",
            "description": "Workflow ID or workflow GUID."
          },
          "nodeId": {
            "type": "integer",
            "description": "Node ID. If node ID is 0, histories of all node are return.",
            "format": "int32"
          }
        },
        "description": "Parameter class for the method checkoutWorkflowHistory."
      },
      "Activity": {
        "type": "object",
        "properties": {
          "TStamp": {
            "type": "string",
            "description": "Date and time of the last update.\nReadonly"
          },
          "backAt": {
            "type": "string",
            "description": "Date when activity object was returned, ISO format. This value does not contain a time portion."
          },
          "backMode": {
            "type": "string",
            "description": "Application defined purpose."
          },
          "comment": {
            "type": "string",
            "description": "Comment for the activity."
          },
          "destination": {
            "type": "string",
            "description": "Application defined purpose."
          },
          "dueDateIso": {
            "type": "string",
            "description": "Date when activity object is expected to be returned. This value does not contain a time portion."
          },
          "fileName": {
            "type": "string",
            "description": "Application defined purpose."
          },
          "guid": {
            "type": "string",
            "description": "GUID of the activity object."
          },
          "name": {
            "type": "string",
            "description": "Short name/description of the activity object."
          },
          "objGuid": {
            "type": "string",
            "description": "GUID of the assigned archive entry."
          },
          "prio": {
            "type": "integer",
            "description": "Priority for the activity. Priority A has value 0, UserTaskPriorityC.HIGHEST Priority B has value 1.\nPriority C has\n value 2, UserTaskPriorityC#LOWEST",
            "format": "int32"
          },
          "project": {
            "type": "string",
            "description": "Project name for the activity."
          },
          "receiverId": {
            "type": "integer",
            "description": "The ID of the recipient.",
            "format": "int32"
          },
          "revVers": {
            "type": "string",
            "description": "Revision version of the activity object."
          },
          "senderId": {
            "type": "integer",
            "description": "ID of the user who created the activity.",
            "format": "int32"
          },
          "sentAtIso": {
            "type": "string",
            "description": "Date the activity was sent in ISO format. This value does not contain a time portion."
          },
          "sentMode": {
            "type": "string",
            "description": "Application defined purpose."
          },
          "ud0": {
            "type": "string",
            "description": "First application defined value."
          },
          "ud1": {
            "type": "string",
            "description": "Second application defined value."
          },
          "ud2": {
            "type": "string",
            "description": "Third application defined value."
          },
          "ud3": {
            "type": "string",
            "description": "Fourth application defined value."
          },
          "ud4": {
            "type": "string",
            "description": "Fifth application defined value."
          },
          "ud5": {
            "type": "string",
            "description": "Sixth application defined value."
          },
          "ud6": {
            "type": "string",
            "description": "Seventh application defined value."
          },
          "ud7": {
            "type": "string",
            "description": "Eighth application defined value."
          },
          "ud8": {
            "type": "string",
            "description": "Ninth application defined value."
          },
          "ud9": {
            "type": "string",
            "description": "Tenth application defined value."
          },
          "receiverName": {
            "type": "string",
            "description": "Activity was created for this user. Readonly."
          },
          "senderName": {
            "type": "string",
            "description": "Activity was created by this user. Readonly."
          },
          "transId": {
            "type": "string",
            "description": "Application defined value."
          },
          "objId": {
            "type": "integer",
            "description": "Object ID of the associated folder or document. Read-only.",
            "format": "int32"
          },
          "objType": {
            "type": "integer",
            "description": "Object type of the associated folder or document. Read-only.",
            "format": "int32"
          },
          "TStampSync": {
            "type": "string",
            "description": "Timestamp of this object\u0027s last export by the replication."
          }
        },
        "description": "This class represents an activity.\n\u003cp\u003e\n An activity is a task delegated to an instance outside the ELO system. It is created when the task is sent to the\n instance and deleted, if it is received back. An activity defines a date for expecting the response,\n \u003ccode\u003edueDateIso\u003c/code\u003e. At this date, the activity appears in the task list of the initiator. If the task is\n finished, the initiator sets the \u003ccode\u003ebackAt\u003c/code\u003e member and the activity is closed.\n \u003c/p\u003e\n \u003cp\u003e\n Activities can be used to observe a document or a folder. For each modification, a ELO_NOTIFY activity is created and\n displayed in the task list of the user that wants to observe the object.\n \u003c/p\u003e\n \u003cp\u003e\n An activity object is an instance on an activity project. The project defines the properties the user can edit or\n select to provide more information to the task.\n \u003c/p\u003e"
      },
      "NoteTemplate": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Stamp ID.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Stamp name."
          },
          "userId": {
            "type": "string",
            "description": "User ID or name. NoteTemplate objects can be defined for all users and for a specific user."
          },
          "noteText": {
            "description": "Text information, if this is a textual stamp.\nThe text information can contain the placeholders defined in\n NoteTemplateC. Either noteText or noteImage can be set. class NoteTemplateC",
            "$ref": "#/components/schemas/NoteText"
          },
          "noteImage": {
            "description": "Image information, if this is stamp is an image. Either noteText or noteImage can be set.",
            "$ref": "#/components/schemas/NoteImage"
          },
          "acl": {
            "type": "string",
            "description": "ACL. Member aclItems has preceedence on checkin."
          },
          "aclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          }
        },
        "description": "This class describes the template information for a stamp."
      },
      "ArrayOfReplSetName": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ReplSetName"
        }
      },
      "IntSingleValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "description": "integer value",
            "format": "int32"
          }
        }
      },
      "BResult_2015686193": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/WFNode"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BResult_1057373949": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ReportOptions"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_LdapService_configure": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "config": {
            "$ref": "#/components/schemas/LdapConfig"
          }
        }
      },
      "MapData": {
        "type": "object",
        "properties": {
          "domainName": {
            "type": "string",
            "description": "Map domain name. An arbitary name or one of the predefined names in MapDomainC."
          },
          "id": {
            "type": "string",
            "description": "Map ID. If the map belongs to a Sord ID, this value is equal to the member objId."
          },
          "objId": {
            "type": "integer",
            "description": "Object ID. The ID of the associated Sord object or 0, if the map does not belong to a Sord object.",
            "format": "int32"
          },
          "lockId": {
            "type": "integer",
            "description": "User ID of the user that owns the lock on the map. If the map is not locked, this value is -1.",
            "format": "int32"
          },
          "lockName": {
            "type": "string",
            "description": "User name of the user that owns the lock no the map. If the map is not locked, this value is an empty string."
          },
          "TStamp": {
            "type": "string",
            "description": "Timestamp"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "guid": {
            "type": "string",
            "description": "GUID"
          },
          "mapItems": {
            "description": "Map items represented by class MapValue which gives access to BLOB values.",
            "$ref": "#/components/schemas/MapToMapValue"
          }
        },
        "description": "This class represents a map which contains user defined key-value pairs."
      },
      "DocMaskLineTemplate": {
        "type": "object",
        "properties": {
          "TStamp": {
            "type": "string",
            "description": "Last update time of the storage template data."
          },
          "TStampSync": {
            "type": "string",
            "description": "Timestamp of this object\u0027s last export by the replication."
          },
          "lockId": {
            "type": "integer",
            "description": "User ID of the user that has locked the mask line template. If -1, no lock is held.",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "description": "Quickinfo text for the attribute."
          },
          "id": {
            "type": "integer",
            "description": "The ID of the line information.",
            "format": "int32"
          },
          "key": {
            "type": "string",
            "description": "The attribute group name. This member corresponds to \u003ccode\u003eObjKey.name\u003c/code\u003e."
          },
          "max": {
            "type": "integer",
            "description": "The maximum value of this attribute.",
            "format": "int32"
          },
          "min": {
            "type": "integer",
            "description": "The minimum value of this attribute.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The name of the attribute. This value is displayed in the lable before the edit field.\nIt can be translated into\n reps. from the users language: set \u003ccode\u003eSessionOptionsC.TRANSLATE_TERM\u003c/code\u003e."
          },
          "aclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "hidden": {
            "type": "boolean",
            "description": "This value should not be displayed to the user."
          },
          "onlyBuzzwords": {
            "type": "boolean",
            "description": "The index line can only contain buzzwords."
          },
          "postfixAsterix": {
            "type": "boolean",
            "description": "Add \"*\" after index value in search operation."
          },
          "prefixAsterix": {
            "type": "boolean",
            "description": "Add \"*\" before index value in search operation."
          },
          "readOnly": {
            "type": "boolean",
            "description": "This value should not be edited in a user interface (convention). Scripts are allowed to edit the value."
          },
          "type": {
            "type": "integer",
            "description": "The type of the line information. This can be one of the \u003ccode\u003eDocMaskLineC.TYPE_*\u003c/code\u003e constants.",
            "format": "int32"
          },
          "externalData": {
            "type": "string",
            "description": "External data. Can be used to store an arbitary string."
          },
          "important": {
            "type": "boolean",
            "description": "Display index value next to the objects short description.\nThis element has to be interpreted by the client\n application. Indexserver ignores this value."
          },
          "notTokenized": {
            "type": "boolean",
            "description": "Defines whether a index value should be searchable as TOKENIZED or UN_TOKENIZED"
          },
          "excludeFromISearch": {
            "type": "boolean",
            "description": "If true a index value will not be searchable via iSearch. Does not affect the index search."
          },
          "version": {
            "type": "boolean",
            "description": "Display index value in version information dialog when checking in a document.\nThis element has to be interpreted\n by the client application. Indexserver ignores this value."
          },
          "translate": {
            "type": "boolean",
            "description": "Translate index values into or from the users language."
          },
          "acl": {
            "type": "string",
            "description": "Access control for mask line."
          },
          "disableWordWheel": {
            "type": "boolean",
            "description": "Disable word wheel. Clients should not provide a function to list all existing values for this index vlaue.\nThe\n Indexserver does not set or test this value."
          },
          "defaultValue": {
            "type": "string",
            "description": "This value is assigned to the ObjKey.data element for a new Sord object."
          },
          "serverScriptName": {
            "type": "string",
            "description": "A script at the server can serve as the data source of a dynamic keyword list.\nThis value represents the name of\n that script. If the value is not empty, the client can request a list of available input values by calling the\n function {@link IXServicePortIF#checkoutKeywordsDynamic(ClientInfo, KeywordsDynamicInfo)}."
          },
          "inherit": {
            "type": "boolean",
            "description": "Inherit this keywording field to subordinated entries.\n\u003cp\u003e\n This option is used to make sure, that all entries in an archive sub-tree have the same value for this keywording\n field. Thereby the field is identified by its group name ({@link DocMaskLine#key} and {@link ObjKey#name}).\n \u003c/p\u003e\n \u003cp\u003e\n The option corresponds to {@link #inheritFromParent}. As far as {@link #inheritFromParent} is also true in the\n keywording forms definition of all sub-items, the option {@link #inherit} effects the following:\n \u003cul\u003e\n \u003cli\u003eThe value of the keywording field can only be changed in the parent entry of the sub-tree. This is the\n uppermost entry that has the field, which means that the parent\u0027s parent does not have this field.\u003c/li\u003e\n \u003cli\u003eAll sub-items of the parent inherit this value during a background process. The value is forwarded recursively\n to the entire sub-tree under the parent. The recursion stops at items that are assigned to a keywording form\n without this field.\u003c/li\u003e\n \u003cli\u003eWhen a child entry under the parent is updated, this field is always corrected to the parent\u0027s value.\u003c/li\u003e\n \u003cli\u003eFor an object moved into a parent, the object and all sub-items inherit the keywording field.\u003c/li\u003e\n \u003c/ul\u003e\n \u003c/p\u003e\n \u003cp\u003e\n If {@link #inheritFromParent} is false in the keywording form definition of a sub-item, inheritance stops for the\n sub-item. Thus, the index field is treated as a different field although it has the same group name.\n \u003c/p\u003e"
          },
          "inheritFromParent": {
            "type": "boolean",
            "description": "Do not inherit the parent\u0027s value."
          },
          "nameTranslationKey": {
            "type": "string",
            "description": "Translation-keyword for {@link DocMaskLine#name}."
          },
          "commentTranslationKey": {
            "type": "string",
            "description": "Translation-keyword for {@link DocMaskLine#comment}."
          },
          "lockName": {
            "type": "string",
            "description": "Name of the user that has locked the mask line template. Read-only, ignored in checkinDocMaskLineTemplate."
          },
          "validateExpression": {
            "type": "string",
            "description": "RegEx to validate user input for entry."
          },
          "required": {
            "type": "boolean",
            "description": "Entry is required."
          },
          "allowedMaskIdsForKeywordingRelation": {
            "description": "Specifies the {@link DocMask#id} allowed in a {@link DocMaskLineC#TYPE_RELATION}.\nMandatory if DocMaskLine is of type {@link DocMaskLineC#TYPE_RELATION}. Only Sords with the specified\n {@link DocMask#id} can be referenced in this DocMaskLine.",
            "$ref": "#/components/schemas/ListOfInteger"
          }
        },
        "description": "This class contains data for a document mask line template."
      },
      "BRequest_IXServerEvents_onAfterStartWorkFlow": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "workflow": {
            "$ref": "#/components/schemas/WFDiagram"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          }
        }
      },
      "BResult_1696936442": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/AspectAssoc"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "HealthCheckInfoType": {
        "type": "object",
        "properties": {
          "MMA": {
            "description": "Min-Max-Average value. Value: 0 Each entry represents minimum, maximum and average values in an hour.\n-\u003e 3 * 24\n Values a day.\n \n E.g.: 0, memory, 1.0,1.2,1.1, 2.0,2.2,2.1, 3.5,4.0,3.75, ...",
            "$ref": "#/components/schemas/HealthCheckInfoType"
          },
          "CNT": {
            "description": "Counter values. Value: 1 -\u003e 24 Values a day.\nE.g.: 1, login, 12, 25, 32, 34, 48, 59, 62, 69, 80, 87, 90, 102, 106, 110, 112, 130, 142, etc.",
            "$ref": "#/components/schemas/HealthCheckInfoType"
          },
          "MSG": {
            "description": "Message values. Value: 2 -\u003e One message a day... hmm..\nE.g.: 2, version, IX20.00.000.004, ES20.00.000.004, ...",
            "$ref": "#/components/schemas/HealthCheckInfoType"
          }
        },
        "description": "Defines the type of the HealthCheck values. Depending on the type the evaluation differs. Either MMA, CNT or MSG."
      },
      "BResult_1443841819": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NoteTemplate"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "HashTagRelationDataC": {
        "type": "object",
        "properties": {
          "mbHashtagGuid": {
            "type": "string",
            "description": "Member bit: Guid of the HashTag.\nDB column: hashtagguid"
          },
          "lnHashtagGuid": {
            "type": "integer",
            "description": "Column length: Guid of the HashTag.\nDB column: hashtagguid",
            "format": "int32"
          },
          "mbActionGuid": {
            "type": "string",
            "description": "Member bit: Guid of the Action in which the HashTag is used.\nDB column: actionguid"
          },
          "lnActionGuid": {
            "type": "integer",
            "description": "Column length: Guid of the Action in which the HashTag is used.\nDB column: actionguid",
            "format": "int32"
          },
          "mbTStamp": {
            "type": "string",
            "description": "Member bit: Timestamp for replication.\nDB column: tstamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "Column length: Timestamp for replication.\nDB column: tstamp",
            "format": "int32"
          },
          "mbStatus": {
            "type": "string",
            "description": "Member bit: Status.\nDB column: status"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of HashTagRelation\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_deleteSubs": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "deps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubsInfo"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "IntValue": {
        "type": "object",
        "description": "Class to commit a numeric int value to iSearch via QueryFilter."
      },
      "ArrayOfUserTask": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserTask"
        }
      },
      "PreviewImageResult": {
        "type": "object",
        "properties": {
          "urls": {
            "description": "List of URLs pointing to the requested preview images.\nThe URL at the first index in the list points to the\n lexicographic ordered first requested page.",
            "$ref": "#/components/schemas/ListOfString"
          },
          "dpi": {
            "type": "integer",
            "description": "Dots per inch of the requested preview images.\nIf the document source is a multi-page file, this value holds for\n every requested pages.",
            "format": "int32"
          },
          "dimensionWidth": {
            "type": "integer",
            "description": "Width of first page. Use this value to get an idea about the dimensions of the preview image in general.\nWhile this\n value is exact for the first page, following pages may have different dimension (e.g. different orientation, image\n as a whole page in a PDF document, ...)",
            "format": "int32"
          },
          "dimensionHeight": {
            "type": "integer",
            "description": "Height of the first page.\nPlease consider the hints at {@link PreviewImageResult#dimensionWidth} with respect to\n multi-page documents.",
            "format": "int32"
          },
          "progress": {
            "type": "integer",
            "description": "Current progress of processing at the server.\nProcessing is finished at server side when this value equals\n {@link PreviewImageResult#progressMax}.",
            "format": "int32"
          },
          "progressMax": {
            "type": "integer",
            "description": "Estimated value about the workload at the server.\nThere is a chance that the server is finished with the processing\n of the request when progress reaches this estimated value. In repeated requests progresMax can increase in\n comparison to calls in earlier times.",
            "format": "int32"
          },
          "statusMessage": {
            "type": "string",
            "description": "Status message about the current processing of preview images at the server."
          },
          "pages": {
            "type": "integer",
            "description": "Number of pages.",
            "format": "int32"
          }
        }
      },
      "SystemReport": {
        "type": "object",
        "properties": {
          "doccount": {
            "type": "string"
          },
          "docsize": {
            "type": "string"
          },
          "ftsize": {
            "type": "string"
          },
          "previewsize": {
            "type": "string"
          }
        }
      },
      "HealthCheckService": {
        "type": "object"
      },
      "ResolveRightsInfo": {
        "type": "object",
        "description": "Parameter Class for {@link IXServicePortIF#resolveRights(ClientInfo, UserInfo, ResolveRightsInfo)} ."
      },
      "BRequest_IXServicePortIF_getScriptsToDebug": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "UserProfileDataC": {
        "type": "object",
        "properties": {
          "mbUser": {
            "type": "string",
            "description": "DB column: userid"
          },
          "mbKey": {
            "type": "string",
            "description": "DB column: optkey"
          },
          "lnKey": {
            "type": "integer",
            "description": "DB column: optkey",
            "format": "int32"
          },
          "mbValue": {
            "type": "string",
            "description": "DB column: optvalue"
          },
          "lnValue": {
            "type": "integer",
            "description": "DB column: optvalue",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of UserProfileData\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "CountResult": {
        "type": "object",
        "properties": {
          "docCount": {
            "type": "integer",
            "description": "count of the found documents",
            "format": "int32"
          },
          "structCount": {
            "type": "integer",
            "description": "count of the found structures",
            "format": "int32"
          },
          "docAttachCount": {
            "type": "integer",
            "description": "count of the found document attachments",
            "format": "int32"
          },
          "docVersionsCount": {
            "type": "integer",
            "description": "count of the documents in the version history",
            "format": "int32"
          },
          "otherAttachVersionsCount": {
            "type": "integer",
            "description": "count of the other attachment versions",
            "format": "int32"
          },
          "docBytesCount": {
            "type": "string",
            "description": "count of the bytes of the current document version"
          },
          "otherDocVersBytesCount": {
            "type": "string",
            "description": "count of the bytes of other document versions"
          },
          "attBytesCount": {
            "type": "string",
            "description": "count of the bytes of the current attachment version"
          },
          "otherAttVersBytesCount": {
            "type": "string",
            "description": "count of the bytes of other attachment versions"
          }
        },
        "description": "Class for the results of one count process."
      },
      "ESearchParams": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "\u003cp\u003e\nQueryString\n \u003c/p\u003e\n \u003cp\u003e\n Note: Do not escaped any characters, this is done by IX.\n \u003cp\u003e\n \u003cp\u003e\n A PowerSearch is enabled if query starts with \u003ci\u003e\u003d\u003c/i\u003e. In this case, nothing is escaped by IX."
          },
          "searchIn": {
            "type": "string",
            "description": "\u003cp\u003e\nSelect which Information should be searched.\n \u003cp\u003e\n \n \u003cp\u003e\n Example for multiple selection to search in title and fulltext:\u003cbr\u003e\n \u003ccode\u003esearchIn \u003d SearchObjectC.TITLE | SearchObjectC.FULLTEXT\u003c/code\u003e\n \u003cp\u003e"
          },
          "queryOperator": {
            "description": "The QueryOperator is a combination of various QueryFilters to specify in which fields (e.g.\nindex field, sord\n title, ...)",
            "$ref": "#/components/schemas/QueryOperator"
          },
          "inclDeleted": {
            "type": "integer",
            "description": "Define if deleted sords should be included:\n\u003cul\u003e\n \u003cli\u003e0: exclude deleted sords (default).\n \u003cli\u003e1: include deleted sords.\n \u003cli\u003e2: only deleted sords.\n \u003c/ul\u003e",
            "format": "int32"
          }
        },
        "description": "Parameters for iSearch."
      },
      "BRequest_LdapService_createConfig": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_createUser": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "rightsAsUserId": {
            "type": "string"
          }
        }
      },
      "PhysDelDocs": {
        "type": "object",
        "properties": {
          "objId": {
            "type": "integer",
            "description": "DB column: objid",
            "format": "int32"
          }
        },
        "description": "Internal class."
      },
      "BRequest_IXServicePortIF_createWFNode": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "nodeId": {
            "type": "integer",
            "format": "int32"
          },
          "nodeTypeC": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BResult_1537059480": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/KeyInfo"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BResult_2006133032": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFCollectNode"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BackupStatus": {
        "type": "object",
        "properties": {
          "isRunning": {
            "type": "boolean",
            "description": "if the ELOdm backup task is running (the purge task can only run in combination with the backup task)"
          },
          "numberOfDocsCopied": {
            "type": "integer",
            "description": "number of copied documents since start of the backup task",
            "format": "int32"
          },
          "secondsUntilNextCheck": {
            "type": "integer",
            "description": "waiting time in seconds until the next proccessing (when the backup profiles are traversed)",
            "format": "int32"
          },
          "errorMessage": {
            "type": "string",
            "description": "an error message, if an error occured, else an empty String"
          }
        },
        "description": "This class represents the status of the ELOdm backup task"
      },
      "AlertDataC": {
        "type": "object",
        "properties": {
          "mbDest": {
            "type": "string",
            "description": "DB column: destination"
          },
          "mbSource": {
            "type": "string",
            "description": "DB column: source"
          },
          "mbType": {
            "type": "string",
            "description": "DB column: alerttype"
          },
          "mbObjId": {
            "type": "string",
            "description": "DB column: objid"
          },
          "mbExtra1": {
            "type": "string",
            "description": "DB column: extra1"
          },
          "mbExtra2": {
            "type": "string",
            "description": "DB column: extra2"
          },
          "mbMemo": {
            "type": "string",
            "description": "DB column: alertmemo"
          },
          "lnMemo": {
            "type": "integer",
            "description": "DB column: alertmemo",
            "format": "int32"
          },
          "mbTime": {
            "type": "string",
            "description": "DB column: alerttime"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of Alert\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_checkoutMapDomain": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "domainName": {
            "type": "string"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_createSuperiorSubstitution": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "createSuperiorSubstitutionInfo": {
            "$ref": "#/components/schemas/CreateSuperiorSubstitutionInfo"
          }
        }
      },
      "NoteText": {
        "type": "object",
        "properties": {
          "fontInfo": {
            "description": "Font. This member is null for type NoteC.TYPE_ANNOTATION_NOTE.",
            "$ref": "#/components/schemas/FontInfo"
          },
          "text": {
            "type": "string",
            "description": "Stamp text. The maximum length is NoteDataC.lnDesc - 50, if the NoteText object is used in a Note object.\nThe\n length for a text of a NoteTemplate object is defined by NoteTemplateC.lnText"
          }
        },
        "description": "This class conatins additional information for textual notes.\nNoteText objects can be used in NoteTemplate and Note\n objects."
      },
      "WFNodeHistory": {
        "type": "object",
        "properties": {
          "histGuid": {
            "type": "string",
            "description": "GUID of the WorkflowHist object.\nDB column: wfhistguid"
          },
          "flowGuid": {
            "type": "string",
            "description": "GUID of the workflow.\nDB column: wfguid"
          },
          "nodeId": {
            "type": "integer",
            "description": "Node ID.\nDB column: wf_nodeid",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "description": "ID of user who has to process the node. Might be a group ID too. Only valid for person nodes.\nDB column: wf_userid",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "Name of user who has to process the node. Might be a group name too. Only valid for person nodes.\nDB column:\n wf_username"
          },
          "enterDateIso": {
            "type": "string",
            "description": "The node was activated on this date. This member is valid for all node types."
          },
          "exitDateIso": {
            "type": "string",
            "description": "The node was exited/completed on this date. This member is valid for all node types."
          },
          "succ_0": {
            "type": "integer",
            "description": "Successor node(s) succ_0 ...\nSucc 19 DB column: wf_succ_0",
            "format": "int32"
          },
          "succ_1": {
            "type": "integer",
            "description": "DB column: wf_succ_1",
            "format": "int32"
          },
          "succ_2": {
            "type": "integer",
            "description": "DB column: wf_succ_2",
            "format": "int32"
          },
          "succ_3": {
            "type": "integer",
            "description": "DB column: wf_succ_3",
            "format": "int32"
          },
          "succ_4": {
            "type": "integer",
            "description": "DB column: wf_succ_4",
            "format": "int32"
          },
          "succ_5": {
            "type": "integer",
            "description": "DB column: wf_succ_5",
            "format": "int32"
          },
          "succ_6": {
            "type": "integer",
            "description": "DB column: wf_succ_6",
            "format": "int32"
          },
          "succ_7": {
            "type": "integer",
            "description": "DB column: wf_succ_7",
            "format": "int32"
          },
          "succ_8": {
            "type": "integer",
            "description": "DB column: wf_succ_8",
            "format": "int32"
          },
          "succ_9": {
            "type": "integer",
            "description": "DB column: wf_succ_9",
            "format": "int32"
          },
          "succ_10": {
            "type": "integer",
            "description": "DB column: wf_succ_10",
            "format": "int32"
          },
          "succ_11": {
            "type": "integer",
            "description": "DB column: wf_succ_11",
            "format": "int32"
          },
          "succ_12": {
            "type": "integer",
            "description": "DB column: wf_succ_12",
            "format": "int32"
          },
          "succ_13": {
            "type": "integer",
            "description": "DB column: wf_succ_13",
            "format": "int32"
          },
          "succ_14": {
            "type": "integer",
            "description": "DB column: wf_succ_14",
            "format": "int32"
          },
          "succ_15": {
            "type": "integer",
            "description": "DB column: wf_succ_15",
            "format": "int32"
          },
          "succ_16": {
            "type": "integer",
            "description": "DB column: wf_succ_16",
            "format": "int32"
          },
          "succ_17": {
            "type": "integer",
            "description": "DB column: wf_succ_17",
            "format": "int32"
          },
          "succ_18": {
            "type": "integer",
            "description": "DB column: wf_succ_18",
            "format": "int32"
          },
          "succ_19": {
            "type": "integer",
            "description": "DB column: wf_succ_19",
            "format": "int32"
          }
        },
        "description": "Version history for a workflow node. A version history is created while leaving a workflow node.\n\u003cp\u003e\n Copyright: Copyright (c) 2015\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_checkoutSubs": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userId": {
            "type": "string"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "FindSubscriptionInfo": {
        "type": "object",
        "properties": {
          "sordZ": {
            "description": "Element selector for Sord objects. If this member is not null or empty, FindResult.\nsords contains the Sord objects\n associated to FindResult.subscriptions.",
            "$ref": "#/components/schemas/SordZ"
          },
          "feedZ": {
            "description": "Element selector for Feed objects. If this member is not null or empty, FindResult.\nfeeds contains the Feed objects\n associated to FindResult.subscriptions.",
            "$ref": "#/components/schemas/FeedZ"
          },
          "userId": {
            "type": "string",
            "description": "Find subscriptions of this user. If this member is empty, the current users subscriptions are returned.\nThis member\n is ignored for non-administrators. User ID, GUID or Name is accepted."
          }
        },
        "description": "Find criteria for function findFirstSubscriptions."
      },
      "EditInfoC": {
        "type": "object",
        "properties": {
          "mbMaskNames": {
            "type": "string",
            "description": "Mask names."
          },
          "mbPathNames": {
            "type": "string",
            "description": "Path names."
          },
          "mbMarkerNames": {
            "type": "string",
            "description": "Marker names (colors)."
          },
          "mbDocTemplates": {
            "type": "string",
            "description": "RESERVED. Document templates."
          },
          "mbMask": {
            "type": "string",
            "description": "Complete data of the mask of the specified object."
          },
          "mbDocumentMembers": {
            "type": "string",
            "description": "Information to download the document of the archive entry."
          },
          "mbAttachmentMembers": {
            "type": "string",
            "description": "Information to download the attachment of the archive entry."
          },
          "mbSignatureMembers": {
            "type": "string",
            "description": "Information to download the signature of the archive entry."
          },
          "mbReplNames": {
            "type": "string",
            "description": "Names of all replication sets."
          },
          "mbSordTypesJPG": {
            "type": "string",
            "description": "List of Sord types (labels, icons, extensions corresponding to Sord.type). Icon images are returned in JPEG format."
          },
          "mbNoteMembers": {
            "type": "string",
            "description": "Return notes in checkoutSord and checkoutDoc."
          },
          "mbKeywordMembers": {
            "type": "string",
            "description": "Return keywords in checkoutSord and checkoutDoc."
          },
          "mbPreviewMembers": {
            "type": "string",
            "description": "Return document preview in checkoutDoc"
          },
          "mbPhysPath": {
            "type": "string",
            "description": "Return the physical path of the document in checkoutDoc. This requires a request to Document Mangager."
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All members: indexing information + basic data + document + attachment + signature"
          },
          "mbAllMembersLazy": {
            "type": "string",
            "description": "As {@link #mbAllMembers} but provides {@link EditInfo#mask}, {@link EditInfo#sordTypes} and\n{@link EditInfo#keywords} for lazy loading."
          },
          "mbSord": {
            "description": "Sord object with all members.",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbSordContentStream": {
            "description": "Sord object with all members, work version can be read from an InputStream.\nFile content is supplied in\n {@link Sord#docVersion}, {@link FileData#stream}.",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbSordLean": {
            "description": "Sord object with lean members.",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbSordDoc": {
            "description": "Sord object with SordC.mbAll, document versions, signatures.",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbSordDocAtt": {
            "description": "Sord object with SordC.mbAll, document versions, attachment versions, signatures.",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbSordDocAttContentStream": {
            "description": "Sord object with SordC.mbAll, document versions, attachment versions, signatures.\nFile contents are supplied in\n {@link FileData#stream}.",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbSordDocSmallContent": {
            "description": "Includes mbDocumentMembers, mbSignatureMembers, SordC.\nmbCheckout",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbSordPreviewSmallContent": {
            "description": "Includes mbDocumentMembers|mbSignatureMembers, SordC.\nmbCheckoutPreview",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbDocument": {
            "description": "Document version(s) and signature, no index information",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbAttachment": {
            "description": "Attachment version(s), no index information",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbAll": {
            "description": "All members without mbSmallDocumentContent",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbBasicData": {
            "description": "Arrays of mask, marker, repl, path names",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbOnlyLock": {
            "description": "Lock or unlock object, do not read or write any data.",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbNotes": {
            "description": "Return only notes.",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbSordNotes": {
            "description": "Return all Sord members and notes.",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbOnlyId": {
            "description": "Read only Sord ID and GUID.",
            "$ref": "#/components/schemas/EditInfoZ"
          }
        },
        "description": "\u003cp\u003e\nConstants to read data for editing the indexing information of an archive entry\n \u003c/p\u003e"
      },
      "BResult_545905411": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/LicenseResult"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BResult_810727301": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/NotifyServerResult"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_FeedService_findFirstNotification": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindNotificationInfo"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ArrayOfActivityProject": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ActivityProject"
        }
      },
      "BRequest_IXServerEvents_onAfterCheckinActivity": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "act": {
            "$ref": "#/components/schemas/Activity"
          },
          "isNew": {
            "type": "boolean"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "StartWorkflowInfo": {
        "type": "object",
        "properties": {
          "templFlowId": {
            "type": "string",
            "description": "Name or ID of the workflow template."
          },
          "flowName": {
            "type": "string",
            "description": "Name of the new workflow."
          },
          "flowOwner": {
            "type": "string",
            "description": "The flow owner ID."
          }
        },
        "description": "This class is used as a parameter in the function\n{@link IXServicePortIF#startWorkFlow2(ClientInfo, String, StartWorkflowInfo)}."
      },
      "DateValue": {
        "type": "object"
      },
      "ExportExtOptions": {
        "type": "object",
        "properties": {
          "srcType": {
            "type": "integer",
            "description": "Type of the export\u0027s source (archive or search results)",
            "format": "int32"
          },
          "srcList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "searchId": {
            "type": "string",
            "description": "If the source is the search and if all results have to be exported, then this option must be set with the search\u0027s\nID."
          },
          "exportDocs": {
            "type": "boolean"
          },
          "exportDocsVersions": {
            "type": "boolean"
          },
          "exportAttachments": {
            "type": "boolean"
          },
          "exportKeywords": {
            "type": "boolean"
          },
          "exportReminders": {
            "type": "boolean"
          },
          "replaceRefWithOriginal": {
            "type": "boolean"
          },
          "exportEncrytedDocs": {
            "type": "boolean",
            "description": "Export encrypted documents too?"
          },
          "exportStructure": {
            "type": "boolean",
            "description": "Export documents to filesystem structure.\nIf this member is false, only documents are exported and they are all\n located at the root export folder."
          },
          "ignoreEmptyFolders": {
            "type": "boolean",
            "description": "Do not export empty branches (without any document)."
          },
          "dateStartIso": {
            "type": "string",
            "description": "Beginning date for filter in ISO format (null for no date)"
          },
          "dateEndIso": {
            "type": "string",
            "description": "Ending date for filter in ISO format (null for no date)"
          },
          "dateType": {
            "type": "integer",
            "description": "Which type of date must be considered?",
            "format": "int32"
          },
          "masksList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Options for extended export."
      },
      "BRequest_IXServicePortIF_getContextTerms": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindInfo"
          },
          "field": {
            "type": "string"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BRequest_FeedNotification_updateAction": {
        "type": "object",
        "properties": {
          "action": {
            "$ref": "#/components/schemas/Action"
          }
        }
      },
      "EloIxOptDataC": {
        "type": "object",
        "properties": {
          "mbName": {
            "type": "string",
            "description": "DB column: optname"
          },
          "lnName": {
            "type": "integer",
            "description": "DB column: optname",
            "format": "int32"
          },
          "mbIxId": {
            "type": "string",
            "description": "DB column: ixid"
          },
          "lnIxId": {
            "type": "integer",
            "description": "DB column: ixid",
            "format": "int32"
          },
          "mbValue": {
            "type": "string",
            "description": "DB column: optval"
          },
          "lnValue": {
            "type": "integer",
            "description": "DB column: optval",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of EloIxOpt\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "SearchTermsC": {
        "type": "object",
        "properties": {
          "TERMS": {
            "type": "integer",
            "format": "int32"
          },
          "SYNONYMS": {
            "type": "integer",
            "format": "int32"
          },
          "CORRECTION": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserInfoC": {
        "type": "object",
        "properties": {
          "MAX_USERPROP": {
            "type": "integer",
            "description": "Maximum number of user properties.",
            "format": "int32"
          },
          "PROP_USERDEFINED_1": {
            "type": "integer",
            "description": "\u003cp\u003e\nUser property defined by user\n \u003c/p\u003e\n \u003cp\u003e\n Constant to access array {@link UserInfo#userProps}.\n \u003c/p\u003e",
            "format": "int32"
          },
          "PROP_USERDEFINED_2": {
            "type": "integer",
            "description": "\u003cp\u003e\nUser property defined by user\n \u003c/p\u003e\n \u003cp\u003e\n Constant to access array {@link UserInfo#userProps}.\n \u003c/p\u003e",
            "format": "int32"
          },
          "PROP_USERDEFINED_3": {
            "type": "integer",
            "description": "\u003cp\u003e\nUser property defined by user\n \u003c/p\u003e\n \u003cp\u003e\n Constant to access array {@link UserInfo#userProps}.\n \u003c/p\u003e",
            "format": "int32"
          },
          "PROP_USERDEFINED_4": {
            "type": "integer",
            "description": "\u003cp\u003e\nUser property defined by user\n \u003c/p\u003e\n \u003cp\u003e\n Constant to access array {@link UserInfo#userProps}.\n \u003c/p\u003e",
            "format": "int32"
          },
          "PROP_USERDEFINED_5": {
            "type": "integer",
            "description": "\u003cp\u003e\nUser property defined by user\n \u003c/p\u003e\n \u003cp\u003e\n Constant to access array {@link UserInfo#userProps}.\n \u003c/p\u003e",
            "format": "int32"
          },
          "MAX_KEY": {
            "type": "integer",
            "description": "Maximum number of keys.",
            "format": "int32"
          },
          "MAX_USERS": {
            "type": "integer",
            "description": "Maximale number of users and groups.",
            "format": "int32"
          },
          "MAX_GROUPS": {
            "type": "integer",
            "description": "Maximum number of groups per user.",
            "format": "int32"
          },
          "MAX_PERSISTENT_GROUPS": {
            "type": "integer",
            "description": "Maximum number of persistent groups per user.",
            "format": "int32"
          },
          "TYPE_USER": {
            "type": "integer",
            "description": "Type value for an user.",
            "format": "int32"
          },
          "TYPE_GROUP": {
            "type": "integer",
            "description": "Type value for a group.",
            "format": "int32"
          },
          "TYPE_USERID_OWNER": {
            "type": "integer",
            "description": "Type value for the current user",
            "format": "int32"
          },
          "MAX_NAME": {
            "type": "integer",
            "format": "int32"
          },
          "PROP_NAME_OS": {
            "type": "integer",
            "format": "int32"
          },
          "PROP_NAME_EMAIL": {
            "type": "integer",
            "format": "int32"
          },
          "PROP_ACTION": {
            "type": "integer",
            "description": "This user property is used to trigger actions in the client application.\nThe value of the property is found at\n UserInfo.userProps[UserInfoC.PROP_ACTION]. If the value contains the String\n {@link #PROP_ACTION_USER_SHOULD_CHANGE_PASSWORD} the user should change the password . If the value contains the\n String {@link #PROP_ACTION_USER_MUST_CHANGE_PASSWORD}, the user must change the password. If the value contains the\n String {@link #PROP_ACTION_END_PASSWORD_DATE}, the password expires at the ISO date defined by the next 10\n characters. E.g. \"EX20120405\" means that the password expires at April 5, 2012.",
            "format": "int32"
          },
          "PROP_ACTION_USER_SHOULD_CHANGE_PASSWORD": {
            "type": "string",
            "description": "The user should change the password."
          },
          "PROP_ACTION_USER_MUST_CHANGE_PASSWORD": {
            "type": "string",
            "description": "The user must change the password."
          },
          "PROP_ACTION_END_PASSWORD_DATE": {
            "type": "string",
            "description": "The password expires."
          },
          "PROP_GUID": {
            "type": "integer",
            "description": "User property GUID.",
            "format": "int32"
          },
          "lnName": {
            "type": "integer",
            "description": "Maximum user name length",
            "format": "int32"
          },
          "lnPwd": {
            "type": "integer",
            "description": "Maximum user password length",
            "format": "int32"
          },
          "lnDesc": {
            "type": "integer",
            "description": "Maximum user desc length",
            "format": "int32"
          },
          "lnUserProp": {
            "type": "integer",
            "description": "Maximum user property length",
            "format": "int32"
          },
          "lnLdapPropKey": {
            "type": "integer",
            "description": "Maximum length of LDAP property key.",
            "format": "int32"
          },
          "lnLdapPropValue": {
            "type": "integer",
            "description": "Maximum length of LDAP property value.",
            "format": "int32"
          },
          "ID_EVERYONE_GROUP": {
            "type": "integer",
            "description": "Every user is in the group \"Everyone\". This is the internal ID for this group.",
            "format": "int32"
          },
          "ID_ADMINISTRATOR": {
            "type": "integer",
            "description": "User ID of main administrator.",
            "format": "int32"
          },
          "ID_ADMINISTRATORS_GROUP": {
            "type": "integer",
            "description": "Group ID of administrators.",
            "format": "int32"
          },
          "GUID_EVERYONE_GROUP": {
            "type": "string",
            "description": "GUID of group \"Everybody\""
          },
          "GUID_ADMINISTRATOR": {
            "type": "string",
            "description": "GUID of main administrator"
          },
          "GUID_ELOSERVICE": {
            "type": "string",
            "description": "GUID of the default service user."
          },
          "PWD_VALUE_IGNORE": {
            "type": "string",
            "description": "This value can be set for UserInfo.\npwd to"
          },
          "LDAP_PROP_CN": {
            "type": "string",
            "description": "Common name"
          },
          "LDAP_PROP_DISTINGUISHED_NAME": {
            "type": "string",
            "description": "Distinguished name"
          },
          "LDAP_PROP_DISPLAY_NAME": {
            "type": "string",
            "description": "Display name"
          },
          "LDAP_PROP_NAME": {
            "type": "string",
            "description": "Name"
          },
          "LDAP_PROP_PROXY_ADDRESSES": {
            "type": "string",
            "description": "Proxy addresses"
          },
          "LDAP_PROP_USER_ACCOUNT_CONTROL": {
            "type": "string",
            "description": "Flags that control the behavior of the user account"
          },
          "LDAP_PROP_SAM_ACCOUNT_NAME": {
            "type": "string",
            "description": "NT account name"
          },
          "LDAP_PROP_SAM_ACCOUNT_TYPE": {
            "type": "string",
            "description": "Contains information about every account type object"
          },
          "LDAP_PROP_USER_PRINCIPAL_NAME": {
            "type": "string",
            "description": "User principal name"
          },
          "LDAP_PROP_OBJECT_CATEGORY": {
            "type": "string",
            "description": "Object category"
          },
          "LDAP_PROP_MAIL_NICK_NAME": {
            "type": "string",
            "description": "Mail nick name"
          },
          "LDAP_PROP_OBJECT_GUID": {
            "type": "string",
            "description": "The unique identifier for an object"
          },
          "LDAP_PROP_OBJECT_SID": {
            "type": "string",
            "description": "A binary value that specifies the security identifier (SID) of the user."
          },
          "LDAP_PROP_MS_EXCHANGE_MAILBOX_GUID": {
            "type": "string",
            "description": "Mailbox globally unique identifier"
          },
          "LDAP_PROP_GROUP_TYPE": {
            "type": "string",
            "description": "Group type"
          },
          "LDAP_PROP_FQDN": {
            "type": "string",
            "description": "Full Qualified Domain Name"
          },
          "LDAP_PROP_ONLINE": {
            "type": "string",
            "description": "Online"
          },
          "LDAP_PROP_OBJECT_CLASS": {
            "type": "string",
            "description": "Object class"
          },
          "LDAP_PROP_MEMBER_OF": {
            "type": "string",
            "description": "Member of"
          },
          "LDAP_PROP_LEGACY_EXCHANGE_DN": {
            "type": "string",
            "description": "LegacyExchangeDN"
          },
          "LDAP_PROP_MAIL": {
            "type": "string",
            "description": "Mail"
          },
          "LDAP_PROP_EXCH_HIDE_FROM_ADDRESS_LISTS": {
            "type": "string",
            "description": "msExchHideFromAddressLists"
          },
          "LDAP_PROP_EXCH_RECIPIENT_TYPE_DETAILS": {
            "type": "string",
            "description": "msExchRecipientTypeDetails"
          },
          "LDAP_PROP_EXCH_RECIPIENT_DISPLAY_TYPE": {
            "type": "string",
            "description": "msExchRecipientDisplayType"
          },
          "LDAP_PROP_EXCH_DELEGATE_LIST_LINK": {
            "type": "string",
            "description": "msExchDelegateListLink"
          },
          "LDAP_PROP_EXCH_PUBFOLDER_MAILBOX": {
            "type": "string",
            "description": "msExchPublicFolderMailbox"
          },
          "LDAP_PROP_ADMIN_DISPLAY_NAME": {
            "type": "string",
            "description": "adminDisplayName"
          },
          "LDAP_PROP_EXCH_JOURNAL_RCPT": {
            "type": "string",
            "description": "msExchMessageJournalRecipient"
          },
          "LDAP_PROP_EXCH_OWNING_SERVER": {
            "type": "string",
            "description": "msExchOwningServer"
          },
          "LDAP_PROP_ONLINE_MAIL": {
            "type": "string",
            "description": "PrimarySmtpAddress"
          },
          "LDAP_PROP_ONLINE_RECIPIENT_TYPE_DETAILS": {
            "type": "string",
            "description": "RecipientTypeDetails"
          },
          "LDAP_PROP_ONLINE_GUID": {
            "type": "string",
            "description": "Guid"
          },
          "LDAP_PROP_ONLINE_MAILBOX_ENABLED": {
            "type": "string",
            "description": "IsMailboxEnabled"
          },
          "LDAP_KEY_CN": {
            "type": "string",
            "description": "Common name. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_DISTINGUISHED_NAME": {
            "type": "string",
            "description": "Distinguished name. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_DISPLAY_NAME": {
            "type": "string",
            "description": "Display name. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_NAME": {
            "type": "string",
            "description": "Name. Key to access the map UserInfo.ldapProperties."
          },
          "LDAP_KEY_PROXY_ADDRESSES": {
            "type": "string",
            "description": "Proxy addresses. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_USER_ACCOUNT_CONTROL": {
            "type": "string",
            "description": "Flags that control the behavior of the user account. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_SAM_ACCOUNT_NAME": {
            "type": "string",
            "description": "NT account name. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_SAM_ACCOUNT_TYPE": {
            "type": "string",
            "description": "Contains information about every account type object. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_USER_PRINCIPAL_NAME": {
            "type": "string",
            "description": "User principal name. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_OBJECT_CATEGORY": {
            "type": "string",
            "description": "Object category. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_MAIL_NICK_NAME": {
            "type": "string",
            "description": "Mail nick name. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_OBJECT_GUID": {
            "type": "string",
            "description": "The unique identifier for an object. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_OBJECT_SID": {
            "type": "string",
            "description": "A binary value that specifies the security identifier (SID) of the user.\nKey to access the map\n UserInfo.ldapProperties"
          },
          "LDAP_KEY_MS_EXCHANGE_MAILBOX_GUID": {
            "type": "string",
            "description": "Mailbox globally unique identifier. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_GROUP_TYPE": {
            "type": "string",
            "description": "Group type. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_FQDN": {
            "type": "string",
            "description": "Full Qualified Domain Name. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_ONLINE": {
            "type": "string",
            "description": "Online. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_OBJECT_CLASS": {
            "type": "string",
            "description": "Object class. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_MEMBER_OF": {
            "type": "string",
            "description": "Member of. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_LEGACY_EXCHANGE_DN": {
            "type": "string",
            "description": "LegacyExchangeDN. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_MAIL": {
            "type": "string",
            "description": "Mail. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_EXCH_HIDE_FROM_ADDRESS_LISTS": {
            "type": "string",
            "description": "msExchHideFromAddressLists. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_EXCH_RECIPIENT_TYPE_DETAILS": {
            "type": "string",
            "description": "msExchRecipientTypeDetails. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_EXCH_RECIPIENT_DISPLAY_TYPE": {
            "type": "string",
            "description": "msExchRecipientDisplayType. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_EXCH_DELEGATE_LIST_LINK": {
            "type": "string",
            "description": "msExchDelegateListLink. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_EXCH_PUBFOLDER_MAILBOX": {
            "type": "string",
            "description": "msExchPublicFolderMailbox. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_ADMIN_DISPLAY_NAME": {
            "type": "string",
            "description": "adminDisplayName. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_EXCH_JOURNAL_RCPT": {
            "type": "string",
            "description": "msExchMessageJournalRecipient. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_EXCH_OWNING_SERVER": {
            "type": "string",
            "description": "msExchOwningServer. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_ONLINE_MAIL": {
            "type": "string",
            "description": "PrimarySmtpAddress. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_ONLINE_RECIPIENT_TYPE_DETAILS": {
            "type": "string",
            "description": "RecipientTypeDetails. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_ONLINE_GUID": {
            "type": "string",
            "description": "Guid. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_ONLINE_MAILBOX_ENABLED": {
            "type": "string",
            "description": "IsMailboxEnabled. Key to access the map UserInfo.\nldapProperties"
          },
          "LDAP_KEY_DOMAIN": {
            "type": "string",
            "description": "Domain."
          },
          "UNLOCK_ARCHIVE": {
            "type": "string",
            "description": "Pass this value to unlock the archive."
          },
          "LDAP_KEY_MANAGER": {
            "type": "string",
            "description": "Manager."
          },
          "mbId": {
            "type": "string",
            "description": "Member bit {@link UserInfo#id}"
          },
          "mbParent": {
            "type": "string",
            "description": "Member bit {@link UserInfo#parent}"
          },
          "mbType": {
            "type": "string",
            "description": "Member bit {@link UserInfo#type}"
          },
          "mbName": {
            "type": "string",
            "description": "Member bit {@link UserInfo#name}"
          },
          "mbDesc": {
            "type": "string",
            "description": "Member bit {@link UserInfo#desc}"
          },
          "mbFlags": {
            "type": "string",
            "description": "Member bit {@link UserInfo#flags}"
          },
          "mbPwd": {
            "type": "string",
            "description": "Member bit {@link UserInfo#pwd}"
          },
          "mbKeylist": {
            "type": "string",
            "description": "Member bit {@link UserInfo#keylist}"
          },
          "mbGroupList": {
            "type": "string",
            "description": "Member bit {@link UserInfo#groupList}"
          },
          "mbUserProps": {
            "type": "string",
            "description": "Member bit {@link UserInfo#userProps}"
          },
          "mbSessions": {
            "type": "string",
            "description": "Member bit {@link UserInfo#sessions}"
          },
          "mbGuid": {
            "type": "string",
            "description": "Member bit {@link UserInfo#guid}"
          },
          "mbLastLoginIso": {
            "type": "string",
            "description": "Member bit {@link UserInfo#lastLoginIso}"
          },
          "mbSuperiorId": {
            "type": "string",
            "description": "Member bit {@link UserInfo#superiorId}"
          },
          "mbFlags2": {
            "type": "string",
            "description": "Member bit {@link UserInfo#flags2}"
          },
          "mbOrgUnitIds": {
            "type": "string",
            "description": "Member bit {@link UserInfo#orgUnitIds}"
          },
          "mbTStamp": {
            "type": "string",
            "description": "Member bit {@link UserInfo#tStamp}"
          },
          "mbLdapProperties": {
            "type": "string",
            "description": "Member bit {@link UserInfo#ldapProperties}"
          },
          "mbTStampSync": {
            "type": "string",
            "description": "Member bit {@link UserInfo#tStampSync}"
          },
          "mbPackageName": {
            "type": "string",
            "description": "Member bit {@link UserInfo#packageName}"
          }
        },
        "description": "\u003cp\u003e\nConstants related to user information.\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "EActionType": {
        "type": "object",
        "properties": {
          "Undefined": {
            "description": "Reserved.",
            "$ref": "#/components/schemas/EActionType"
          },
          "FeedCreated": {
            "description": "Reserved.",
            "$ref": "#/components/schemas/EActionType"
          },
          "UserComment": {
            "description": "Comment created by a user.",
            "$ref": "#/components/schemas/EActionType"
          },
          "AutoComment": {
            "description": "Comment created by a program or script.",
            "$ref": "#/components/schemas/EActionType"
          },
          "VersionCreated": {
            "description": "Document version created.\nAn action of this type is automatically created by the system, if a new document version\n is checked in and this version is not set as the work version.",
            "$ref": "#/components/schemas/EActionType"
          },
          "WorkVersionCreated": {
            "description": "Document work version created.\nAn action of this type is automatically created by the system, if a new version of a\n non-release document is checked in and this version is set as the work version.",
            "$ref": "#/components/schemas/EActionType"
          },
          "WorkVersionSwitched": {
            "description": "Document work version switched.\nAn action of this type is automatically created by the system, if the work version\n of a non-release document is set and no content is uploaded.",
            "$ref": "#/components/schemas/EActionType"
          },
          "Released": {
            "description": "Document work version switched.\nAn action of this type is automatically created by the system, if the work version\n of a release document is set.",
            "$ref": "#/components/schemas/EActionType"
          },
          "SordCreated": {
            "description": "Sord created. An action of this type is automatically created by the system when the feed is initialized.\nThe\n create date is set to the archiving date. For documents, member {@link Action#docVersion} represents the first\n version.",
            "$ref": "#/components/schemas/EActionType"
          },
          "Survey": {
            "description": "Feed Survey. An action of this type represents a survey.",
            "$ref": "#/components/schemas/EActionType"
          }
        },
        "description": "Types of document feed entries."
      },
      "EditInfoZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from the EditInfoC class."
          },
          "sordZ": {
            "description": "SordZ object to control the SordC elements returned.",
            "$ref": "#/components/schemas/SordZ"
          }
        },
        "description": "This class encapsulates the constants of the EditInfoC class.\nEditInfo also returns a Sord object and a SordZ member\n is included to control the Sord data returned.\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_SystemInformation_licenseReport": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "si": {
            "$ref": "#/components/schemas/SystemInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_moveDocuments": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "moveDocumentsInfo": {
            "$ref": "#/components/schemas/MoveDocumentsInfo"
          }
        }
      },
      "FindTasksInfo": {
        "type": "object",
        "properties": {
          "endDateIso": {
            "type": "string",
            "description": "Collect tasks up to this date."
          },
          "highestPriority": {
            "type": "integer",
            "description": "Collect tasks of this or lower priority.",
            "format": "int32"
          },
          "inclActivities": {
            "type": "boolean",
            "description": "Collect activities."
          },
          "inclDeputy": {
            "type": "boolean",
            "description": "\u003cp\u003e\nCollect tasks received from users for which the current user is a substitute.\n \u003c/p\u003e\n \u003cp\u003e\n ELO 12+: {@link #inclGroup} must be set to \u003ccode\u003etrue\u003c/code\u003e to enable this option.\n \u003c/p\u003e"
          },
          "inclGroup": {
            "type": "boolean",
            "description": "Collect tasks of the users groups."
          },
          "inclReminders": {
            "type": "boolean",
            "description": "Collect reminders."
          },
          "inclWorkflows": {
            "type": "boolean",
            "description": "Collect workflows."
          },
          "lowestPriority": {
            "type": "integer",
            "description": "Collect tasks of this or higher priority.",
            "format": "int32"
          },
          "objId": {
            "type": "string",
            "description": "Collect tasks for this Sord (ID or GUID)."
          },
          "sortOrder": {
            "description": "Controls the sort order or returned arrays. If null, PRIORITY_DATE_NAME is used.",
            "$ref": "#/components/schemas/UserTaskSortOrderZ"
          },
          "startDateIso": {
            "type": "string",
            "description": "Collect tasks beginning at this date."
          },
          "overTimeLimit": {
            "type": "boolean",
            "description": "Collect nodes that exceeded the time limit.\nWorkflow only"
          },
          "inclOverTimeForSuperior": {
            "type": "boolean",
            "description": "Collect tasks for a superior as defined in the escalation options.\nWhen a workflow task exceeds its time limit, and\n the current user is assigned in the time limit options of this task, then the user receives this task from\n findFirstTasks/findNextTasks although she or he is not the owner of the task. If an entire workflow is over time,\n the user receives the start node of the workflow. This option applies to workflow tasks only."
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "inclDeleted": {
            "type": "boolean",
            "description": "Select tasks for deleted folders and documents too."
          },
          "allUsers": {
            "type": "boolean",
            "description": "Collect tasks from all users.\nThis member is ignored, if the current user does not have administrator privileges\n {@link AccessC#FLAG_ADMIN}. If set to true, element {@link #userIds} is ignored and the tasks of all users are\n selected."
          },
          "sordZ": {
            "description": "Return the associated Sord objects to the selected Tasks.\nIf this member is not null, the Sord objects to the\n selected Tasks are read from the database. The Sord objects can be found in {@link FindResult#sords} and in each\n {@link UserTask#sord} of the array {@link FindResult#tasks}. The Sord objects contain the elements defined in this\n element selector as valid members.",
            "$ref": "#/components/schemas/SordZ"
          },
          "taskName": {
            "type": "string",
            "description": "Select tasks with this name. The task name of a Reminder is Reminder.name.\nThe task name of an Activity is\n Activity.name. The task name of a workflow node is WFNode.name and WFCollectNode.nodeName. This element can contain\n wildcard characters. The underlying database column is by default not indexed. Thus, selecting only by taskName\n will result in a full table scan."
          },
          "updateInUseDate": {
            "type": "boolean",
            "description": "Update WFNode.inUseDateIso for selected tasks."
          },
          "inclActivityTypes": {
            "description": "Only select activities of the given types",
            "$ref": "#/components/schemas/ListOfString"
          },
          "inclHidden": {
            "type": "boolean",
            "description": "Inlcude hidden tasks. Currently this only affects workflows."
          },
          "timeLimitBias": {
            "type": "integer",
            "description": "Time limit bias. This value added to each {@link WFNode#timeLimit} before evaluating whether the node is over time.\nIt is measured in minutes. Indexserver uses a timeLimitBias of 1min when looking for over-timed nodes to be\n forwarded automatically through a {@link WFNodeMatrixC#IF_OVERTIME} edge.",
            "format": "int32"
          },
          "findResultAccessMode": {
            "description": "Describes how the client application will access the results.",
            "$ref": "#/components/schemas/FindResultAccessMode"
          }
        },
        "description": "This class contains the search criteria that are required for locating a task (reminders, workflow tasks or\nactivity)."
      },
      "BRequest_IXServicePortIF_findNextTranslateTerms": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "searchId": {
            "type": "string"
          },
          "idx": {
            "type": "integer",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BRequest_IXServicePortIF_testAdapter": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "fn": {
            "type": "string"
          },
          "params": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OcrRect": {
        "type": "object",
        "properties": {
          "left": {
            "type": "integer",
            "format": "int32"
          },
          "top": {
            "type": "integer",
            "format": "int32"
          },
          "right": {
            "type": "integer",
            "format": "int32"
          },
          "bottom": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "This class contains the coordinates of a rectangle and is used by the {@link OcrInfoRecognizeFile} class."
      },
      "BRequest_IXServicePortIF_checkinKeywordList": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "kwList": {
            "$ref": "#/components/schemas/KeywordList"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "CompletionOptions": {
        "type": "object",
        "properties": {
          "completionField": {
            "description": "\u003cp\u003e\nDefines field to retrieve completion.\n \u003c/p\u003e\n \u003cp\u003e\n Submit text to get completion for by \u003ccode\u003ecompletionField.value\u003c/code\u003e\n \u003c/p\u003e\n \u003cp\u003e\n Additionally, a query and queryOperator can be added via ESearchParams.\n \u003c/p\u003e\n \u003cp\u003e\n \u003ci\u003eNote: Currently, it\u0027s only possible to return completion suggestions for title and indexfields\u003c/i\u003e\n \u003c/p\u003e",
            "$ref": "#/components/schemas/QueryFilter"
          },
          "returnType": {
            "description": "\u003cp\u003e\nDefines type (tokenized/ not tokenized) of returned values.\n \u003c/p\u003e\n \u003cnote\u003eIf null, \u003ccode\u003eFieldTypeC.tokenized\u003c/code\u003e is used as default value.",
            "$ref": "#/components/schemas/FieldTypeE"
          }
        },
        "description": "Use this class if a completion should be retrieved by\n{@link de.elo.ix.client.IXServicePortIF#findCompletion(de.elo.ix.client.ClientInfo, de.elo.ix.client.FindInfo, int)}.\u003cbr\u003e\n Deliver text to complete in {@link de.elo.ix.client.esearch.ESearchParams#query}."
      },
      "ObjHistKeyC": {
        "type": "object",
        "properties": {
          "mbHistGuid": {
            "type": "string",
            "description": "Member bit: Serialisation version ID DB column: objhistguid"
          },
          "lnHistGuid": {
            "type": "integer",
            "description": "Column length: Serialisation version ID DB column: objhistguid",
            "format": "int32"
          },
          "mbKeyNo": {
            "type": "string",
            "description": "DB column: okeyno"
          },
          "mbKeyName": {
            "type": "string",
            "description": "DB column: okeyname"
          },
          "lnKeyName": {
            "type": "integer",
            "description": "DB column: okeyname",
            "format": "int32"
          },
          "mbKeyData": {
            "type": "string",
            "description": "DB column: okeydata"
          },
          "lnKeyData": {
            "type": "integer",
            "description": "DB column: okeydata",
            "format": "int32"
          },
          "mbKeyDataDesc": {
            "type": "string",
            "description": "Member bit: Internal helper column for memo text.\nDB column: objdesc"
          },
          "lnKeyDataDesc": {
            "type": "integer",
            "description": "Column length: Internal helper column for memo text.\nDB column: objdesc",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of SordHistKey\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "IXServerEventsContext": {
        "type": "object",
        "properties": {
          "ADMIN_CONTEXT": {
            "description": "This constant can be used in plugins to obtain a ScriptObjectFactory for the internal Indexserver session.",
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "url": {
            "type": "string",
            "description": "Indexserver URL."
          },
          "ci": {
            "description": "ClientInfo object including session ticket",
            "$ref": "#/components/schemas/ClientInfo"
          },
          "user": {
            "description": "Current user",
            "$ref": "#/components/schemas/UserInfo"
          },
          "sessionOptions": {
            "description": "SessionOptions associated to this connection.",
            "$ref": "#/components/schemas/MapToString"
          },
          "clientComputer": {
            "type": "string",
            "description": "Parameter clientComputer from login function."
          }
        },
        "description": "Execution context of server events. An object of this class is passed to every server event and registered function.\nOn the server side, it can be casted to IObjectFactory to retrieve helper objects for access checking, conversion of\n date values and numeric values, etc."
      },
      "BRequest_IXServicePortIF_checkoutSordTypes": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "sordTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "sordTypeZ": {
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServerEvents_onAfterCheckinUsers": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "userInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserInfo"
            }
          },
          "checkinUsersZ": {
            "$ref": "#/components/schemas/CheckinUsersZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_executeRegisteredFunction": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "functionName": {
            "type": "string"
          },
          "param": {
            "$ref": "#/components/schemas/Any"
          }
        }
      },
      "BResult_1585309177": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/MyELOContent"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "Event": {
        "type": "object",
        "properties": {
          "busId": {
            "type": "string",
            "description": "Bus-ID"
          },
          "type": {
            "type": "string",
            "description": "Event type. Event filters check this value.\nThis must be one of the predefined event types or an application\n defined type with a larger value than EventBusC.EVENT_TYPE_MAX_SYSTEM."
          },
          "param1": {
            "type": "string",
            "description": "Value depends on event type. Event filters check this value."
          },
          "param2": {
            "type": "string",
            "description": "Value depends on event type. Event filters check this value."
          },
          "id": {
            "type": "string",
            "description": "Event ID. If the sender awaits a response to this event, it should set a random number in \u003ccode\u003eid\u003c/code\u003e.\nThe\n receiver should use the same number in the response."
          },
          "senderId": {
            "type": "string",
            "description": "User ID of event sender. Might be used for other IDs in future too. Read-only."
          },
          "data": {
            "type": "string",
            "description": "Event payload data as byte array.",
            "format": "byte"
          },
          "any": {
            "description": "Event payload data as Any object.",
            "$ref": "#/components/schemas/Any"
          },
          "acl": {
            "type": "string",
            "description": "Access control list. An empty ACL means here, that the event is dispatched to everyone."
          }
        },
        "description": "This class represents an event used by the event bus API functions."
      },
      "SubscriptionDataC": {
        "type": "object",
        "properties": {
          "mbUserGuid": {
            "type": "string",
            "description": "Member bit: GUID of user who registered the subscription.\nDB column: userguid"
          },
          "lnUserGuid": {
            "type": "integer",
            "description": "Column length: GUID of user who registered the subscription.\nDB column: userguid",
            "format": "int32"
          },
          "mbWatchGuid": {
            "type": "string",
            "description": "Member bit: GUID of Object to be watched.\nDB column: watchguid"
          },
          "lnWatchGuid": {
            "type": "integer",
            "description": "Column length: GUID of Object to be watched.\nDB column: watchguid",
            "format": "int32"
          },
          "mbCreateDateIso": {
            "type": "string",
            "description": "Member bit: Create date of the subscription.\nDB column: createdateiso"
          },
          "lnCreateDateIso": {
            "type": "integer",
            "description": "Column length: Create date of the subscription.\nDB column: createdateiso",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of Subscription\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServerEvents_onCreateDoc": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "parentId": {
            "type": "string"
          },
          "maskId": {
            "type": "string"
          },
          "docTemplate": {
            "type": "string"
          },
          "editInfoZ": {
            "$ref": "#/components/schemas/EditInfoZ"
          }
        }
      },
      "BRequest_PluginService_stop": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "PluginHistory": {
        "type": "object",
        "properties": {
          "plainText": {
            "type": "string",
            "description": "The raw text contained in the version file (e.g. version.txt)."
          },
          "jsonText": {
            "type": "string",
            "description": "The text in form of a json object."
          }
        },
        "description": "OSGi plugin history."
      },
      "BResult_1159353819": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/PluginHistory"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_FeedService_unregisterNotify": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "feedGuid": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinConfigFilesBegin": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BResult_19": {
        "type": "object",
        "properties": {
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "OrgUnitInfoC": {
        "type": "object",
        "properties": {
          "MAX_OU_PROP": {
            "type": "integer",
            "description": "Maximum number of OU properties.",
            "format": "int32"
          },
          "MAX_ORG_UNITS": {
            "type": "integer",
            "description": "Maximum number of OUs.",
            "format": "int32"
          },
          "lnName": {
            "type": "integer",
            "description": "Maximum OU name length",
            "format": "int32"
          },
          "lnDesc": {
            "type": "integer",
            "description": "Maximum OU desc length",
            "format": "int32"
          },
          "lnOuProp": {
            "type": "integer",
            "description": "Maximum OU property length",
            "format": "int32"
          },
          "mbId": {
            "type": "string",
            "description": "Member bit {@link OrgUnitInfo#id}"
          },
          "mbName": {
            "type": "string",
            "description": "Member bit {@link OrgUnitInfo#name}"
          },
          "mbDesc": {
            "type": "string",
            "description": "Member bit {@link OrgUnitInfo#desc}"
          },
          "mbOuProps": {
            "type": "string",
            "description": "Member bit {@link OrgUnitInfo#ouProps}"
          },
          "mbTStamp": {
            "type": "string",
            "description": "Member bit {@link OrgUnitInfo#tStamp}"
          },
          "mbGuid": {
            "type": "string",
            "description": "Member bit {@link OrgUnitInfo#guid}"
          }
        },
        "description": "\u003cp\u003e\nConstants related to organizational unit information.\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2013\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ProcessScript": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Script name."
          },
          "processPostfix": {
            "type": "boolean",
            "description": "execution position in tree walks."
          },
          "tag": {
            "type": "string",
            "description": "user defined tag."
          }
        },
        "description": "NOT CURRENTLY SUPPORTED\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "QueryJobProtocolEvent": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "The time of generating this event."
          },
          "message": {
            "type": "string",
            "description": "Message of this LogRow."
          },
          "level": {
            "type": "integer",
            "description": "The level of log messages to query. Use the | operator to select multiple levels.",
            "format": "int32"
          },
          "objId": {
            "type": "integer",
            "description": "The id of the object currently being processed at the time of this events creation.\nIf the objId is not\n known/available, its value is set to {@link QueryJobProtocolC#OBJID_NOT_SET}.",
            "format": "int32"
          },
          "eventId": {
            "type": "integer",
            "description": "The id of this QueryJobProtocolEvent. The eventId\u0027s value is unique for one background thread.\nThe value of a\n background thread\u0027s first eventId is 0. The second one is 1 and so on.",
            "format": "int32"
          }
        },
        "description": "\u003cp\u003e\nA {@link QueryJobProtocolEvent} represents a event\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_internalReceiveEvents": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "subsId": {
            "type": "string"
          },
          "timeoutMillis": {
            "type": "string"
          }
        }
      },
      "BResult_15": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/BStreamReference"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_findFirstWorkflows": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindWorkflowInfo"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "wfDiagramZ": {
            "$ref": "#/components/schemas/WFDiagramZ"
          }
        }
      },
      "MyELOContent": {
        "type": "object",
        "properties": {
          "workflows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFDiagram"
            }
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserTask"
            }
          },
          "sords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sord"
            }
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Action"
            }
          },
          "feeds": {
            "description": "Document feeds. Feed objects mapped to their GUID.",
            "$ref": "#/components/schemas/MapToFeed"
          },
          "subscriptions": {
            "description": "Subscriptions. Subscription objects mapped to their Subscription.watchGuid.",
            "$ref": "#/components/schemas/MapToSubscription"
          },
          "notifications": {
            "description": "Notifications. Notification objects mapped to their Notification.\nwatchGuid",
            "$ref": "#/components/schemas/MapToNotification"
          },
          "hashTagRelations": {
            "description": "HashTag Relations.",
            "$ref": "#/components/schemas/ListOfHashTagRelation"
          },
          "hashTags": {
            "description": "HashTags.\nHashTag Objects mapped to their HashTagGuid",
            "$ref": "#/components/schemas/MapToHashTag"
          }
        }
      },
      "FindUserInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Find by user name. Search over {@link UserInfo#name}."
          },
          "desc": {
            "type": "string",
            "description": "Find by user description. Search over {@link UserInfo#desc}."
          },
          "property": {
            "description": "Find by an user property. Search over all {@link UserInfo#userProps}.\nThe key element in property is the index in\n the array {@link UserInfo#userProps}.\n \u003cp\u003e\n Example:\n \n \u003cpre\u003e\n \u003ccode class\u003d\"example\"\u003e \n FindUserInfo findInfo \u003d new FindUserInfo();\n KeyValue property \u003d new KeyValue();\n property.setKey(Integer.toString(UserInfoC.PROP_NAME_EMAIL));\n property.setValue(\"maria.fritz@alpha.com\");\n \u003c/code\u003e\n \u003c/pre\u003e\n \u003c/p\u003e",
            "$ref": "#/components/schemas/KeyValue"
          },
          "ldapProperty": {
            "description": "Find by a LDAP property. Search over all {@link UserInfo#ldapProperties}.\nThe key element in property is the key in\n the map {@link UserInfo#ldapProperties}.",
            "$ref": "#/components/schemas/KeyValue"
          },
          "onlyUsers": {
            "type": "boolean",
            "description": "\u003cp\u003e\nSearch for users only.\n \u003c/p\u003e\n \n \u003cp\u003e\n If this member is set to \u003ccode\u003etrue\u003c/code\u003e, flags provided by {@link #checkoutUsersZ} are ignored.\n \u003c/p\u003e"
          },
          "onlyGroups": {
            "type": "boolean",
            "description": "\u003cp\u003e\nSearch for groups only.\n \u003c/p\u003e\n \n \u003cp\u003e\n If this member is set to \u003ccode\u003etrue\u003c/code\u003e, flags provided by {@link #checkoutUsersZ} are ignored.\n \u003c/p\u003e"
          },
          "returnUserInfoMap": {
            "type": "boolean",
            "description": "Return entire information about each user.\nIf true, {@link UserInfo} objects are returned in\n {@link FindResult#userInfos}. If false, {@link UserName} objects are returned in {@link FindResult#userNames}.\n Additionally, FindResult#sortedResult returns a sorted list of either UserInfo or UserName objects."
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "checkoutUsersZ": {
            "description": "Filter users as in {@link IXServicePortIF#checkoutUsers(ClientInfo, String[], CheckoutUsersZ, LockZ)}.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "hasFlags": {
            "type": "integer",
            "description": "Select only users that have all of this {@link UserInfo#flags} set. A value of 0 is ignored.\nThe selected users are\n found by testing (UserInfo#flags \u0026amp; hasFlags) \u003d\u003d hasFlags.",
            "format": "int32"
          },
          "hasNotFlags": {
            "type": "integer",
            "description": "Select only users that have non this {@link UserInfo#flags} set.\nThe selected users are found by testing\n (UserInfo#flags \u0026amp; hasNotFlags) \u003d\u003d 0.",
            "format": "int32"
          },
          "hasFlags2": {
            "type": "integer",
            "description": "Select only users that have all of this {@link UserInfo#flags2} set. A value of 0 is ignored.\nThe selected users\n are found by testing (UserInfo#flags2 \u0026amp; hasFlags2) \u003d\u003d hasFlags2.",
            "format": "int32"
          },
          "hasNotFlags2": {
            "type": "integer",
            "description": "Select only users that have none this {@link UserInfo#flags2} set.\nThe selected users are found by testing\n (UserInfo#flags2 \u0026amp; hasNotFlags2) \u003d\u003d 0.",
            "format": "int32"
          },
          "sortOrder": {
            "type": "integer",
            "description": "Specify how the results should be ordered.\nValid values are {@link SortOrderC#USERNAME} and\n {@link SortOrderC#IUSERNAME}. Sorted results are returned in FindResult#sortedResult.",
            "format": "int32"
          },
          "findResultAccessMode": {
            "description": "Describes how the client application will access the results.",
            "$ref": "#/components/schemas/FindResultAccessMode"
          }
        },
        "description": "This class describes the search criteria for {@link IXServicePortIF#findFirstUsers}.\nThe wildcards defined by {@link SessionOptionsC#DB_WILDCARDS} can be used for {@link #name}, {@link #desc},\n {@link #property}, and {@link #ldapProperty}.\n \n Members {@link #name}, {@link #desc}, {@link #property}, and {@link #ldapProperty} are combined by OR. Other members\n are combinded by AND."
      },
      "BResult_21": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "InvalidateCacheInfoParam": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "description": "Parameter, depends on the purpose of this object.\n\u003cp\u003e\n In case of InvalidateCacheC.HASHTAGCOUNT:\n \u003cul\u003e\n \u003cli\u003eRelated to HashtagGuid which is set according to count.\n \u003cli\u003eIf guid is null or empty, the complete HashtagCountCache is rebuild from DB.\n \u003c/ul\u003e\n \u003c/p\u003e\n \u003cp\u003e\n In case of InvalidateCacheC.WORKFLOW: WFDiagram.tstamp\n \u003c/p\u003e"
          },
          "flag": {
            "type": "integer",
            "description": "Parameter, depends on the purpose of this object. Set flag to InvalidateCacheC.\nHASHTAGCOUNT to use for\n HashtagCountCache. In case of InvalidateCacheC.WORKFLOW: WFDiagram.id",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "description": "Parameter, depends on the purpose of this object.\n\u003cp\u003e\n In case of InvalidateCacheC.HASHTAGCOUNT:\n \u003cul\u003e\n \u003cli\u003eCase 1: Increases count of corresponding Hashtag\n \u003cli\u003eCase -1: Decreases count of corresponding Hashtag\n \u003cli\u003eAny other number: Sets count of corresponding Hashtag this number\n \u003c/ul\u003e\n \u003c/p\u003e\n \u003cp\u003e\n In case of InvalidateCacheC.WORKFLOW: Hash code computed over WFDiagram members.\n \u003c/p\u003e",
            "format": "int32"
          },
          "objectValue": {
            "description": "Modified object.",
            "$ref": "#/components/schemas/ValueClass"
          }
        },
        "description": "\u003cp\u003e\nParamObject for InvalidateCacheInfo.\n \u003c/p\u003e\n \u003cp\u003e\n \u003ci\u003eUp to now only used to specify updates of HashtagCountCache.\u003c/i\u003e\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_checkoutOrgUnits": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "reserved": {
            "$ref": "#/components/schemas/CheckoutOrgUnitInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinDocBegin2": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "opts": {
            "$ref": "#/components/schemas/CheckinDocOptions"
          }
        }
      },
      "ReportOptions": {
        "type": "object",
        "properties": {
          "erpCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportErpCode"
            }
          },
          "mode": {
            "description": "A ReportOptionsZ constant",
            "$ref": "#/components/schemas/ReportModeZ"
          }
        },
        "description": "This class contains the codes for the activities/processes that are to be protocolled in a report.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "OptimizerConfig": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/SearchIndexerStatus"
          },
          "nextRunAt": {
            "type": "string",
            "format": "date-time"
          },
          "intervalHours": {
            "type": "integer",
            "format": "int32"
          },
          "ixid": {
            "type": "string",
            "description": "This Indexserver instance is processing the optimization."
          },
          "lastException": {
            "type": "string",
            "description": "Last exception occured during processing."
          },
          "lockName": {
            "type": "string",
            "description": "Process runs under this user account."
          }
        },
        "description": "Configuration and status of optimizer process."
      },
      "BRequest_HealthCheckService_updateDoubleValue": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "name": {
            "type": "string"
          },
          "doubleValue": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ListOfDocMaskInherit": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DocMaskInherit"
        }
      },
      "BRequest_IXServerEvents_onBeforeFindSordsInternalSQL": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindInfo"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "findSql": {
            "$ref": "#/components/schemas/FindInfoAsInternalSQL"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinColors": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "colors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColorData"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "EditInfo": {
        "type": "object",
        "properties": {
          "docTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          },
          "document": {
            "description": "Document or attachment information.",
            "$ref": "#/components/schemas/Document"
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Keyword"
            }
          },
          "markerNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          },
          "mask": {
            "description": "Document mask data of the mask selected in \u003ccode\u003esord\u003c/code\u003e.",
            "$ref": "#/components/schemas/DocMask"
          },
          "maskNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaskName"
            }
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          },
          "pathNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          },
          "replNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          },
          "sord": {
            "description": "Indexing information.",
            "$ref": "#/components/schemas/Sord"
          },
          "sordTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SordType"
            }
          }
        },
        "description": "Contains data to edit the indexing information.\nTherfore it provides storage mask names, storage path names, marker\n names, document template names, replication set names, document version information, etc.\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ArrayOfReportErpCode": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ReportErpCode"
        }
      },
      "BResult_1699606509": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ForwardWorkflowNodeResult"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BResult_2054753789": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/DocMask"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "ListOfPublicDownload": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PublicDownload"
        }
      },
      "BResult_10": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "AspectAssocC": {
        "type": "object",
        "properties": {
          "mbMaskId": {
            "type": "string",
            "description": "DB column: maskid"
          },
          "mbName": {
            "type": "string",
            "description": "Member bit: Technical aspect association name.\nDB column: name"
          },
          "lnName": {
            "type": "integer",
            "description": "Column length: Technical aspect association name.\nDB column: name",
            "format": "int32"
          },
          "mbTranslationKey": {
            "type": "string",
            "description": "Member bit: Translation-keyword for {@link AspectAssoc#displayName}.\nDB column: translationkey"
          },
          "lnTranslationKey": {
            "type": "integer",
            "description": "Column length: Translation-keyword for {@link AspectAssoc#displayName}.\nDB column: translationkey",
            "format": "int32"
          },
          "mbAspectId": {
            "type": "string",
            "description": "Member bit: ID of the referenced aspect.\nDB column: aspectid"
          },
          "mbRawCardinality": {
            "type": "string",
            "description": "Member bit: Cardinality.\nDB column: cardinality"
          },
          "mbAcl": {
            "type": "string",
            "description": "Member bit: Access control list.\nDB column: acl"
          },
          "lnAcl": {
            "type": "integer",
            "description": "Column length: Access control list.\nDB column: acl",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of AspectAssoc\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ListOfMapToIndexValue": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MapToIndexValue"
        }
      },
      "LanguageConfig": {
        "type": "object",
        "properties": {
          "languages": {
            "type": "string"
          },
          "allowedLangs": {
            "type": "string"
          },
          "nbOfLangs": {
            "type": "integer",
            "format": "int32"
          },
          "archiveLang": {
            "type": "string"
          },
          "mapLanguageNames": {
            "$ref": "#/components/schemas/MapToString"
          }
        }
      },
      "ActivityProjectDataC": {
        "type": "object",
        "properties": {
          "mbProject": {
            "type": "string",
            "description": "DB column: project"
          },
          "lnProject": {
            "type": "integer",
            "description": "DB column: project",
            "format": "int32"
          },
          "mbMajor": {
            "type": "string",
            "description": "DB column: major"
          },
          "mbMinor": {
            "type": "string",
            "description": "DB column: minor"
          },
          "mbOptValue": {
            "type": "string",
            "description": "DB column: optvalue"
          },
          "lnOptValue": {
            "type": "integer",
            "description": "DB column: optvalue",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of ActivityProject\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServerEvents_onCheckSordAccess": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "lur": {
            "type": "integer",
            "format": "int32"
          },
          "opts": {
            "$ref": "#/components/schemas/CheckAccessOptions"
          }
        }
      },
      "DocMaskInheritC": {
        "type": "object",
        "properties": {
          "mbChildMaskId": {
            "type": "string",
            "description": "DB column: childmaskid"
          },
          "mbParentMaskId": {
            "type": "string",
            "description": "DB column: parentmaskid"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of DocMaskInherit\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "Action": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "description": "Action GUID. Unique identifier."
          },
          "type": {
            "description": "Action type.",
            "$ref": "#/components/schemas/EActionType"
          },
          "feedGuid": {
            "type": "string",
            "description": "Feed GUID. This action belongs to the feed identified by this GUID."
          },
          "parentGuid": {
            "type": "string",
            "description": "Parent action GUID. This element is only valid for user comments, {@link EActionType#UserComment}.\nIf not empty,\n this action is subordinated under the action given by this GUID."
          },
          "userGuid": {
            "type": "string",
            "description": "User GUID. The GUID of the user who has created this action.\nFor actions of type {@link EActionType#SordCreated},\n this member holds the GUID of Sord.ownerId. For actions of type {@link EActionType#VersionCreated}, this member\n holds the GUID of DocVersion.ownerId."
          },
          "userId": {
            "type": "integer",
            "description": "User ID. It is set to the numerical ID of the user given by {@link #userGuid}. This element is read-only.",
            "format": "int32"
          },
          "userName": {
            "type": "string",
            "description": "User name. It is set to the name of the user given by {@link #userGuid}. This element is read-only."
          },
          "createDateIso": {
            "type": "string",
            "description": "Create date. This element is the ISO formatted create date of the action.\nWhen this object is received from\n {@link FeedService#checkoutAction(de.elo.ix.client.ClientInfo, String, ActionZ)} or\n {@link FeedService#findFirstActions(de.elo.ix.client.ClientInfo, FindActionsInfo, int, ActionZ)} the value is\n supplied in the time zone of the client application - which is UTC by default. In case of the object is received by\n a notify message in {@link FeedNotification#updateAction(Action)} the value is relative to the UTC timezone. In\n order to convert this value into a date object, invoke function {@link de.elo.ix.client.IXConnection#isoToDate}."
          },
          "updateDateIso": {
            "type": "string",
            "description": "Update date. This element is only valid for {@link EActionType#UserComment}.\nIt holds the ISO formatted update\n date. When this object is received from\n {@link FeedService#checkoutAction(de.elo.ix.client.ClientInfo, String, ActionZ)} or\n {@link FeedService#findFirstActions(de.elo.ix.client.ClientInfo, FindActionsInfo, int, ActionZ)} the value is\n supplied in the time zone of the client application - which is UTC by default. In case of the object is received by\n a notify message in {@link FeedNotification#updateAction(Action)} the value is relative to the UTC timezone. In\n order to convert this value into a date object, invoke function {@link de.elo.ix.client.IXConnection#isoToDate}."
          },
          "changeCounter": {
            "type": "integer",
            "description": "Counts the number of updates. This element is only valid for {@link EActionType#UserComment}.\nIt counts the number\n of updates made to the comment.",
            "format": "int32"
          },
          "text": {
            "type": "string",
            "description": "Comment text. This element is only valid for {@link EActionType#UserComment}, and {@link EActionType#AutoComment}."
          },
          "docVersionGuid": {
            "type": "string",
            "description": "GUID of the associated document version.\nThis element is only valid for generated actions that belong to a document\n version, e.g. {@link EActionType#VersionCreated}. Read-only."
          },
          "docVersion": {
            "description": "Document version object. This element is only valid for generated actions that belong to a document version, e.g.\n{@link EActionType#VersionCreated}. Read-only.",
            "$ref": "#/components/schemas/DocVersion"
          },
          "workflowGuid": {
            "type": "string",
            "description": "GUID of the associated workflow. This element is valid for action types that belong to a workflow."
          },
          "workflow": {
            "description": "Workflow object. This element is only valid for generated actions that belong to a workflow. Read-only.",
            "$ref": "#/components/schemas/WFDiagram"
          },
          "TStamp": {
            "type": "string",
            "description": "Time stamp. Time stamp of creation or modification."
          },
          "history": {
            "description": "Change history of text member. This list does not contain the current text.\nThis member is null, if the text has\n not been changed.",
            "$ref": "#/components/schemas/ListOfActionHistory"
          },
          "acl": {
            "type": "string",
            "description": "Raw ACL representation.\nOnly valid for Actions of type {@link EActionType#UserComment} or\n {@link EActionType#AutoComment}. This member is ignored if {@link Action#aclItems} is not null."
          },
          "aclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "TStampSync": {
            "type": "string",
            "description": "Timestamp of this object\u0027s last export by the replication."
          }
        },
        "description": "This class describes an entry in a document feed. There are three kinds of entries/actions in general.\nFirst, an\n action can be a comment added manually by a user. Second, scripts or programs can insert actions e.g. to notify about\n a particular state. Third, actions are generated by the system e.g. when a new document version is created. In order\n to add an action to a feed, call {@link FeedService#checkinAction(de.elo.ix.client.ClientInfo, Action, ActionZ)}.\n User comments can have a parent action to support a two level hierarchy of entries."
      },
      "WFNodeC": {
        "type": "object",
        "properties": {
          "mbId": {
            "type": "string",
            "description": "Member bit: Node ID"
          },
          "mbType": {
            "type": "string",
            "description": "Member bit: Type"
          },
          "mbEnterDate": {
            "type": "string",
            "description": "Member bit: Activated at this date."
          },
          "mbExitDate": {
            "type": "string",
            "description": "Member bit: Leaved at this date."
          },
          "mbInUseDate": {
            "type": "string",
            "description": "Member bit: In use at this date."
          },
          "mbName": {
            "type": "string",
            "description": "Member bit: Name"
          },
          "lnName": {
            "type": "integer",
            "description": "Maximum length of node name.",
            "format": "int32"
          },
          "mbUserId": {
            "type": "string",
            "description": "Member bit: User ID"
          },
          "mbNbOfDonesToExit": {
            "type": "string",
            "description": "Member bit: number of predecessor nodes that must be processed to forward this node."
          },
          "mbTimeLimit": {
            "type": "string",
            "description": "Member bit: (to be defined)"
          },
          "mbComment": {
            "type": "string",
            "description": "Member bit: Node comment."
          },
          "lnComment": {
            "type": "integer",
            "description": "Maximum length of comment.",
            "format": "int32"
          },
          "mbPosX": {
            "type": "string",
            "description": "Member bit: x position in designer view."
          },
          "mbPosY": {
            "type": "string",
            "description": "Member bit: y position in designer view."
          },
          "mbLockId": {
            "type": "string",
            "description": "Member bit: locked from user."
          },
          "mbOnEnter": {
            "type": "string",
            "description": "Member bit: script to execute when node is activated."
          },
          "lnOnEnter": {
            "type": "integer",
            "format": "int32"
          },
          "mbOnExit": {
            "type": "string",
            "description": "Member bit: script to execute when node is leaved."
          },
          "lnOnExit": {
            "type": "integer",
            "format": "int32"
          },
          "mbFlags": {
            "type": "string",
            "description": "Member bit: control flags."
          },
          "mbIsNext": {
            "type": "string",
            "description": "Member bit: (to be defined)"
          },
          "mbYesNoCondition": {
            "type": "string",
            "description": "Member bit: yes/no condition"
          },
          "lnYesNoCondition": {
            "type": "integer",
            "format": "int32"
          },
          "mbCondition": {
            "type": "string",
            "description": "Member bit: condition, is only internally used"
          },
          "lnCondition": {
            "type": "integer",
            "format": "int32"
          },
          "mbResult": {
            "type": "string",
            "description": "Member bit: Condition result."
          },
          "mbUserTerminate": {
            "type": "string",
            "description": "Member bit: The ID of the user who has forwarded the node. Not valid for template workflows.\nOnly valid for person\n nodes. DB column: wf_userterminate"
          },
          "mbTag": {
            "type": "string",
            "description": "Member bit: reserved.\nDB column: wf_tag"
          },
          "mbDesignDepartment": {
            "type": "string",
            "description": "Member bit: A group ID or user ID that was originally assigned in the designer.\nDB column: wf_designdepartment"
          },
          "mbMoveCyclePosX": {
            "type": "string",
            "description": "Member bit: If a cycle is re-entered, the nodes in the cycle are duplicated.\nThe copied nodes will be placed in the\n designer moved by this value to the right. If this value is 0, the nodes are moved 60 points right and 20 points\n up. DB column: wf_dx"
          },
          "mbDepartment2": {
            "type": "string",
            "description": "Member bit: A group ID to constrain access to the node.\nOnly members of this group are allowed to see and process\n the node. Only valid for person nodes. DB column: wf_department2"
          },
          "mbDelayDays": {
            "type": "string",
            "description": "Member bit: An active person node (Activate is set) might be displayed to the user delayed by this number of days.\nOnly valid for person nodes. DB column: wf_deldays"
          },
          "mbDelayDate": {
            "type": "string",
            "description": "Member bit: DelayDaye. Not valid for template workflows. Only valid for person nodes.\nDB column: wf_duedate"
          },
          "mbUserDelayDate": {
            "type": "string",
            "description": "Member bit: UserDelayDate. Not valid for template workflows. Only valid for person nodes.\nDB column: wf_duedate"
          },
          "mbProcessOnServerId": {
            "type": "string",
            "description": "Member bit: processOnServerId;"
          },
          "lnProcessOnServerId": {
            "type": "integer",
            "description": "Maximum length of processOnServerId.",
            "format": "int32"
          },
          "mbTimeLimitEscalations": {
            "type": "string",
            "description": "Member bit: timeLimitEscalation"
          },
          "mbObjKeyNames": {
            "type": "string",
            "description": "Member bit: objKeyNames"
          },
          "mbScriptNames": {
            "type": "string",
            "description": "Member bit: scriptNames"
          },
          "mbIconId": {
            "type": "string",
            "description": "Member bit: Icon GUID."
          },
          "mbFormSpec": {
            "type": "string",
            "description": "Member bit: FormSpec."
          },
          "lnFormSpec": {
            "type": "integer",
            "description": "Maximum length of form spec.",
            "format": "int32"
          },
          "mbNameTranslationKey": {
            "type": "string",
            "description": "Member bit: NameTranslationKey"
          },
          "lnNameTranslationKey": {
            "type": "integer",
            "description": "Maximum length of the name\u0027s translation key.",
            "format": "int32"
          },
          "mbCommentTranslationKey": {
            "type": "string",
            "description": "Member bit: CommentTranslationKey"
          },
          "lnCommentTranslationKey": {
            "type": "integer",
            "description": "Maximum length of the comment\u0027s translation key.",
            "format": "int32"
          },
          "mbLabel": {
            "type": "string",
            "description": "Member bit: label"
          },
          "lnLabel": {
            "type": "integer",
            "description": "Maximum length of the label.",
            "format": "int32"
          },
          "lnLabelTranslationKey": {
            "type": "integer",
            "description": "Maximum length of the labelTranslationKey.",
            "format": "int32"
          },
          "mbProperties": {
            "type": "string",
            "description": "Member bit: properties"
          },
          "lnProperties": {
            "type": "integer",
            "description": "Maximum length of the properties.",
            "format": "int32"
          },
          "mbDepartmentGroup": {
            "type": "string",
            "description": "Member bit: departmentGroup"
          },
          "mbSubFlowId": {
            "type": "string",
            "description": "Member bit: subFlowId"
          },
          "mbRetVal": {
            "type": "string",
            "description": "Member bit: retVal"
          },
          "mbSubTemplateName": {
            "type": "string",
            "description": "reserved."
          },
          "mbSubTemplateId": {
            "type": "string",
            "description": "Member bit: subTemplateId"
          },
          "mbLabelTranslationKey": {
            "type": "string",
            "description": "Member bit: labelTranslationKey"
          },
          "mbReturnValue": {
            "type": "string",
            "description": "Member bit: returnValue"
          },
          "mbPrio": {
            "type": "string",
            "description": "Member bit: returnValue"
          },
          "mbEnterDateIso": {
            "type": "string"
          },
          "mbExitDateIso": {
            "type": "string"
          },
          "mbInUseDateIso": {
            "type": "string"
          },
          "mbTimeLimitIso": {
            "type": "string"
          },
          "mbUserName": {
            "type": "string"
          },
          "mbDelayDateIso": {
            "type": "string"
          },
          "mbUserDelayDateIso": {
            "type": "string"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All members."
          },
          "mbAll": {
            "description": "All members.",
            "$ref": "#/components/schemas/WFNodeZ"
          },
          "FLAG_ONE_SUCCESSOR": {
            "type": "integer",
            "description": "Node flag: Only one user can receive this node.",
            "format": "int32"
          },
          "FLAG_ROOT_ADHOC": {
            "type": "integer",
            "description": "Node flag: The start node of an Adhoc workflow has this flag.",
            "format": "int32"
          },
          "FLAG_NOT_VALID": {
            "type": "integer",
            "description": "Node flag: Not released.\nA personal node of an Adhoc workflow has this flag set, if the user has not released the\n node. The Indexserver does not use this flag anywhere.",
            "format": "int32"
          },
          "FLAG_TERMINATE_USER": {
            "type": "integer",
            "description": "Node flag: End of workflow. This flag is set to the end node of an Adhoc workflow.\nThe Indexserver does not need\n this flag but maybe the ELO Windows Client.",
            "format": "int32"
          },
          "FLAG_RESET_CHILDREN": {
            "type": "integer",
            "description": "Node flag: Reset the ExitDate of the following nodes, if this node is activated.",
            "format": "int32"
          },
          "FLAG_CYCLE_END": {
            "type": "integer",
            "description": "Node flag: This flag denotes, whether a cycle node (TYPE_CYCLE) is the end of a cycle.",
            "format": "int32"
          },
          "FLAG_CYCLE_X": {
            "type": "integer",
            "description": "Node flag: This is a copied start node of a cylce. Do not use this flag in workflow templates.\nThe workflow engine\n will mark copied cycle. nodes with this flag.",
            "format": "int32"
          },
          "FLAG_COPY_CHILDREN": {
            "type": "integer",
            "description": "Node flag: This flag indicates that all nodes in the cycle should be copied when entering the begin cycle node.\nThis flag is only used for the begin cycle node.",
            "format": "int32"
          },
          "FLAG_WORKINGDAYS": {
            "type": "integer",
            "description": "Node flag: This flag indicates that weekend days should be skipped when evaluating time limits.",
            "format": "int32"
          },
          "FLAG_RESETADHOCNODE": {
            "type": "integer",
            "description": "Node flag: Reset all person nodes. This flag is only used for parallel for validation workflow.",
            "format": "int32"
          },
          "FLAG_HIDDEN": {
            "type": "integer",
            "description": "Node flag: Hide this workflow from default searches and listings.",
            "format": "int32"
          },
          "FLAG_DO_NOT_START_MANUALLY": {
            "type": "integer",
            "description": "Node flag: This flag indicates whether the sub workflow can be started manually. The sub workflow of.\nThis flag is\n used for sub workflows.",
            "format": "int32"
          },
          "FLAG_DELEGATED": {
            "type": "integer",
            "description": "Node flag: This flag indicates whether the person node was delegated. This flag is only used for the person node.",
            "format": "int32"
          },
          "TYPE_NOTHING": {
            "type": "integer",
            "description": "Node type: undefined or deleted",
            "format": "int32"
          },
          "TYPE_BEGINNODE": {
            "type": "integer",
            "description": "Node type: Start of workflow.",
            "format": "int32"
          },
          "TYPE_PERSONNODE": {
            "type": "integer",
            "description": "Node type: Personal node. A user must edit the node to continue the workflow.",
            "format": "int32"
          },
          "TYPE_SPLITNODE": {
            "type": "integer",
            "description": "Node type: Distribute to many following nodes.",
            "format": "int32"
          },
          "TYPE_IFNODE": {
            "type": "integer",
            "description": "Node type: Decision node.",
            "format": "int32"
          },
          "TYPE_COLLECTNODE": {
            "type": "integer",
            "description": "Node type: Collects many workflow paths.",
            "format": "int32"
          },
          "TYPE_ENDNODE": {
            "type": "integer",
            "description": "Node type: End of workflow.",
            "format": "int32"
          },
          "TYPE_CYCLE": {
            "type": "integer",
            "description": "Node type: Cycle Cycle nodes are contained in pairs in a workflow.\nOne cycle node denotes the beginning of a cycle\n and an associated cycle node marks the end. Both cycle nodes must have the same name (WFNode.name). The begin node\n must be flagged with FLAG_CYCLE_END.",
            "format": "int32"
          },
          "TYPE_SET_SERVER_ID": {
            "type": "integer",
            "description": "Note type: Set the server ID where the WF can be continued. This node is used in replicated workflows.",
            "format": "int32"
          },
          "TYPE_CALL_SUB_WORKFLOW": {
            "type": "integer",
            "description": "Note type: Call sub workflow.",
            "format": "int32"
          },
          "USERID_OWNER": {
            "type": "integer",
            "description": "Set WFNode.userId to this value, if a workflow node should belong to the user who starts the workflow.",
            "format": "int32"
          },
          "USERID_IGNORE": {
            "type": "integer",
            "description": "This value can be used in Node.department2 to make clear, that Node.department2 has to be ignored.",
            "format": "int32"
          },
          "USERID_SUPERIOR": {
            "type": "integer",
            "description": "This ID is a placeholder for the superior of the workflow owner.",
            "format": "int32"
          },
          "DEACTIVATE_ALL_PREDS": {
            "type": "string",
            "description": "Indicates that all predecessor of the collect node should be terminated."
          }
        },
        "description": "\u003cp\u003e\nConstants for \u003ccode\u003eWorkFlowNode\u003c/code\u003e.\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_findNextActivities": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "searchId": {
            "type": "string"
          },
          "idx": {
            "type": "integer",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "activityZ": {
            "$ref": "#/components/schemas/ActivityZ"
          }
        }
      },
      "BResult_1436376940": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/JobState"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BResult_1233469422": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupProfile"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BResult_1822579866": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/WFEditNode"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_startAdHocWorkFlow2": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "name": {
            "type": "string"
          },
          "objId": {
            "type": "string"
          },
          "userNodeInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserNodeInfo"
            }
          },
          "startWfInfo": {
            "$ref": "#/components/schemas/StartAdHocWorkflowInfo"
          }
        }
      },
      "DoubleSingleValue": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "description": "double value",
            "format": "double"
          }
        }
      },
      "DateIsoValue": {
        "type": "object",
        "properties": {
          "dateIso": {
            "type": "string",
            "description": "\u003cp\u003e\nISO-Date.\n \u003c/p\u003e\n \n Number of digits defines kind of timeunit:\n \u003cul\u003e\n \u003cli\u003e4 digits for year.\n \u003cli\u003e6 digits for year with month.\n \u003cli\u003e8 digits for date with days.\n \u003cli\u003e10 digits for date with hours.\n \u003cli\u003e12 digits for date with minutes.\n \u003cli\u003e14 digits for date with seconds\n \u003c/ul\u003e"
          },
          "roundTo": {
            "description": "Define to which time unit this date should be rounded.\n\u003cbr\u003e\n If it is !\u003d null, a range query is performed.",
            "$ref": "#/components/schemas/DateRoundE"
          }
        },
        "description": "\u003cp\u003e\nClass to commit a date value to iSearch via QueryFilter.\n \u003c/p\u003e\n \u003cp\u003e\n Date format: YYYYMMddHHmmss\u003cbr\u003e\n If less than 14 digits are commited, it is converted to a 14 digit numer, e.g.: \"2017\" -\u003e \"20170101000000\"\n \u003c/p\u003e\n \u003cp\u003e\n If roundTo is null, a search for an exact date is executed.\n \u003c/p\u003e\n \u003cp\u003e\n If roundTo is !\u003d null, DateIsoValue is converted to a Range query. From is dateIso rounded down, To is dateIso\n rounded up.\n \u003c/p\u003e\n \u003cp\u003e\n \u003cb\u003eExample\u003c/b\u003e \u003ccode\u003edateIso\u003d2017, roundTo\u003dDateRoundC.YEAR\u003c/code\u003e results in From\u003d01.01.2017 00:00:00, To\u003d31.12.2017\n 23:59:59\n \u003c/p\u003e\n \u003cp\u003e\n The delivered date is converted to the time zone submitted in ClientInfo\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_loginEloProf": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "certificate": {
            "type": "string"
          },
          "clientComputer": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_invalidateCache": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "flags": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BRequest_IXServicePortIF_startAdHocWorkFlow3": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "name": {
            "type": "string"
          },
          "objId": {
            "type": "string"
          },
          "startWfInfo": {
            "$ref": "#/components/schemas/StartAdHocWorkflowInfo"
          }
        }
      },
      "BResult_661820173": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/PreviewImageResult"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "FindByFulltextCtrl": {
        "type": "object",
        "properties": {
          "startTStamp": {
            "type": "string",
            "description": "Find objects from this date or newer.\nThis value can be null or empty in which case the time range has no lower\n limit."
          },
          "endTStamp": {
            "type": "string",
            "description": "Find objects from this date or older. If the value is null or empty, the time range has no upper limit."
          },
          "onlyDocs": {
            "type": "boolean",
            "description": "Find next documents for textreader."
          },
          "profileKeyPrefix": {
            "type": "string",
            "description": "Key prefix for loop state."
          },
          "reindex": {
            "type": "boolean",
            "description": "Re-index processing. If this member is true, a search returns objects from the largest object ID to 2.\nIf this\n member is false, a search returns the next objects in a timestamp interval."
          }
        },
        "description": "This class is used to search for objects that have to be indexed by the fulltext database engine.\n\u003cp\u003e\n The selected objects are ordered by their timestamp. If the search process is interrupted because of a timeout or\n because the FindOptions.totalCount limit is reached, all the Objects of the lates timestamp second are discarded.\n \u003c/p\u003e\n \u003cp\u003e\n If the search process is terminated due to breakTotalCount and the array of results is empty, the search should be\n repeated with a greater value for totalCount.\n \u003c/p\u003e\n \u003cp\u003e\n Access checking is performed as in all other searches.\n \u003c/p\u003e\n \u003cp\u003e\n A search of this type can only be combined with FindOptions.totalCount and FindOptions.timeoutSeconds.\n \u003c/p\u003e\n \u003cp\u003e\n The results are returned in the member FindInfo.fulltextCtrlResultItems. The Sord objects are available in the member\n FindInfo.sords too.\n \u003c/p\u003e"
      },
      "BRequest_HealthCheckService_read": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "names": {
            "$ref": "#/components/schemas/ListOfString"
          }
        }
      },
      "BRequest_IXServicePortIF_startExport": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "topLevelIDs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "options": {
            "type": "string"
          }
        }
      },
      "RawStreamService": {
        "type": "object"
      },
      "BRequest_IXServicePortIF_deleteSordTypes": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "sordTypeIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServerEvents_onFindClose": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "findInfo": {
            "type": "string"
          }
        }
      },
      "AspectLineDataC": {
        "type": "object",
        "properties": {
          "mbAspectId": {
            "type": "string",
            "description": "Member bit: This line information belongs to an aspect with the ID AspectId.\nDB column: aspectid"
          },
          "mbRawType": {
            "type": "string",
            "description": "Member bit: The type of the line information.\nDB column: linetype"
          },
          "mbDisplayName": {
            "type": "string",
            "description": "Member bit: The display name of the attribute.\nDB column: linedisplayName"
          },
          "lnDisplayName": {
            "type": "integer",
            "description": "Column length: The display name of the attribute.\nDB column: linedisplayName",
            "format": "int32"
          },
          "mbKey": {
            "type": "string",
            "description": "Member bit: The attribute identifier.\nDB column: linekey"
          },
          "lnKey": {
            "type": "integer",
            "description": "Column length: The attribute identifier.\nDB column: linekey",
            "format": "int32"
          },
          "mbRawFlags": {
            "type": "string",
            "description": "Member bit: Internal flags representation.\nDB column: lineflags"
          },
          "mbExternalData": {
            "type": "string",
            "description": "Member bit: External data.\nDB column: lineext"
          },
          "lnExternalData": {
            "type": "integer",
            "description": "Column length: External data.\nDB column: lineext",
            "format": "int32"
          },
          "mbDefaultValue": {
            "type": "string",
            "description": "Member bit: This value is assigned to the element for a new Sord object.\nDB column: linedefault"
          },
          "lnDefaultValue": {
            "type": "integer",
            "description": "Column length: This value is assigned to the element for a new Sord object.\nDB column: linedefault",
            "format": "int32"
          },
          "mbNameTranslationKey": {
            "type": "string",
            "description": "Member bit: Translation-keyword for {@link AspectLine#name}.\nDB column: linenametrkey"
          },
          "lnNameTranslationKey": {
            "type": "integer",
            "description": "Column length: Translation-keyword for {@link AspectLine#name}.\nDB column: linenametrkey",
            "format": "int32"
          },
          "mbAllowedReferencedMaskIdsRaw": {
            "type": "string",
            "description": "Member bit: Specifies the {@link DocMask#id} allowed in a {@link DocMaskLineC#TYPE_RELATION}.\nDB column:\n allowedrefmaskids"
          },
          "lnAllowedReferencedMaskIdsRaw": {
            "type": "integer",
            "description": "Column length: Specifies the {@link DocMask#id} allowed in a {@link DocMaskLineC#TYPE_RELATION}.\nDB column:\n allowedrefmaskids",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of AspectLine\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ArrayOfString": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "ArrayOfObjKey": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ObjKey"
        }
      },
      "BRequest_PluginService_send": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "id": {
            "type": "string"
          },
          "message": {
            "$ref": "#/components/schemas/PluginMessage"
          }
        }
      },
      "DocMaskLineC": {
        "type": "object",
        "properties": {
          "mbType": {
            "type": "string",
            "description": "Member bit: The type of the line information. This can be one of the \u003ccode\u003eDocMaskLineC.\nLINETYPE_*\u003c/code\u003e\n constants."
          },
          "mbFlags": {
            "type": "string",
            "description": "Member bit: Line flags"
          },
          "mbAcl": {
            "type": "string",
            "description": "Member bit: ACL"
          },
          "mbAllowedMaskIdsForKeywordingRelation": {
            "type": "string",
            "description": "Member bit: allowedMaskIds"
          },
          "lnAcl": {
            "type": "integer",
            "description": "ACL length",
            "format": "int32"
          },
          "_TYPE_TYPE_ID": {
            "type": "integer",
            "description": "Used to check wether a correct constant is used.",
            "format": "int32"
          },
          "TYPE_TEXT": {
            "type": "integer",
            "description": "Index line contains text information.",
            "format": "int32"
          },
          "TYPE_DATE": {
            "type": "integer",
            "description": "Index line contains a date.",
            "format": "int32"
          },
          "TYPE_NUMBER": {
            "type": "integer",
            "description": "Index line contains a number. The number is internally stored as a string value without any padding.\nThus it is not\n possible to search over an interval. Use one of the TYPE_NUMBER_F* types to be able to search over intervals. The\n number must be formatted according to the locale information of the server.",
            "format": "int32"
          },
          "TYPE_AZ": {
            "type": "integer",
            "description": "Index line contains a reference number (\"Aktenzeichen\").",
            "format": "int32"
          },
          "TYPE_ISO_DATE": {
            "type": "integer",
            "description": "Index line contains a date in ISO format.",
            "format": "int32"
          },
          "TYPE_LIST": {
            "type": "integer",
            "description": "Index line contains a list entry.",
            "format": "int32"
          },
          "TYPE_USER": {
            "type": "integer",
            "description": "Index line contains a user name.",
            "format": "int32"
          },
          "TYPE_THES": {
            "type": "integer",
            "description": "Thesaurus",
            "format": "int32"
          },
          "TYPE_NUMBER_F0": {
            "type": "integer",
            "description": "Index line contains a number value with an arbitrary number of fraction digits.\nThe value is internally stored with\n a padding of \u0026amp; (positive numbers) or @ (negative numbers). This gives the possibility to search over an\n interval of numeric values, e. b. search for \"1 ... 12\" finds objects with index values 1,2,3,4,...12. The number\n must be formatted according to the locale information given in the ClientInfo object. With this type, the user is\n responsible to enter always the same number of fraction digits. Otherwise, a search over a number range will not\n return the correct results. The meaning of this field was changed in 8.00.032. The meaning before was a field\n without any fraction digits.",
            "format": "int32"
          },
          "TYPE_NUMBER_F1": {
            "type": "integer",
            "description": "Index line contains a number value with one digit after the decimal point.",
            "format": "int32"
          },
          "TYPE_NUMBER_F2": {
            "type": "integer",
            "description": "Index line contains a number value with one digit after the decimal point.",
            "format": "int32"
          },
          "TYPE_NUMBER_F4": {
            "type": "integer",
            "description": "Index line contains a number value of with four digits after the decimal point.",
            "format": "int32"
          },
          "TYPE_NUMBER_F6": {
            "type": "integer",
            "description": "Index line contains a number value with six digits after the decimal point.",
            "format": "int32"
          },
          "TYPE_INTEGER": {
            "type": "integer",
            "description": "Index line contains a number value without fraction in the range of (-2^31) to (2^31)-1.\nThis type can only be used\n for keywording forms with {@link DocMaskC#DATA_ORGANISATION_TABLE}.",
            "format": "int32"
          },
          "TYPE_LONG": {
            "type": "integer",
            "description": "Index line contains a number value without fraction in the range of (-2^63) to (2^63)-1.\nThis type can only be used\n for keywording forms with {@link DocMaskC#DATA_ORGANISATION_TABLE}.",
            "format": "int32"
          },
          "TYPE_FLOAT": {
            "type": "integer",
            "description": "Index line contains a floating point number value with 7 significant digits.\nThis type can only be used for\n keywording forms with {@link DocMaskC#DATA_ORGANISATION_TABLE}. To assign a value of this type to\n {@link ObjKey#data}, the String representation has to conform to the Float.toString() method of Java. Use dot to\n separate the fraction part and character \u0027E\u0027 to prefix the exponent.",
            "format": "int32"
          },
          "TYPE_DOUBLE": {
            "type": "integer",
            "description": "Index line contains a floating point number value with 15 significant digits.\nThis type can only be used for\n keywording forms with {@link DocMaskC#DATA_ORGANISATION_TABLE}. To assign a value of this type to\n {@link ObjKey#data}, the String representation has to conform to the Double.toString() method of Java. Use dot to\n separate the fraction part and character \u0027E\u0027 to prefix the exponent.",
            "format": "int32"
          },
          "TYPE_DUMMY": {
            "type": "integer",
            "description": "Index line contains a dummy entry which should not be displayed.",
            "format": "int32"
          },
          "TYPE_RELATION": {
            "type": "integer",
            "description": "Index line contains a relation. A Relation consists of a {@link Sord#guid} which references a {@link Sord}.\nwith a\n allowed DocMask {@link DocMaskDetails#keywordingRelationAllowed}.",
            "format": "int32"
          },
          "DEFAULT": {
            "type": "integer",
            "description": "Default ist text",
            "format": "int32"
          },
          "ID_LINK": {
            "type": "integer",
            "description": "Index line ID of links. Sord.linksGoOut and Sord.linksComeIn provide a more convinient way to access links.\nLinks\n can be added and removed with the functions linkSords resp. unlinkSords.",
            "format": "int32"
          },
          "NAME_LINK": {
            "type": "string",
            "description": "Index line name of links."
          },
          "ID_FILENAME": {
            "type": "integer",
            "description": "Index line ID of original file name",
            "format": "int32"
          },
          "NAME_FILENAME": {
            "type": "string",
            "description": "Index line name of original file name"
          },
          "DOCKEY_VSL": {
            "type": "integer",
            "description": "Index line ID to store informations used by \"Versendemappe\".",
            "format": "int32"
          },
          "DOCNAME_VSL": {
            "type": "string",
            "description": "Index line name to store informations used by \"Versendemappe\"."
          },
          "ID_MAINSCALE": {
            "type": "integer",
            "description": "Internally used by JavaClient.",
            "format": "int32"
          },
          "NAME_MAINSCALE": {
            "type": "string",
            "description": "Internally used by JavaClient."
          },
          "ID_PERSONALDATA_UID": {
            "type": "integer",
            "description": "Index line used to mark a folder or document as personal data record.",
            "format": "int32"
          },
          "NAME_PERSONALDATA_UID": {
            "type": "string",
            "description": "Index line used to mark a folder or document as personal data record.\nValues should uniquely identify the person\n that belongs to the object. This index line can be added to any Sord and is not available in a keywording form\n (DocMask)."
          },
          "ID_PERSONALDATA_DELETEAT": {
            "type": "integer",
            "description": "Index line used to specify a delete date for personal data.",
            "format": "int32"
          },
          "NAME_PERSONALDATA_DELETEAT": {
            "type": "string",
            "description": "Index line used to specify a delete date for personal data.\nThe Value has to be in ISO 8601 format without\n separators and time section. Example value 20180223 specifies 23-Feb-2018."
          },
          "KEY_EMAIL_FROM": {
            "type": "string",
            "description": "Index line key for mail sender address. Use this constant as value for {@link DocMaskLine#key}."
          },
          "KEY_EMAIL_TO": {
            "type": "string",
            "description": "Index line key for mail receiver addresses. Use this constant as value for {@link DocMaskLine#key}."
          },
          "KEY_EMAIL_ENTRYID": {
            "type": "string",
            "description": "Index line key for an internal mail ID. Use this constant as value for {@link DocMaskLine#key}."
          },
          "KEY_EMAIL_CC": {
            "type": "string",
            "description": "Index line key for mail CC addresses. Use this constant as value for {@link DocMaskLine#key}."
          },
          "KEY_EMAIL_CONVERSATIONID": {
            "type": "string",
            "description": "Index line key for a mail\u0027s internal conversation ID. Use this constant as value for {@link DocMaskLine#key}."
          },
          "KEY_EMAIL_POSTBOXPATH": {
            "type": "string",
            "description": "Index line key for mailbox path. Use this constant as value for {@link DocMaskLine#key}."
          },
          "MAX_ID_DOCMASK_LINE": {
            "type": "integer",
            "description": "This constant defines a limit for ObjKey.id values. The following table defines which ObjKey.id values are allowed.\n\u003cp\u003e\n \u003ctable border\u003d\"2\" summary\u003d\"\"\u003e\n \u003ctr\u003e\n \u003ctd\u003eObjKey.id\u003c/td\u003e\n \u003ctd\u003eComment\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e0 ... MAX_ID_DOCMASK_LINE\u003c/td\u003e\n \u003ctd\u003eObjKeys with ObjKey.data.length \u0026gt; 1 allowed.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eMIN_ID_RESERVED ... MAX_ID_RESERVED\u003c/td\u003e\n \u003ctd\u003eObjKeys for Special purposes, e.g. ID_FILE_NAME\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e\n \u003c/p\u003e\n \u003cp\u003e\n \u003ctable border\u003d\"2\"\u003e\n \u003ctr\u003e\n \u003ctd\u003eSymbol\u003c/td\u003e\n \u003ctd\u003eValue\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eMAX_ID_DOCMASK_LINE\u003c/td\u003e\n \u003ctd\u003e199\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eMAX_ID_VALUE_ARRAY\u003c/td\u003e\n \u003ctd\u003e199\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eMIN_ID_RESERVED\u003c/td\u003e\n \u003ctd\u003e50\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eMAX_ID_RESERVED\u003c/td\u003e\n \u003ctd\u003e59\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e\n \u003c/p\u003e",
            "format": "int32"
          },
          "MAX_ID_VALUE_ARRAY": {
            "type": "integer",
            "description": "This constant defines a limit for ObjKey.id values.",
            "format": "int32"
          },
          "MIN_ID_RESERVED": {
            "type": "integer",
            "description": "Minimum ID for reserved keywording field",
            "format": "int32"
          },
          "MAX_ID_RESERVED": {
            "type": "integer",
            "description": "Maximum ID for reserved keywording field",
            "format": "int32"
          },
          "MIN_ID_HIDDEN_VALUE": {
            "type": "integer",
            "format": "int32"
          },
          "MAX_ID_HIDDEN_VALUE": {
            "type": "integer",
            "format": "int32"
          },
          "mbAclItems": {
            "type": "string"
          },
          "mbHidden": {
            "type": "string"
          },
          "mbNextTab": {
            "type": "string"
          },
          "mbOnlyBuzzwords": {
            "type": "string"
          },
          "mbPostfixAsterix": {
            "type": "string"
          },
          "mbPrefixAsterix": {
            "type": "string"
          },
          "mbReadOnly": {
            "type": "string"
          },
          "mbTabOrder": {
            "type": "string"
          },
          "mbTranslate": {
            "type": "string"
          },
          "mbImportant": {
            "type": "string"
          },
          "mbVersion": {
            "type": "string"
          }
        },
        "description": "\u003cp\u003e\nConstants for class \u003ccode\u003eDocMaskLine\u003c/code\u003e\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "WorkflowImportOptions": {
        "type": "object",
        "properties": {
          "replaceMissingUserByUserId": {
            "type": "string",
            "description": "If this variable is set, the missing user is replaced by this user.\nOtherwise the missing user will be created\n using a random password."
          }
        },
        "description": "Options for the workflow import."
      },
      "BRequest_ClientNotification_adminMode": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "mode": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "WFNodeHistoryC": {
        "type": "object",
        "properties": {
          "mbHistGuid": {
            "type": "string",
            "description": "DB column: wfhistguid"
          },
          "lnHistGuid": {
            "type": "integer",
            "description": "DB column: wfhistguid",
            "format": "int32"
          },
          "mbFlowGuid": {
            "type": "string",
            "description": "DB column: wfguid"
          },
          "lnFlowGuid": {
            "type": "integer",
            "description": "DB column: wfguid",
            "format": "int32"
          },
          "mbNodeId": {
            "type": "string",
            "description": "DB column: wf_nodeid"
          },
          "mbActivate": {
            "type": "string",
            "description": "DB column: wf_activate"
          },
          "mbTerminate": {
            "type": "string",
            "description": "DB column: wf_terminate"
          },
          "mbUserId": {
            "type": "string",
            "description": "DB column: wf_user"
          },
          "mbUserName": {
            "type": "string",
            "description": "DB column: wf_username"
          },
          "lnUserName": {
            "type": "integer",
            "description": "DB column: wf_username",
            "format": "int32"
          },
          "mbSucc_0": {
            "type": "string",
            "description": "DB column: wf_succ_0"
          },
          "mbSucc_1": {
            "type": "string",
            "description": "DB column: wf_succ_1"
          },
          "mbSucc_2": {
            "type": "string",
            "description": "DB column: wf_succ_2"
          },
          "mbSucc_3": {
            "type": "string",
            "description": "DB column: wf_succ_3"
          },
          "mbSucc_4": {
            "type": "string",
            "description": "DB column: wf_succ_4"
          },
          "mbSucc_5": {
            "type": "string",
            "description": "DB column: wf_succ_5"
          },
          "mbSucc_6": {
            "type": "string",
            "description": "DB column: wf_succ_6"
          },
          "mbSucc_7": {
            "type": "string",
            "description": "DB column: wf_succ_7"
          },
          "mbSucc_8": {
            "type": "string",
            "description": "DB column: wf_succ_8"
          },
          "mbSucc_9": {
            "type": "string",
            "description": "DB column: wf_succ_9"
          },
          "mbSucc_10": {
            "type": "string",
            "description": "DB column: wf_succ_10"
          },
          "mbSucc_11": {
            "type": "string",
            "description": "DB column: wf_succ_11"
          },
          "mbSucc_12": {
            "type": "string",
            "description": "DB column: wf_succ_12"
          },
          "mbSucc_13": {
            "type": "string",
            "description": "DB column: wf_succ_13"
          },
          "mbSucc_14": {
            "type": "string",
            "description": "DB column: wf_succ_14"
          },
          "mbSucc_15": {
            "type": "string",
            "description": "DB column: wf_succ_15"
          },
          "mbSucc_16": {
            "type": "string",
            "description": "DB column: wf_succ_16"
          },
          "mbSucc_17": {
            "type": "string",
            "description": "DB column: wf_succ_17"
          },
          "mbSucc_18": {
            "type": "string",
            "description": "DB column: wf_succ_18"
          },
          "mbSucc_19": {
            "type": "string",
            "description": "DB column: wf_succ_19"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of WFNodeHistory\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_takeWorkFlowNode": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "nFlowId": {
            "type": "integer",
            "format": "int32"
          },
          "nNodeId": {
            "type": "integer",
            "format": "int32"
          },
          "sUserId": {
            "type": "string"
          },
          "nFlags": {
            "type": "integer",
            "format": "int32"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "FieldTypeE": {
        "type": "object",
        "properties": {
          "notTokenized": {
            "description": "String values which are not splitted into single tokens.",
            "$ref": "#/components/schemas/FieldTypeE"
          },
          "tokenized": {
            "description": "String values which are splitted into single tokens.\n\u003cp\u003e\n e.g.:\"My Sord\" is splitted into \"my\" and \"sord\".\n \u003c/p\u003e",
            "$ref": "#/components/schemas/FieldTypeE"
          },
          "numeric": {
            "description": "Numeric values.",
            "$ref": "#/components/schemas/FieldTypeE"
          },
          "date": {
            "description": "Iso date values.\n\u003cp\u003e\n Corresponds to {@link DocMaskLineC#TYPE_ISO_DATE}.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/FieldTypeE"
          },
          "guid": {
            "description": "GUIDs of related Sords.\n\u003cp\u003e\n Corresponts to {@link DocMaskLineC#TYPE_RELATION}.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/FieldTypeE"
          }
        },
        "description": "\u003cp\u003e\nThis enum defines how should be searched for query terms.\n \u003c/p\u003e\n \n \u003cp\u003e\n It can, for example, be used with {@link QueryFilter#fieldType}\n \u003c/p\u003e\n \u003cp\u003e\n For every {@link SearchFieldE} it is defined, which {@link FieldTypeE} can be used and, therefore, which data classes\n (e.g. {@link StringSingleValue}) can be used.\n \u003c/p\u003e"
      },
      "UserTaskSortOrderC": {
        "type": "object",
        "properties": {
          "bsetPRIORITY_DATE_NAME": {
            "type": "string"
          },
          "bsetDATE_PRIORITY_NAME": {
            "type": "string"
          },
          "bsetNAME_PRIORITY_DATE": {
            "type": "string"
          },
          "bsetFLAG_SORT_ORDER_INV": {
            "type": "string"
          },
          "bsetPRIORITY_DATE_NAME_INV": {
            "type": "string"
          },
          "bsetDATE_PRIORITY_NAME_INV": {
            "type": "string"
          },
          "bsetNAME_PRIORITY_DATE_INV": {
            "type": "string"
          },
          "PRIORITY_DATE_NAME": {
            "description": "Order collected tasks by priority, date and NAME.",
            "$ref": "#/components/schemas/UserTaskSortOrderZ"
          },
          "DATE_PRIORITY_NAME": {
            "description": "Order collected tasks by date, priority and NAME.",
            "$ref": "#/components/schemas/UserTaskSortOrderZ"
          },
          "NAME_PRIORITY_DATE": {
            "description": "Order collected tasks by NAME, priority, date.",
            "$ref": "#/components/schemas/UserTaskSortOrderZ"
          },
          "PRIORITY_DATE_NAME_INV": {
            "description": "Inverse order collected tasks by priority, date and NAME.",
            "$ref": "#/components/schemas/UserTaskSortOrderZ"
          },
          "DATE_PRIORITY_NAME_INV": {
            "description": "Inverse order collected tasks by date, priority and NAME.",
            "$ref": "#/components/schemas/UserTaskSortOrderZ"
          },
          "NAME_PRIORITY_DATE_INV": {
            "description": "Inverse order collected tasks by NAME, priority, date.",
            "$ref": "#/components/schemas/UserTaskSortOrderZ"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutConfigFiles": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "configFileZ": {
            "$ref": "#/components/schemas/ConfigFileZ"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_parseException": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "exceptionString": {
            "type": "string"
          }
        }
      },
      "ObjLinkC": {
        "type": "object",
        "properties": {
          "mbParentId": {
            "type": "string",
            "description": "DB column: objguidparent"
          },
          "lnParentId": {
            "type": "integer",
            "description": "DB column: objguidparent",
            "format": "int32"
          },
          "mbId": {
            "type": "string",
            "description": "DB column: objguidtarget"
          },
          "lnId": {
            "type": "integer",
            "description": "DB column: objguidtarget",
            "format": "int32"
          },
          "mbLinkId": {
            "type": "string",
            "description": "DB column: linkguid"
          },
          "lnLinkId": {
            "type": "integer",
            "description": "DB column: linkguid",
            "format": "int32"
          },
          "mbTStamp": {
            "type": "string",
            "description": "DB column: linktstamp"
          },
          "lnTStamp": {
            "type": "integer",
            "description": "DB column: linktstamp",
            "format": "int32"
          },
          "mbFlags": {
            "type": "string",
            "description": "DB column: linkflags"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of SordLink\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "UserTaskSortOrderZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from the UserTaskSortOrderC class."
          }
        },
        "description": "This class encapsulates the constants of the UserTaskSortOrderC class.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "MapToDocMask": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/DocMask"
        }
      },
      "FeedPost": {
        "type": "object",
        "properties": {
          "parentAction": {
            "description": "an action where action.\nparentGuid is empty",
            "$ref": "#/components/schemas/Action"
          },
          "sordGuid": {
            "type": "string",
            "description": "GUID of corresponsing Sord"
          },
          "feedGuid": {
            "type": "string",
            "description": "GUID of corresponding feed (read from parentAction.\nfeedGuid)"
          },
          "subActions": {
            "description": "List of all subActions (action.parentGuid \u003d parentAction.\nguid)",
            "$ref": "#/components/schemas/ListOfAction"
          },
          "hashTags": {
            "description": "List of all hashtags of actions if action.type \u003d\u003d EActionType.\nUserComment",
            "$ref": "#/components/schemas/HashSetOfString"
          },
          "mentions": {
            "description": "List of all mentions (UserNames) of actions if action.type \u003d\u003d EActionType.\nUserComment",
            "$ref": "#/components/schemas/HashSetOfString"
          },
          "linkedGuids": {
            "description": "List of GUIDs which are linked in any action if action.type \u003d\u003d EActionType.\nUserComment",
            "$ref": "#/components/schemas/HashSetOfString"
          },
          "creatorIds": {
            "description": "List of all user IDs which created any action",
            "$ref": "#/components/schemas/HashSetOfInteger"
          },
          "text": {
            "type": "string",
            "description": "Text of all actions, separated by a whitespace"
          },
          "textList": {
            "description": "List of all texts of all actions",
            "$ref": "#/components/schemas/ListOfString"
          },
          "lastChanged": {
            "type": "string",
            "description": "Date of last change of any action"
          },
          "versionName": {
            "type": "string",
            "description": "Name of corresponding DocVersion if parentAction.getDocVersionGuid() is set."
          },
          "versionComment": {
            "type": "string",
            "description": "Version comment of corresponding DocVersion if parentAction.getDocVersionGuid() is set."
          }
        },
        "description": "A FeedPost contains a parent action (an action where action.\nparentGuid is empty) and all subactions (actions where\n action.parentGuid \u003d parent action\u0027s guid).\n \n From all actions their information (e.g. hashtags, mentions) are accumulated into lists."
      },
      "FindByESearch": {
        "type": "object",
        "properties": {
          "searchParams": {
            "description": "Deliver the query and where to search with this parameters.",
            "$ref": "#/components/schemas/ESearchParams"
          },
          "searchOptions": {
            "description": "This options must match the called function.",
            "$ref": "#/components/schemas/ESearchOptions"
          }
        },
        "description": "Use this class to search by iSearch with API functionality starting with ELO 11."
      },
      "BRequest_IXServicePortIF_checkoutNotification": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "watchGuid": {
            "type": "string"
          },
          "userGuid": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_startImport": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "filingPath": {
            "type": "string"
          },
          "guidMethod": {
            "type": "integer",
            "format": "int32"
          },
          "options": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutAspect": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "aspectId": {
            "type": "string"
          },
          "aspectZ": {
            "$ref": "#/components/schemas/AspectZ"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BResult_231031238": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreInfo"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "IXServerEventsC": {
        "type": "object",
        "properties": {
          "STREAM_VERSION": {
            "type": "string",
            "description": "Version information used in serialization with IxDataStream"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutWorkflowHistory": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "checkoutWorkflowHistoryParams": {
            "$ref": "#/components/schemas/CheckoutWorkflowHistoryParams"
          }
        }
      },
      "BResult_190251704": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ContentStream"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "ReportInfoC": {
        "type": "object",
        "properties": {
          "ACT_CLIENT_NONE": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_CLIENT_ELOSTART": {
            "type": "integer",
            "description": "Login.",
            "format": "int32"
          },
          "ACT_CLIENT_ELOEND": {
            "type": "integer",
            "description": "Logout.",
            "format": "int32"
          },
          "ACT_CLIENT_COMPLAIN": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_DELETEDOCS": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_ISWRITESESSION": {
            "type": "integer",
            "description": "Used to report a write access session.",
            "format": "int32"
          },
          "ACT_CLIENT_KEYCHANGED": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_USERCHANGED": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_COLORCHANGED": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_PATHCHANGED": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_MASKCHANGED": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_REPORTCHANGED": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_PWDCHANGED": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_SEARCH": {
            "type": "integer",
            "description": "Used to report search completed",
            "format": "int32"
          },
          "ACT_CLIENT_CREATEDOC": {
            "type": "integer",
            "description": "Create a new document entry (for indexing information) in the archive database. ReportInfo.\ntext contains the\n document name (short description).",
            "format": "int32"
          },
          "ACT_CLIENT_CHANGEDOC": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_EDITDOC": {
            "type": "integer",
            "description": "Write the indexing information of a document.",
            "format": "int32"
          },
          "ACT_CLIENT_VIEWDOC": {
            "type": "integer",
            "description": "Read the indexing information of a document.",
            "format": "int32"
          },
          "ACT_CLIENT_ERASEDOC": {
            "type": "integer",
            "description": "Delete/undelete document.\n\u003ctable border\u003d\"2\"\u003e\n \u003ctr\u003e\n \u003ctd\u003eReportInfo.extra1\u003c/td\u003e\n \u003ctd\u003eparent ID.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eReportInfo.extra2\u003c/td\u003e\n \u003ctd\u003e0 if deleted, 1 if undeleted.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eReportInfo.text\u003c/td\u003e\n \u003ctd\u003esord name.\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e",
            "format": "int32"
          },
          "ACT_CLIENT_MOVEDOC": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_REFDOC": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_CHANGEKEY": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_CHANGEKIND": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_CHANGEATTACH": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_CONVERT_FORMAT": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_CHECKOUT": {
            "type": "integer",
            "description": "Get document file for editing. This report information is written, if IXServicePortIF.\ncheckoutDoc is called with\n lock.",
            "format": "int32"
          },
          "ACT_CLIENT_CHECKIN": {
            "type": "integer",
            "description": "Checkin a new document file. ReportInfo.\nextra1 ist set to the new document ID",
            "format": "int32"
          },
          "ACT_CLIENT_SHOWDOC": {
            "type": "integer",
            "description": "Get document file to display (not to edit). This report information is written, if IXServicePortIF.\ncheckoutDoc is\n called without lock.",
            "format": "int32"
          },
          "ACT_CLIENT_DELVERSION": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_CLIENT_CREATESOR": {
            "type": "integer",
            "description": "Create new Sord object",
            "format": "int32"
          },
          "ACT_CLIENT_CHANGESOR": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_EDITSOR": {
            "type": "integer",
            "description": "Edited new Sord object",
            "format": "int32"
          },
          "ACT_CLIENT_VIEWSOR": {
            "type": "integer",
            "description": "Checkout Sord object without lock",
            "format": "int32"
          },
          "ACT_CLIENT_ERASESOR": {
            "type": "integer",
            "description": "Delete/undelete document.\n\u003ctable border\u003d\"2\"\u003e\n \u003ctr\u003e\n \u003ctd\u003eReportInfo.extra1\u003c/td\u003e\n \u003ctd\u003eparent ID.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eReportInfo.extra2\u003c/td\u003e\n \u003ctd\u003e0 if deleted, 1 if undeleted.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eReportInfo.text\u003c/td\u003e\n \u003ctd\u003esord name.\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e",
            "format": "int32"
          },
          "ACT_CLIENT_MOVESOR": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_REFSOR": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_SHOWSOR": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_ADDREF": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_ERASEREF": {
            "type": "integer",
            "description": "Delete/undelete document.\n\u003ctable border\u003d\"2\"\u003e\n \u003ctr\u003e\n \u003ctd\u003eReportInfo.extra1\u003c/td\u003e\n \u003ctd\u003eparent ID.\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eReportInfo.extra2\u003c/td\u003e\n \u003ctd\u003e0 if deleted, 1 if undeleted.\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e",
            "format": "int32"
          },
          "ACT_CLIENT_MOVEREF": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_WVFIRST": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_WVNEW": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_WVCHANGE": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_WVDELETE": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_WVSEND": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_WVRECEIVE": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_WVNEWSEND": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_WVCHANGESEND": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_WVLAST": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_POSTFIRST": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_POSTDELETE": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_POSTDOCBUILD": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_POSTEDIT": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_POSTSCHLAGWORT": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_POSTCOPYTO": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_POSTMOVETO": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_POSTMOVE": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_POSTCOLLECT": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_POSTNEWOLE": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_POSTEXPAND": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_POSTIMPORT": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_POSTRECEIVE": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_POSTLAST": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_CREATEFLOWTEMPL": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_EDITFLOWTEMPL": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_DELFLOWTEMPL": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_STARTFLOW": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_RECEIVEFLOW": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_FORWARDFLOW": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_EDITFLOWACTIVE": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_DELFLOWACTIVE": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_FLOWTIMELIMIT": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_FLOWERRORYESNO": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_MASKTEXTTOOLONG": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_NEWVERT": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_DELVERT": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_FREEVERT": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_REMOVEVERT": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_SETVERT": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_RESETVERT": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_PICKPOST": {
            "type": "integer",
            "description": "unused",
            "format": "int32"
          },
          "ACT_CLIENT_DELETENOTE": {
            "type": "integer",
            "description": "Delete note.",
            "format": "int32"
          },
          "ACT_CLIENT_CREATENOTE": {
            "type": "integer",
            "description": "Create note.",
            "format": "int32"
          },
          "ACT_CLIENT_EDITNOTE": {
            "type": "integer",
            "description": "Overwrite note.",
            "format": "int32"
          },
          "ACT_DM_READDOC": {
            "type": "integer",
            "description": "Read document file from DM.",
            "format": "int32"
          },
          "ACT_IX_FIRST": {
            "type": "integer",
            "description": "Indexserver specific report codes are higher than ACT_IX_FIRST",
            "format": "int32"
          },
          "ACT_IX_LAST": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_LOGIN": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_LOGOUT": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_MINI_APP_LOGIN": {
            "type": "integer",
            "description": "Reporteintrag für Mini-App-Login.\nRID11587",
            "format": "int32"
          },
          "ACT_IX_LOCK_ARCHIVE": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CREATE_USER": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CHECKIN_USER": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_DELETE_USER": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CREATE_KEY": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CHECKIN_KEY": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_DELETE_KEY": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CREATE_SORD": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CHECKOUT_SORD": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CHECKIN_SORD": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_DELETE_SORD": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_DELETE_REFERENCE": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CHANGE_ACL": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CHANGE_RS": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CREATE_DOCUMENT": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CHANGE_DELDATE": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_COPY_SORD": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_REFERENCE_SORD": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_MOVE_SORD": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_LINK_SORD": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_UNLINK_SORD": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CHECKOUT_DOCVERSION": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CHECKIN_DOCVERSION": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CREATE_DOC_MASK": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CHECKIN_DOC_MASK": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_DELETE_DOC_MASK": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CHECKIN_REPL_NAME": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CHECKIN_REPORT_OPTIONS": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_DELETE_REPORT": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CHECKIN_COLOR": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CHECKIN_USER_PROFILE": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_DELETE_USER_PROFILE": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CREATE_WORKFLOW": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CHECKIN_WORKFLOW": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_DELETE_WORKFLOW": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_EDIT_WORKFLOW_NODE": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_START_WORKFLOW": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_START_ADHOC_WORKFLOW": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_TERMINATE_WORKFLOW": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_TAKE_WORKFLOW_NODE": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_DELEGATE_WORKFLOW": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CHECKIN_CONFIG_FILE": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_DELETE_CONFIG_FILE": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CHECKIN_COUNTER": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_DELETE_COUNTER": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_INCREMENT_COUNTER": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CHECKIN_SORD_TYPE": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_DELETE_SORD_TYPE": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CREATE_NOTE": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CHECKIN_NOTE": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CHECKOUT_NOTE": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_DELETE_NOTE": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_NEWVERT": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_DELVERT": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_FREEVERT": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_REMOVEVERT": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_SETVERT": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_RESETVERT": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_SUBSTITUTION_NEW": {
            "type": "integer",
            "description": "A new substitution is checked in with\n{@link IXServicePortIF#checkinSubstitutions(ClientInfo, de.elo.ix.client.subs.CheckinSubstitutionsInfo, de.elo.ix.client.subs.SubstitutionZ, LockZ)}\n \n \u003cp\u003e\n The following values in {@link ReportInfo} are set:\u003cbr\u003e\n {@link ReportInfo#extra1} \u003d {@link Substitution#userId}\u003cbr\u003e\n {@link ReportInfo#extra2} \u003d {@link Substitution#substituteId}\u003cbr\u003e\n {@link ReportInfo#extraInfo} \u003d {@link Substitution}\n \u003c/p\u003e\n \n \u003cp\u003e\n Overrides {@link #ACT_IX_NEWVERT}\n \u003c/p\u003e",
            "format": "int32"
          },
          "ACT_IX_SUBSTITUTION_DELETE": {
            "type": "integer",
            "description": "A substitution is deleted with\n{@link IXServicePortIF#deleteSubstitutions(ClientInfo, de.elo.ix.client.subs.DeleteSubstitutionsInfo, LockZ)}\n \n \u003cp\u003e\n The following values in {@link ReportInfo} are set:\u003cbr\u003e\n {@link ReportInfo#extra1} \u003d {@link Substitution#userId}\u003cbr\u003e\n {@link ReportInfo#extra2} \u003d {@link Substitution#substituteId}\u003cbr\u003e\n {@link ReportInfo#extraInfo} \u003d {@link Substitution}\n \u003c/p\u003e\n \n \u003cp\u003e\n Overrides {@link #ACT_IX_DELVERT}\n \u003c/p\u003e",
            "format": "int32"
          },
          "ACT_IX_SUBSTITUTION_DEACTIVATE": {
            "type": "integer",
            "description": "A substitution is deactivated with {@link IXServicePortIF#deactivateSubstitution(ClientInfo, String, LockZ)}\n\u003cp\u003e\n The following values in {@link ReportInfo} are set:\u003cbr\u003e\n {@link ReportInfo#extra1} \u003d {@link Substitution#userId}\u003cbr\u003e\n {@link ReportInfo#extra2} \u003d {@link Substitution#substituteId}\u003cbr\u003e\n {@link ReportInfo#extraInfo} \u003d {@link Substitution}\n \u003c/p\u003e\n \n \u003cp\u003e\n Overrides {@link #ACT_IX_REMOVEVERT}\n \u003c/p\u003e",
            "format": "int32"
          },
          "ACT_IX_SUBSTITUTION_ACTIVATE": {
            "type": "integer",
            "description": "A substitution is activated with {@link IXServicePortIF#activateSubstitution(ClientInfo, String, LockZ)}.\n\u003cp\u003e\n The following values in {@link ReportInfo} are set:\u003cbr\u003e\n {@link ReportInfo#extra1} \u003d {@link Substitution#userId}\u003cbr\u003e\n {@link ReportInfo#extra2} \u003d {@link Substitution#substituteId}\u003cbr\u003e\n {@link ReportInfo#extraInfo} \u003d {@link Substitution}\n \u003c/p\u003e\n \n \u003cp\u003e\n Overrides {@link #ACT_IX_SETVERT}\n \u003c/p\u003e",
            "format": "int32"
          },
          "ACT_IX_SUBSTITUTION_CHANGE": {
            "type": "integer",
            "description": "An existing substitution is changed with\n{@link IXServicePortIF#checkinSubstitutions(ClientInfo, de.elo.ix.client.subs.CheckinSubstitutionsInfo, de.elo.ix.client.subs.SubstitutionZ, LockZ)}\n \n \u003cp\u003e\n The following values in {@link ReportInfo} are set:\u003cbr\u003e\n {@link ReportInfo#extra1} \u003d {@link Substitution#userId}\u003cbr\u003e\n {@link ReportInfo#extra2} \u003d {@link Substitution#substituteId}\u003cbr\u003e\n {@link ReportInfo#extraInfo} \u003d {@link Substitution}\n \u003c/p\u003e",
            "format": "int32"
          },
          "ACT_IX_SUBSTITUTION_FORWARD": {
            "type": "integer",
            "description": "A substitution is forwarded with\n{@link IXServicePortIF#forwardSubstitution(ClientInfo, de.elo.ix.client.subs.ForwardSubstitutionInfo, LockZ)}.\n \n \u003cp\u003e\n The following values in {@link ReportInfo} are set (of the new Substitution object):\u003cbr\u003e\n {@link ReportInfo#extra1} \u003d {@link Substitution#userId}\u003cbr\u003e\n {@link ReportInfo#extra2} \u003d {@link Substitution#substituteId}\u003cbr\u003e\n {@link ReportInfo#text} \u003d former substitute id\u003cbr\u003e\n {@link ReportInfo#extraInfo} \u003d {@link Substitution}\n \u003c/p\u003e",
            "format": "int32"
          },
          "ACT_IX_SUBSTITUTION_TRANSFER": {
            "type": "integer",
            "description": "A substitution is transfered with\n{@link IXServicePortIF#forwardSubstitution(ClientInfo, de.elo.ix.client.subs.ForwardSubstitutionInfo, LockZ)}.\n \n \u003cp\u003e\n The following values in {@link ReportInfo} are set (of the new Substitution object):\u003cbr\u003e\n {@link ReportInfo#extra1} \u003d {@link Substitution#userId}\u003cbr\u003e\n {@link ReportInfo#extra2} \u003d {@link Substitution#substituteId}\u003cbr\u003e\n {@link ReportInfo#text} \u003d former substitute id\u003cbr\u003e\n {@link ReportInfo#extraInfo} \u003d {@link Substitution}\n \u003c/p\u003e",
            "format": "int32"
          },
          "ACT_IX_CREATE_ASPECT": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_CHECKIN_ASPECT": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_IX_DELETE_ASPECT": {
            "type": "integer",
            "format": "int32"
          },
          "ACT_CUSTOM_FIRST": {
            "type": "integer",
            "description": "Custom client specific report codes are higher than ACT_CUSTOM_FIRST",
            "format": "int32"
          },
          "ACT_CUSTOM_LAST": {
            "type": "integer",
            "description": "Custom client specific report codes are lower than ACT_CUSTOM_LAST",
            "format": "int32"
          },
          "EXTRA2_LOCK": {
            "type": "integer",
            "format": "int32"
          },
          "EXTRA2_FORCE": {
            "type": "integer",
            "format": "int32"
          },
          "EXTRA2_DOCVERSION": {
            "type": "integer",
            "format": "int32"
          },
          "EXTRA2_ATTACHMENT": {
            "type": "integer",
            "format": "int32"
          },
          "EXTRA2_SIGNATURE": {
            "type": "integer",
            "format": "int32"
          },
          "EXTRA2_PREVIEW": {
            "type": "integer",
            "format": "int32"
          },
          "EXTRA2_FINALLY": {
            "type": "integer",
            "format": "int32"
          },
          "EXTRA2_WF_ACTIVE": {
            "type": "integer",
            "format": "int32"
          },
          "EXTRA2_WF_TEMPLATE": {
            "type": "integer",
            "format": "int32"
          },
          "EXTRA2_WF_FINISHED": {
            "type": "integer",
            "format": "int32"
          },
          "EXTRA2_WF_TERMINATE": {
            "type": "integer",
            "format": "int32"
          },
          "EXTRA2_WF_CANCEL": {
            "type": "integer",
            "format": "int32"
          },
          "EXTRA2_NOTE_NORMAL": {
            "type": "integer",
            "format": "int32"
          },
          "EXTRA2_NOTE_PERSONAL": {
            "type": "integer",
            "format": "int32"
          },
          "EXTRA2_NOTE_STAMP": {
            "type": "integer",
            "format": "int32"
          },
          "EXTRA2_SSO_LOGIN": {
            "type": "integer",
            "format": "int32"
          },
          "EXTRA2_ANNOTATION_MARKER": {
            "type": "integer",
            "format": "int32"
          },
          "EXTRA2_ANNOTATION_NOTE": {
            "type": "integer",
            "format": "int32"
          },
          "EXTRA2_REPORT_AS_LOGIN": {
            "type": "integer",
            "format": "int32"
          },
          "EXTRA2_ALL_NOTES_OF_SORD": {
            "type": "integer",
            "description": "Extra2 value used when all notes of a Sord are read.",
            "format": "int32"
          },
          "EXTRA2_INDEXSEARCH": {
            "type": "integer",
            "format": "int32"
          },
          "mbAction": {
            "type": "string"
          },
          "mbComment": {
            "type": "string"
          },
          "mbActTimeISO": {
            "type": "string"
          },
          "mbUserName": {
            "type": "string"
          }
        },
        "description": "Report information.\n\u003cp\u003e\n Indexserver writes the following report entries\n \u003c/p\u003e\n \u003ctable border\u003d\"2\"\u003e\n \u003ctr\u003e\n \u003ctd\u003eReportInfo.action\u003c/td\u003e\n \u003ctd\u003eReportInfo.objId\u003c/td\u003e\n \u003ctd\u003eReportInfo.extra1\u003c/td\u003e\n \u003ctd\u003eReportInfo.extra2\u003c/td\u003e\n \u003ctd\u003eReportInfo.comment\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_LOGIN\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eSSO User ID\u003c/td\u003e\n \u003ctd\u003e[EXTRA2_SSO_LOGIN]\u003c/td\u003e\n \u003ctd\u003eComputer name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_LOGOUT\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_LOCK_ARCHIVE\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eKey ID\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eKey name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CREATE_USER\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eUser ID\u003c/td\u003e\n \u003ctd\u003eUser Flags\u003c/td\u003e\n \u003ctd\u003eUser name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_USER\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eUser ID\u003c/td\u003e\n \u003ctd\u003eUser Flags\u003c/td\u003e\n \u003ctd\u003eUser name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_USER\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eUser ID\u003c/td\u003e\n \u003ctd\u003eUser Flags\u003c/td\u003e\n \u003ctd\u003eUser name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CREATE_KEY\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eKey ID\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eKey name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_KEY\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eKey ID\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eKey name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_KEY\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eKey ID\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eKey name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CREATE_SORD\u003c/td\u003e\n \u003ctd\u003eObject ID\u003c/td\u003e\n \u003ctd\u003eObject type\u003c/td\u003e\n \u003ctd\u003eStorage mask ID\u003c/td\u003e\n \u003ctd\u003eSord name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKOUT_SORD\u003c/td\u003e\n \u003ctd\u003eObject ID\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003ecombination of EXTRA2_*\u003c/td\u003e\n \u003ctd\u003eSord name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_SORD\u003c/td\u003e\n \u003ctd\u003eObject ID\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003ecombination of EXTRA2_*\u003c/td\u003e\n \u003ctd\u003eSord name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_SORD\u003c/td\u003e\n \u003ctd\u003eObject ID\u003c/td\u003e\n \u003ctd\u003eObject type\u003c/td\u003e\n \u003ctd\u003ecombination of EXTRA2_*\u003c/td\u003e\n \u003ctd\u003eSord name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_REFERENCE\u003c/td\u003e\n \u003ctd\u003eObject ID\u003c/td\u003e\n \u003ctd\u003eParent ID\u003c/td\u003e\n \u003ctd\u003ecombination of EXTRA2_*\u003c/td\u003e\n \u003ctd\u003eSord name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_COPY_SORD\u003c/td\u003e\n \u003ctd\u003eunsupported\u003c/td\u003e\n \u003ctd\u003e\u003c/td\u003e\n \u003ctd\u003e\u003c/td\u003e\n \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_REFERENCE_SORD\u003c/td\u003e\n \u003ctd\u003eParent ID\u003c/td\u003e\n \u003ctd\u003eObject ID\u003c/td\u003e\n \u003ctd\u003e\u003c/td\u003e\n \u003ctd\u003eParent name, Object name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_MOVE_SORD\u003c/td\u003e\n \u003ctd\u003eNew parent ID\u003c/td\u003e\n \u003ctd\u003eObject ID\u003c/td\u003e\n \u003ctd\u003eOld parent ID\u003c/td\u003e\n \u003ctd\u003eNew parent name, old parent name, Sord name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_LINK_SORD\u003c/td\u003e\n \u003ctd\u003eFrom object ID\u003c/td\u003e\n \u003ctd\u003eTo object ID\u003c/td\u003e\n \u003ctd\u003e\u003c/td\u003e\n \u003ctd\u003eFrom Sord name, To Sord name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_UNLINK_SORD\u003c/td\u003e\n \u003ctd\u003eFrom object ID\u003c/td\u003e\n \u003ctd\u003eTo object ID\u003c/td\u003e\n \u003ctd\u003e\u003c/td\u003e\n \u003ctd\u003eFrom Sord name, To Sord name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKOUT_DOCVERSION\u003c/td\u003e\n \u003ctd\u003eObject ID\u003c/td\u003e\n \u003ctd\u003eDocument version ID\u003c/td\u003e\n \u003ctd\u003ecombination of EXTRA2_*\u003c/td\u003e\n \u003ctd\u003eObjektname, Versionsnummer\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_DOCVERSION\u003c/td\u003e\n \u003ctd\u003eObjekt-ID\u003c/td\u003e\n \u003ctd\u003eDoc-ID\u003c/td\u003e\n \u003ctd\u003ecombination of EXTRA2_*\u003c/td\u003e\n \u003ctd\u003eObjektname, Versionsnummer\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CREATE_DOC_MASK\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eMask-ID\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eMaskname\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_DOC_MASK\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eMask-ID\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eMaskname\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_DOC_MASK\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eMask-ID\u003c/td\u003e\n \u003ctd\u003ereplace with Mask-ID\u003c/td\u003e\n \u003ctd\u003eMaskname\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_REPL_NAME\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eRepl-ID\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eReplSet-Name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_REPORT_OPTIONS\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_REPORT\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eendDate\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eTS-End-Date\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_COLOR\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eColor-ID\u003c/td\u003e\n \u003ctd\u003ergb\u003c/td\u003e\n \u003ctd\u003eColor-Name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_USER_PROFILE\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eFor User-ID\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eUser-Name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_USER_PROFILE\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eFor User-ID\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eUser-Name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CREATE_WORKFLOW\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eWorkflow-ID\u003c/td\u003e\n \u003ctd\u003ecombination of EXTRA2_*\u003c/td\u003e\n \u003ctd\u003eWorkflow-Name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_WORKFLOW\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eWorkflow-ID\u003c/td\u003e\n \u003ctd\u003ecombination of EXTRA2_*\u003c/td\u003e\n \u003ctd\u003eWorkflow-Name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_WORKFLOW\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eWorkflow-ID\u003c/td\u003e\n \u003ctd\u003ecombination of EXTRA2_*\u003c/td\u003e\n \u003ctd\u003eWorkflow name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_EDIT_WORKFLOW_NODE\u003c/td\u003e\n \u003ctd\u003eObject-ID\u003c/td\u003e\n \u003ctd\u003eWorkflow-ID\u003c/td\u003e\n \u003ctd\u003eNode-ID\u003c/td\u003e\n \u003ctd\u003eNode name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_START_WORKFLOW\u003c/td\u003e\n \u003ctd\u003eObject-ID\u003c/td\u003e\n \u003ctd\u003eWorkflow-ID\u003c/td\u003e\n \u003ctd\u003eTemplate-WF-ID\u003c/td\u003e\n \u003ctd\u003eWorkflow name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_START_ADHOC_WORKFLOW\u003c/td\u003e\n \u003ctd\u003eObject-ID\u003c/td\u003e\n \u003ctd\u003eWorkflow-ID\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eWorkflow name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_TERMINATE_WORKFLOW\u003c/td\u003e\n \u003ctd\u003eObject-ID\u003c/td\u003e\n \u003ctd\u003eWorkflow-ID\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eWorkflow-Name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_CONFIG_FILE\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eConfig file name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_CONFIG_FILE\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eConfig file name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_COUNTER\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eValue\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eCounter-Name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_COUNTER\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eCounter-Name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_INCREMENT_COUNTER\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eValue\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eCounter name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_SORD_TYPE\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eID (Sord.type)\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eType name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_SORD_TYPE\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eID (Sord.type)\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003eType name\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CREATE_NOTE\u003c/td\u003e\n \u003ctd\u003eObjekt-ID\u003c/td\u003e\n \u003ctd\u003eNote-ID (internal)\u003c/td\u003e\n \u003ctd\u003ecombination of EXTRA2_*\u003c/td\u003e\n \u003ctd\u003eNote-Guid\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_NOTE\u003c/td\u003e\n \u003ctd\u003eObjekt-ID\u003c/td\u003e\n \u003ctd\u003eNote-ID (internal)\u003c/td\u003e\n \u003ctd\u003ecombination of EXTRA2_*\u003c/td\u003e\n \u003ctd\u003eNote-Guid\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_NOTE\u003c/td\u003e\n \u003ctd\u003eObjekt-ID\u003c/td\u003e\n \u003ctd\u003eNote-ID (internal)\u003c/td\u003e\n \u003ctd\u003ecombination of EXTRA2_*\u003c/td\u003e\n \u003ctd\u003eNote-Guid\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_DM_READDOC\u003c/td\u003e\n \u003ctd\u003eObjekt-ID\u003c/td\u003e\n \u003ctd\u003eDoc-ID\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n \u003c/tr\u003e\n \n \u003ctr\u003e\n \u003ctd\u003eACT_IX_SUBSTITUTION_NEW\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003e{@link Substitution#userId}\u003c/td\u003e\n \u003ctd\u003e{@link Substitution#substituteId}\u003c/td\u003e\n \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_SUBSTITUTION_CHANGE\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003e{@link Substitution#userId}\u003c/td\u003e\n \u003ctd\u003e{@link Substitution#substituteId}\u003c/td\u003e\n \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_SUBSTITUTION_DELETE\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003e{@link Substitution#userId}\u003c/td\u003e\n \u003ctd\u003e{@link Substitution#substituteId}\u003c/td\u003e\n \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_SUBSTITUTION_ACTIVATE\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003e{@link Substitution#userId}\u003c/td\u003e\n \u003ctd\u003e{@link Substitution#substituteId}\u003c/td\u003e\n \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_SUBSTITUTION_DEACTIVATE\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003e{@link Substitution#userId}\u003c/td\u003e\n \u003ctd\u003e{@link Substitution#substituteId}\u003c/td\u003e\n \u003ctd\u003e\u0026nbsp;\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_SUBSTITUTION_TRANSFER\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003e{@link Substitution#userId}\u003c/td\u003e\n \u003ctd\u003e{@link Substitution#substituteId}\u003c/td\u003e\n \u003ctd\u003eprevious substituteId\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_SUBSTITUTION_FORWARD\u003c/td\u003e\n \u003ctd\u003e0\u003c/td\u003e\n \u003ctd\u003e{@link Substitution#userId}\u003c/td\u003e\n \u003ctd\u003e{@link Substitution#substituteId}\u003c/td\u003e\n \u003ctd\u003eprevious substituteId\u003c/td\u003e\n \u003c/tr\u003e\n \n \u003c/table\u003e\n\n \u003cp\u003e\n To enable or disable reporting of actions, action codes have to be transformed into ERP codes first. One ERP code can\n subsume serverel action codes. The ERP codes can be used in checkinReportOptions to manipulate reporting. Furthermore\n they can be used in findFirstReportInfos, FindReportInfo, to search for reported actions. The following table shows\n how actions codes are mapped to report options.\n \u003c/p\u003e\n \n \u003ctable border\u003d\"2\"\u003e\n \u003ctr\u003e\n \u003ctd\u003eAction code, ReportInfoC\u003c/td\u003e\n \u003ctd\u003eERP code, ReportOptionsC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_ELOSTART\u003c/td\u003e\n \u003ctd\u003eERP_LOGOPENARC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_ELOEND\u003c/td\u003e\n \u003ctd\u003eERP_LOGCLOSEARC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_COMPLAIN\u003c/td\u003e\n \u003ctd\u003eERP_LOGCOMPLAIN\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_DELETEDOCS\u003c/td\u003e\n \u003ctd\u003eERP_LOGERADOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_KEYCHANGED\u003c/td\u003e\n \u003ctd\u003eERP_LOGCHANGEKEY\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_USERCHANGED\u003c/td\u003e\n \u003ctd\u003eERP_LOGUSERDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_COLORCHANGED\u003c/td\u003e\n \u003ctd\u003eERP_LOGCHANGEKIND\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_PATHCHANGED\u003c/td\u003e\n \u003ctd\u003eERP_LOGPATHDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_MASKCHANGED\u003c/td\u003e\n \u003ctd\u003eERP_LOGMASKDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_PWDCHANGED\u003c/td\u003e\n \u003ctd\u003eERP_LOGCHANGEPWD\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_CREATEDOC\u003c/td\u003e\n \u003ctd\u003eERP_LOGCREATEDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_EDITDOC\u003c/td\u003e\n \u003ctd\u003eERP_LOGEDITDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_CHANGEDOC\u003c/td\u003e\n \u003ctd\u003eERP_LOGEDITDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_CHANGEATTACH\u003c/td\u003e\n \u003ctd\u003eERP_LOGEDITDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_VIEWDOC\u003c/td\u003e\n \u003ctd\u003eERP_LOGVIEWDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_ERASEDOC\u003c/td\u003e\n \u003ctd\u003eERP_LOGERADOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_MOVEDOC\u003c/td\u003e\n \u003ctd\u003eERP_LOGMOVEDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_REFDOC\u003c/td\u003e\n \u003ctd\u003eERP_LOGREFDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_CHANGEKEY\u003c/td\u003e\n \u003ctd\u003eERP_LOGCHANGEKEY\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_CHANGEKIND\u003c/td\u003e\n \u003ctd\u003eERP_LOGCHANGEKIND\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_CONVERT_FORMAT\u003c/td\u003e\n \u003ctd\u003eERP_CONVERT_FORMAT\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_CHECKOUT\u003c/td\u003e\n \u003ctd\u003eERP_CHECKOUT\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_CHECKIN\u003c/td\u003e\n \u003ctd\u003eERP_CHECKIN\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_CREATESOR\u003c/td\u003e\n \u003ctd\u003eERP_LOGCREATESOR\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_CHANGESOR\u003c/td\u003e\n \u003ctd\u003eERP_LOGEDITDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_EDITSOR\u003c/td\u003e\n \u003ctd\u003eERP_LOGEDITDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_ERASESOR\u003c/td\u003e\n \u003ctd\u003eERP_LOGERASOR\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_MOVESOR\u003c/td\u003e\n \u003ctd\u003eERP_LOGMOVESOR\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_REFSOR\u003c/td\u003e\n \u003ctd\u003eERP_LOGREFSOR\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_ADDREF\u003c/td\u003e\n \u003ctd\u003eERP_LOGREFDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_ERASEREF\u003c/td\u003e\n \u003ctd\u003eERP_LOGERAREF\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_MOVEREF\u003c/td\u003e\n \u003ctd\u003eERP_LOGMOVEDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_WVNEW\u003c/td\u003e\n \u003ctd\u003eERP_WV\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_WVCHANGE\u003c/td\u003e\n \u003ctd\u003eERP_WV\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_WVDELETE\u003c/td\u003e\n \u003ctd\u003eERP_WV\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_WVSEND\u003c/td\u003e\n \u003ctd\u003eERP_WV\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_WVRECEIVE\u003c/td\u003e\n \u003ctd\u003eERP_WV\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_WVNEWSEND\u003c/td\u003e\n \u003ctd\u003eERP_WV\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_WVCHANGESEND\u003c/td\u003e\n \u003ctd\u003eERP_WV\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_POSTFIRST\u003c/td\u003e\n \u003ctd\u003eERP_POSTBOX\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_POSTDELETE\u003c/td\u003e\n \u003ctd\u003eERP_POSTBOX\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_POSTDOCBUILD\u003c/td\u003e\n \u003ctd\u003eERP_POSTBOX\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_POSTEDIT\u003c/td\u003e\n \u003ctd\u003eERP_POSTBOX\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_POSTSCHLAGWORT\u003c/td\u003e\n \u003ctd\u003eERP_POSTBOX\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_POSTCOPYTO\u003c/td\u003e\n \u003ctd\u003eERP_POSTBOX\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_POSTMOVETO\u003c/td\u003e\n \u003ctd\u003eERP_POSTBOX\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_POSTMOVE\u003c/td\u003e\n \u003ctd\u003eERP_POSTBOX\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_POSTCOLLECT\u003c/td\u003e\n \u003ctd\u003eERP_POSTBOX\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_POSTNEWOLE\u003c/td\u003e\n \u003ctd\u003eERP_POSTBOX\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_POSTEXPAND\u003c/td\u003e\n \u003ctd\u003eERP_POSTBOX\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_POSTIMPORT\u003c/td\u003e\n \u003ctd\u003eERP_POSTBOX\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_POSTLAST\u003c/td\u003e\n \u003ctd\u003eERP_POSTBOX\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_CREATEFLOWTEMPL\u003c/td\u003e\n \u003ctd\u003eERP_CREATEFLOWTEMPL\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_EDITFLOWTEMPL\u003c/td\u003e\n \u003ctd\u003eERP_EDITFLOWTEMPL\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_DELFLOWTEMPL\u003c/td\u003e\n \u003ctd\u003eERP_DELFLOWTEMPL\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_STARTFLOW\u003c/td\u003e\n \u003ctd\u003eERP_STARTFLOW\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_RECEIVEFLOW\u003c/td\u003e\n \u003ctd\u003eERP_RECEIVEFLOW\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_FORWARDFLOW\u003c/td\u003e\n \u003ctd\u003eERP_FORWARDFLOW\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_EDITFLOWACTIVE\u003c/td\u003e\n \u003ctd\u003eERP_EDITFLOWACTIVE\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_DELFLOWACTIVE\u003c/td\u003e\n \u003ctd\u003eERP_DELFLOWACTIVE\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_FLOWTIMELIMIT\u003c/td\u003e\n \u003ctd\u003eERP_FLOWTIMELIMT\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_FLOWERRORYESNO\u003c/td\u003e\n \u003ctd\u003eERP_FLOWERRORYESNO\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_REPORTCHANGED\u003c/td\u003e\n \u003ctd\u003eERP_VERSCHIEDEN\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_MASKTEXTTOOLONG\u003c/td\u003e\n \u003ctd\u003eERP_VERSCHIEDEN\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_NEWVERT\u003c/td\u003e\n \u003ctd\u003eERP_NEWVERT\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_DELVERT\u003c/td\u003e\n \u003ctd\u003eERP_DELVERT\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_FREEVERT\u003c/td\u003e\n \u003ctd\u003eERP_FREEVERT\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_REMOVEVERT\u003c/td\u003e\n \u003ctd\u003eERP_REMOVEVERT\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_SETVERT\u003c/td\u003e\n \u003ctd\u003eERP_SETVERT\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_RESETVERT\u003c/td\u003e\n \u003ctd\u003eERP_RESETVERT\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_SHOWDOC\u003c/td\u003e\n \u003ctd\u003eERP_SHOWDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_SHOWSOR\u003c/td\u003e\n \u003ctd\u003eERP_SHOWSOR\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_DELVERSION\u003c/td\u003e\n \u003ctd\u003eERP_DELVERSION\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_CLIENT_PICKPOST\u003c/td\u003e\n \u003ctd\u003eERP_PICKPOST\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_DM_READDOC\u003c/td\u003e\n \u003ctd\u003eERP_LOGVIEWDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_LOGIN\u003c/td\u003e\n \u003ctd\u003eERP_LOGOPENARC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_LOGOUT\u003c/td\u003e\n \u003ctd\u003eERP_LOGCLOSEARC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_LOCK_ARCHIVE\u003c/td\u003e\n \u003ctd\u003eERP_LOGCHANGEKEY\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CREATE_USER\u003c/td\u003e\n \u003ctd\u003eERP_LOGUSERDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_USER\u003c/td\u003e\n \u003ctd\u003eERP_LOGUSERDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_USER\u003c/td\u003e\n \u003ctd\u003eERP_LOGUSERDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CREATE_KEY\u003c/td\u003e\n \u003ctd\u003eERP_LOGCHANGEKEY\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_KEY\u003c/td\u003e\n \u003ctd\u003eERP_LOGCHANGEKEY\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_KEY\u003c/td\u003e\n \u003ctd\u003eERP_LOGCHANGEKEY\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CREATE_SORD\u003c/td\u003e\n \u003ctd\u003eERP_LOGCREATEDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKOUT_SORD\u003c/td\u003e\n \u003ctd\u003eERP_LOGVIEWDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_SORD\u003c/td\u003e\n \u003ctd\u003eERP_LOGEDITDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_SORD\u003c/td\u003e\n \u003ctd\u003eERP_LOGERADOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_REFERENCE\u003c/td\u003e\n \u003ctd\u003eERP_LOGERAREF\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_COPY_SORD\u003c/td\u003e\n \u003ctd\u003eERP_LOGCREATEDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_REFERENCE_SORD\u003c/td\u003e\n \u003ctd\u003eERP_LOGREFDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_MOVE_SORD\u003c/td\u003e\n \u003ctd\u003eERP_LOGMOVEDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_LINK_SORD\u003c/td\u003e\n \u003ctd\u003eERP_LOGREFDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_UNLINK_SORD\u003c/td\u003e\n \u003ctd\u003eERP_LOGREFDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKOUT_DOCVERSION\u003c/td\u003e\n \u003ctd\u003eERP_LOGVIEWDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_DOCVERSION\u003c/td\u003e\n \u003ctd\u003eERP_CHECKIN\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CREATE_DOC_MASK\u003c/td\u003e\n \u003ctd\u003eERP_LOGMASKDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_DOC_MASK\u003c/td\u003e\n \u003ctd\u003eERP_LOGMASKDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_DOC_MASK\u003c/td\u003e\n \u003ctd\u003eERP_LOGMASKDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_REPL_NAME\u003c/td\u003e\n \u003ctd\u003eERP_LOGKEYDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_REPORT_OPTIONS\u003c/td\u003e\n \u003ctd\u003eERP_LOGKEYDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_REPORT\u003c/td\u003e\n \u003ctd\u003eERP_LOGKEYDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_COLOR\u003c/td\u003e\n \u003ctd\u003eERP_LOGCOLORDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_USER_PROFILE\u003c/td\u003e\n \u003ctd\u003eERP_LOGKEYDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_USER_PROFILE\u003c/td\u003e\n \u003ctd\u003eERP_LOGKEYDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CREATE_WORKFLOW\u003c/td\u003e\n \u003ctd\u003eERP_CREATEFLOWTEMPL\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_WORKFLOW\u003c/td\u003e\n \u003ctd\u003eERP_EDITFLOWTEMPL\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_WORKFLOW\u003c/td\u003e\n \u003ctd\u003eERP_DELFLOWTEMPL\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_EDIT_WORKFLOW_NODE\u003c/td\u003e\n \u003ctd\u003eERP_FORWARDFLOW\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_START_WORKFLOW\u003c/td\u003e\n \u003ctd\u003eERP_STARTFLOW\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_START_ADHOC_WORKFLOW\u003c/td\u003e\n \u003ctd\u003eERP_STARTFLOW\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_TERMINATE_WORKFLOW\u003c/td\u003e\n \u003ctd\u003eERP_FORWARDFLOW\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_TAKE_WORKFLOW_NODE\u003c/td\u003e\n \u003ctd\u003eERP_FORWARDFLOW\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_CONFIG_FILE\u003c/td\u003e\n \u003ctd\u003eERP_LOGKEYDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_CONFIG_FILE\u003c/td\u003e\n \u003ctd\u003eERP_LOGKEYDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_COUNTER\u003c/td\u003e\n \u003ctd\u003eERP_LOGKEYDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_COUNTER\u003c/td\u003e\n \u003ctd\u003eERP_LOGKEYDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_INCREMENT_COUNTER\u003c/td\u003e\n \u003ctd\u003eERP_LOGKEYDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_SORD_TYPE\u003c/td\u003e\n \u003ctd\u003eERP_LOGKEYDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_SORD_TYPE\u003c/td\u003e\n \u003ctd\u003eERP_LOGKEYDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CREATE_NOTE\u003c/td\u003e\n \u003ctd\u003eERP_LOGKEYDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_NOTE\u003c/td\u003e\n \u003ctd\u003eERP_LOGEDITDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKOUT_NOTE\u003c/td\u003e\n \u003ctd\u003eERP_LOGEDITDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_NOTE\u003c/td\u003e\n \u003ctd\u003eERP_LOGEDITDOC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_NEWVERT\u003c/td\u003e\n \u003ctd\u003eERP_NEWVERT\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELVERT\u003c/td\u003e\n \u003ctd\u003eERP_DELVERT\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_FREEVERT\u003c/td\u003e\n \u003ctd\u003eERP_FREEVERT\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_REMOVEVERT\u003c/td\u003e\n \u003ctd\u003eERP_REMOVEVERT\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_SETVERT\u003c/td\u003e\n \u003ctd\u003eERP_SETVERT\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_RESETVERT\u003c/td\u003e\n \u003ctd\u003eERP_RESETVERT\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_DM_READDOC\u003c/td\u003e\n \u003ctd\u003eERP_DM_READDOC\u003c/td\u003e\n \u003c/tr\u003e\n \n \u003ctr\u003e\n \u003ctd\u003eACT_IX_SUBSTITUTION_NEW\u003c/td\u003e\n \u003ctd\u003eERP_SUBSTITUTIONS\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_SUBSTITUTION_CHANGE\u003c/td\u003e\n \u003ctd\u003eERP_SUBSTITUTIONS\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_SUBSTITUTION_DELETE\u003c/td\u003e\n \u003ctd\u003eERP_SUBSTITUTIONS\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_SUBSTITUTION_ACTIVATE\u003c/td\u003e\n \u003ctd\u003eERP_SUBSTITUTIONS\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_SUBSTITUTION_DEACTIVATE\u003c/td\u003e\n \u003ctd\u003eERP_SUBSTITUTIONS\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_SUBSTITUTION_TRANSFER\u003c/td\u003e\n \u003ctd\u003eERP_SUBSTITUTIONS\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_SUBSTITUTION_FORWARD\u003c/td\u003e\n \u003ctd\u003eERP_SUBSTITUTIONS\u003c/td\u003e\n \u003c/tr\u003e\n \n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CREATE_ASPECT\u003c/td\u003e\n \u003ctd\u003eERP_LOGASPECTDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_CHECKIN_ASPECT\u003c/td\u003e\n \u003ctd\u003eERP_LOGASPECTDATA\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eACT_IX_DELETE_ASPECT\u003c/td\u003e\n \u003ctd\u003eERP_LOGASPECTDATA\u003c/td\u003e\n \u003c/tr\u003e\n *\n \u003c/table\u003e"
      },
      "WFNodeMatrix": {
        "type": "object",
        "properties": {
          "assocs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFNodeAssoc"
            }
          }
        },
        "description": "\u003cp\u003e\nStores the relationship between workflow nodes\n \u003c/p\u003e\n \u003cp\u003e\n Administers the bridges(connections) in a workflow diagram. These are objects of type WorkFlowNodeAssoc.\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_checkoutDocMask": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "maskId": {
            "type": "string"
          },
          "docMaskZ": {
            "$ref": "#/components/schemas/DocMaskZ"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "SessionInfoParams": {
        "type": "object"
      },
      "BRequest_FeedService_findPostActions": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "actionGuid": {
            "type": "string"
          },
          "actionZ": {
            "$ref": "#/components/schemas/ActionZ"
          }
        }
      },
      "BRequest_IXServicePortIF_createRsaKeys": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "UpdaterConfig": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/SearchIndexerStatus"
          },
          "nextRunAt": {
            "type": "string",
            "format": "date-time"
          },
          "intervalMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "updateNewerThan": {
            "type": "string",
            "format": "date-time"
          },
          "progressInPercent": {
            "type": "integer",
            "format": "int32"
          },
          "ixid": {
            "type": "string",
            "description": "This Indexserver instance is processing the update."
          },
          "lastException": {
            "type": "string",
            "description": "Last exception occured during processing."
          },
          "lockName": {
            "type": "string",
            "description": "Process runs under this user account."
          }
        },
        "description": "Configuration and status of updater process."
      },
      "MoveDocumentsInfo": {
        "type": "object",
        "properties": {
          "sourcePathId": {
            "type": "string",
            "description": "ID of the source storage path."
          },
          "targetPathId": {
            "type": "string",
            "description": "ID of the target storage path."
          },
          "startDate": {
            "type": "string",
            "description": "Start date."
          },
          "endDate": {
            "type": "string",
            "description": "End date."
          }
        },
        "description": "Parameter class of the function {@link IXServicePortIF#moveDocuments(ClientInfo, MoveDocumentsInfo)}."
      },
      "BRequest_IXServicePortIF_queryJobState": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "jobGuid": {
            "type": "string"
          },
          "activeJobs": {
            "type": "boolean"
          },
          "finishedJobs": {
            "type": "boolean"
          },
          "fullInfo": {
            "type": "boolean"
          }
        }
      },
      "WFNodeZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from the WFNodeC class."
          }
        },
        "description": "This class encapsulates the constants of the WFNodeC class.\n\u003cp\u003e\n Copyright: Copyright (c) 2011\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_delegateWorkFlowNode": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "delegateNodeInfo": {
            "$ref": "#/components/schemas/WFDelegateNodeInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ListOfQueryObject": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/QueryObject"
        }
      },
      "ForwardWorkflowNodeResult": {
        "type": "object"
      },
      "ListOfDomain": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Domain"
        }
      },
      "BRequest_RawStreamService_upload": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "params": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "is": {
            "$ref": "#/components/schemas/BStreamReference"
          }
        }
      },
      "LoginScriptOptions": {
        "type": "object",
        "properties": {
          "clientName": {
            "type": "string",
            "description": "Unified Name for the client application.\nThe value of this field must be one value of\n {{@link LoginScriptOptionsC}.CLIENT_NAME_*}."
          },
          "techUser": {
            "type": "string",
            "description": "User name used for authentication. This member is only valid for run-as logins.\nIt contains the name of the\n technical user used for authentication."
          }
        },
        "description": "Options for function {@link IXServerEvents#onBeforeLogin(IXServerEventsContext, String, LoginScriptOptions)}"
      },
      "MyELOService": {
        "type": "object"
      },
      "HashTag": {
        "type": "object",
        "properties": {
          "hstgGuid": {
            "type": "string",
            "description": "HashTag GUID. Unique identifier."
          },
          "hstgName": {
            "type": "string",
            "description": "HashTag Name."
          },
          "createDateIso": {
            "type": "string",
            "description": "Create date. It holds the ISO formatted create date in the time zone of the client application.\nIn order to convert\n this value into a date object, invoke function {@link de.elo.ix.client.IXConnection#isoToDate}."
          },
          "lastUsedIso": {
            "type": "string",
            "description": "Last used.\nIt holds the ISO formatted date of the last use of this HashTag In order to convert this value into a\n date object, invoke function {@link de.elo.ix.client.IXConnection#isoToDate}."
          },
          "counter": {
            "type": "integer",
            "description": "Counter. Counts how often this HashTag is used.",
            "format": "int32"
          },
          "tStamp": {
            "type": "string",
            "description": "Timestamp for replication."
          },
          "status": {
            "type": "integer",
            "description": "Status.",
            "format": "int32"
          }
        },
        "description": "This class represents a HashTag"
      },
      "BRequest_IXServicePortIF_collectWorkFlowNodes": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "flowName": {
            "type": "string"
          },
          "wfTypeZ": {
            "$ref": "#/components/schemas/WFTypeZ"
          },
          "nodeName": {
            "type": "string"
          },
          "nodeType": {
            "type": "integer",
            "format": "int32"
          },
          "objId": {
            "type": "string"
          },
          "enterDateIso": {
            "type": "string"
          },
          "exitDateIso": {
            "type": "string"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "onlyActive": {
            "type": "boolean"
          },
          "onlyStartNodes": {
            "type": "boolean"
          }
        }
      },
      "SortOrderC": {
        "type": "object",
        "properties": {
          "MANUAL": {
            "type": "integer",
            "description": "Subitems are sorted manually.",
            "format": "int32"
          },
          "ALPHA": {
            "type": "integer",
            "description": "Subitems are sorted by name.",
            "format": "int32"
          },
          "XDATE": {
            "type": "integer",
            "description": "Subitems are sorted by external date.",
            "format": "int32"
          },
          "IDATE": {
            "type": "integer",
            "description": "Subitems are sorted by internal date.",
            "format": "int32"
          },
          "IXDATE": {
            "type": "integer",
            "description": "Subitems are sorted by external date descending.",
            "format": "int32"
          },
          "IIDATE": {
            "type": "integer",
            "description": "Subitems are sorted by internal date descending.",
            "format": "int32"
          },
          "IALPHA": {
            "type": "integer",
            "description": "Subitems are sorted by name descending.",
            "format": "int32"
          },
          "DEFAULT": {
            "type": "integer",
            "format": "int32"
          },
          "NONE": {
            "type": "integer",
            "format": "int32"
          },
          "USERNAME": {
            "type": "integer",
            "description": "Used for the ascending ordering of threads by username.\nThis value can be used for\n {@link FindBackgroundThreadOptions#sortOrder}.",
            "format": "int32"
          },
          "IUSERNAME": {
            "type": "integer",
            "description": "Used for the descending ordering of threads by username.\nThis value can be used for\n {@link FindBackgroundThreadOptions#sortOrder}.",
            "format": "int32"
          },
          "dummy": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "This class contains constants for sorting of archive entries and search results."
      },
      "IntListValue": {
        "type": "object",
        "properties": {
          "valueList": {
            "description": "A list of integer values which is joined by AND or OR depending on \u003ccode\u003eandOperator\u003c/code\u003e.",
            "$ref": "#/components/schemas/ListOfIntValue"
          },
          "andOperator": {
            "type": "boolean",
            "description": "Connective of list elements (default is OR (\u003dfalse) )."
          }
        },
        "description": "A list of integer values which is joined by AND or OR depending on \u003ccode\u003eandOperator\u003c/code\u003e.\n\u003cbr\u003e\n Defaults to an OR-disjunction."
      },
      "BRequest_IXServicePortIF_startExportExt": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "options": {
            "$ref": "#/components/schemas/ExportExtOptions"
          }
        }
      },
      "BResult_809229049": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CryptInfo"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_forwardSubstitution": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "forwardSubstitutionInfo": {
            "$ref": "#/components/schemas/ForwardSubstitutionInfo"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "IndexServerForArchive": {
        "type": "object",
        "properties": {
          "arcName": {
            "type": "string",
            "description": "Archive name."
          },
          "url": {
            "type": "string",
            "description": "Index Server URL."
          }
        },
        "description": "\u003cp\u003e\nAssociation between Indexserver URL and archive name.\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_adminMode": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "mode": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "FindForKeywordingRelation": {
        "type": "object",
        "properties": {
          "filter": {
            "type": "string",
            "description": "Filter string applied to short description of Sords.\nThis filter has to match {@link Sord#name} to append the Sord\n to the result. The filter can have one wildcard character at the end that matches any character, see\n {@link SessionOptionsC#DB_WILDCARDS}, wildcard for any character (asterix by default)."
          },
          "docMaskLine": {
            "description": "Keywording field definition for which Sord relations should be found.\nThis object must contain\n {@link DocMaskLine#allowedMaskIdsForKeywordingRelation}. A sord object must be assigned to one of this keywording\n forms to be added to the result list.",
            "$ref": "#/components/schemas/DocMaskLine"
          }
        },
        "description": "Criteria for searching sords for keywording relation."
      },
      "ListOfDoubleValue": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DoubleValue"
        }
      },
      "BRequest_MyELOService_checkState": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userGuidOrID": {
            "type": "string"
          },
          "sinceDateIso": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_getConstants": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "EventListener": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventFilter"
            }
          }
        },
        "description": "This class describes an event bus listener."
      },
      "SearchIndexerStatus": {
        "type": "object",
        "properties": {
          "Inactive": {
            "$ref": "#/components/schemas/SearchIndexerStatus"
          },
          "Sleeping": {
            "$ref": "#/components/schemas/SearchIndexerStatus"
          },
          "Running": {
            "$ref": "#/components/schemas/SearchIndexerStatus"
          }
        }
      },
      "WFNodeMatrixC": {
        "type": "object",
        "properties": {
          "ALWAYS": {
            "type": "integer",
            "description": "Connection type for non-decision nodes. The connection will always be utilised to reach the next node.\nNo\n conditions have to be fulfilled.",
            "format": "int32"
          },
          "IF_FALSE": {
            "type": "integer",
            "description": "This connection is the FALSE connection following a decision node.\nThis connection will be utilised when the IF\n requirement is not fulfilled.",
            "format": "int32"
          },
          "IF_TRUE": {
            "type": "integer",
            "description": "This connection is the TRUE connection following a decision node.\nThis connection will be utilised when the IF\n requirement is fulfilled.",
            "format": "int32"
          },
          "IF_OVERTIME": {
            "type": "integer",
            "description": "This connection is only for the case of overtime.",
            "format": "int32"
          }
        },
        "description": "These constants describe the type of connection between two nodes.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ContentStreamC": {
        "type": "object",
        "properties": {
          "CONTENT_LENGTH_UNKNOWN": {
            "type": "string",
            "description": "Pseudo content length for streams of unknown size."
          }
        },
        "description": "Constants related to {@link ContentStream}."
      },
      "Keyword": {
        "type": "object",
        "properties": {
          "add": {
            "type": "boolean",
            "description": "\u003cp\u003e\nPrefix the text of a child keyword with the text of this keyword. This member is interpreted in\n \u003ccode\u003ecookKeywords\u003c/code\u003e. The following relationship exists between the members \u003ccode\u003eenabled, add, raw\u003c/code\u003e\n \u003c/p\u003e\n \u003ctable border\u003d\"2\"\u003e\n \u003ctr\u003e\n \u003ctd\u003econdition\u003c/td\u003e\n \u003ctd\u003econclusion\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e\u003ccode\u003eadd\u003dtrue\u003c/code\u003e\u003c/td\u003e\n \u003ctd\u003e\u003ccode\u003eenabled\u003dfalse, raw\u003dtrue\u003c/code\u003e\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003e\u003ccode\u003eenabled\u003dtrue\u003c/code\u003e\u003c/td\u003e\n \u003ctd\u003e\u003ccode\u003eadd\u003dfalse, raw\u003dany\u003c/code\u003e\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Keyword"
            }
          },
          "enabled": {
            "type": "boolean",
            "description": "If true, this keyword can be used as a value for an index property.\nOtherwise its only purpose is to structure the\n keyword hierachy."
          },
          "id": {
            "type": "string",
            "description": "Keyword ID. Consists of: groupid + orderid, orderid begins with a \".\"."
          },
          "raw": {
            "type": "boolean",
            "description": "The function \u003ccode\u003ecookKeyword()\u003c/code\u003e must be called for this keyword in order to use it for an index property.\nThis is because it contains placeholders that must be substituted or one of the parent keywords should be added."
          },
          "text": {
            "type": "string",
            "description": "Keyword text. This term is assigned to an index property.\nThe member \u003ccode\u003eraw\u003c/code\u003e should be checked before this\n term is used. This text can be translated into reps. from the users language: set\n \u003ccode\u003eSessionOptionsC.TRANSLATE_TERM\u003c/code\u003e."
          }
        }
      },
      "ArrayOfFindByFulltextCtrlResultItem": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FindByFulltextCtrlResultItem"
        }
      },
      "BRequest_IXServerEvents_onBeforeStartWorkFlow": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "workflow": {
            "$ref": "#/components/schemas/WFDiagram"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          }
        }
      },
      "MapHist": {
        "type": "object",
        "properties": {
          "histGuid": {
            "type": "string",
            "description": "GUID of the SordHist object."
          },
          "histSource": {
            "type": "integer",
            "description": "Identifies the application with which changes were made to the keywording.",
            "format": "int32"
          },
          "mapGuid": {
            "type": "string",
            "description": "GUID of the map object."
          },
          "timeStampLocal": {
            "type": "string",
            "description": "Timestamp of the change in the timezone of the client. The format is JJJJ.MM.DD.hh.mm.\nss"
          },
          "timeStampUTC": {
            "type": "string",
            "description": "Timestamp of the change in the timezone of the client, in UTC form. The format is JJJJ.MM.DD.hh.mm.\nss"
          },
          "userName": {
            "type": "string",
            "description": "The name of the user who carried out the changes."
          },
          "userId": {
            "type": "integer",
            "description": "The user who carried out the changes.",
            "format": "int32"
          },
          "workStation": {
            "type": "string",
            "description": "The name of the computer from which the change was carried out.\nThis is the parameter clientComputer which is\n provided by the ix.login function."
          },
          "histItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MapHistItem"
            }
          },
          "mapId": {
            "type": "string",
            "description": "ID of the map object."
          }
        },
        "description": "Version history for maps."
      },
      "BResult_1663767661": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/WFDiagram"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_IXServicePortIF_createActivity": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "projectName": {
            "type": "string"
          },
          "objId": {
            "type": "string"
          }
        }
      },
      "ObjKeyData": {
        "type": "object",
        "properties": {
          "objId": {
            "type": "integer",
            "description": "DB column: parentid",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "DB column: okeyno",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "DB column: okeyname"
          },
          "data": {
            "type": "string",
            "description": "DB column: okeydata"
          },
          "udata": {
            "type": "string",
            "description": "DB column: okeyudata"
          },
          "sdata": {
            "type": "string",
            "description": "DB column: okeysdata"
          },
          "odouble": {
            "type": "number",
            "description": "DB column: odouble",
            "format": "double"
          }
        },
        "description": "\u003cp\u003e\nInternal use.\n \u003c/p\u003e"
      },
      "SessionOptionsC": {
        "type": "object",
        "properties": {
          "CLIENT_APP_NAME": {
            "type": "string",
            "description": "Client application name. Optional."
          },
          "CLIENT_APP_VERSION": {
            "type": "string",
            "description": "Client application version. Optional."
          },
          "CLIENT_APP_TYPE": {
            "type": "string",
            "description": "Client application type. Mandatory.\nThe appropriate value for partner applications is TYPE_PARTNER_APPLICATION\n unless a special type is arranged."
          },
          "TYPE_PARTNER_APPLICATION": {
            "type": "string",
            "description": "This option value has to be used for option CLIENT_APP_TYPE if a partner application connects to IX."
          },
          "APP_TYPE_MINI_CLIENT": {
            "type": "string",
            "description": "Reserved. This value is reserved for ELO applications. Unauthorized usage violates the ELO licensing terms."
          },
          "DB_ESCAPE_CHAR": {
            "type": "string",
            "description": "This character is used in the SQL statement, if the search criterias contain one of the SQL wildcard characters:\n\u0026quot;%\u0026quot;, \u0026quot;_\u0026quot;. It defaults to \u0026quot;¶\u0026quot; which is a reserved character in ELO and a valid escape\n character for the most SQL servers and configurations. Unless a search kritera contains \u0026quot;¶\u0026quot; or the SQL\n server does not allow the use of this character (e. g. ORACLE, UTF-8) the value has to be changed. Hint:\n Indexserver-API uses \u0026quot;*\u0026quot; as the only valid wildcard. The escape character must not be used in the search\n criterias."
          },
          "DB_WILDCARDS": {
            "type": "string",
            "description": "This characters are used as wildcards in search terms. The first wildcard is used for zero or more characters.\nThe\n second wildcard is used for exactly one character. By default (if this member is null or empty), only the first\n wildcard is defined: *"
          },
          "DIRECT_DM_ACCESS": {
            "type": "string",
            "description": "This option specifies which application is addressed in URLs to upload and download documents.\nIf direct access is\n true, the URLs address the DM directly. Otherwise the documents are routed though the IX."
          },
          "ENCRYPT_DOCUMENTS": {
            "type": "string",
            "description": "Set this option to encrypt documents on checkin. A secure connection (HTTPS) is required to use this option."
          },
          "DECRYPT_DOCUMENTS": {
            "type": "string",
            "description": "Set this option to decrypt documents on checkout. A secure connection (HTTPS) is required to use this option."
          },
          "TRANSLATE_TERMS": {
            "type": "string",
            "description": "Translate keywording forms names, index names, index values and keyword lists into resp.\nfrom the language given in\n \u003ccode\u003eClientInfo.language\u003c/code\u003e."
          },
          "ISO_DATE_WITH_DELIMS": {
            "type": "string",
            "description": "Format ISO date values with delimiter characters defined in ISO 8601."
          },
          "START_DOCMASK_WORKFLOWS": {
            "type": "string",
            "description": "If this option is set to \"true\", the Indexserver starts the workflow defined in DocMask.flowId and DocMask.\nflowId2\n when an associated document is created or checked in."
          },
          "ACTIVE_ROLES": {
            "type": "string",
            "description": "Comma separated list of active role IDs."
          },
          "SESSION_FROM_IX": {
            "type": "integer",
            "description": "Function getSessionFromTicket: session must be known by this Indexserver instance.\nAn exception is thrown, if the\n session is not known by this Indexserver instance. The ticket lifetime is extended.",
            "format": "int32"
          },
          "SESSION_FROM_AM": {
            "type": "integer",
            "description": "Function getSessionFromTicket: any active session known by the AccessManager can be requested.\nThe session is not\n inserted into the session management of this Indexserver instance. Thus the session cannot be used to make\n Indexserver function calls. The ticket lifetime is not extended.",
            "format": "int32"
          },
          "SESSION_ADD": {
            "type": "integer",
            "description": "Function getSessionFromTicket: used in combination with SESSION_FROM_AM.\nAdd the session into the internal session\n management.",
            "format": "int32"
          },
          "SESSION_FROM_AM_ADD": {
            "type": "integer",
            "description": "Function getSessionFromTicket: any active session can be requested and is inserted into the session management of\nthis Indexserver instance. If the session is not known by this Indexserver instance, it is assumed to be a Windows\n CLIENT session (relevant to license model). The ticket lifetime is extended. This value is the same as\n SESSION_FROM_AM | SESSION_ADD.",
            "format": "int32"
          },
          "IX_URL_BASE": {
            "type": "string",
            "description": "Define the first part of the URLs generated from Indexserver.\nSee configuration option ixUrlBase on the Indexserver\n option page."
          },
          "DOC_URL_BASE": {
            "type": "string",
            "description": "Define the first part of the document URLs generated from Indexserver.\nSee configuration option documentUrlBase on\n the Indexserver option page."
          },
          "DOWNLOAD_URL_TYPE": {
            "type": "string",
            "description": "Define the download URL type. IX can generate several types of URLs to download documents.\nPossible values are the\n constants DOWNLOAD_URL_TYPE_*. The default value is DOWNLOAD_URL_TYPE_TEMPORARY."
          },
          "DOWNLOAD_URL_TYPE_TEMPORARY": {
            "type": "string",
            "description": "Generate URLs that expire after a given time.\nThe lifetime can be specified with the option\n \"documentUrlLifetimeSeconds\". By default, all URLs are created with a constrained lifetime."
          },
          "DOWNLOAD_URL_TYPE_PERSISTENT": {
            "type": "string",
            "description": "Generate URLs that do not expire. IX generates URLs that can be used without time limitation.\nThe URL includes a\n strongly encrypted ID of the document or attachment version. AES is used to encrypt the URL parameters. The AES key\n is read from the IX option AESEncryptionKey.\n \n \u003cbr/\u003e\n \u003cb\u003eATTENTION: If the key AESEncryptionKey is changed, all URLs generated before become\n invalid!\u003c/b\u003e\n \n \u003cbr/\u003e\n \u003cb\u003eATTENTION: No access checking is performed, when the document is downloaded from the URL! Everyone who knows the\n URL and has access to ELOix can download the document. This option cannot not be used for documents with\n blackening. No URL is generated for those documents.\u003c/b\u003e\n \n \u003cbr/\u003e\n Only main administrators can use this option. The document is accessed by the IX account. Authentication is not\n required or performed."
          },
          "DOWNLOAD_URL_TYPE_PUBLIC": {
            "type": "string",
            "description": "Generate public download URLs for the actual working version, that expire after a given time.\nOnly a given number\n of downloads is allowed. IX generates URLs that can be used by non ELO users. The URL includes a strongly encrypted\n ID of the document or attachment version. AES is used to encrypt the URL parameters. The AES key is read from the\n IX option AESEncryptionKey.\n \n \u003cbr/\u003e\n \u003cb\u003eATTENTION: If the key AESEncryptionKey is changed, all URLs generated before become\n invalid!\u003c/b\u003e\n \n \u003cbr/\u003e\n \u003cb\u003eATTENTION: No access checking is performed, when the document is downloaded from the URL! Everyone who knows the\n URL and has access to ELOix can download the document. This option cannot not be used for documents with\n blackening. No URL is generated for those documents.\u003c/b\u003e\n \n \u003cbr/\u003e\n Authentication is not required or performed."
          },
          "DOWNLOAD_URL_TYPE_PUBLIC_VERSION": {
            "type": "string",
            "description": "Generate public download URLs for the document version, that expire after a given time..\nOnly a given number of\n downloads is allowed. IX generates URLs that can be used by non ELO users. The URL includes a strongly encrypted ID\n of the document or attachment version. AES is used to encrypt the URL parameters. The AES key is read from the IX\n option AESEncryptionKey.\n \n \u003cbr/\u003e\n \u003cb\u003eATTENTION: If the key AESEncryptionKey is changed, all URLs generated before become\n invalid!\u003c/b\u003e\n \n \u003cbr/\u003e\n \u003cb\u003eATTENTION: No access checking is performed, when the document is downloaded from the URL! Everyone who knows the\n URL and has access to ELOix can download the document. This option cannot not be used for documents with\n blackening. No URL is generated for those documents.\u003c/b\u003e\n \n \u003cbr/\u003e\n Authentication is not required or performed."
          },
          "PUBLIC_DOWNLOAD_COUNT": {
            "type": "string",
            "description": "Define the allowed number of public downloads."
          },
          "PUBLIC_DOWNLOAD_EXPIREDTIME": {
            "type": "string",
            "description": "Define the expired time of public downloads."
          },
          "APPLY_ALL_BLACKENINGS": {
            "type": "string",
            "description": "Apply all blackenings on documents regardless of their ACL.\nELOtr sets this option as \"true\" to receive documents\n with all blackenings. This ensures that blackened parts cannot be retrieved by a fulltext search. TTS003793"
          },
          "DISABLE_CHANGE_INFO_PROTECTION": {
            "type": "string",
            "description": "If set, this option disables the protection of change information.\n\u003cp\u003e\n Disabling the writing of changes information causes the Indexserver to not update the *tstamp* database columns.\n Then, the client has to ensure that the time stamps of objects are set correctly. Setting this option without\n reason causes the loss of traceability of objects in the archive! Only the replication module should use this\n option.\n \u003c/p\u003e\n \u003cp\u003e\n The replication searches the database for changes since the last replication run. The gathered changes will be\n transported to other sites and imported into the database there. Such an import must not trigger the writing of\n change informations as further this would trigger the export of these changes again, claiming the changes would\n have been made at the site importing the changes.\n \u003c/p\u003e"
          },
          "HANDLE_IX_SERVER_EVENTS": {
            "type": "string",
            "description": "This session option declares that the IXConnection handles server events declared in {@link IXServerEvents}."
          },
          "HTTP_SESSION_IX_CONNECTION": {
            "type": "string",
            "description": "Attribute name to which Indexserver maps an IXConnection in the HTTP Session"
          },
          "HTTP_SESSION_TICKET": {
            "type": "string",
            "description": "Attribute name to which Indexserver maps a Ticket in the HTTP Session"
          },
          "TICKET_FROM_COOKIE": {
            "type": "string",
            "description": "This value can be used as {@link ClientInfo#ticket} or in IXConnFactory#createFromTicket() if the server should use\nthe session cookie as authentication token. EIX-393"
          }
        },
        "description": "Constants of SessionOptions."
      },
      "LoginResult": {
        "type": "object",
        "properties": {
          "clientInfo": {
            "description": "\u003cp\u003e\nClientInfo object returned by the IX when the login is carried out. Contains information about the client settings.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ticketLifetime": {
            "type": "integer",
            "description": "\u003cp\u003e\nContains the lifetime of the ticket in seconds. The connection is terminated once this lifetime has expired.\n \u003c/p\u003e",
            "format": "int32"
          },
          "user": {
            "description": "\u003cp\u003e\nContains the data detailling the user used to login to the IX.\n \u003c/p\u003e",
            "$ref": "#/components/schemas/UserInfo"
          },
          "activeSubstitutions": {
            "description": "The current user\u0027s active substitution rules.\nThis list contains substitution rules where the user substitutes\n someone as well as those where the user is substituted by someone.",
            "$ref": "#/components/schemas/ListOfSubstitution"
          }
        },
        "description": "\u003cp\u003e\nObject returned when logging in to the IX. This class contains the information required after the login has been\n carried out.\n \u003c/p\u003e\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "MaskName": {
        "type": "object",
        "properties": {
          "documentMask": {
            "type": "boolean",
            "description": "Mask can be used as storage mask for indexing."
          },
          "id": {
            "type": "integer",
            "description": "Mask ID.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Mask name."
          },
          "searchMask": {
            "type": "boolean",
            "description": "Mask can be used for searching."
          },
          "folderMask": {
            "type": "boolean",
            "description": "Mask can be used as storage mask for folders."
          },
          "guid": {
            "type": "string",
            "description": "GUID"
          },
          "access": {
            "type": "integer",
            "description": "Access mode for the current user. A combination of AccessC.LUR_* constants.",
            "format": "int32"
          },
          "barcodeMask": {
            "type": "boolean",
            "description": "Mask has a barcode definition."
          },
          "nameTranslationKey": {
            "type": "string",
            "description": "Translation-keyword for {@link MaskName#name}."
          }
        },
        "description": "Mask name object.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServerEvents_onBeforeCheckinDocEnd": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "sordDB": {
            "$ref": "#/components/schemas/Sord"
          },
          "parentSord": {
            "$ref": "#/components/schemas/Sord"
          },
          "doc": {
            "$ref": "#/components/schemas/Document"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ObjKeyDataC": {
        "type": "object",
        "properties": {
          "mbObjId": {
            "type": "string",
            "description": "DB column: parentid"
          },
          "mbId": {
            "type": "string",
            "description": "DB column: okeyno"
          },
          "mbName": {
            "type": "string",
            "description": "DB column: okeyname"
          },
          "lnName": {
            "type": "integer",
            "description": "DB column: okeyname",
            "format": "int32"
          },
          "mbData": {
            "type": "string",
            "description": "DB column: okeydata"
          },
          "lnData": {
            "type": "integer",
            "description": "DB column: okeydata",
            "format": "int32"
          },
          "mbUdata": {
            "type": "string",
            "description": "DB column: okeyudata"
          },
          "lnUdata": {
            "type": "integer",
            "description": "DB column: okeyudata",
            "format": "int32"
          },
          "mbSdata": {
            "type": "string",
            "description": "DB column: okeysdata_off"
          },
          "lnSdata": {
            "type": "integer",
            "description": "DB column: okeysdata_off",
            "format": "int32"
          },
          "mbOdouble": {
            "type": "string",
            "description": "Member bit: DB column: odouble DB column: okeydouble"
          },
          "lnOdouble": {
            "type": "integer",
            "description": "Column length: DB column: odouble DB column: okeydouble",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of ObjKeyData\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_FeedService_findFirstActions": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindActionsInfo"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          },
          "actionZ": {
            "$ref": "#/components/schemas/ActionZ"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinUserProfile": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userProfile": {
            "$ref": "#/components/schemas/UserProfile"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_exportWorkflow": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "wfExportOptions": {
            "$ref": "#/components/schemas/WorkflowExportOptions"
          }
        }
      },
      "BRequest_IXServicePortIF_computeDocumentHash": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "computeInfo": {
            "$ref": "#/components/schemas/ComputeDocumentHashInfo"
          }
        }
      },
      "FindActionsInfoC": {
        "type": "object",
        "description": "Constants for FindActionInfo and findFirstActions."
      },
      "FindChildren": {
        "type": "object",
        "properties": {
          "mainParent": {
            "type": "boolean",
            "description": "Include only main parent relations."
          },
          "parentId": {
            "type": "string",
            "description": "Search child objects of the parent entry with this object ID or GUID."
          },
          "endLevel": {
            "type": "integer",
            "description": "Search child objects up to this level below parentId.\nA value of 0 or 1 means, that only the sub entries directly\n under the parent are included. Set this value to -1, to search over all levels. In this case the level is\n internally constrained to 32 to avoid an endless loop, if the tree under the parent contains recursive references.",
            "format": "int32"
          }
        },
        "description": "This class controls the search for child objects of an archive entry.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ArrayOfReminder": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Reminder"
        }
      },
      "HealthCheckValueOperation": {
        "type": "object",
        "properties": {
          "UPDATE_VALUE": {
            "description": "Overwrite the value.",
            "$ref": "#/components/schemas/HealthCheckValueOperation"
          },
          "COMPUTE_MEAN": {
            "description": "Compute an arithmetic mean.",
            "$ref": "#/components/schemas/HealthCheckValueOperation"
          },
          "COMPUTE_ADD": {
            "description": "Add the value.",
            "$ref": "#/components/schemas/HealthCheckValueOperation"
          },
          "COMPUTE_MINIMUM": {
            "description": "Select the minimum value.",
            "$ref": "#/components/schemas/HealthCheckValueOperation"
          },
          "COMPUTE_MAXIMUM": {
            "description": "Select the maximum value.",
            "$ref": "#/components/schemas/HealthCheckValueOperation"
          }
        },
        "description": "Defines the operation to process when updating a value."
      },
      "TaskNotifyType": {
        "type": "object",
        "properties": {
          "InsertTask": {
            "$ref": "#/components/schemas/TaskNotifyType"
          },
          "UpdateTask": {
            "$ref": "#/components/schemas/TaskNotifyType"
          },
          "RemoveTask": {
            "$ref": "#/components/schemas/TaskNotifyType"
          }
        }
      },
      "UrlParams": {
        "type": "object",
        "properties": {
          "length": {
            "type": "string",
            "description": "Download only length bytes from the resource. Set this value to 0, if all bytes should be read."
          },
          "offset": {
            "type": "string",
            "description": "Download bytes beginning from this offset."
          },
          "highlightTerms": {
            "type": "string",
            "description": "Highlight this terms. This value is only valid for fulltext URLs.\nMany terms have to be separated by space\n character. Each term is enclosed in the HTML tags \u0026lt;b\u0026gt; term \u0026lt;/b\u0026gt;"
          }
        },
        "description": "This class describes additional params for an upload or download URL."
      },
      "ArrayOfSordZ": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SordZ"
        }
      },
      "BRequest_IXServicePortIF_deleteCounters": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "counterNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "FeedNotification": {
        "type": "object"
      },
      "ConfigFile": {
        "type": "object",
        "properties": {
          "dir": {
            "type": "string",
            "description": "The path to the file."
          },
          "fileData": {
            "description": "The content of the file.",
            "$ref": "#/components/schemas/FileData"
          },
          "isDirectory": {
            "type": "boolean",
            "description": "Returns true if the object is a directory, false if it is a file."
          },
          "lastModifiedISO": {
            "type": "string",
            "description": "The last-modified date of the script file. This value is related to the UTC time-zone."
          },
          "name": {
            "type": "string",
            "description": "The name of the file or the extension."
          },
          "size": {
            "type": "string",
            "description": "File size."
          },
          "uploadResult": {
            "type": "string",
            "description": "HTTP-Response returned when file is uploaded."
          },
          "url": {
            "type": "string",
            "description": "Download or upload URL."
          }
        },
        "description": "Used for accessing directories or files on the server.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "DocumentProcessor": {
        "type": "object"
      },
      "MapToBStreamReference": {
        "type": "object",
        "additionalProperties": {
          "$ref": "#/components/schemas/BStreamReference"
        }
      },
      "ProcessCopyElements": {
        "type": "object",
        "properties": {
          "copyOptions": {
            "description": "Options for the copy-process",
            "$ref": "#/components/schemas/CopyOptions"
          },
          "createMapping": {
            "type": "boolean",
            "description": "If createMapping is true, at the copyResult, the maps source-id to copy-id will be filled. Defaults to false."
          },
          "copyResult": {
            "description": "Result of copy process.",
            "$ref": "#/components/schemas/CopyResult"
          }
        },
        "description": "Copy archive elements in other position in the archive.\n\u003cp\u003e\n Copyright: Copyright (c) 2009\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "EditInfoEswOptions": {
        "type": "object",
        "properties": {
          "reserved": {
            "type": "integer",
            "description": "Reserved",
            "format": "int32"
          }
        },
        "description": "Options for reading or writing of esw-files."
      },
      "WFDiagram": {
        "type": "object",
        "properties": {
          "acl": {
            "type": "string",
            "description": "Access control list in the internal format. It defines who is able to edit the workflow.\nThis member is only valid\n for workflow templates."
          },
          "aclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "activeAcl": {
            "type": "string",
            "description": "Access control list in the internal format. It defines who is able to edit the workflow.\nThis member is only valid\n for active workflows."
          },
          "activeAclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "completionDateIso": {
            "type": "string",
            "description": "Date of completion in ISO format."
          },
          "deleted": {
            "type": "boolean",
            "description": "Flag that indicates whether the workflow template is deleted. Only valid for template workflows."
          },
          "id": {
            "type": "integer",
            "description": "Workflow ID.",
            "format": "int32"
          },
          "lockId": {
            "type": "integer",
            "description": "The ID of the user who has currently locked the workflow.",
            "format": "int32"
          },
          "lockName": {
            "type": "string",
            "description": "The name of the user who has currently locked the workflow."
          },
          "matrix": {
            "description": "Node matrix.",
            "$ref": "#/components/schemas/WFNodeMatrix"
          },
          "name": {
            "type": "string",
            "description": "Workflow name."
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFNode"
            }
          },
          "objId": {
            "type": "string",
            "description": "ID or GUID of the associated folder or document object.\ncheckoutWorkFlow will always return the numeric object ID\n in this field. checkinWorkFlow is able to receive a GUID too."
          },
          "objType": {
            "type": "integer",
            "description": "Sord type of the associated folder or document.",
            "format": "int32"
          },
          "ownerId": {
            "type": "integer",
            "description": "ID of the user who has started the workflow.",
            "format": "int32"
          },
          "ownerName": {
            "type": "string",
            "description": "Name of the user who has started the workflow."
          },
          "prio": {
            "type": "integer",
            "description": "Workflow priortiy: 0...high, 1...medium, 2...low.",
            "format": "int32"
          },
          "startDateIso": {
            "type": "string",
            "description": "Date of start in ISO format."
          },
          "templateId": {
            "type": "integer",
            "description": "The workflow was started based on this workflow template.\nThis member is only valid for active and finished\n workflows.",
            "format": "int32"
          },
          "templateName": {
            "type": "string",
            "description": "The workflow was started based on the workflow template with this name.\nThis member is only valid for active and\n finished workflows."
          },
          "timeLimit": {
            "type": "integer",
            "description": "Time-limit for the entire workflow in minutes.",
            "format": "int32"
          },
          "timeLimitIso": {
            "type": "string",
            "description": "The entire workflow should be finished by this date. Otherwise the time-limit is exceeded.\nThis member is only\n valid for active and finished workflows. Read-only."
          },
          "timeLimitUserId": {
            "type": "integer",
            "description": "The ID of the user that should be informed,if the time-limit for the workflow is exceeded.\nThe Indexserver does not\n send any notification to the user. The client application is responsible for doing this.",
            "format": "int32"
          },
          "timeLimitUserName": {
            "type": "string",
            "description": "The name of the user that should be informed, if the time-limit is exceeded.\nWhen writing a workflow with\n checkinWorkFlow, this value has preceedence before timeLimitUserId. Set timeLimitUserName to an empty string, if\n timeLimitUserId should be used."
          },
          "type": {
            "description": "Typeof template: template, active or finished.",
            "$ref": "#/components/schemas/WFTypeZ"
          },
          "overTimeLimit": {
            "type": "boolean",
            "description": "True, if the workflow exceeds the time limit. Read-only."
          },
          "flags": {
            "type": "integer",
            "description": "Flags of the begin node. This value is a combination of the node flags suitable to begin nodes, e. g.\nWFNodeC.FLAG_WORKINGDAYS. To ensure compatibility with older client programs, the WFNode.flags of the start node\n are or-ed with the WFDiagram.flags.",
            "format": "int32"
          },
          "access": {
            "type": "integer",
            "description": "Access rights to the workflow template for the current user. A combination of LUR_* constants. Read-only.",
            "format": "int32"
          },
          "version": {
            "description": "Only templates: version information.",
            "$ref": "#/components/schemas/WFVersion"
          },
          "guid": {
            "type": "string",
            "description": "GUID"
          },
          "tStamp": {
            "type": "string",
            "description": "TStamp"
          },
          "processOnServerId": {
            "type": "string",
            "description": "If not empty, the workflow can only be continued on this server (resp. replication branch).\nThe current server ID\n can be read by getServerInfo(). This member is only valid for ACTIVE or FINISHED workflows."
          },
          "timeLimitEscalations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFTimeLimit"
            }
          },
          "objName": {
            "type": "string",
            "description": "Sord name. Readonly."
          },
          "TStampSync": {
            "type": "string",
            "description": "Timestamp of this object\u0027s last export by the replication."
          },
          "nameTranslationKey": {
            "type": "string",
            "description": "Translation-keyword for {@link WFDiagram#name}."
          },
          "hidden": {
            "type": "boolean",
            "description": "Indicates whether this workflow is hidden."
          },
          "parentFlowId": {
            "type": "integer",
            "description": "ID of the parent workflow.",
            "format": "int32"
          },
          "callNodeId": {
            "type": "integer",
            "description": "The call node id of the main workflow, which call this sub workflow.",
            "format": "int32"
          },
          "subWorkflows": {
            "description": "Sub workflows.",
            "$ref": "#/components/schemas/MapToWFDiagram"
          },
          "packageName": {
            "type": "string",
            "description": "Package name of WFDiagram"
          }
        },
        "description": "This class represents an active or finished workflow or a workflow template"
      },
      "MapToString": {
        "type": "object",
        "additionalProperties": {
          "type": "string"
        }
      },
      "RepliHistC": {
        "type": "object",
        "properties": {
          "mbId": {
            "type": "string",
            "description": "DB column: rhrowid"
          },
          "mbTSDate": {
            "type": "string",
            "description": "DB column: rhtsdate"
          },
          "lnTSDate": {
            "type": "integer",
            "description": "DB column: rhtsdate",
            "format": "int32"
          },
          "mbImEx": {
            "type": "string",
            "description": "DB column: rhimex"
          },
          "mbSucc": {
            "type": "string",
            "description": "DB column: rhsucc"
          },
          "mbArcGuid": {
            "type": "string",
            "description": "DB column: rharcguid"
          },
          "lnArcGuid": {
            "type": "integer",
            "description": "DB column: rharcguid",
            "format": "int32"
          },
          "mbArcShort": {
            "type": "string",
            "description": "DB column: rharcshort"
          },
          "lnArcShort": {
            "type": "integer",
            "description": "DB column: rharcshort",
            "format": "int32"
          },
          "mbArcDesc": {
            "type": "string",
            "description": "DB column: rharcdesc"
          },
          "lnArcDesc": {
            "type": "integer",
            "description": "DB column: rharcdesc",
            "format": "int32"
          },
          "mbTSBegin": {
            "type": "string",
            "description": "DB column: rhtsbegin"
          },
          "lnTSBegin": {
            "type": "integer",
            "description": "DB column: rhtsbegin",
            "format": "int32"
          },
          "mbTSEnd": {
            "type": "string",
            "description": "DB column: rhtsend"
          },
          "lnTSEnd": {
            "type": "integer",
            "description": "DB column: rhtsend",
            "format": "int32"
          },
          "mbArcPriorityLocal": {
            "type": "string",
            "description": "DB column: rhpriolocal"
          },
          "mbArcPriorityRemote": {
            "type": "string",
            "description": "DB column: rhprioremote"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of RepliHist\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_PluginService_install": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "location": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_provideCryptPassword": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "encryptionSet": {
            "type": "string"
          },
          "pwd": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutStorage": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "SetOfString": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "DateRangeValue": {
        "type": "object",
        "properties": {
          "from": {
            "$ref": "#/components/schemas/DateSingleValue"
          },
          "to": {
            "$ref": "#/components/schemas/DateSingleValue"
          }
        },
        "description": "\u003cp\u003e\nPerform a range query with date values.\n \u003c/p\u003e\n \n \u003cp\u003e\n Range queries for dates:\u003cbr\u003e\n \u003cul\u003e\n \u003cli\u003eIf from contains a value for roundTo, it is always rounded down by roundTo.\u003c/li\u003e\n \u003cli\u003eIf to contains a value for roundTo, it is always rounded up by roundTo.\u003c/li\u003e\n \u003cli\u003eIf one of from or to is of type DateNowValue and contains a value for relative, it is always ignored for range\n queries.\u003c/li\u003e\n \u003cli\u003eTo perform an open range query (e.g. from now to infinite), only submit either a value for from or to\u003c/li\u003e\n \u003c/ul\u003e\n \u003c/p\u003e"
      },
      "NoteTemplateDataC": {
        "type": "object",
        "properties": {
          "mbUserIdInt": {
            "type": "string",
            "description": "DB column: userid"
          },
          "mbOptKey": {
            "type": "string",
            "description": "DB column: optkey"
          },
          "lnOptKey": {
            "type": "integer",
            "description": "DB column: optkey",
            "format": "int32"
          },
          "mbOptValue": {
            "type": "string",
            "description": "DB column: optvalue"
          },
          "lnOptValue": {
            "type": "integer",
            "description": "DB column: optvalue",
            "format": "int32"
          },
          "mbAllMembers": {
            "type": "string",
            "description": "All valid member bits."
          }
        },
        "description": "\u003cp\u003e\nBit constants for members of NoteTemplate\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2003\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "ListOfLicenseCounter": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LicenseCounter"
        }
      },
      "EloFtOptC": {
        "type": "object",
        "description": "Internal class."
      },
      "AspectC": {
        "type": "object",
        "properties": {
          "mbAspectLines": {
            "type": "string",
            "description": "Member bit: read or write index lines."
          },
          "mbAllMembers": {
            "type": "string",
            "description": "Member bit: read or write all elements."
          },
          "mbAll": {
            "description": "Read or write all elements.",
            "$ref": "#/components/schemas/AspectZ"
          },
          "mbOnlyLock": {
            "description": "Only lock or unlock",
            "$ref": "#/components/schemas/AspectZ"
          }
        },
        "description": "\u003cp\u003e\nConstants related to class \u003ccode\u003eAspect\u003c/code\u003e."
      },
      "FindInfoAsInternalSQL": {
        "type": "object",
        "properties": {
          "fromTables": {
            "type": "string",
            "description": "Comma separated list of table names."
          },
          "whereClause": {
            "type": "string",
            "description": "SQL WHERE clause."
          },
          "orderByClause": {
            "type": "string",
            "description": "SQL ORDER BY clause."
          },
          "groupByClause": {
            "type": "string",
            "description": "SQL GROUP BY clause."
          }
        },
        "description": "SQL command that is built from a FindInfo object.\nThis class contains the elements of an internal SQL statement for\n finding Sord objects. Modifying this elements might cause errors or wrong results in subsequent versions of IX."
      },
      "FindNotificationInfo": {
        "type": "object",
        "properties": {
          "userGuidOrID": {
            "type": "string",
            "description": "GUID or ID or Name of the User. If null, current user will be set.\nIf GUID/ID is not the current user, admin rights\n are needed to preform the search"
          },
          "what": {
            "type": "integer",
            "description": "Reserved.",
            "format": "int32"
          },
          "createDateIso": {
            "type": "string",
            "description": "Search by create date. A date range can be specified by using the default range delimiter \"...\n\" or the one defined\n in {@link de.elo.ix.client.FindOptions#getRangeDelimiter()}."
          },
          "inclImportant": {
            "type": "boolean",
            "description": "If true and createDateIso is set, it will also return all Notifications marked as Important even if they are not in\nthe specified createDate range. If true and createDateIso is not set, it will return only Notifications marked as\n Important"
          },
          "sordZ": {
            "description": "Sord element selector.",
            "$ref": "#/components/schemas/SordZ"
          },
          "actionZ": {
            "description": "Action element selector.",
            "$ref": "#/components/schemas/ActionZ"
          },
          "findFeeds": {
            "type": "boolean",
            "description": "If true a Map\u0026lt;String, Feed\u0026gt; will be set in the FindResult.\nby default true"
          },
          "findHashTags": {
            "type": "boolean",
            "description": "If true a List\u0026lt;HashTagRelation\u0026gt; and a Map\u0026lt;String, HashTag\u0026gt; will be set in the FindResult"
          },
          "findSubscriptions": {
            "type": "boolean",
            "description": "If true a Map\u0026lt;String, Subscription\u0026gt; will be set in the FindResult"
          }
        },
        "description": "FindInfo for FindFirstNotifications."
      },
      "ExecuteScriptParams": {
        "type": "object",
        "properties": {
          "scriptEngine": {
            "type": "string",
            "description": "This value defines the scripting engine to be used to execute the script.\nCurrently, this value must be null or\n empty or \"EloixAuto\". If the value is null or empty, EloixAuto is used by default."
          },
          "scriptCode": {
            "description": "This object contains the script code to be executed as a byte array. The FileData.\ncontentType is either\n \"text/javascript\" or \"text/vbscript\". FileData.data has to be encoded in UTF-8. The scriptCode.data length must be\n less or equal than 65535. If this member is set, the members scriptString and scriptObjId should be null.",
            "$ref": "#/components/schemas/FileData"
          },
          "scriptString": {
            "type": "string",
            "description": "This object contains the script code to be executed as a string object.\nThe string must either start with\n \"javascript:\" or \"vbscript:\". The maximum scriptString length is 65535 UTF-8 characters. If this member is set, the\n members scriptCode and scriptObjId should be null."
          },
          "scriptObjId": {
            "type": "string",
            "description": "If the script to be executed is available in the ELO archive, this member can specify the object ID (or ARCPATH: -\nsee checkoutSord) of the script document. The file is assumed to be encoded in characterset ISO-8859-1, if it does\n not start with a BOM. If this member is set, the members scriptCode and scriptString should be null."
          },
          "functionName": {
            "type": "string",
            "description": "Call this function in the script code.\nA function defined in script code that was supplied in a previsious call can\n be invoked too, as long as this object does not specify scriptCode, scriptString or scriptObjId."
          },
          "functionParams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "This class is used to specify which script has to be executed in function executeScript.\nThe script has to be an ELO\n Windows CLIENT OLE-Automation script."
      },
      "StartAdHocWorkflowInfo": {
        "type": "object",
        "properties": {
          "forValidation": {
            "type": "boolean",
            "description": "If true, the workflow comes back to the user who started it."
          },
          "serialFlow": {
            "type": "boolean",
            "description": "If true, the workflow routes the object from user to user.\nThe workflow finishes when the last user has edited\n their node. If \u003ccode\u003eserialFlow\u003c/code\u003e is false, the workflow routes the object to all users. The first user who\n edits their node terminates the workflow."
          },
          "cancelUserId": {
            "type": "string",
            "description": "If the workflow is canceled, this user receives a message, \u003ccode\u003ecancelMessage\u003c/code\u003e."
          },
          "cancelMessage": {
            "type": "string",
            "description": "The message that is send to the user specified with \u003ccode\u003ecancelUserId\u003c/code\u003e, if the workflow is canceled."
          },
          "finishedUserId": {
            "type": "string",
            "description": "If the workflow is finished, this user receives a message, \u003ccode\u003efinishedMessage\u003c/code\u003e."
          },
          "finishedMessage": {
            "type": "string",
            "description": "The message that is send to the user specified with \u003ccode\u003efinishedUserId\u003c/code\u003e, if the workflow is finished."
          },
          "finishedScript": {
            "type": "string",
            "description": "This script is executed, when the workflow is finished."
          },
          "nodeName": {
            "type": "string",
            "description": "Start node name."
          },
          "workflowRepeatMessage": {
            "type": "string",
            "description": "This message is send to the user who started the workflow if the workflow is repeated."
          },
          "breakWorkflowMessage": {
            "type": "string",
            "description": "This message is send to the user who started the workflow if the workflow is canceled."
          },
          "userIdsToDeactivate": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deactivateNodes": {
            "type": "boolean",
            "description": "If true, all person nodes are deactivated when the workflow is canceled.\nThis option is only used for \"parallel for\n validation\" workflow. Otherwise this option is ignored."
          },
          "acceptMessage": {
            "type": "string",
            "description": "This message is shown if the workflow is accepted by a person."
          },
          "noticeMessage": {
            "type": "string",
            "description": "This message is shown if the a person was informed about the workflow."
          },
          "actionRejectMessage": {
            "type": "string",
            "description": "This message is shown if the workflow is rejected."
          },
          "successMessage": {
            "type": "string",
            "description": "This message is shown if the workflow is successfully processed."
          },
          "timeLimit": {
            "description": "Time-limit for the entire workflow.",
            "$ref": "#/components/schemas/WFTimeLimit"
          },
          "timeLimitEscalations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFTimeLimit"
            }
          },
          "flags": {
            "type": "integer",
            "description": "Control flags for the node, a combination of WFNode.C.FLAG_* constants.",
            "format": "int32"
          },
          "nodeInfos": {
            "description": "The information of all nodes in the workflow.",
            "$ref": "#/components/schemas/ListOfValueClass"
          }
        },
        "description": "This class contains several options that are used to start the AdHocWorkflow"
      },
      "ListOfActionHistory": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ActionHistory"
        }
      },
      "CheckInDocMaskLineTemplateOptions": {
        "type": "object",
        "properties": {
          "dmltZ": {
            "description": "Specifies which elements are passed to the document mask lines, which are using this template.",
            "$ref": "#/components/schemas/DocMaskLineTemplateZ"
          },
          "onlyModifiedTemplateMembers": {
            "type": "boolean",
            "description": "Only change template members are passed to the document mask lines, which are using this template.\nThis variable is\n ignored if dmltZ does not equal NULL."
          },
          "keepModifiedLineMembers": {
            "type": "boolean",
            "description": "Modified line members in the table masklines are kept."
          }
        },
        "description": "Option class for the methode CheckInDocMaskLineTemplate"
      },
      "ReplSetName": {
        "type": "object",
        "properties": {
          "TStamp": {
            "type": "string",
            "description": "Timestamp of the last change. The format is JJJJ.MM.DD.hh.mm.\nss"
          },
          "desc": {
            "type": "string",
            "description": "Descriptive text for the replication set."
          },
          "id": {
            "type": "integer",
            "description": "Identifier for the replication set.",
            "format": "int32"
          },
          "image": {
            "type": "integer",
            "description": "Image used for the replication set in list function in the client application.",
            "format": "int32"
          },
          "mobile": {
            "type": "integer",
            "description": "Replication set is used for archive synchronisation(ELO MOBIL).",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of the replication set."
          },
          "TStampSync": {
            "type": "string",
            "description": "Timestamp of this object\u0027s last export by the replication."
          },
          "priority": {
            "type": "integer",
            "description": "Priority of this replication set.",
            "format": "int32"
          }
        },
        "description": "Properties of a replication set.\n\u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServerEvents_onBeforeLogin": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "userName": {
            "type": "string"
          },
          "opts": {
            "$ref": "#/components/schemas/LoginScriptOptions"
          }
        }
      },
      "LdapConfig": {
        "type": "object",
        "properties": {
          "READ_AUTO_CONFIG": {
            "description": "Create a configuration.\nThis symbol used as parameter for\n {@link LdapService#configure(de.elo.ix.client.ClientInfo, LdapConfig)} to create a configuration based on the\n current environment. The current configuration is not changed.",
            "$ref": "#/components/schemas/LdapConfig"
          },
          "READ_CONFIG": {
            "description": "Read configuration.\nThis symbol used as paramter for\n {@link LdapService#configure(de.elo.ix.client.ClientInfo, LdapConfig)} to read the current configuration without\n changing it.",
            "$ref": "#/components/schemas/LdapConfig"
          },
          "name": {
            "type": "string",
            "description": "Configuration name. Optional configuration name."
          },
          "createNewUser": {
            "type": "boolean",
            "description": "If authentication succeeds, create a new ELO user if she does not already exist."
          },
          "assignGroups": {
            "type": "boolean",
            "description": "If authentication succeeds, update the user\u0027s memberships in ELO groups."
          },
          "notResponsibleForUserOrGroupIds": {
            "description": "List of user IDs, or user GUIDs, or group IDs (not group GUIDs) that cannot be authenticated by this UserDirectory.\nIf the user passed in UserDirectory.authenticate, parameter loginName, is associated to an ID found in this list,\n function authenticate returns NOT_RESPONSIBLE_FOR_AUTHENTICATION. This value is also returned, if one of the user\u0027s\n groups is included in the list. The list contains user ID 0 (Administrator) and {@link UserInfoC#GUID_ELOSERVICE}\n (ELO Service), if this LdapConfig object is initialized by\n {@link LdapService#createConfig(de.elo.ix.client.ClientInfo)}.",
            "$ref": "#/components/schemas/SetOfString"
          },
          "domains": {
            "description": "List of configuration data for each domain.",
            "$ref": "#/components/schemas/ListOfDomain"
          },
          "enabled": {
            "type": "boolean",
            "description": "Enable/disable authentication via LDAP."
          }
        },
        "description": "Configuration data for LDAP plugin."
      },
      "OcrResult": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string",
            "description": "Event ID. The same value as submitted in {@link OcrInfo#eventId}."
          },
          "exception": {
            "type": "string",
            "description": "Error message. Null or empty, if no error has occurred.\nThis value is used only in asynchronous processing in order\n to inform the client application, that an error has occured. In synchronous processing, the error is thrown as an\n exception."
          },
          "exceptionID": {
            "type": "integer",
            "description": "Error id.\n0, if no error has occurred",
            "format": "int32"
          },
          "recognizeFile": {
            "description": "Recognize file result. This member is returned, if {@link OcrInfo#recognizeFile} was set.",
            "$ref": "#/components/schemas/OcrResultRecognizeFile"
          },
          "queryLanguages": {
            "description": "Supported languages. This member is returned, if {@link OcrInfo#queryLanguages} was set.",
            "$ref": "#/components/schemas/OcrResultQueryLanguages"
          }
        },
        "description": "This class contains the informations about an OCR result."
      },
      "OcrInfoRecognizeFile": {
        "type": "object",
        "properties": {
          "imageData": {
            "description": "Image file content. Either imageData or objId must be set.",
            "$ref": "#/components/schemas/FileData"
          },
          "objId": {
            "type": "string",
            "description": "Object ID of an archived document to be analyzed. Either imageData or objId must be set."
          },
          "originalFileName": {
            "type": "string",
            "description": "Original Filename. allows tracking through the log files of the different modules."
          },
          "pageNo": {
            "type": "integer",
            "description": "Page number. The first page number is 0. If all pages should be analyzed, set pageNo \u003d -1.",
            "format": "int32"
          },
          "pageNumbers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "recognizeLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "recognizeRects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OcrRect"
            }
          },
          "rectUnit": {
            "type": "integer",
            "description": "Rectangle coordinates are based on this unit. Use on of the constants OcrInfoC.UNIT_*. Optional.",
            "format": "int32"
          },
          "timeoutSeconds": {
            "type": "integer",
            "description": "Recognition timeout. Cancel recognition if it least longer than this number of seconds. Optional.",
            "format": "int32"
          },
          "pageTimeout": {
            "type": "integer",
            "description": "Recognition timeout for a single page. Cancel recognition if it least longer than this number of seconds. Optional.",
            "format": "int32"
          },
          "minCharConfidence": {
            "type": "integer",
            "description": "Minimum confidence of character recognition in percent.\nCharacters that are recognized with a lower confidence are\n replaced by {@link #replaceChar}. Optional.",
            "format": "int32"
          },
          "replaceChar": {
            "type": "integer",
            "description": "Replacement for characters.\nCharacters that are recognized with a lower confidence than {@link #minCharConfidence}\n are replaced this character. Optional.",
            "format": "int32"
          },
          "accuracy": {
            "type": "integer",
            "description": "Recognition accuracy. A value of 0 activates the fast mode, a value of 1 activates the exact mode.",
            "format": "int32"
          },
          "singleColumnMode": {
            "type": "boolean",
            "description": "Disable table recognition.\nSet this member to true, if the OCR should not try to recognized columns and rows of\n tables. Optional."
          },
          "spaces": {
            "type": "integer",
            "description": "OcrInfoC.\nNORMAL/TWOSPACES/EXACT",
            "format": "int32"
          },
          "encoding": {
            "type": "integer",
            "description": "OcrInfoC.\nENCODING_UTF8 / _UTF16 / _UTF16LE",
            "format": "int32"
          },
          "pdfQuality": {
            "type": "integer",
            "description": "OcrInfoC.\nPDF_QUALITY_MAXQUALITY / _BALANCED / _MINSIZE / _MAXSPEED",
            "format": "int32"
          },
          "pdfCompliance": {
            "type": "integer",
            "description": "OcrInfoC.\nCOMPLIANCE_PDFA_3U / _3A / _2U / _2A / _1B / _1A / _NONE",
            "format": "int32"
          },
          "whitespace": {
            "type": "integer",
            "description": "OCR returns whitespace characters.\n\u003ctable\u003e\n \u003ctr\u003e\n \u003ctd\u003eName\u003c/td\u003e\n \u003ctd\u003eHEX code\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eLine break\u003c/td\u003e\n \u003ctd\u003e2028\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eParagraph break\u003c/td\u003e\n \u003ctd\u003e2029\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eTabulation\u003c/td\u003e\n \u003ctd\u003e00AC\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eSoft hyphen\u003c/td\u003e\n \u003ctd\u003e0009\u003c/td\u003e\n \u003c/tr\u003e\n \u003ctr\u003e\n \u003ctd\u003eObject replacement character\u003c/td\u003e\n \u003ctd\u003eFFFC\u003c/td\u003e\n \u003c/tr\u003e\n \u003c/table\u003e\n Must be one of the following: {@link OcrInfoC#WHITESPACE_DEFAULT}, {@link OcrInfoC#WHITESPACE_REPLACE}",
            "format": "int32"
          },
          "outputFormat": {
            "type": "integer",
            "description": "Output format.\nMust be one of the following: {@link OcrInfoC#TEXT}, {@link OcrInfoC#CHAR_AND_RECT},\n {@link OcrInfoC#CHAR_AND_RECT_EX} {@link OcrInfoC#PDF}, {@link OcrInfoC#XML}",
            "format": "int32"
          }
        },
        "description": "This class describes an OCR analysis request."
      },
      "UserReport": {
        "type": "object",
        "properties": {
          "userNames": {
            "description": "All user names.",
            "$ref": "#/components/schemas/ListOfUserName"
          },
          "counterTotal": {
            "type": "integer",
            "description": "Total count of all users.",
            "format": "int32"
          },
          "counterUser": {
            "type": "integer",
            "description": "Count of users.",
            "format": "int32"
          },
          "counterGroup": {
            "type": "integer",
            "description": "Count of groups.",
            "format": "int32"
          },
          "counterNoLogin": {
            "type": "integer",
            "description": "Count of users without login flag.",
            "format": "int32"
          },
          "subadminIds": {
            "description": "List of subadmin IDs.",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "dmsDesktopUserIds": {
            "description": "List of DMS Desktop user IDs.",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "optionGroupIds": {
            "description": "List of option group IDs.",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "childIds": {
            "description": "List of child IDs.",
            "$ref": "#/components/schemas/ListOfInteger"
          }
        },
        "description": "User report for AdminConsole."
      },
      "BRequest_IXServicePortIF_deleteMapDomain": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "domainName": {
            "type": "string"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServerEvents_executeRegisteredFunctionString": {
        "type": "object",
        "properties": {
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          },
          "functionName": {
            "type": "string"
          },
          "args": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinSubs": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "deps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubsInfo"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "EloFtStop": {
        "type": "object",
        "properties": {
          "stopword": {
            "type": "string",
            "description": "DB column: stopword"
          }
        },
        "description": "Internal class."
      },
      "LicenseResult": {
        "type": "object",
        "description": "Result of license check.\nAn object of this class is returned by\n {@link IXServicePortIF#checkLicense(ClientInfo, LicenseInfo)} if the given license information is valid."
      },
      "NotificationZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from the NotificationC class."
          }
        },
        "description": "\u003cp\u003e\nThis class encapsulates the constants of \u003ccode\u003eNotificationC\u003c/code\u003e\n \u003c/p\u003e\n\n \u003cp\u003e\n Copyright: Copyright (c) 2015\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "PublicDownloadC": {
        "type": "object",
        "description": "Constants for class PublicDownload."
      },
      "ArcPath": {
        "type": "object",
        "properties": {
          "path": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          },
          "pathAsString": {
            "type": "string",
            "description": "Path as string. The first charachter is the path separator."
          }
        },
        "description": "Archive path."
      },
      "AclItem": {
        "type": "object",
        "properties": {
          "access": {
            "type": "integer",
            "description": "Access mode. Bitset of LUR_*.",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "description": "ID of user, group, key.",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "Name of user, group, key."
          },
          "type": {
            "type": "integer",
            "description": "Item type: user, group, key, ...",
            "format": "int32"
          },
          "andGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          }
        },
        "description": "\u003cp\u003e\nHuman readable ACL entry.\n \u003c/p\u003e\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "BRequest_IXServicePortIF_checkoutCounters": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "counterNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "incrementCounters": {
            "type": "boolean"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ContextTermQuery": {
        "type": "object",
        "properties": {
          "filter": {
            "description": "Specify the field and type for which a context term should be returned.",
            "$ref": "#/components/schemas/QueryFilter"
          },
          "returnType": {
            "description": "Specify the return type of this ContextTerm.",
            "$ref": "#/components/schemas/ContextTermReturnTypeE"
          },
          "isNegated": {
            "type": "boolean",
            "description": "To exclude a value from contextTerms, use set isNegated\u003dtrue. Defaults to false."
          }
        },
        "description": "\u003cp\u003e\nSubmit a ContextTermQuery for each ContextTerm to be retrieved.\n \u003c/p\u003e\n \u003cp\u003e\n Describe the contextTerm in with filter. If a value is committed, this value is used to calculate every other\n ContextTerm in ContextTermOptions.contextTermQueries\n \u003cp\u003e\n \u003cp\u003e\n Specify a return type for each contextTerm: {@link ContextTermReturnTypeE}\n \u003c/p\u003e\n \u003cp\u003e\n To exclude a value from contextTerms, use set isNegated\u003dtrue. Defaults to false.\n \u003c/p\u003e"
      },
      "DocHistory": {
        "type": "object",
        "properties": {
          "objId": {
            "type": "integer",
            "description": "Document version belongs to this object.\nDB column: objectid",
            "format": "int32"
          },
          "docId": {
            "type": "integer",
            "description": "Document version ID.\nDB column: documentid",
            "format": "int32"
          },
          "user": {
            "type": "integer",
            "description": "The user who inserts the version into the archive.\nDB column: userid",
            "format": "int32"
          },
          "createDate": {
            "type": "integer",
            "description": "The version is created at this date. The value is an ELO date format.\nDB column: createdate",
            "format": "int32"
          },
          "comment": {
            "type": "string",
            "description": "The user can enter a comment that describes the version.\nDB column: histcomment"
          },
          "version": {
            "type": "string",
            "description": "The version number (like 1.0) of the document version.\nDB column: histversion"
          },
          "docMD5": {
            "type": "string",
            "description": "The MD5 hash of the document file.\nDB column: docmd5"
          },
          "guid": {
            "type": "string",
            "description": "GUID of the document version.\nDB column: docguid"
          },
          "tStamp": {
            "type": "string",
            "description": "The last update time of the version in ISO format (with dots).\nDB column: doctstamp"
          },
          "sigId": {
            "type": "integer",
            "description": "Document signature ID.\nDB column: docsignature",
            "format": "int32"
          },
          "status": {
            "type": "integer",
            "description": "Deleted versions have Status\u003d1.\nDB column: docstatus",
            "format": "int32"
          },
          "flags": {
            "type": "integer",
            "description": "MFG_BURNIN DB column: docflags",
            "format": "int32"
          },
          "deleteDate": {
            "type": "integer",
            "description": "The version is deleted at this date. The value is an ELO date format.\nThe value is zero, if isDeleted() returns\n false.",
            "format": "int32"
          },
          "nbOfValidSignatures": {
            "type": "integer",
            "description": "Number of valid signatures.",
            "format": "int32"
          },
          "type": {
            "type": "integer",
            "description": "The type of this DocHistory makes the difference between attachments and document versions.",
            "format": "int32"
          },
          "TStampSync": {
            "type": "string",
            "description": "Timestamp of this object\u0027s last export by the replication."
          }
        },
        "description": "Document version data, e. g. document version ID and GUID, version comment, MD5 hash of document file.\nInternal use\n only."
      },
      "AnyC": {
        "type": "object",
        "properties": {
          "TYPE_OBJECT": {
            "type": "integer",
            "format": "int32"
          },
          "TYPE_BOOLEAN": {
            "type": "integer",
            "format": "int32"
          },
          "TYPE_INT": {
            "type": "integer",
            "format": "int32"
          },
          "TYPE_LONG": {
            "type": "integer",
            "format": "int32"
          },
          "TYPE_DOUBLE": {
            "type": "integer",
            "format": "int32"
          },
          "TYPE_STRING": {
            "type": "integer",
            "format": "int32"
          },
          "TYPE_HANDLE": {
            "type": "integer",
            "format": "int32"
          },
          "TYPE_ARRAY_BYTE": {
            "type": "integer",
            "format": "int32"
          },
          "TYPE_ARRAY_ANY": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "This class defines the constants for the type member in Any."
      },
      "UserTask": {
        "type": "object",
        "properties": {
          "activity": {
            "description": "Task is an activity.",
            "$ref": "#/components/schemas/Activity"
          },
          "reminder": {
            "description": "Task is a reminder item.",
            "$ref": "#/components/schemas/Reminder"
          },
          "wfNode": {
            "description": "Task is a workflow task.",
            "$ref": "#/components/schemas/WFCollectNode"
          },
          "sord": {
            "description": "Associated Sord object.\nThis member is set, if\n {@link IXServicePortIF#findFirstTasks(ClientInfo, FindTasksInfo, int)} is called with {@link FindTasksInfo#sordZ}\n !\u003d null. This member contains the associatied Sord object to the task. Its valid members are defined by the element\n selector given in {@link FindTasksInfo#sordZ}.",
            "$ref": "#/components/schemas/Sord"
          }
        },
        "description": "Describes the tasks assigned to a user. ix.\nfindFirstTasks returns the tasks for a user in the form of UserTask\n objects. Either activity, reminder or workflow is set depending upon whether the task is an activity, reminder or\n workflow task.\n\n \u003cp\u003e\n Copyright: Copyright (c) 2004\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "StringRangeValue": {
        "type": "object",
        "properties": {
          "from": {
            "$ref": "#/components/schemas/StringSingleValue"
          },
          "to": {
            "$ref": "#/components/schemas/StringSingleValue"
          }
        },
        "description": "\u003cp\u003e\nClass to commit a range filter of String values.\n \u003c/p\u003e\n \n \u003cp\u003e\n To perform an open range query (e.g. from now to infinite), only submit either a value for from or to\n \u003c/p\u003e"
      },
      "BResult_18214274": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/UserReport"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "BRequest_HealthCheckService_uploadAll": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "reserved": {
            "type": "string"
          }
        }
      },
      "ArrayOfPointInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PointInfo"
        }
      },
      "NotificationC": {
        "type": "object",
        "description": "Constants for class Notification. This class is used internally."
      },
      "AspectZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string",
            "description": "Bitset field for constants from the AspectC class."
          }
        },
        "description": "This class encapsulates the constants of the AspectC class.\n\u003cp\u003e\n Copyright: Copyright (c) 2019\n \u003c/p\u003e\n \u003cp\u003e\n Organisation: ELO Digital Office GmbH\n \u003c/p\u003e"
      },
      "Exception": {
        "type": "object"
      },
      "BResult_1698025638": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/HtCloudData"
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "EloDmOpt": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "DB column: optno",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "description": "DB column: optval"
          },
          "remark": {
            "type": "string",
            "description": "DB column: remark"
          },
          "instanceName": {
            "type": "string",
            "description": "DB column: instance"
          }
        },
        "description": "Internal class."
      },
      "BRequest_IXServicePortIF_createSord": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "parentId": {
            "type": "string"
          },
          "maskId": {
            "type": "string"
          },
          "editInfoZ": {
            "$ref": "#/components/schemas/EditInfoZ"
          }
        }
      },
      "ValuesOfObjKey": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "usageCounts": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "totalCount": {
            "type": "integer",
            "description": "The sum of all usageCounts.",
            "format": "int32"
          }
        },
        "description": "Objects of this class contain the returned data from IXServicePortIF.getDistinctValuesOfObjKey."
      },
      "ESearchOptions": {
        "type": "object",
        "description": "Class for various iSearch options."
      },
      "ContextTermOptions": {
        "type": "object",
        "properties": {
          "contextTermQueries": {
            "description": "List of contextTermQueries.",
            "$ref": "#/components/schemas/ListOfContextTermQuery"
          }
        },
        "description": "\u003cp\u003e\nUse this class if context terms should be retrieved by\n {@link de.elo.ix.client.IXServicePortIF#findContextTerms(de.elo.ix.client.ClientInfo, de.elo.ix.client.FindInfo, int)}.\u003cbr\u003e\n Query is submitted by {@link de.elo.ix.client.esearch.ESearchParams}.\n \u003c/p\u003e\n \u003cp\u003e\n Submit a list of ContextTermQuerys to retrieve context terms for each of them.\u003cbr\u003e\n For every ContextTermQuerys, context terms are returned by adding all other ContextTermQuerys to the query but\n itself.\u003cbr\u003e\n This means, if you want have various values for one index field, use one ContextTermQuery with a ValueList to submit\n the values instead of one ContextTermQuery for each value.\u003cbr\u003e\n If a QueryFilter.value \u003d\u003d null, it is not used to restrict the query. Context terms for this ContextTermQuery are\n returned.\u003cbr\u003e\n \u003c/p\u003e\n \u003cp\u003e\n The resulting list {@link ContextTermResults#contextTerms} is provided in the same order as the submitted list\n contextTermQueries\n \u003c/p\u003e\n \u003c/p\u003e"
      },
      "BResult_100361105": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "exception": {
            "type": "string",
            "description": "Error message"
          }
        }
      },
      "ListOfObject": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "WorkflowExportOptionsC": {
        "type": "object",
        "properties": {
          "FORMAT_JSON": {
            "type": "integer",
            "description": "JSON format.",
            "format": "int32"
          },
          "FORMAT_PLAIN_TABLE": {
            "type": "integer",
            "description": "Workflow table format for compatibility with Windows Client.",
            "format": "int32"
          }
        },
        "description": "Contants related to the workflow export."
      }
    },
    "securitySchemes": {
      "apiKey": {
        "type": "apiKey",
        "name": "JSESSIONID",
        "in": "cookie"
      },
      "basic": {
        "type": "http",
        "scheme": "basic"
      },
      "bearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}