{
  "components": {
    "schemas": {
      "BRequest_IXServicePortIF_createAspect": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "name": {
            "type": "string"
          },
          "lines": {
            "$ref": "#/components/schemas/ListOfAspectLine"
          }
        }
      },
      "FulltextConfig": {
        "description": "This class provides information about the configuration of the fulltext database.",
        "type": "object",
        "properties": {
          "knowlegeMapUrl": {
            "description": "URL of the Knowlege Map service. Only valid for iSearch.",
            "type": "string"
          },
          "indexerConfig": {
            "$ref": "#/components/schemas/SearchIndexerConfig"
          },
          "flags": {
            "format": "int32",
            "description": "A combination of FulltextConfigC.FLAG_* constants.",
            "type": "integer"
          },
          "source": {
            "format": "int32",
            "description": "One of the FulltextConfigC.SOURCE_* constants.",
            "type": "integer"
          }
        }
      },
      "MapToFindByAspectValue": {
        "additionalProperties": {
          "$ref": "#/components/schemas/FindByAspectValue"
        },
        "type": "object"
      },
      "Server": {
        "description": "This class represents a LDAP server.",
        "type": "object",
        "properties": {
          "lastException": {
            "description": "An exception message if connection to {@link #ldapUrl} failed.",
            "type": "string"
          },
          "ldapUrl": {
            "description": "URL to access the LDAP directory.",
            "type": "string"
          },
          "lastLoginDurationMillis": {
            "description": "Duration of last login. Read only.",
            "type": "string"
          },
          "priority": {
            "format": "double",
            "description": "Priority for using this URL compared to others. Higher value means more preferred.",
            "type": "number"
          }
        }
      },
      "ArrayOfArcPath": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ArcPath"
        }
      },
      "BRequest_IXServicePortIF_checkinReportOptions": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "options": {
            "$ref": "#/components/schemas/ReportOptions"
          }
        }
      },
      "WFVersion": {
        "description": "Version information for a workflow template.",
        "type": "object",
        "properties": {
          "createDateIso": {
            "description": "Create date in ISO format.",
            "type": "string"
          },
          "comment": {
            "description": "Version comment.",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "Version ID. Set this member -1, to check in a new workflow template version.\nA value of 0\n indicates the current working version.",
            "type": "integer"
          },
          "userName": {
            "description": "Name of the user who created the version.",
            "type": "string"
          },
          "userId": {
            "format": "int32",
            "description": "ID of the user who created the version.",
            "type": "integer"
          },
          "version": {
            "description": "Version number.",
            "type": "string"
          }
        }
      },
      "ListOfWFCacheSyncInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WFCacheSyncInfo"
        }
      },
      "NoteImage": {
        "description": "This class contains additional information for image stamps.",
        "type": "object",
        "properties": {
          "fileName": {
            "description": "Image file name.",
            "type": "string"
          },
          "fileData": {
            "description": "Image file content. Read only.",
            "$ref": "#/components/schemas/FileData"
          }
        }
      },
      "SubstitutionsResult": {
        "description": "Object returned by {@link IXServicePortIF#checkinSubstitutions}() and\n{@link IXServicePortIF#checkoutSubstitutions}().",
        "type": "object",
        "properties": {
          "substitutionGuids": {
            "description": "List of substitution GUIDs",
            "$ref": "#/components/schemas/ListOfString"
          },
          "substitutions": {
            "description": "List of substitutions",
            "$ref": "#/components/schemas/ListOfSubstitution"
          }
        }
      },
      "ListOfAspectAssoc": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AspectAssoc"
        }
      },
      "IntRangeValue": {
        "description": "<p>\nClass to commit a range filter of integer values.\n <\/p>\n \n <p>\n To perform an open range query (e.g. from now to infinite), only submit either a value for from\n or to\n <\/p>",
        "type": "object",
        "properties": {
          "from": {
            "$ref": "#/components/schemas/IntSingleValue"
          },
          "to": {
            "$ref": "#/components/schemas/IntSingleValue"
          }
        }
      },
      "ListOfStringValue": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/StringValue"
        }
      },
      "SordType": {
        "description": "Each file structure element is assigned a SordType.\nThis SordType has three icons , which are\n used in the different view in the client: a standard icon, a disabled icon (empty folders or\n references) and a workflow icon.<br>\n The icons are available in BMP, ICO and JPEG format.\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>\n \n see@ SordTypeC SordTypeC",
        "type": "object",
        "properties": {
          "extensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "workflowIcon": {
            "description": "File data of workflow icon.",
            "$ref": "#/components/schemas/FileData"
          },
          "icon": {
            "description": "File data of normal icon.",
            "$ref": "#/components/schemas/FileData"
          },
          "name": {
            "description": "Type name.",
            "type": "string"
          },
          "guid": {
            "description": "GUID of SordType EIX-2032",
            "type": "string"
          },
          "disabledIcon": {
            "description": "File data of disabled icon.",
            "$ref": "#/components/schemas/FileData"
          },
          "id": {
            "format": "int32",
            "description": "Sord type ID.",
            "type": "integer"
          },
          "packageName": {
            "description": "Package name of SordType",
            "type": "string"
          }
        }
      },
      "BResult_907729609": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ListOfResolveRightsResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "EloDmOptDataC": {
        "description": "<p>Bit constants for members of EloDmOpt<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnValue": {
            "format": "int32",
            "description": "DB column: optval",
            "type": "integer"
          },
          "mbInstanceName": {
            "description": "Member bit: DB column: instance\nDB column: instancename",
            "type": "string"
          },
          "mbId": {
            "description": "DB column: optno",
            "type": "string"
          },
          "mbValue": {
            "description": "DB column: optval",
            "type": "string"
          },
          "mbRemark": {
            "description": "DB column: remark",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnInstanceName": {
            "format": "int32",
            "description": "Column length: DB column: instance\nDB column: instancename",
            "type": "integer"
          },
          "lnRemark": {
            "format": "int32",
            "description": "DB column: remark",
            "type": "integer"
          }
        }
      },
      "SearchIndexerConfig": {
        "type": "object",
        "properties": {
          "optimizerConfig": {
            "$ref": "#/components/schemas/OptimizerConfig"
          },
          "reindexerConfig": {
            "$ref": "#/components/schemas/ReindexerConfig"
          },
          "languageConfig": {
            "$ref": "#/components/schemas/LanguageConfig"
          },
          "updaterConfig": {
            "$ref": "#/components/schemas/UpdaterConfig"
          }
        }
      },
      "AclAccessInfo": {
        "description": "This class contains the option for the methode getAclAccess",
        "type": "object",
        "properties": {
          "aclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "objId": {
            "type": "string"
          },
          "acl": {
            "type": "string"
          },
          "parentId": {
            "description": "Parent's ID of the current object.\n(Useful to get the inherited ACLs of objects which haven't\n any ID yet, i.e. the ones being just added in archive.)",
            "type": "string"
          }
        }
      },
      "PackageContent": {
        "description": "Export aller Daten im Repository zu einem Package EIX-1895",
        "type": "object",
        "properties": {
          "contents": {
            "description": "All objects belonged to the expected packages.\nEIX-2118",
            "$ref": "#/components/schemas/ListOfObject"
          }
        }
      },
      "EventBusParams": {
        "description": "This class supplies params to control the creation of an event bus ID.\nOnly one of the members\n ticket, userId and channelId should be set.",
        "type": "object",
        "properties": {
          "ticket": {
            "description": "Create event bus ID based on this ticket.",
            "type": "string"
          },
          "noForwardToOtherIxs": {
            "description": "Do not open this bus on other Indexservers.\nIn load balancing environments, event busses are\n opened on each Indexserver by default. Set this option to true to open this event bus only on\n the currently attached Indexserver.",
            "type": "boolean"
          },
          "userId": {
            "description": "Get the event bus ID for this user. A numeric ID, GUID or user name can be specified.\nThe\n returned bus ID is computed as EventBusC.BUSID_USER + uid, where uid is the numeric user ID.",
            "type": "string"
          },
          "channelId": {
            "description": "Create an event bus ID based on this string. An arbitary string can be supplied.",
            "type": "string"
          }
        }
      },
      "FilterAggregationQueryParams": {
        "description": "Defines parameters to run an aggregation of type \"Filter\" (a single-bucket-aggregation).\n<br>\n This aggregation query allows sub-aggregations and this is the main use case.",
        "type": "object",
        "properties": {
          "subAggregations": {
            "description": "Inner aggregations of this aggregation.",
            "$ref": "#/components/schemas/MapToAggregationQuery"
          },
          "queryOperator": {
            "description": "The query operator to limit the set of documents for all sub-aggregations.",
            "$ref": "#/components/schemas/QueryOperator"
          }
        }
      },
      "PublicDownloadDataC": {
        "description": "<p>Bit constants for members of PublicDownload<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbId": {
            "description": "DB column: guid",
            "type": "string"
          },
          "mbRemaining": {
            "description": "DB column: remaining",
            "type": "string"
          },
          "mbUserId": {
            "description": "DB column: userid",
            "type": "string"
          },
          "mbDocId": {
            "description": "DB column: docid",
            "type": "string"
          },
          "lnFileName": {
            "format": "int32",
            "description": "Column length: The fileName in the download url. It is readonly.\nDB column: fname",
            "type": "integer"
          },
          "mbFileName": {
            "description": "Member bit: The fileName in the download url. It is readonly.\nDB column: fname",
            "type": "string"
          },
          "lnExpiration": {
            "format": "int32",
            "description": "DB column: expiration",
            "type": "integer"
          },
          "lnId": {
            "format": "int32",
            "description": "DB column: guid",
            "type": "integer"
          },
          "mbExpiration": {
            "description": "DB column: expiration",
            "type": "string"
          },
          "mbTimeStamp": {
            "description": "DB column: tstamp",
            "type": "string"
          },
          "mbObjId": {
            "description": "DB column: objid",
            "type": "string"
          },
          "mbAttachmentCode": {
            "description": "Member bit: Indicates whether the download is inline or as attachment. this field is ignored in ELO 11.\n03\n DB column: acode",
            "type": "string"
          },
          "lnTimeStamp": {
            "format": "int32",
            "description": "DB column: tstamp",
            "type": "integer"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnAttachmentCode": {
            "format": "int32",
            "description": "Column length: Indicates whether the download is inline or as attachment. this field is ignored in ELO 11.\n03\n DB column: acode",
            "type": "integer"
          }
        }
      },
      "JobState": {
        "description": "Objects of this class provide information on the state of any background processes.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "jobName": {
            "description": "Thread name.",
            "type": "string"
          },
          "expires": {
            "description": "When the information expires (milliseconds): (jobEnd + expires &lt; current-date).",
            "type": "string"
          },
          "lastGuid": {
            "description": "Status information for GUIDs.",
            "type": "string"
          },
          "jobGuid": {
            "description": "Job identifier.",
            "type": "string"
          },
          "countErrors": {
            "description": "Error status information.",
            "type": "string"
          },
          "strMsg": {
            "description": "Job-defined message string.",
            "type": "string"
          },
          "lastID": {
            "format": "int32",
            "description": "Status information for integer IDs.",
            "type": "integer"
          },
          "jobRunning": {
            "description": "Set to true while the job is being executed.",
            "type": "boolean"
          },
          "procInfo": {
            "description": "The standard process-by-SORD job list.",
            "$ref": "#/components/schemas/ProcessInfo"
          },
          "countEstimatedMax": {
            "description": "Estimated maximum amount.",
            "type": "string"
          },
          "jobEnd": {
            "description": "End or termination of the job.",
            "type": "string"
          },
          "jobStart": {
            "description": "Start of job.",
            "type": "string"
          },
          "countResult": {
            "description": "Result of the count process.",
            "$ref": "#/components/schemas/CountResult"
          },
          "countProcessed": {
            "description": "Progress status information.",
            "type": "string"
          },
          "doCancelJob": {
            "description": "Tell the Indexserver to cancel the job.",
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinMapDomain": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "mapDomain": {
            "$ref": "#/components/schemas/MapDomain"
          }
        }
      },
      "BResult_77743605": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ApplyForNotificationsInfo"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "WFEditNode": {
        "description": "Data required for processing a workflow person node.",
        "type": "object",
        "properties": {
          "succNodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFNode"
            }
          },
          "node": {
            "description": "The node to be processed",
            "$ref": "#/components/schemas/WFNode"
          },
          "flowId": {
            "format": "int32",
            "description": "Workflow identifier",
            "type": "integer"
          },
          "nodeId": {
            "format": "int32",
            "description": "Node identifier",
            "type": "integer"
          }
        }
      },
      "CombineAclOptions": {
        "description": "This class specifies additional options for compareAcl.",
        "type": "object",
        "properties": {
          "rhsAclStr": {
            "description": "Right operand for ACL operation in String representation.",
            "type": "string"
          },
          "lhsAclStr": {
            "description": "Left operand for ACL operation in String representation.",
            "type": "string"
          }
        }
      },
      "FontInfo": {
        "description": "This class describes a font.",
        "type": "object",
        "properties": {
          "faceName": {
            "description": "Font face name",
            "type": "string"
          },
          "strikeOut": {
            "description": "Strike out",
            "type": "boolean"
          },
          "underline": {
            "description": "Underline",
            "type": "boolean"
          },
          "escapement": {
            "format": "int32",
            "description": "Specifies the angle, in tenths of degrees, between the escapement vector and the x-axis of the\ndevice. The escapement vector is parallel to the base line of a row of text.",
            "type": "integer"
          },
          "heightPerCell": {
            "description": "The font height is related to the cell height of the font rather than the character heigth.",
            "type": "boolean"
          },
          "bold": {
            "description": "Bold",
            "type": "boolean"
          },
          "RGB": {
            "format": "int32",
            "description": "Read-green-blue value. On byte each color. Read is at the lowest significant byte.",
            "type": "integer"
          },
          "italic": {
            "description": "Italic",
            "type": "boolean"
          },
          "height": {
            "format": "int32",
            "description": "Font heigth.",
            "type": "integer"
          }
        }
      },
      "BResult_1197100286": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/SessionOptions"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "MapToFeed": {
        "additionalProperties": {
          "$ref": "#/components/schemas/Feed"
        },
        "type": "object"
      },
      "ValueCountAggregationResult": {
        "description": "The result object of a value_count aggregation.\n<br>\n It consists mainly of a result value.<br>",
        "type": "object",
        "properties": {
          "value": {
            "description": "The result of the value_count aggregation.",
            "type": "string"
          }
        }
      },
      "CheckinUsersC": {
        "description": "<p>\nConstants for the function <code>checkinUsers<\/code>.\n <\/p>\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation:\n <\/p>",
        "type": "object",
        "properties": {
          "bsetNEW_USER": {
            "description": "Insert a new user with the supplied user ID.",
            "type": "string"
          },
          "WRITE_PASSWORD": {
            "description": "Updates or creates a user and set's the users's password.",
            "$ref": "#/components/schemas/CheckinUsersZ"
          },
          "bsetPASSWORD": {
            "description": "Updates a users password.",
            "type": "string"
          },
          "PASSWORD": {
            "description": "Updates a users password.",
            "$ref": "#/components/schemas/CheckinUsersZ"
          },
          "bsetNOTHING": {
            "description": "Checkin no user. Makes sense if you only want to unlock user data.",
            "type": "string"
          },
          "NOTHING": {
            "description": "Checkin no user. Makes sense if you only want to unlock user data.",
            "$ref": "#/components/schemas/CheckinUsersZ"
          },
          "NEW_USER": {
            "description": "Insert a new user with the supplied user ID. Set the user's password.",
            "$ref": "#/components/schemas/CheckinUsersZ"
          },
          "bsetWRITE": {
            "description": "Write without password. Create new user if user ID &lt; 0.",
            "type": "string"
          },
          "WRITE": {
            "description": "Updates or creates a user.",
            "$ref": "#/components/schemas/CheckinUsersZ"
          }
        }
      },
      "ArrayOfStoreInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/StoreInfo"
        }
      },
      "OrgUnitName": {
        "description": "<p>\nData class containing some organizational unit information data: name and ID\n <\/p>\n <p>\n Copyright: Copyright (c) 2013\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "name": {
            "description": "OU name",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "OU identifier",
            "type": "integer"
          }
        }
      },
      "SordLinkC": {
        "description": "Constants-class for the table links.",
        "type": "object",
        "properties": {
          "FLAG_PERMANENT": {
            "type": "string"
          }
        }
      },
      "ListOfHashTagRelation": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/HashTagRelation"
        }
      },
      "SessionOptions": {
        "description": "Objects of this class hold an array of options that are used to manipulate the current\nIndexserver session.",
        "type": "object",
        "properties": {
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          }
        }
      },
      "UserNodeInfo": {
        "description": "This class contains the information of a user node using to create a AdHocWorkflow.\nThis class is\n used by the method IXServicePortIF.startAdHocWorkFlow2.",
        "type": "object",
        "properties": {
          "nodeName": {
            "type": "string"
          },
          "timeLimit": {
            "format": "int32",
            "description": "The time-limit to process the node. This member is only valid for person nodes.",
            "type": "integer"
          },
          "timeLimitIso": {
            "description": "After this date the node exceeds the time-limit for processing.\nThis member is only valid for\n person nodes.",
            "type": "string"
          },
          "timeLimitEscalations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFTimeLimit"
            }
          },
          "flags": {
            "format": "int32",
            "description": "Control flags for the node, a combination of WFNode.C.FLAG_* constants.",
            "type": "integer"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "BResult_1047127860": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteActivityProject": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "projectName": {
            "type": "string"
          }
        }
      },
      "HtCloudData": {
        "type": "object",
        "properties": {
          "hashTagNameCloud": {
            "$ref": "#/components/schemas/HashMapToInteger"
          }
        }
      },
      "ArrayListOfWFDiagram": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WFDiagram"
        }
      },
      "ObjDataC": {
        "description": "<p>Bit constants for members of Sord<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbEncryptionSet": {
            "description": "Member bit: The number of the encryptionSet (the value 0 means not encrypted).\nDB column: encryptionset",
            "type": "string"
          },
          "mbTStamp": {
            "description": "DB column: objtstamp",
            "type": "string"
          },
          "mbTStampAclSync": {
            "description": "Member bit: Timestamp of this object's ACLs last export by the replication.\nDB column: objtstampaclsync",
            "type": "string"
          },
          "mbXDate": {
            "description": "DB column: objxdate",
            "type": "string"
          },
          "lnAcl": {
            "format": "int32",
            "description": "DB column: objacl",
            "type": "integer"
          },
          "mbSpaceGuid": {
            "description": "Member bit: If the sord belongs to a workspace, this value contains the GUID of that workspace.\nDB column: spaceguid",
            "type": "string"
          },
          "mbAcl": {
            "description": "DB column: objacl",
            "type": "string"
          },
          "lnTStampSync": {
            "format": "int32",
            "description": "Column length: Timestamp of this object's last export by the replication.\nDB column: objtstampsync",
            "type": "integer"
          },
          "mbSyncDateLoc": {
            "description": "DB column: objsyncdateloc",
            "type": "string"
          },
          "mbId": {
            "description": "Member bit: Serialisation version ID\nDB column: objid",
            "type": "string"
          },
          "mbHistCount": {
            "description": "DB column: objhistcount",
            "type": "string"
          },
          "mbDeleteUser": {
            "description": "Member bit: The Sord is deleted at this user.\nDB column: deleteuser",
            "type": "string"
          },
          "mbTStampLocal": {
            "description": "Member bit: Timestamp that indicates the next iSearch Index run The format is JJJJ.MM.DD.hh.mm.\nss\n DB column: objtstamplocal",
            "type": "string"
          },
          "mbKey": {
            "description": "DB column: objkey",
            "type": "string"
          },
          "mbMask": {
            "description": "DB column: objmask",
            "type": "string"
          },
          "lnSName": {
            "format": "int32",
            "description": "DB column: objsdata_off",
            "type": "integer"
          },
          "mbInternalDesc": {
            "description": "DB column: objdesc",
            "type": "string"
          },
          "mbGuid": {
            "description": "DB column: objguid",
            "type": "string"
          },
          "lnTStampAclSync": {
            "format": "int32",
            "description": "Column length: Timestamp of this object's ACLs last export by the replication.\nDB column: objtstampaclsync",
            "type": "integer"
          },
          "mbFlags": {
            "description": "DB column: objflags",
            "type": "string"
          },
          "lnPackageName": {
            "format": "int32",
            "description": "Column length: Package name of sord\nDB column: packagename",
            "type": "integer"
          },
          "mbKind": {
            "description": "DB column: objkind",
            "type": "string"
          },
          "lnSReg": {
            "format": "int32",
            "description": "DB column: objsreg",
            "type": "integer"
          },
          "mbPackageName": {
            "description": "Member bit: Package name of sord\nDB column: packagename",
            "type": "string"
          },
          "mbIDate": {
            "description": "DB column: objidate",
            "type": "string"
          },
          "mbTStampAcl": {
            "description": "Member bit: Timestamp of the last ACL change. The format is JJJJ.MM.DD.hh.mm.\nss\n DB column: objtstampacl",
            "type": "string"
          },
          "mbParentId": {
            "description": "DB column: objparent",
            "type": "string"
          },
          "mbRegionId": {
            "description": "Member bit: This is a RESERVED field for future use. Do not use.\n<br>\n DB column: regionid",
            "type": "string"
          },
          "mbDeleteDate": {
            "description": "Member bit: The Sord is deleted at this date. ClientInfo determines the Timezone.\nDB column: deletedate",
            "type": "string"
          },
          "lnTStampLocal": {
            "format": "int32",
            "description": "Column length: Timestamp that indicates the next iSearch Index run The format is JJJJ.MM.DD.hh.mm.\nss\n DB column: objtstamplocal",
            "type": "integer"
          },
          "mbName": {
            "description": "DB column: objshort",
            "type": "string"
          },
          "lnSDesc": {
            "format": "int32",
            "description": "DB column: objsdesc_off",
            "type": "integer"
          },
          "lnInternalDesc": {
            "format": "int32",
            "description": "DB column: objdesc",
            "type": "integer"
          },
          "mbDoc": {
            "description": "DB column: objdoc",
            "type": "string"
          },
          "lnGuid": {
            "format": "int32",
            "description": "DB column: objguid",
            "type": "integer"
          },
          "mbTStampSync": {
            "description": "Member bit: Timestamp of this object's last export by the replication.\nDB column: objtstampsync",
            "type": "string"
          },
          "mbPath": {
            "description": "DB column: objpath",
            "type": "string"
          },
          "mbSig": {
            "description": "DB column: objakey1",
            "type": "string"
          },
          "mbStatus": {
            "description": "DB column: objstatus",
            "type": "string"
          },
          "lnName": {
            "format": "int32",
            "description": "DB column: objshort",
            "type": "integer"
          },
          "lnSpaceGuid": {
            "format": "int32",
            "description": "Column length: If the sord belongs to a workspace, this value contains the GUID of that workspace.\nDB column: spaceguid",
            "type": "integer"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbSReg": {
            "description": "DB column: objsreg",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "DB column: objtstamp",
            "type": "integer"
          },
          "mbVtRep": {
            "description": "DB column: objvtrep",
            "type": "string"
          },
          "mbLockIdDoc": {
            "description": "Member bit: This is the id of the user who has a lock on the document (not the object).\nThe object is\n DB column: doclock",
            "type": "string"
          },
          "mbAtt": {
            "description": "DB column: objattach",
            "type": "string"
          },
          "mbType": {
            "description": "DB column: objtype",
            "type": "string"
          },
          "mbLockId": {
            "description": "DB column: objlock",
            "type": "string"
          },
          "mbOwnerId": {
            "description": "DB column: objuser",
            "type": "string"
          },
          "mbInfo": {
            "description": "DB column: objinfo",
            "type": "string"
          },
          "mbDelDate": {
            "description": "DB column: objdeldate",
            "type": "string"
          },
          "mbSName": {
            "description": "DB column: objsdata_off",
            "type": "string"
          },
          "mbChildCount": {
            "description": "DB column: objchildcount",
            "type": "string"
          },
          "lnTStampAcl": {
            "format": "int32",
            "description": "Column length: Timestamp of the last ACL change. The format is JJJJ.MM.DD.hh.mm.\nss\n DB column: objtstampacl",
            "type": "integer"
          },
          "mbLockIdSord": {
            "description": "Member bit: This is the id of the user who has a lock on the object (not the document).\nThe object is\n DB column: objlock_off",
            "type": "string"
          },
          "mbSDesc": {
            "description": "DB column: objsdesc_off",
            "type": "string"
          },
          "mbSyncDateRem": {
            "description": "DB column: objsyncdaterem",
            "type": "string"
          }
        }
      },
      "ComputeDocumentHashResult": {
        "description": "This class provides the result data computed by\n{@link IXServicePortIF#computeDocumentHash(ClientInfo, ComputeDocumentHashInfo)}.",
        "type": "object",
        "properties": {
          "computedHash": {
            "description": "MD5 hash computed by\n{@link IXServicePortIF#computeDocumentHash(ClientInfo, ComputeDocumentHashInfo)}.",
            "type": "string"
          },
          "updateDate": {
            "format": "date-time",
            "description": "Document update date.",
            "type": "string"
          },
          "storedHash": {
            "description": "MD5 has stored in DB. This value can be empty if MD5 checking is disabled in DM configuration.",
            "type": "string"
          },
          "accessDate": {
            "format": "date-time",
            "description": "Document last access date.",
            "type": "string"
          },
          "equalHash": {
            "description": "True, if {@link #storedHash} is equal to {@link #computedHash}.",
            "type": "boolean"
          },
          "docId": {
            "format": "int32",
            "description": "Document ID.",
            "type": "integer"
          },
          "createDate": {
            "format": "date-time",
            "description": "Document create date.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_createAspectAssoc": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "name": {
            "type": "string"
          },
          "aspectId": {
            "type": "string"
          },
          "cardinality": {
            "$ref": "#/components/schemas/Cardinality"
          }
        }
      },
      "WFTypeC": {
        "description": "Constants class for WFType. This class describes the workflow type/status.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "bsetTEMPLATE": {
            "type": "string"
          },
          "bsetACTIVE": {
            "type": "string"
          },
          "ACTIVE": {
            "description": "The workflow is active.",
            "$ref": "#/components/schemas/WFTypeZ"
          },
          "bsetFINISHED": {
            "type": "string"
          },
          "TEMPLATE": {
            "description": "The workflow is a template workflow.",
            "$ref": "#/components/schemas/WFTypeZ"
          },
          "FINISHED": {
            "description": "The workflow is finished (completed).",
            "$ref": "#/components/schemas/WFTypeZ"
          }
        }
      },
      "BRequest_IXServicePortIF_beginForwardWorkflowNode": {
        "type": "object",
        "properties": {
          "fwdInfo": {
            "$ref": "#/components/schemas/BeginForwardWorkflowNodeInfo"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "flowId": {
            "format": "int32",
            "type": "integer"
          },
          "nodeId": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "BResult_133130047": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SordType"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BResult_200528028": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/AclAccessResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "CheckinUsersZ": {
        "description": "This class encapsulates the constants of CheckinUsersC.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants from CheckinUsersC class.",
            "type": "string"
          }
        }
      },
      "ESearchOrderE": {
        "description": "Sort options for ElasticSearch.",
        "type": "object",
        "properties": {
          "IDATE_ASC": {
            "description": "Sort by internal (archive defined) date, ascending",
            "$ref": "#/components/schemas/ESearchOrderE"
          },
          "XDATE_ASC": {
            "description": "Sort by external (user defined) date, ascending",
            "$ref": "#/components/schemas/ESearchOrderE"
          },
          "IDATE_DESC": {
            "description": "Sort by internal (archive defined) date, descending",
            "$ref": "#/components/schemas/ESearchOrderE"
          },
          "RELEVANCE": {
            "description": "Sort by relevance of sords, calculated by ElasticSearc, descending",
            "$ref": "#/components/schemas/ESearchOrderE"
          },
          "XDATE_DESC": {
            "description": "Sort by external (user defined) date, descending",
            "$ref": "#/components/schemas/ESearchOrderE"
          },
          "TSTAMP_DESC": {
            "description": "<p>\nSort by last change, descending\n <\/p>\n <p>\n Value is not always synchronized with DB because {@link Sord#TStamp} is updated by changes not\n relevant for iSearch.\n <\/p>",
            "$ref": "#/components/schemas/ESearchOrderE"
          },
          "TSTAMP_ASC": {
            "description": "<p>\nSort by last change, ascending\n <\/p>\n <p>\n Value is not always synchronized with DB because {@link Sord#TStamp} is updated by changes not\n relevant for iSearch.\n <\/p>",
            "$ref": "#/components/schemas/ESearchOrderE"
          },
          "ALPHA_DESC": {
            "description": "Sort by title, descending",
            "$ref": "#/components/schemas/ESearchOrderE"
          },
          "ALPHA_ASC": {
            "description": "<p>\nSort by title, ascending\n <\/p>",
            "$ref": "#/components/schemas/ESearchOrderE"
          }
        }
      },
      "MyELOInfo": {
        "type": "object",
        "properties": {
          "date": {
            "description": "Return Results only newer than the given date.",
            "type": "string"
          },
          "notificationInfo": {
            "description": "FindInfo for FindFirstNotifications. {@link FindNotificationInfo}.",
            "$ref": "#/components/schemas/FindNotificationInfo"
          },
          "workflowInfo": {
            "description": "Info Object with search criteria for selecting workflows. {@link FindWorkflowInfo}.",
            "$ref": "#/components/schemas/FindWorkflowInfo"
          },
          "max": {
            "format": "int32",
            "description": "Maximum number of Results that should be returned by this call.",
            "type": "integer"
          },
          "taskInfo": {
            "description": "Info Object with search criteria that are required for locating a task (reminders, workflow\ntasks or activity). {@link FindTasksInfo}.",
            "$ref": "#/components/schemas/FindTasksInfo"
          }
        }
      },
      "ArrayOfDocMaskLineTemplate": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DocMaskLineTemplate"
        }
      },
      "ReplCode": {
        "description": "Constants for replication codes.",
        "type": "object",
        "properties": {
          "ARCR_EXT_CODE_UNDEF_S": {
            "type": "string"
          },
          "ARCR_DOCMASK_DELETE_S": {
            "type": "string"
          },
          "ARCR_CODE_SEP": {
            "type": "string"
          },
          "ARCR_OBJECT_DATA_S": {
            "type": "string"
          },
          "ARCR_IGNORE_BROKER_OPTZ": {
            "format": "int32",
            "description": "Change code: Ignore the optional broker optimization anyway a) selective export b) VDS",
            "type": "integer"
          },
          "ARCR_WORKFLOW_DATA_S": {
            "type": "string"
          },
          "ARCR_INITIAL_DATA": {
            "format": "int32",
            "description": "Change flag: This flag is added to ARCR_OBJECT_DATA if replication performs a full export.",
            "type": "integer"
          },
          "ARCR_OBJECT_INSERT_REF": {
            "format": "int32",
            "description": "Change code: Insert a (logical) reference inside an archive entry.",
            "type": "integer"
          },
          "ARCR_TRANSLATION_S": {
            "type": "string"
          },
          "ARCR_CONTROL_VDS_S": {
            "type": "string"
          },
          "ARCR_NOTE_DELETE": {
            "format": "int32",
            "description": "Change code: Delete a note.",
            "type": "integer"
          },
          "ARCR_DOCUMENT_FEED": {
            "format": "int32",
            "type": "integer"
          },
          "ARCR_OBJECT_DELETE_REF_S": {
            "type": "string"
          },
          "ARCR_BASEDATA_VERIFY": {
            "format": "int32",
            "description": "Change code: Master data. Exports the names of storage masks, keys, users.",
            "type": "integer"
          },
          "ARCR_SWL_DATA_S": {
            "type": "string"
          },
          "ARCR_SWL_DATA": {
            "format": "int32",
            "description": "Change code: A keyword list has been modified Param: 1 für Stichwortliste geändert, 2 für\nStichwortliste gelöscht",
            "type": "integer"
          },
          "ARCR_OBJECT_DELETE_REF": {
            "format": "int32",
            "description": "Change code: Delete a (logical) reference inside an archive entry.",
            "type": "integer"
          },
          "ARCR_DOCUMENT_DATA": {
            "format": "int32",
            "description": "Change code: Insert a document and change the work version of the associated archive entry.",
            "type": "integer"
          },
          "ARCR_OBJECT_RELATIONS": {
            "format": "int32",
            "description": "Change code: Change all references to children.",
            "type": "integer"
          },
          "ARCR_OBJECT_REPLSET": {
            "format": "int32",
            "description": "Change code: Change the replication sets of an archive entry.",
            "type": "integer"
          },
          "ARCR_BROKER_S": {
            "type": "string"
          },
          "ARCR_DOCUMENT_STATUS_S": {
            "type": "string"
          },
          "ARCR_OBJECT_KEYS": {
            "format": "int32",
            "description": "Change code: Modify the indexing information (only <code>Sord.\ngetObjKeys()<\/code>) of an\n archive entry (<code>Sord<\/code>).",
            "type": "integer"
          },
          "ARCR_ACTION": {
            "format": "int32",
            "description": "Change code: Insert, modify, delete activities.",
            "type": "integer"
          },
          "ARCR_USER_DATA": {
            "format": "int32",
            "description": "Change code: Insert or modify user data.",
            "type": "integer"
          },
          "PARAM_SWL_UPDATED": {
            "format": "int32",
            "type": "integer"
          },
          "ARCR_SIGNATURE_DATA_S": {
            "type": "string"
          },
          "ARCR_DOCUMENT_DATA_S": {
            "type": "string"
          },
          "ARCR_OBJECT_KEYS_S": {
            "type": "string"
          },
          "ARCR_DOCUMENT_SWITCH_S": {
            "type": "string"
          },
          "ARCR_DOCUMENT_STATUS": {
            "format": "int32",
            "description": "Change code: Document flags and/or document delete status have been changed",
            "type": "integer"
          },
          "ARCR_DOCUMENT_FEED_S": {
            "type": "string"
          },
          "ARCR_OBJECT_DELETE_PHYS": {
            "format": "int32",
            "description": "Change code: Delete object finally.",
            "type": "integer"
          },
          "ARCR_SIGNATURE_DATA": {
            "format": "int32",
            "description": "Change code: Create a document signature",
            "type": "integer"
          },
          "ARCR_BASEDATA_VERIFY_S": {
            "type": "string"
          },
          "ARCR_USER_DELETE": {
            "format": "int32",
            "description": "Change code: Delete a user.",
            "type": "integer"
          },
          "ARCR_TRAFO_S": {
            "type": "string"
          },
          "ARCR_SET2": {
            "format": "int32",
            "description": "Change flag: This flag is contained in some change codes to extend the number of possible\nchange codes.",
            "type": "integer"
          },
          "ARCR_BROKER": {
            "format": "int32",
            "description": "Change flag: This flag marks a change record to be a control record for the broker.",
            "type": "integer"
          },
          "ARCR_OBJECT_REPLSET_S": {
            "type": "string"
          },
          "ARCR_OBJECT_DELETE_PHYS_S": {
            "type": "string"
          },
          "ARCR_SET16": {
            "format": "int32",
            "description": "Change flag: This flag is contained in some change codes to extend the number of possible\nchange codes.",
            "type": "integer"
          },
          "ARCR_MAP_CHANGED": {
            "format": "int32",
            "description": "Change code: map changed",
            "type": "integer"
          },
          "ARCR_MARKER": {
            "format": "int32",
            "description": "Change code: Set a replication marker.",
            "type": "integer"
          },
          "ARCR_DOCUMENT_SWITCH": {
            "format": "int32",
            "description": "Change code: Select another work version from the document history.",
            "type": "integer"
          },
          "ARCR_WORKFLOW_DATA": {
            "format": "int32",
            "description": "Change code: Change a workflow.",
            "type": "integer"
          },
          "ARCR_OBJECT_HIST_S": {
            "type": "string"
          },
          "ARCR_TRAFO": {
            "format": "int32",
            "description": "Change code: Transformation table for master data (broker-to-broker replication).",
            "type": "integer"
          },
          "ARCR_DOCUMENT_INSERT_S": {
            "type": "string"
          },
          "ARCR_MAP_CHANGED_S": {
            "type": "string"
          },
          "ARCR_USER_DATA_S": {
            "type": "string"
          },
          "ARCR_DOCUMENT_INSERT": {
            "format": "int32",
            "description": "Change code: Insert a document but do not change the work version of the associated archive\nentry.",
            "type": "integer"
          },
          "ARCR_EXTENDED_SET": {
            "format": "int32",
            "description": "Change flags: Bits of this value are contained in some change codes to extend the number of\npossible change codes.",
            "type": "integer"
          },
          "ARCR_VERSION_COMMENT_S": {
            "type": "string"
          },
          "ARCR_MARKER_S": {
            "type": "string"
          },
          "ARCR_IGNORE_BROKER_OPTZ_S": {
            "type": "string"
          },
          "ARCR_ATTACHMENT_DATA_S": {
            "type": "string"
          },
          "ARCR_DOCMASKS_DATA": {
            "format": "int32",
            "description": "Change code: Exports the storage masks.",
            "type": "integer"
          },
          "ARCR_OBJECT_INSERT_REF_S": {
            "type": "string"
          },
          "ARCR_LINK_S": {
            "type": "string"
          },
          "ARCR_CONTROL_VDS": {
            "format": "int32",
            "description": "Change code: A VDS has been created",
            "type": "integer"
          },
          "ARCR_ACTION_S": {
            "type": "string"
          },
          "ARCR_OBJECT_RELATIONS_S": {
            "type": "string"
          },
          "ARCR_DOCMASK_DELETE": {
            "format": "int32",
            "description": "Change code: Delete a storage mask.\n(reserved)",
            "type": "integer"
          },
          "ARCR_INITIAL_DATA_S": {
            "type": "string"
          },
          "ARCR_TRANSLATION": {
            "format": "int32",
            "description": "Change code: Insert or modify storage mask data.\n(reserved)",
            "type": "integer"
          },
          "PARAM_SWL_DELETED": {
            "format": "int32",
            "type": "integer"
          },
          "ARCR_OBJECT_HIST": {
            "format": "int32",
            "description": "Change code: Create a new entry for the object history",
            "type": "integer"
          },
          "ARCR_LINK": {
            "format": "int32",
            "type": "integer"
          },
          "ARCR_VERSION_COMMENT": {
            "format": "int32",
            "description": "Change code: Changed document comment",
            "type": "integer"
          },
          "ARCR_DOCMASKS_DATA_S": {
            "type": "string"
          },
          "ARCR_USER_DELETE_S": {
            "type": "string"
          },
          "ARCR_NOTE_DATA_S": {
            "type": "string"
          },
          "ARCR_OBJECT_DATA": {
            "format": "int32",
            "description": "Change code: Modify the indexing information (without <code>Sord.\ngetObjKeys()<\/code>) of an\n archive entry (<code>Sord<\/code>).",
            "type": "integer"
          },
          "ARCR_NOTE_DATA": {
            "format": "int32",
            "description": "Change code: Create or modify a note.",
            "type": "integer"
          },
          "ARCR_NOTE_DELETE_S": {
            "type": "string"
          },
          "ARCR_ATTACHMENT_DATA": {
            "format": "int32",
            "description": "Change code: Insert or change an attachment.",
            "type": "integer"
          }
        }
      },
      "ESInstanceSettings": {
        "description": "<p>\nClass to read and write settings of Elasticsearch.\n <\/p>",
        "type": "object",
        "properties": {
          "nodeName": {
            "description": "Elasticsearch node name",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "allowLeadingWildcards": {
            "description": "Allow leading wildcard for search queries. Defaults to false.\nSetting it to true might result\n in very poor search perfomance.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "instanceName": {
            "type": "string"
          },
          "maxFulltextLength": {
            "description": "Define the maximun length for fulltext documents indexed by iSearch.\nIf not set or set to &lt;=\n 0, complete documents are indexed.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "reindexFromObjId": {
            "description": "Reindex processes object IDs >= this one.\nSet to -1 to delete, everything >= 0 is written to db\n (if lower than reindexToObjId) Always needs to send reindexFromObjId and reindexToObjId.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "updaterInterval": {
            "description": "How often should the updater run? Interval in seconds",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "updaterNextStart": {
            "description": "Next start of updater. Format: yyyyMMddHHmmss. Timezone: JVM default.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "additionalIndex": {
            "description": "Set to true if this IX should generate a separate index (e.g.\nsecond system for test purposes\n or scheduled reindex)",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "searchAnalyzer": {
            "description": "Define a special analyzer to use during search. Please make sure the defined analyzer exists.\nRemove or set to \"default\" to disable.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "clusterName": {
            "description": "Elasticsearch cluster name.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "nbOfAllowedLangs": {
            "format": "int32",
            "description": "Number of allowed languages.\n<p>\n <i>Immutable.<\/i>\n <\/p>",
            "type": "integer"
          },
          "archiveLang": {
            "description": "Archive language.\n<p>\n <i>Immutable.<\/i>\n <\/p>",
            "type": "string"
          },
          "maxAmountOfReferencesInErrorFolder": {
            "description": "Maximum number of references created in Reindex error folder during reindex process",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "maxSearchResults": {
            "description": "Define how many results should be returned with findFirstSords and findNextSords (in total!) by\niSearch. Defaults to 10000.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "numberOfShardsByMaskId": {
            "description": "Define the nuber of shards for individual masks. Use a higher number of (e.g.\n3) for masks with\n many objects. Masks which are not defined with this setting use numberOfShards.\n \n Syntax: maskId:number of shards;maskId: number of shards, e.g. \"23:2;34:5\"",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "completion": {
            "description": "Query \"auto completion\" on search",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "updaterFromTs": {
            "description": "Process documents newer than this date. Format: yyyyMMddHHmmss Timezone: JVM default.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "germanAnalyzer": {
            "description": "Option to define a analyzer for German language without decomposition (to speed up analysis\nprocess, but results in worse search results). Default: empty or \"elo_german\". Set to\n \"elo_german_without_decomp\" to use analyzer without decomposition.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "continueReindexOnFailure": {
            "description": "Define if reindex process should be continued or interrupted on failure.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "synonyms": {
            "description": "Query synonyms on search",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "feedAnalyzer": {
            "description": "Define if feed should use archive language, one of the configured languages or try to determine\nthe language based on content.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "numberOfShards": {
            "description": "Number of shards per index in Elasticsearch. Default: 1.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "indexName": {
            "description": "Elasticsearch index name",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "hosts": {
            "description": "Elasticsearch host address.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "reindexToObjId": {
            "description": "Reindex processes object IDs &lt;= this one.\nSet to -1 to delete, everything &gt;= 0 is written\n to db (if greater than reindexFromObjId) Always needs to send reindexFromObjId and\n reindexToObjId.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "indexingOfMetadataFieldsViaKeywordingRelationEnabled": {
            "description": "EIX-1567: Erlaubt das Indizieren von markierten Indexfeldern von Sords, die über Felder vom Typ\nRELATION referenziert werden. Die markierten Felder der so referenzierten Sords werden mit im\n referenzierenden Sord indiziert. Nur relevant für Sords mit Aspekt-Data-Organisation. Defaults\n to true.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "useSsl": {
            "description": "Use SSL encryption.",
            "type": "boolean"
          },
          "configuredLangs": {
            "description": "Configured languages (without archive language), separated by comma",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "reindexStarted": {
            "description": "Reindex started at this time. Format: yyyyMMddHHmmss Timezone: JVM default.",
            "type": "string"
          },
          "maxTokenLength": {
            "description": "Maximum length of tokens in elastic search. Defaults to 300, max 10922.\nSet to -1 if nothing\n should be changed.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "skipNonAsciiStepsOnFallback": {
            "description": "Determines if we should skip some analyzer steps when we use the fallback analyzer.\nThe skipped\n steps are trimming non-ascii chars from the analyzed text. Setting this option to true results\n in using a different fallback analyzer both for indexing and search without the trimming steps.\n This analyzer is meant to be used only for fulltext docs (body and summary) and not for Sord\n fields. Defaults to false.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "indexingDisabled": {
            "description": "Define if this IX instance should be used to run reindex and updater thread.\nCan only be set\n instance specific.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "maxObjsPerReindexInterval": {
            "description": "Maximum number of objects to be processed in one time unit of updater. Default: 1.000.\nSet to\n -1 if nothing should be changed.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "maxObjsPerUpdateInterval": {
            "description": "Maximum number of objects selected by reindexer. Default: 10.\n000 Set to -1 if nothing should be\n changed.",
            "$ref": "#/components/schemas/EsSettingsProperty"
          },
          "correction": {
            "description": "Query \"corrections\" on search",
            "$ref": "#/components/schemas/EsSettingsProperty"
          }
        }
      },
      "BRequest_IXServicePortIF_createDoc": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "maskId": {
            "type": "string"
          },
          "docTemplate": {
            "type": "string"
          },
          "editInfoZ": {
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "parentId": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_deactivateSubstitution": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "substitutionGuid": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_findFirstConfigFiles": {
        "type": "object",
        "properties": {
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindConfigFileInfo"
          },
          "configFileZ": {
            "$ref": "#/components/schemas/ConfigFileZ"
          }
        }
      },
      "BResult_1320348587": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/LicenseReport"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "PackageC": {
        "description": "Constants for the class PackageDataC",
        "type": "object",
        "properties": {
          "mbAll": {
            "description": "All PackageData members.",
            "$ref": "#/components/schemas/PackageDataZ"
          },
          "defaultGuid": {
            "description": "Package default guid.",
            "type": "string"
          },
          "mbOnlyLock": {
            "description": "Only remove or set lock.",
            "$ref": "#/components/schemas/PackageDataZ"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbLevels": {
            "description": "Package level members.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutSubstitutions": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "checkoutSubstitutionsInfo": {
            "$ref": "#/components/schemas/CheckoutSubstitutionsInfo"
          },
          "substitutionZ": {
            "$ref": "#/components/schemas/SubstitutionZ"
          }
        }
      },
      "FindActivityProjectsInfo": {
        "description": "This class defines the options for IXServicePortIF.findActivityProjects.",
        "type": "object",
        "properties": {
          "projectName": {
            "description": "Project name. This value can contain wildcards.",
            "type": "string"
          }
        }
      },
      "BResult_8006547": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ListOfAspect"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "Notification": {
        "description": "Objects of this class represent a change notification. This class is used internally.",
        "type": "object",
        "properties": {
          "what": {
            "format": "int32",
            "description": "Indicates the type of the watched Element. 0 - Action. 1 - HashTag.",
            "type": "integer"
          },
          "createDateIso": {
            "description": "Create date of the notification.",
            "type": "string"
          },
          "watchGuid": {
            "description": "GUID of changed Object.",
            "type": "string"
          },
          "userGuid": {
            "description": "GUID of user who should receive this notification.",
            "type": "string"
          },
          "prio": {
            "format": "int32",
            "description": "Indicates if the Notification is marked as important",
            "type": "integer"
          }
        }
      },
      "IdName": {
        "description": "<p>\nContains an numeric ID value, a GUID value in string format and a name.\n <\/p>\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "displayName": {
            "description": "Localized name.",
            "type": "string"
          },
          "name": {
            "description": "Name.",
            "type": "string"
          },
          "guid": {
            "description": "GUID.",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "Numeric ID.",
            "type": "integer"
          }
        }
      },
      "StringSingleValue": {
        "type": "object",
        "properties": {
          "value": {
            "description": "<p>\ntext value\n <\/p>\n <p>\n Do not escape any special characters, this is done by IX.<br>\n Exception: if <code>value<\/code> starts with \"=\" (PowerSearch), nothing is escaped by IX<br>\n If a value to be searched for actually starts with \"=\", it has to be escaped manually by \"\\\\\"\n <\/p>",
            "type": "string"
          }
        }
      },
      "ExportExtOptionsC": {
        "description": "Constant class for the ExportExtOptions class.\n(The default value are always 0)",
        "type": "object",
        "properties": {
          "EXPORT_SRC_TYPE_ARCHIVE": {
            "format": "int32",
            "description": "Objects from archive are exported",
            "type": "integer"
          },
          "EXPORT_DATE_TYPE_DEPOT": {
            "format": "int32",
            "description": "Export filtered according depot date",
            "type": "integer"
          },
          "EXPORT_DATE_TYPE_DOC": {
            "format": "int32",
            "description": "Export filtered according document date",
            "type": "integer"
          },
          "EXPORT_SRC_TYPE_SEARCH": {
            "format": "int32",
            "description": "Search results are exported",
            "type": "integer"
          }
        }
      },
      "MapToArrayListOfWFDiagram": {
        "additionalProperties": {
          "$ref": "#/components/schemas/ArrayListOfWFDiagram"
        },
        "type": "object"
      },
      "WFTypeZ": {
        "description": "This class encapsulates the constants of the WFTypeC class.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants from the WFTypeC class.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_findNextUsers": {
        "type": "object",
        "properties": {
          "searchId": {
            "type": "string"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "idx": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "DateHistogramAggregationQueryParams": {
        "description": "Defines parameters to run an aggregation of type \"Date_Histogram\" (a\nmulti-bucket-aggregation).<br>\n This aggregation query allows sub-aggregations.",
        "type": "object",
        "properties": {
          "calendarInterval": {
            "description": "Specifies the width of generated buckets measured in time units (e.g. month).\n<br>\n Multiple quantities, such as 6months, are not supported by ES.",
            "$ref": "#/components/schemas/CalendarIntervalE"
          },
          "offset": {
            "description": "Provides an optional offset to change the start value of each bucket by the specified positive\n(+) or negative offset (-) duration.<br>\n For example, when using an interval of day, each bucket runs from midnight to midnight. Setting\n the offset parameter to +6h changes each bucket to run from 6am to 6am.<br>\n <br>\n The offset unit must be smaller than the unit of the specified calendarInterval. For example,\n when using an interval of day, the offset unit can only be one of hour or minute. When using an\n interval of minute (smallest unit allowed), any offset makes no sense at all and will result in\n an error. Using an offset of year is not permitted as it is not smaller than the biggest\n interval unit. <br>\n The DateRelative object contains a value for each unit. But at most one of them is allowed to\n be set, the others have to be zero.",
            "$ref": "#/components/schemas/DateRelative"
          },
          "minDocCount": {
            "format": "int32",
            "description": "If minDocCount = 0, the response will fill gaps in the histogram with empty buckets.\nIt is\n possible change that and request buckets with a higher minimum count by means of the\n min_doc_count setting.<br>\n We set the default to a value of 1, to not overload the client with tons of unwanted buckets.",
            "type": "integer"
          },
          "bucketKeyDateFormat": {
            "description": "Specifies the format of returned values of the key names of buckets.\n<br>\n If this is not set, the default format is used \"yyyMMddHHmmssSSS\", which is the default ELO\n ISODate format.",
            "$ref": "#/components/schemas/BucketKeyDateFormatE"
          },
          "extendedBounds": {
            "description": "Sets optional extended bounds if parameter minDocCount equals to zero.\n<br>\n Explanation:<br>\n By default the histogram returns all the buckets within the range of the data itself, that is,\n the documents with the smallest values will determine the min bucket (the bucket with the\n smallest key) and the documents with the highest values will determine the max bucket (the\n bucket with the highest key). So, even if minDocCount is set to 0, you won't get empty buckets\n at the beginning and at the end of the intended range.<br>\n With extended_bounds setting, you now can \"force\" the histogram aggregation to start building\n buckets on a specific min value and also keep on building buckets up to a max value (even if\n there are no documents anymore).<br>\n Using extended_bounds only makes sense when min_doc_count is 0 (the empty buckets will never be\n returned if min_doc_count is greater than 0).<br>\n <br>\n <p>\n Note that (as the name suggest) extended_bounds is not filtering buckets. Meaning, if the\n extended_bounds.min is higher than the values extracted from the documents, the documents will\n still dictate what the first bucket will be (and the same goes for the extended_bounds.max and\n the last bucket). For filtering buckets, one should add an appropriate filter to the search\n query or one could nest the histogram aggregation under a filter aggregation.\n <\/p>\n <br>\n <p>\n Note that inner roundTo-Parameters within the from/to values are ignored for setting bounds.\n <\/p>\n <br>\n <p>\n Note that DateNowValues (with or without relative and roundTo) are not supported for bounds.\n <\/p>\n <p>\n Note that if parameter hardBounds is also given, extendedBounds must be completely inside\n hardBounds, otherwise ES will emit an error.\n <\/p>",
            "$ref": "#/components/schemas/DateRangeValue"
          },
          "missingValue": {
            "description": "The optional missingValue parameter defines how documents that are missing a value should be\ntreated. By default they will be ignored but it is also possible to treat them as if they have\n a value.<br>\n <br>\n <p>\n Note that inner roundTo-Parameter of DateIsoValue will be ignored here as we need an exact\n value.\n <\/p>",
            "$ref": "#/components/schemas/DateIsoValue"
          },
          "hardBounds": {
            "description": "The optional hard_bounds is a counterpart of extended_bounds and can limit the range of buckets\nin the histogram.<br>\n It is particularly useful in the case of not filtered time ranges that can result in a very\n large number of buckets.<br>\n If you set a hard limit, all other buckets outside the limit will be omitted even if documents\n that should go to this buckets are present in the results.<br>\n <br>\n <p>\n Note that inner roundTo-Parameters within the from/to values are ignored for setting bounds.\n <\/p>\n <br>\n <p>\n Note that DateNowValues (with or without relative and roundTo) are not supported for bounds.\n <\/p>\n <br>\n <p>\n Note that if parameter extendedBounds is also given, extendedBounds must be completely inside\n hardBounds, otherwise ES will emit an error.\n <\/p>",
            "$ref": "#/components/schemas/DateRangeValue"
          },
          "subAggregations": {
            "description": "Inner aggregations of this aggregation.",
            "$ref": "#/components/schemas/MapToAggregationQuery"
          },
          "order": {
            "description": "The optional order buckets are retrieved.\n<br>\n By default, the date_histogram aggregation orders buckets by their key ascending.<br>\n <br>\n If this value is omitted, the default will be used.",
            "$ref": "#/components/schemas/AggregationOrderE"
          }
        }
      },
      "ArrayOfFindByFulltextResultItem": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FindByFulltextResultItem"
        }
      },
      "BackupPurgeStatus": {
        "description": "This class represents the status of the ELOdm backup and purge tasks",
        "type": "object",
        "properties": {
          "backupStatus": {
            "description": "Status of the ELOdm backup task",
            "$ref": "#/components/schemas/BackupStatus"
          },
          "purgeStatus": {
            "description": "Status of the ELOdm purge task",
            "$ref": "#/components/schemas/PurgeStatus"
          }
        }
      },
      "PreviewImageInfo": {
        "type": "object",
        "properties": {
          "previewSize": {
            "format": "int32",
            "description": "Desired size of the preview images. Valid values are defined in {@link PreviewImageInfoC}.",
            "type": "integer"
          },
          "renderAnnotationsData": {
            "description": "<p>\nDoes only has an effect, if <code>renderAnnotations<\/code> is <b>true<\/b>. If set to\n <b>true<\/b> there will be details rendered near the annotations. Details are the annotation's\n author and create date.\n <\/p>",
            "type": "boolean"
          },
          "startPage": {
            "format": "int32",
            "description": "<p>\nFirst page number of the document to process a preview image for. The number of the first page\n of a document is 1. If this value is &le; 0, 1 is assumed.\n <\/p>",
            "type": "integer"
          },
          "renderAnnotationsOnly": {
            "description": "<p>\nDoes only has an effect, if <code>renderAnnotations<\/code> is <b>true<\/b>. If set to\n <b>true<\/b> the annotations will be rendered but the rendering of document pages will be\n omitted.\n <\/p>",
            "type": "boolean"
          },
          "processDocument": {
            "description": "<p>\nIf processDocument is true, not only the URLs for each page are generated but also preview\n images are processed for the pages (startPage+1) to endPage in the background.\n <\/p>",
            "type": "boolean"
          },
          "documentId": {
            "description": "<p>\nId of the document(-version) to query preview images for. If set, <code>objectId<\/code> is\n ignored.\n <\/p>",
            "type": "string"
          },
          "endPage": {
            "format": "int32",
            "description": "<p>\nLast page number of the document to process a preview image for. If this value is &le; 0, all\n pages of the document &ge; startPage are process. If 0 &lt; endPage &le; startPage holds, only\n the startPage will be processed.\n <\/p>",
            "type": "integer"
          },
          "objectId": {
            "description": "<p>\nID of the objects to query preview images for. The ID must point to a document. Otherwise, an\n exception is thrown.\n <\/p>",
            "type": "string"
          },
          "renderAnnotations": {
            "description": "<p>\nEnables rendering of annotations. If <code>renderAnnotations<\/code> is <b>true<\/b>, the preview\n images will also contain the annotations. If the preview images should contain the annotations\n but not the preview of the document page itself, also set <code>renderOnlyAnnotations<\/code> to\n <b>true<\/b>.\n <\/p>",
            "type": "boolean"
          }
        }
      },
      "Reminder": {
        "type": "object",
        "properties": {
          "objGuid": {
            "description": "Sord GUID.",
            "type": "string"
          },
          "promptDateIso": {
            "description": "At this Date the reminder should be made visible to the receiver.",
            "type": "string"
          },
          "receiverName": {
            "description": "Reminder was created for this user.",
            "type": "string"
          },
          "notifyOnDelete": {
            "description": "Notify sender if receiver deletes the reminder.",
            "type": "boolean"
          },
          "notifyOnView": {
            "description": "Notify sender if receiver views the reminder.",
            "type": "boolean"
          },
          "dueDateIso": {
            "description": "On this date the receiver has seen the reminder.",
            "type": "string"
          },
          "lockId": {
            "format": "int32",
            "description": "ID of user who has locked the reminder record in DB",
            "type": "integer"
          },
          "senderId": {
            "format": "int32",
            "description": "Reminder was created by this user.",
            "type": "integer"
          },
          "senderName": {
            "description": "Reminder was created by this user.",
            "type": "string"
          },
          "receiverId": {
            "format": "int32",
            "description": "Reminder was created for this user.",
            "type": "integer"
          },
          "deleted": {
            "description": "Reminder is deleted logically if set. Read-only.",
            "type": "boolean"
          },
          "createDateIso": {
            "description": "Reminder was created at this date.",
            "type": "string"
          },
          "name": {
            "description": "Short description visible in the task list.",
            "type": "string"
          },
          "objId": {
            "format": "int32",
            "description": "Reminder is linked to this Sord.",
            "type": "integer"
          },
          "id": {
            "format": "int32",
            "description": "Reminder ID",
            "type": "integer"
          },
          "prio": {
            "format": "int32",
            "description": "Priority: 0...high, 1...medium, 2...\nlow",
            "type": "integer"
          },
          "objType": {
            "format": "int32",
            "description": "Sord type.",
            "type": "integer"
          },
          "lockName": {
            "description": "Reminder is locked by this user.",
            "type": "string"
          },
          "desc": {
            "description": "Memo text",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinSord": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          }
        }
      },
      "ListOfFindResultSortSpecification": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FindResultSortSpecification"
        }
      },
      "MapDomainC": {
        "description": "This class defines constants for the predefined map tables.",
        "type": "object",
        "properties": {
          "DOMAIN_WORKFLOW_FINISHED": {
            "type": "string"
          },
          "DOMAIN_FT_OPTIONS": {
            "type": "string"
          },
          "DOMAIN_AL_OPTIONS": {
            "description": "Smart Link configuration map domain name.",
            "type": "string"
          },
          "DOMAIN_WORKFLOW_ACTIVE": {
            "type": "string"
          },
          "DOMAIN_SORD": {
            "type": "string"
          },
          "DOMAIN_DM_OPTIONS": {
            "type": "string"
          },
          "DOMAIN_ELOXC": {
            "description": "ELOxc configuration data.",
            "type": "string"
          },
          "DOMAIN_IX_OPTIONS": {
            "type": "string"
          },
          "DOMAIN_AM_OPTIONS": {
            "description": "Map domain name for reading AM options.\nEIX-2061",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_evalAutoFiling": {
        "type": "object",
        "properties": {
          "opts": {
            "$ref": "#/components/schemas/AutoFilingOptions"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "maskId": {
            "type": "string"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          }
        }
      },
      "FulltextConfigC": {
        "description": "Constants for class FulltextConfig.",
        "type": "object",
        "properties": {
          "FLAG_ISEARCH_KNOWLEGE_MAP": {
            "format": "int32",
            "description": "Use the extension \"Knowlege Map\".",
            "type": "integer"
          },
          "FLAG_ISEARCH_ELO_THESAURUS": {
            "format": "int32",
            "description": "Use thesaurus provided by ELO (= synonyms)",
            "type": "integer"
          },
          "FLAG_ISEARCH_DID_YOU_MEAN": {
            "format": "int32",
            "description": "Evaluate suggestions for similar terms (= corrections)",
            "type": "integer"
          },
          "SOURCE_ISEARCH": {
            "format": "int32",
            "description": "Use fulltext information from iSearch.",
            "type": "integer"
          },
          "SOURCE_FTCAT": {
            "format": "int32",
            "description": "Use fulltext information from Microsoft SQL-Server fulltext catalog.",
            "type": "integer"
          },
          "FLAG_ISEARCH_FEED": {
            "format": "int32",
            "type": "integer"
          },
          "SOURCE_CLASSIC": {
            "format": "int32",
            "description": "Use fulltext information from inverse index stored in the archive database.",
            "type": "integer"
          },
          "SOURCE_ELASTICSEARCH": {
            "format": "int32",
            "description": "Use fulltext information from Elasticsearch.",
            "type": "integer"
          },
          "FLAG_ISEARCH_SEARCH_AS_YOU_TYPE": {
            "format": "int32",
            "description": "Perform a search for each pressed key (= completion)",
            "type": "integer"
          },
          "FLAG_ISEARCH_OPTIONSOFF": {
            "format": "int32",
            "description": "Turn off all search options (if 0 or not in db, a default set of search options (correction,\nsynonyms, search terms) is turned on). If combined with other flags, the other options are\n turned on.",
            "type": "integer"
          },
          "FLAG_ISEARCH_SUMMARY": {
            "format": "int32",
            "description": "Retrieve a summary text for each word.",
            "type": "integer"
          },
          "FLAG_ISEARCH_ONTOLOGY_NET": {
            "format": "int32",
            "description": "Use the extension \"Ontology Net\".",
            "type": "integer"
          },
          "FLAG_ISEARCH_COMPANY_THESAURUS": {
            "format": "int32",
            "description": "Use the thesaurus of the company.",
            "type": "integer"
          }
        }
      },
      "ArrayOfActivityOption": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ActivityOption"
        }
      },
      "ArrayOfKeyword": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Keyword"
        }
      },
      "BRequest_IXServicePortIF_executeRegisteredFunctionString": {
        "type": "object",
        "properties": {
          "functionName": {
            "type": "string"
          },
          "param": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ContextTermResults": {
        "type": "object",
        "properties": {
          "contextTerms": {
            "$ref": "#/components/schemas/ListOfContextTerm"
          }
        }
      },
      "BResult_1576340510": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/PurgeSettings"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "WFTimeLimit": {
        "description": "This class describes a time limit for a workflow or for a person node of a workflow.",
        "type": "object",
        "properties": {
          "timeLimit": {
            "format": "int32",
            "description": "Time-limit in minutes.",
            "type": "integer"
          },
          "timeLimitIso": {
            "description": "After this date the node exceeds the time-limit for processing. Read-only.",
            "type": "string"
          },
          "overTimeLimit": {
            "description": "True, if the workflow exceeds the time limit. Read-only.",
            "type": "boolean"
          },
          "userName": {
            "description": "User name for timeLimitUserId; When writing a workflow with checkinWorkFlow, this value has\npreceedence before timeLimitUserId. Set timeLimitUserName to an empty string, if\n timeLimitUserId should be used.",
            "type": "string"
          },
          "userId": {
            "format": "int32",
            "description": "The ID of the user that should be informed, if the time-limit is exceeded.\nThe Indexserver does\n not send any notification to the user. The client application is responsible for doing this.",
            "type": "integer"
          }
        }
      },
      "ListOfDoubleRangeValue": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DoubleRangeValue"
        }
      },
      "ListOfPackageData": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PackageData"
        }
      },
      "HttpResponseInfo": {
        "description": "This class contains information for the HttpServletResponse object to be sent by the Indexserver\nservlet.",
        "type": "object",
        "properties": {
          "responseString": {
            "description": "Response text. Written to HttpServletResponse.\ngetOutputStream()",
            "type": "string"
          },
          "contentType": {
            "description": "Content type header. HttpServletResponse.\nsetContentType()",
            "type": "string"
          }
        }
      },
      "PackageLevelData": {
        "description": "This class defines a package level.\nEIX-2606",
        "type": "object",
        "properties": {
          "level": {
            "format": "int32",
            "description": "The level.",
            "type": "integer"
          },
          "packageGuid": {
            "description": "Package GUID.",
            "type": "string"
          },
          "name": {
            "description": "Level name.",
            "type": "string"
          },
          "guid": {
            "description": "Level GUID.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinDocMask": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "docMask": {
            "$ref": "#/components/schemas/DocMask"
          },
          "docMaskZ": {
            "$ref": "#/components/schemas/DocMaskZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutMapHistory": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "domainName": {
            "type": "string"
          },
          "mapId": {
            "type": "string"
          },
          "membersZ": {
            "$ref": "#/components/schemas/MapHistZ"
          }
        }
      },
      "BRequest_IXServicePortIF_findAggregations": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindInfo"
          }
        }
      },
      "ListOfHealthCheckInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/HealthCheckInfo"
        }
      },
      "SordC": {
        "description": "<p>\nConstants for indexing information. Each member of this class with prefix \"mb\" has a\n corresponding member in class <code>Sord<\/code>\n <\/p>",
        "type": "object",
        "properties": {
          "GUID_SAP_SMART_LINK": {
            "description": "GUID of folder \"/Administration/Smart Link Base\", used for SAP integration",
            "type": "string"
          },
          "mbLinks": {
            "description": "GUIDs of linked archive entries.",
            "type": "string"
          },
          "LBT_DOCUMENT_MAX": {
            "format": "int32",
            "description": "<code>Sord<\/code> objects with type greater or equal than <code>LBT_DOCUMENT<\/code> and less or\nequal than <code>LBT_DOCUMENT_MAX<\/code> are documents.",
            "type": "integer"
          },
          "GUID_ADMINISTRATION_BASE": {
            "description": "GUID of folder \"Administration\". This folder contains \"Replication Base\", \"Scripting Base\" etc.",
            "type": "string"
          },
          "GUID_WORKFLOW_ICONS_BASE": {
            "description": "Archive folder that contains the icons for the workflow nodes.",
            "type": "string"
          },
          "mbSmallDocumentContent": {
            "description": "Return the content of a \"small\" document in <code>DocVersion.fileData<\/code>.\nReading small\n documents is up to 3 times faster this way. The IX configuration defines the maximum size of a\n \"small\" document (e. g. less than 100KB).",
            "type": "string"
          },
          "GUID_SPACE_ADMINISTRATION_FOLDER": {
            "description": "GUID of administration folder for spaces.\nEIX-2987",
            "type": "string"
          },
          "mbXDateIso": {
            "type": "string"
          },
          "mbDetails": {
            "type": "string"
          },
          "GUID_SCRIPTING_BASE": {
            "description": "GUID of folder \"Scripting Base\"",
            "type": "string"
          },
          "LBT_ARCHIVE": {
            "format": "int32",
            "description": "There is one <code>Sord<\/code> object inside the archive database with ID 1.\nIt contains some\n archive configuration and has this type:",
            "type": "integer"
          },
          "GUID_WFNODE_ICON_CYCLE_END": {
            "description": "Object-GUID of icon file for cycle node.",
            "type": "string"
          },
          "mbDelDateIso": {
            "type": "string"
          },
          "GUID_WFNODE_ICON_SET_SERVER_ID": {
            "description": "Object-GUID of icon file for server node.",
            "type": "string"
          },
          "mbLean": {
            "description": "Lean members",
            "$ref": "#/components/schemas/SordZ"
          },
          "mbMinDocVersion": {
            "description": "Includes: mbMinMembers, mbDocVersionMembers, mbPreview",
            "$ref": "#/components/schemas/SordZ"
          },
          "DESC_DELIM": {
            "description": "The objdesc column in the database is splitted into a visible and an invisible part.\nThis\n constant is the delimiter between them.",
            "type": "string"
          },
          "mbCheckout": {
            "description": "Includes: mbAllMembers, mbSmallDocumentContent without mbPreview",
            "$ref": "#/components/schemas/SordZ"
          },
          "GUID_REPLICATION_BASE": {
            "description": "GUID of folder \"Replication Base\"",
            "type": "string"
          },
          "GUID_TEAMROOM_BASE_FOLDER": {
            "description": "GUID of base folder for team room folders.\nEIX-2138",
            "type": "string"
          },
          "mbDocVersionMembers": {
            "description": "Version information of the current document work version.",
            "type": "string"
          },
          "mbObjKeys": {
            "description": "Index lines.",
            "type": "string"
          },
          "GUID_WFNODE_ICON_TERMINATE": {
            "description": "reserved",
            "type": "string"
          },
          "GUID_WIN_SCRIPTING_BASE": {
            "description": "Archive folder /Administration/ELOscripts, VB scripts for Windows Client.",
            "type": "string"
          },
          "ATTACHMENT_FLAG_IN_DOCHISTORY": {
            "format": "int32",
            "description": "Implementation detail: This flag is added to the object ID in the table \"dochistory\" to\ndifferentiate between documents and attachments.",
            "type": "integer"
          },
          "LBT_DOCUMENT": {
            "format": "int32",
            "description": "<code>Sord<\/code> objects with type greater or equal than <code>LBT_DOCUMENT<\/code> and less or\nequal than <code>LBT_DOCUMENT_MAX<\/code> are documents.",
            "type": "integer"
          },
          "mbWriteOnlyMembers": {
            "description": "This members are write-only and were not read in checkoutSord, checkoutDoc, findFirstSords.\nmbSDesc, mbSName",
            "type": "string"
          },
          "GUID_WFNODE_ICON_BEGINNODE": {
            "description": "Object-GUID of icon file for begin node.",
            "type": "string"
          },
          "GUID_TEXTREADER_FOLDER": {
            "description": "Object-GUID of ELO Textreader folder.",
            "type": "string"
          },
          "mbAllIndex": {
            "description": "All members without mbSmallDocumentContent mbPreview mbDocVersionMembers mbRefPaths\nmbAttVersionMembers",
            "$ref": "#/components/schemas/SordZ"
          },
          "mbOwnerName": {
            "type": "string"
          },
          "mbHiddenText": {
            "type": "string"
          },
          "mbReadOnlyMembers": {
            "description": "This members are read-only and ignored in checkinSord",
            "type": "string"
          },
          "GUID_WFNODE_ICON_SPLITNODE": {
            "description": "Object-GUID of icon file for split node.",
            "type": "string"
          },
          "GUID_APPS_FOLDER": {
            "description": "GUID of folder \"/Administration/ELO-Apps\".",
            "type": "string"
          },
          "ELOINDEX_USER_FOLDER_PRIVATE": {
            "description": "Index value ELOINDEX of sub-folder \"private\" of a users folder.",
            "type": "string"
          },
          "mbAclItems": {
            "description": "ACL in a human readable format.",
            "type": "string"
          },
          "mbReplNames": {
            "description": "Replication set names.",
            "type": "string"
          },
          "GUID_WFNODE_ICON_CYCLE_BEGIN": {
            "description": "Object-GUID of icon file for cycle node.",
            "type": "string"
          },
          "mbContentStream": {
            "description": "Document file content is supplied in {@link FileData#stream}.",
            "type": "string"
          },
          "mbDeleted": {
            "type": "string"
          },
          "mbMinMembers": {
            "description": "Includes: mbLeanMembers without mbObjKeys",
            "type": "string"
          },
          "GUID_WFNODE_ICON_PLUGINNODE": {
            "description": "Object-GUID of icon file for plugin node.\nThis node is intended to trigger external events or\n to address external systems. OnEnter is handled synchronously. It waits for a result of the\n event. OnExit is handled asynchronously. The WF continues without waiting for the event. DB\n transaction is terminated before OnEnter is executed.",
            "type": "string"
          },
          "mbAspectObjects": {
            "description": "If {@link DocMask#dataOrganisation} = {@link DocMaskC#DATA_ORGANISATION_ASPECT} then the data\nof index lines is contained in aspect objects (Map values of arbitrary type).",
            "type": "string"
          },
          "TYPE_USER_FOLDER": {
            "format": "int32",
            "description": "Sord type of user folder.\nUser folders are stored under folder Administration/Users and this\n value is used as {@link Sord#type}.",
            "type": "integer"
          },
          "mbRefPaths": {
            "description": "Reference paths.",
            "type": "string"
          },
          "GUID_WFNODE_ICON_COLLECTNODE": {
            "description": "Object-GUID of icon file for collect node.",
            "type": "string"
          },
          "mbDesc": {
            "description": "Description and Hidden Text",
            "type": "string"
          },
          "lnDesc": {
            "format": "int32",
            "description": "Length of description + hidden text",
            "type": "integer"
          },
          "mbParentIds": {
            "description": "GUIDs of parents that reference <code>this<\/code>",
            "type": "string"
          },
          "mbOnlyId": {
            "description": "Includes only <code>Sord.\nid<\/code>",
            "$ref": "#/components/schemas/SordZ"
          },
          "mbMin": {
            "description": "Minimum members.",
            "$ref": "#/components/schemas/SordZ"
          },
          "GUID_IX_SCRIPTING_BASE": {
            "description": "GUID of folder \"IndexServer Scripting Base\"",
            "type": "string"
          },
          "GUID_WFNODE_ICON_IFNODE": {
            "description": "Object-GUID of icon file for decision node.",
            "type": "string"
          },
          "mbAllMembersLazy": {
            "description": "As {@link #mbAllMembers} but provides {@link Sord#refPaths} for lazy loading.",
            "type": "string"
          },
          "GUID_COLD_BACKGROUND_IMAGES": {
            "description": "Archive folder /Administration/COLD Background Images",
            "type": "string"
          },
          "mbReplSet": {
            "description": "Replication set.",
            "type": "string"
          },
          "mbDocVersion": {
            "type": "string"
          },
          "mbOnlyLock": {
            "description": "Do not store/read any members. Evaluate the lock flag only.",
            "$ref": "#/components/schemas/SordZ"
          },
          "mbAllMembers": {
            "description": "All members - without mbSmallDocumentContent",
            "type": "string"
          },
          "mbCheckoutPreview": {
            "description": "Includes: mbAllMembers, mbSmallDocumentContent, mbPreview",
            "$ref": "#/components/schemas/SordZ"
          },
          "mbOnlyUnlock": {
            "description": "Same as mbOnlyLock",
            "$ref": "#/components/schemas/SordZ"
          },
          "ELOINDEX_USER_FOLDER_DATA": {
            "description": "Index value ELOINDEX of sub-folder \"data\" of a users folder.\nThe \"data\" sub-folder of a user\n folder can be read as follows:\n <code>String objId = \"OKEY:ELOINDEX=\" + ELOINDEX_USER_FOLDER_DATA + user-guid<\/code>\n <code>EditInfo ed = conn.ix().checkoutSord(objId, ...)<\/code>",
            "type": "string"
          },
          "mbPhysPath": {
            "description": "Set this option to return the physical path of the document in the DocVersion object.\nThis\n Option requires always a request to Document Manager.",
            "type": "string"
          },
          "mbLeanMembers": {
            "description": "Includes: ObjDataC.\nmbAllMembers with mbAclItems, mbObjKeys",
            "type": "string"
          },
          "mbAll": {
            "description": "All members without mbSmallDocumentContent mbPreview\nSince 12.00.000.046, this selector will provide {@link Sord#refPaths} for lazy loading.",
            "$ref": "#/components/schemas/SordZ"
          },
          "GUID_SPACE_BASE_FOLDER": {
            "description": "GUID of base folder for spaces.\nEIX-2987",
            "type": "string"
          },
          "mbPreview": {
            "description": "Detects whether there is a preview for a given document availiable.",
            "type": "string"
          },
          "mbAttVersionMembers": {
            "description": "Member bit for Sord.\nattVersion",
            "type": "string"
          },
          "mbLinksGoOut": {
            "type": "string"
          },
          "GUID_WFNODE_ICON_PERSONNODE": {
            "description": "Object-GUID of icon file for person node.",
            "type": "string"
          },
          "GUID_TRNOTCONV_FOLDER": {
            "description": "Object-GUID of ELO Textreader not converted documents folder.",
            "type": "string"
          },
          "ELOINDEX_USER_FOLDER_INBOX": {
            "description": "Index value ELOINDEX of sub-folder \"inbox\" of a users folder.",
            "type": "string"
          },
          "mbLinksComeIn": {
            "type": "string"
          },
          "mbReplMembers": {
            "description": "Includes: ObjDataC.\nmbAllMembers with mbObjKeys",
            "type": "string"
          },
          "ELOINDEX_USER_FOLDER_DATA_PROFILE": {
            "description": "Index value ELOINDEX of sub-folder \"data/elo.profile\" of a users folder.",
            "type": "string"
          },
          "mbIDateIso": {
            "type": "string"
          },
          "mbOnlyGuid": {
            "description": "Includes only <code>Sord.\nguid<\/code>",
            "$ref": "#/components/schemas/SordZ"
          },
          "GUID_USERS_FOLDER": {
            "description": "Object-GUID of users folder.",
            "type": "string"
          }
        }
      },
      "ArrayOfEditInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EditInfo"
        }
      },
      "KeywordC": {
        "type": "object",
        "properties": {
          "KWID_USER_LIST": {
            "description": "Root ID of user keyword list.",
            "type": "string"
          },
          "PLACEHOLDER_COUNTER_BEGIN": {
            "description": "Placeholder for the value of the specified counter name.\nThe counter name follows the place\n holder and is suffixed with an extra \"%\". E. g.\n <code>text=PLACEHOLDER_COUNTER_BEGIN + \"myRecordCounter\" + PLACEHOLDER_COUNTER_END + \". record\"<\/code>\n is expanded to <code>text=\"17. record\"<\/code> assuming myRecordCounter has value 17.",
            "type": "string"
          },
          "MAX_CHILDREN": {
            "format": "int32",
            "description": "The maximum number of children per keyword.\nThis value is valid for all keyword lists except\n the user keyword list (<code>KWID_USER_LIST<\/code>). The user keyword list might contain more\n children below a keyword node.",
            "type": "integer"
          },
          "lnText": {
            "format": "int32",
            "description": "Maximum length of keyword text.",
            "type": "integer"
          },
          "lnId": {
            "format": "int32",
            "description": "Maximum length of keyword ID.",
            "type": "integer"
          },
          "SEPARATOR_GROUPID_FOR_ASPECTLINES": {
            "description": "Do no longer use this field.",
            "type": "string"
          },
          "mbRawText": {
            "description": "Return raw text in <code>checkoutKeywords<\/code>. Placeholders are not substituted.",
            "type": "string"
          },
          "SEPARATOR_ASPECTID_LINEKEY": {
            "description": "Do no longer use this field.",
            "type": "string"
          },
          "PLACEHOLDER_DATE": {
            "description": "Placeholder for current date.\nThe format depends on the date format\n <code>UserProfileC.SORD_DATE_FORMAT<\/code> specified in the user or standard profile.",
            "type": "string"
          },
          "KWID_VERSION": {
            "description": "Root ID of keyword list used for version numbers.",
            "type": "string"
          },
          "KWID_VERSION_COMMENT": {
            "description": "Root ID of keyword list used for version comments.",
            "type": "string"
          },
          "PLACEHOLDER_COUNTER_END": {
            "description": "End of placeholder for counter name.",
            "type": "string"
          },
          "KWID_WORKFLOW": {
            "description": "Root ID of keyword list used for workflows.",
            "type": "string"
          },
          "PLACEHOLDER_DAY": {
            "description": "Placeholder for day of month (2 digits).",
            "type": "string"
          },
          "MAX_TREE_DEPTH": {
            "format": "int32",
            "description": "Maximum depth of a keyword tree.\nThis value is valid for all keyword lists except the user\n keyword list (<code>KWID_USER_LIST<\/code>). The user keyword list might contain a deeper tree.",
            "type": "integer"
          },
          "lnRootId": {
            "format": "int32",
            "description": "Maximum length of a root keyword ID.\nIf a new keyword list is checked in, the ID of the root\n keyword must not exceed this length.",
            "type": "integer"
          },
          "KWID_STANDARD_LIST": {
            "description": "Root ID of standard keyword list.",
            "type": "string"
          },
          "mbView": {
            "description": "The purpose of this constant object is to control the behavior of\n<code>checkoutKeywords<\/code>. Supplying it, <code>checkoutKeywords<\/code> will return\n substituted placeholders in the text members of the returned Keyword objects. Use this\n constant, if you want to read keywords into a dialog that lets the user select one of it.",
            "$ref": "#/components/schemas/KeywordZ"
          },
          "PLACEHOLDER_YEAR": {
            "description": "Placeholder for year (4 digits).",
            "type": "string"
          },
          "mbEdit": {
            "description": "The purpose of this constant object is to control the behavior of\n<code>checkoutKeywords<\/code>. Supplying it, <code>checkoutKeywords<\/code> will return the raw\n text (including placeholders) in the returned Keyword objects. Use this constant, if you want\n to read keywords into an editor.",
            "$ref": "#/components/schemas/KeywordZ"
          },
          "PLACEHOLDER_MONTH": {
            "description": "Placeholder for month (2 digits).",
            "type": "string"
          },
          "mbPreCookedText": {
            "description": "Return raw text in <code>checkoutKeywords<\/code>. Placeholders except counters are substituted.",
            "type": "string"
          },
          "PLACEHOLDER_USER_NAME": {
            "description": "Placeholder for current user name.",
            "type": "string"
          }
        }
      },
      "BRequest_FeedService_createAction": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "parentGuid": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/EActionType"
          }
        }
      },
      "ListOfAction": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Action"
        }
      },
      "OcrWorker": {
        "description": "This class is used to describe an OCR worker process.",
        "type": "object",
        "properties": {
          "busId": {
            "description": "The worker process listens on this bus ID for events of type\n{@link EventBusC#EVENT_OCR_REQUEST}.",
            "type": "string"
          },
          "lastUsed": {
            "description": "Reserved.",
            "type": "string"
          },
          "subsId": {
            "description": "The worker process is identified by this subscriber ID on the event bus.",
            "type": "string"
          },
          "reserved": {
            "description": "Reserved.",
            "type": "string"
          },
          "state": {
            "format": "int32",
            "description": "Worker state.",
            "type": "integer"
          }
        }
      },
      "FileData": {
        "description": "Class for the data contained in a file.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "data": {
            "format": "byte",
            "description": "File data as byte array.",
            "type": "string"
          },
          "stream": {
            "description": "File data as input stream.\nThis member can only be used if the FileData object is a member of\n {@link MapValue} or {@link DocVersion}.",
            "$ref": "#/components/schemas/BStreamReference"
          },
          "contentType": {
            "description": "MIME-Type/document extension, for example text/xml or image/tiff or txt.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_cleanupStart": {
        "type": "object",
        "properties": {
          "deleteOptions": {
            "$ref": "#/components/schemas/DeleteOptions"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BResult_1264954948": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/IXServicePortC"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "TranslateTermDataC": {
        "description": "<p>Bit constants for members of TranslateTermData<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbTStamp": {
            "description": "Member bit: Timestamp.\nLast mofified time, ISO date with dots measured in UTC The format is\n DB column: tstamp",
            "type": "string"
          },
          "lnLang10": {
            "format": "int32",
            "description": "Column length: Language 10\nDB column: lang10",
            "type": "integer"
          },
          "lnLang2": {
            "format": "int32",
            "description": "Column length: Language 2\nDB column: lang2",
            "type": "integer"
          },
          "lnLang18": {
            "format": "int32",
            "description": "Column length: Language 18\nDB column: lang18",
            "type": "integer"
          },
          "lnLang3": {
            "format": "int32",
            "description": "Column length: Language 3\nDB column: lang3",
            "type": "integer"
          },
          "lnLang17": {
            "format": "int32",
            "description": "Column length: Language 17\nDB column: lang17",
            "type": "integer"
          },
          "lnTranslationKey": {
            "format": "int32",
            "description": "Column length: Language independent translation key.\nDB column: trankey",
            "type": "integer"
          },
          "lnLang16": {
            "format": "int32",
            "description": "Column length: Language 16\nDB column: lang16",
            "type": "integer"
          },
          "lnLang1": {
            "format": "int32",
            "description": "Column length: Language 1. System language.\nDB column: lang1",
            "type": "integer"
          },
          "lnLang15": {
            "format": "int32",
            "description": "Column length: Language 15\nDB column: lang15",
            "type": "integer"
          },
          "lnLang6": {
            "format": "int32",
            "description": "Column length: Language 6\nDB column: lang6",
            "type": "integer"
          },
          "lnLang14": {
            "format": "int32",
            "description": "Column length: Language 14\nDB column: lang14",
            "type": "integer"
          },
          "mbLang28": {
            "description": "Member bit: Language 28\nDB column: lang28",
            "type": "string"
          },
          "lnLang7": {
            "format": "int32",
            "description": "Column length: Language 7\nDB column: lang7",
            "type": "integer"
          },
          "lnLang13": {
            "format": "int32",
            "description": "Column length: Language 13\nDB column: lang13",
            "type": "integer"
          },
          "mbLang27": {
            "description": "Member bit: Language 27\nDB column: lang27",
            "type": "string"
          },
          "lnLang4": {
            "format": "int32",
            "description": "Column length: Language 4\nDB column: lang4",
            "type": "integer"
          },
          "lnLang12": {
            "format": "int32",
            "description": "Column length: Language 12\nDB column: lang12",
            "type": "integer"
          },
          "lnLang5": {
            "format": "int32",
            "description": "Column length: Language 5\nDB column: lang5",
            "type": "integer"
          },
          "lnLang11": {
            "format": "int32",
            "description": "Column length: Language 11\nDB column: lang11",
            "type": "integer"
          },
          "mbLang29": {
            "description": "Member bit: Language 29\nDB column: lang29",
            "type": "string"
          },
          "mbLang24": {
            "description": "Member bit: Language 24\nDB column: lang24",
            "type": "string"
          },
          "mbLang23": {
            "description": "Member bit: Language 23\nDB column: lang23",
            "type": "string"
          },
          "lnLang8": {
            "format": "int32",
            "description": "Column length: Language 8\nDB column: lang8",
            "type": "integer"
          },
          "lnTStampSync": {
            "format": "int32",
            "description": "Column length: Timestamp. Timestamp of this object's last export by the replication.\nThe format is\n DB column: tstampsync",
            "type": "integer"
          },
          "mbLang26": {
            "description": "Member bit: Language 26\nDB column: lang26",
            "type": "string"
          },
          "lnLang9": {
            "format": "int32",
            "description": "Column length: Language 9\nDB column: lang9",
            "type": "integer"
          },
          "mbLang25": {
            "description": "Member bit: Language 25\nDB column: lang25",
            "type": "string"
          },
          "mbLang20": {
            "description": "Member bit: Language 20\nDB column: lang20",
            "type": "string"
          },
          "mbLang22": {
            "description": "Member bit: Language 22\nDB column: lang22",
            "type": "string"
          },
          "lnLang19": {
            "format": "int32",
            "description": "Column length: Language 19\nDB column: lang19",
            "type": "integer"
          },
          "mbLang21": {
            "description": "Member bit: Language 21\nDB column: lang21",
            "type": "string"
          },
          "mbTranslationKey": {
            "description": "Member bit: Language independent translation key.\nDB column: trankey",
            "type": "string"
          },
          "mbLang17": {
            "description": "Member bit: Language 17\nDB column: lang17",
            "type": "string"
          },
          "mbLang16": {
            "description": "Member bit: Language 16\nDB column: lang16",
            "type": "string"
          },
          "mbLang19": {
            "description": "Member bit: Language 19\nDB column: lang19",
            "type": "string"
          },
          "mbLang18": {
            "description": "Member bit: Language 18\nDB column: lang18",
            "type": "string"
          },
          "mbLang13": {
            "description": "Member bit: Language 13\nDB column: lang13",
            "type": "string"
          },
          "mbGuid": {
            "description": "Member bit: GUID\nDB column: guid",
            "type": "string"
          },
          "mbLang12": {
            "description": "Member bit: Language 12\nDB column: lang12",
            "type": "string"
          },
          "mbLang15": {
            "description": "Member bit: Language 15\nDB column: lang15",
            "type": "string"
          },
          "mbLang14": {
            "description": "Member bit: Language 14\nDB column: lang14",
            "type": "string"
          },
          "mbLang11": {
            "description": "Member bit: Language 11\nDB column: lang11",
            "type": "string"
          },
          "lnPackageName": {
            "format": "int32",
            "description": "Column length: Configuration package.\nDB column: pack",
            "type": "integer"
          },
          "mbLang10": {
            "description": "Member bit: Language 10\nDB column: lang10",
            "type": "string"
          },
          "mbPackageName": {
            "description": "Member bit: Configuration package.\nDB column: pack",
            "type": "string"
          },
          "lnLang30": {
            "format": "int32",
            "description": "Column length: Language 30\nDB column: lang30",
            "type": "integer"
          },
          "mbLevel": {
            "description": "Member bit: Priority level of this entry.\nDB column: tlevel",
            "type": "string"
          },
          "lnGuid": {
            "format": "int32",
            "description": "Column length: GUID\nDB column: guid",
            "type": "integer"
          },
          "mbTStampSync": {
            "description": "Member bit: Timestamp. Timestamp of this object's last export by the replication.\nThe format is\n DB column: tstampsync",
            "type": "string"
          },
          "mbStatus": {
            "description": "Member bit: Status. The object is not deleted, if <code>status<\/code> is -1.\nDB column: status",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "Column length: Timestamp.\nLast mofified time, ISO date with dots measured in UTC The format is\n DB column: tstamp",
            "type": "integer"
          },
          "mbLang9": {
            "description": "Member bit: Language 9\nDB column: lang9",
            "type": "string"
          },
          "lnLang21": {
            "format": "int32",
            "description": "Column length: Language 21\nDB column: lang21",
            "type": "integer"
          },
          "lnLang20": {
            "format": "int32",
            "description": "Column length: Language 20\nDB column: lang20",
            "type": "integer"
          },
          "mbLang7": {
            "description": "Member bit: Language 7\nDB column: lang7",
            "type": "string"
          },
          "mbLang8": {
            "description": "Member bit: Language 8\nDB column: lang8",
            "type": "string"
          },
          "mbLang5": {
            "description": "Member bit: Language 5\nDB column: lang5",
            "type": "string"
          },
          "mbLang6": {
            "description": "Member bit: Language 6\nDB column: lang6",
            "type": "string"
          },
          "mbLang3": {
            "description": "Member bit: Language 3\nDB column: lang3",
            "type": "string"
          },
          "mbLang4": {
            "description": "Member bit: Language 4\nDB column: lang4",
            "type": "string"
          },
          "mbLang1": {
            "description": "Member bit: Language 1. System language.\nDB column: lang1",
            "type": "string"
          },
          "lnLang29": {
            "format": "int32",
            "description": "Column length: Language 29\nDB column: lang29",
            "type": "integer"
          },
          "mbLang2": {
            "description": "Member bit: Language 2\nDB column: lang2",
            "type": "string"
          },
          "lnLang28": {
            "format": "int32",
            "description": "Column length: Language 28\nDB column: lang28",
            "type": "integer"
          },
          "lnLang27": {
            "format": "int32",
            "description": "Column length: Language 27\nDB column: lang27",
            "type": "integer"
          },
          "lnLang26": {
            "format": "int32",
            "description": "Column length: Language 26\nDB column: lang26",
            "type": "integer"
          },
          "lnLang25": {
            "format": "int32",
            "description": "Column length: Language 25\nDB column: lang25",
            "type": "integer"
          },
          "lnLang24": {
            "format": "int32",
            "description": "Column length: Language 24\nDB column: lang24",
            "type": "integer"
          },
          "lnLang23": {
            "format": "int32",
            "description": "Column length: Language 23\nDB column: lang23",
            "type": "integer"
          },
          "lnLang22": {
            "format": "int32",
            "description": "Column length: Language 22\nDB column: lang22",
            "type": "integer"
          },
          "mbLang30": {
            "description": "Member bit: Language 30\nDB column: lang30",
            "type": "string"
          }
        }
      },
      "ReportOptionsC": {
        "description": "Constants for report mode\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>\n An ERP code is assigned to one or more action codes.",
        "type": "object",
        "properties": {
          "ERP_LOGOPENARC": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_DELFLOWTEMPL": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_NOREPDATA": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGCHANGEKIND": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_WRITESESSION": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGCREATEDOC": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGCOMPLAIN": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_FLOWTIMELIMT": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGERASOR": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGMOVEDOC": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGMASKDATA": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_POSTBOX": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGEDITDATA": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGFIRSTMESSAGE": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGREFDOC": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGERAREF": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGPATHDATA": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_FLOWERRORYESNO": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGCOLORDATA": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_REMOVEVERT": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_FORWARDFLOW": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_PICKPOST": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGCREATESOR": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGATTACHMENT": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGMOVESOR": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_CHECKIN": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_SEARCH": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_CONVERT_FORMAT": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGREFSOR": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_DELFLOWACTIVE": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_WV": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_VERSCHIEDEN": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_SETVERT": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_CUSTOM": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_NEWVERT": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_DELVERSION": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_EDITFLOWTEMPL": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGDELDOCS": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGCHANGEPWD": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_STARTFLOW": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_EDITFLOWACTIVE": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_SUBSTITUTIONS": {
            "format": "int32",
            "description": "All substitution actions are combined into this code:\n<ul>\n <li>{@link ReportInfoC#ACT_IX_SUBSTITUTION_NEW}<\/li>\n <li>{@link ReportInfoC#ACT_IX_SUBSTITUTION_CHANGE}<\/li>\n <li>{@link ReportInfoC#ACT_IX_SUBSTITUTION_ACTIVATE}<\/li>\n <li>{@link ReportInfoC#ACT_IX_SUBSTITUTION_DEACTIVATE}<\/li>\n <li>{@link ReportInfoC#ACT_IX_SUBSTITUTION_FORWARD}<\/li>\n <li>{@link ReportInfoC#ACT_IX_SUBSTITUTION_TRANSFER}<\/li>\n <li>{@link ReportInfoC#ACT_IX_SUBSTITUTION_DELETE}<\/li>\n <\/ul>",
            "type": "integer"
          },
          "ERP_RESETVERT": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGCLOSEARC": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_SHOWDOC": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGEDITDOC": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_FREEVERT": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGCHANGEKEY": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_POSTBARCODE": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_DM_READDOC": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGVIEWDOC": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGERADOC": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGLASTMESSAGE": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGASPECTDATA": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_ERROR": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGKEYDATA": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_CREATEFLOWTEMPL": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_DELVERT": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_LOGUSERDATA": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_RECEIVEFLOW": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_SHOWSOR": {
            "format": "int32",
            "type": "integer"
          },
          "ERP_CHECKOUT": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "MapHistZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string"
          }
        }
      },
      "IXExceptionC": {
        "description": "This class contains constant definitions for Indexserver error numbers used in Indexserver\nexceptions.\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "SCRIPT_ERROR": {
            "format": "int32",
            "description": "An error thrown in a script file is passed to the client application with this error code. E.g.\n[ELOIX:6000] \"Message text thrown in script\".",
            "type": "integer"
          },
          "PASSWORD_DENIED": {
            "format": "int32",
            "description": "The given password violates the password rules.\nThe passord rules are stored in the user\n profile value {@link UserProfileC#KEY_PASSWORD_RULES}.",
            "type": "integer"
          },
          "SYNTAX_ERROR": {
            "format": "int32",
            "description": "Syntax error e.g. in search request.",
            "type": "integer"
          },
          "TEMP_PROBLEM": {
            "format": "int32",
            "description": "Temporarily problem, a later try should succeed.",
            "type": "integer"
          },
          "ALREADY_EXISTS": {
            "format": "int32",
            "description": "Specified object to be created already exists.",
            "type": "integer"
          },
          "FAILED_TO_DELETE_PACKAGE_LEVEL": {
            "format": "int32",
            "description": "EIX-2647: Specified package level can not be deleted.",
            "type": "integer"
          },
          "AUTHENTICATION_FAILED": {
            "format": "int32",
            "description": "User authentication failed",
            "type": "integer"
          },
          "INVALID_PARAM": {
            "format": "int32",
            "description": "Invalid parameter was given.",
            "type": "integer"
          },
          "NOT_EMPTY": {
            "format": "int32",
            "description": "Specified data could not be found.",
            "type": "integer"
          },
          "SERVER_ERROR": {
            "format": "int32",
            "description": "Problem in the server configuration.",
            "type": "integer"
          },
          "ACCESS_DENIED": {
            "format": "int32",
            "description": "Access to the specified object was denied, there are rights missing.",
            "type": "integer"
          },
          "UNSUPPORTED_PROTOCOL_VERSION": {
            "format": "int32",
            "description": "Unsupported protocol version.\nThis error is thrown, if the protocol version cannot be\n negotiated. A reason for this can be different major release versions of client and server.",
            "type": "integer"
          },
          "INTERNAL": {
            "format": "int32",
            "description": "Internal error.",
            "type": "integer"
          },
          "NOT_IX": {
            "format": "int32",
            "description": "Not a ELO IX Exception",
            "type": "integer"
          },
          "TEMP_PROBLEM_OLD": {
            "format": "int32",
            "description": "Temporarily problem, a later try should succeed.\nThe value of TEMP_PROBLEM must be changed in\n IX 8.00.054, because the current client libraries recognize it as an exception where relogin is\n required. This could lead to the effect described in TTS001661.",
            "type": "integer"
          },
          "LOCKED": {
            "format": "int32",
            "description": "Specified data is locked.",
            "type": "integer"
          },
          "NOT_FOUND": {
            "format": "int32",
            "description": "Specified data could not be found.",
            "type": "integer"
          },
          "INVALID_LICENSE": {
            "format": "int32",
            "description": "License key is invalid.",
            "type": "integer"
          },
          "PROHIBITED_OPERATION": {
            "format": "int32",
            "description": "The called function cannot be executed on this object",
            "type": "integer"
          },
          "UNSUPPORTED_FUNCTION": {
            "format": "int32",
            "description": "Function is not currently supported.",
            "type": "integer"
          },
          "FAILED_TO_DELETE_PACKAGE": {
            "format": "int32",
            "description": "EIX-2040: Specified package can not be deleted.",
            "type": "integer"
          },
          "TIMEOUT": {
            "format": "int32",
            "description": "Request timed out.\nEIX-3140",
            "type": "integer"
          },
          "INVALID_CRYPT_KEY": {
            "format": "int32",
            "description": "Encryption key must be set before documents can be encrypted.",
            "type": "integer"
          },
          "UNABLE_TO_TAKE_OVER_ASPECT_OBJECTS": {
            "format": "int32",
            "description": "Can not take over aspect objects.",
            "type": "integer"
          },
          "INVALID_SESSION": {
            "format": "int32",
            "description": "Session is not (or no longer) valid.",
            "type": "integer"
          }
        }
      },
      "ResolveRightsResult": {
        "description": "Class for the result of the IX-Function\n{@link IXServicePortIF#resolveRights(ClientInfo, UserInfo, ResolveRightsInfo)} .",
        "type": "object",
        "properties": {
          "right2": {
            "format": "int32",
            "description": "The right the user got by {@link ResolveRightsResult#type}.\nValues will be of\n {@link AccessC}.FLAG2_*.",
            "type": "integer"
          },
          "members": {
            "description": "Path of members that explains why the user got this right.\n<p>\n The first item in this list is the name of the object directly assigned to the user. The last\n item is the name of the object which obtains the right.\n <\/p>\n \n <p>\n If {@link #type} == {@link ResolveRightsResultC#SUBSTITUTION}, the members are set as\n following:<br>\n [0] the user himself<br>\n [1..] the group hierarchy from the user to {@link Substitution#substituteId}<br>\n [2] {@link Substitution#substituteName}<br>\n [3] {@link Substitution#groupsToInheritRights}br> [4] {@link Substitution#userName}<br>\n <\/p>",
            "$ref": "#/components/schemas/ListOfString"
          },
          "right": {
            "format": "int32",
            "description": "The right the user got by {@link ResolveRightsResult#type}.\nValues will be of\n {@link AccessC}.FLAG_*.",
            "type": "integer"
          },
          "type": {
            "format": "int32",
            "description": "The kind of way the user got this right. See {@link ResolveRightsResultC} for valid values.",
            "type": "integer"
          }
        }
      },
      "ArrayOfUserNodeInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserNodeInfo"
        }
      },
      "Cardinality": {
        "description": "Aspect cardinality.",
        "type": "object",
        "properties": {
          "OPTIONAL": {
            "description": "At most one object. By other words: 0 or 1 object.",
            "$ref": "#/components/schemas/Cardinality"
          },
          "OPTIONAL_MANY": {
            "description": "Any number of objects. By other words: 0...n objects.",
            "$ref": "#/components/schemas/Cardinality"
          },
          "MANDATORY": {
            "description": "Exactly one object.",
            "$ref": "#/components/schemas/Cardinality"
          },
          "MANDATORY_MANY": {
            "description": "At least one object. By other words: 1...n objects.",
            "$ref": "#/components/schemas/Cardinality"
          }
        }
      },
      "BRequest_IXServicePortIF_queryJobProtocol": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "queryJobProtocolInfo": {
            "$ref": "#/components/schemas/QueryJobProtocolInfo"
          }
        }
      },
      "SordZ": {
        "description": "<p>\nThis class encapsulates the constants of <code>SordC<\/code>\n <\/p>\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants from SordC class.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteNotes": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "noteIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BackupProfile": {
        "description": "This class represents settings of a ELOdm backup profile.",
        "type": "object",
        "properties": {
          "name": {
            "description": "Backup profile name",
            "type": "string"
          },
          "writeKeywording": {
            "description": "Store keywording too",
            "type": "boolean"
          },
          "nbOfDocsPerLoop": {
            "format": "int32",
            "description": "Maximum number of documents per backup loop.",
            "type": "integer"
          },
          "pathId": {
            "format": "int32",
            "description": "Storage path id",
            "type": "integer"
          },
          "slot": {
            "format": "int32",
            "description": "Backup slot",
            "type": "integer"
          },
          "sqlDocSelect": {
            "description": "Optional SQL command to select the documents to be stored.",
            "type": "string"
          },
          "retention": {
            "format": "int32",
            "description": "Reserved",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_insertPublicDownload": {
        "type": "object",
        "properties": {
          "opts": {
            "$ref": "#/components/schemas/PublicDownloadOptions"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_cleanupState": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ArrayOfContextTerm": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ContextTerm"
        }
      },
      "FioResult": {
        "type": "object",
        "properties": {
          "downloadStream": {
            "$ref": "#/components/schemas/BStreamReference"
          },
          "jobState": {
            "description": "This object represents the state of the export.\nUse\n {@link de.elo.ix.client.IXServicePortIF#queryJobState(de.elo.ix.client.ClientInfo, String, boolean, boolean, boolean)}\n to get recent states.",
            "$ref": "#/components/schemas/JobState"
          }
        }
      },
      "OcrInfoC": {
        "description": "Constants for OCR processing.",
        "type": "object",
        "properties": {
          "MESSAGES_LANGUAGE_LITHUANIAN": {
            "format": "int32",
            "type": "integer"
          },
          "TEXT": {
            "format": "int32",
            "description": "Text output. The OCR result is a UTF-16LE character stream.",
            "type": "integer"
          },
          "MESSAGES_LANGUAGE_SLOVAK": {
            "format": "int32",
            "type": "integer"
          },
          "UNIT_INCH": {
            "format": "int32",
            "type": "integer"
          },
          "MESSAGES_LANGUAGE_LATVIAN": {
            "format": "int32",
            "type": "integer"
          },
          "MESSAGES_LANGUAGE_ENGLISH": {
            "format": "int32",
            "type": "integer"
          },
          "UNIT_PER_THOUSAND": {
            "format": "int32",
            "type": "integer"
          },
          "MESSAGES_LANGUAGE_SPANISH": {
            "format": "int32",
            "type": "integer"
          },
          "MESSAGES_LANGUAGE_POLISH": {
            "format": "int32",
            "type": "integer"
          },
          "MESSAGES_LANGUAGE_CZECH": {
            "format": "int32",
            "type": "integer"
          },
          "MESSAGES_LANGUAGE_RUSSIAN": {
            "format": "int32",
            "type": "integer"
          },
          "MESSAGES_LANGUAGE_PORTUGUESE": {
            "format": "int32",
            "type": "integer"
          },
          "SPACES_TWOSPACES": {
            "format": "int32",
            "description": "Used in SingleCoulmnMode.\nIf the words are separated by a larger distance, a second blank is\n inserted.",
            "type": "integer"
          },
          "PDF_QUALITY_BALANCED": {
            "format": "int32",
            "description": "The PDF (PDF/A) export will be balanced between the quality of the resulting file, its size and\nthe time of processing.",
            "type": "integer"
          },
          "ENCODING_UTF16": {
            "format": "int32",
            "type": "integer"
          },
          "PDF_COMPLIANCE_PDFA_1B": {
            "format": "int32",
            "description": "The recognized text should be exported to PDF/A-1b format.",
            "type": "integer"
          },
          "MESSAGES_LANGUAGE_DUTCHSTANDARD": {
            "format": "int32",
            "type": "integer"
          },
          "CHAR_AND_RECT_XML": {
            "format": "int32",
            "description": "Compute character positions and return XML format.",
            "type": "integer"
          },
          "MESSAGES_LANGUAGE_ESTONIAN": {
            "format": "int32",
            "type": "integer"
          },
          "PDF_COMPLIANCE_PDFA_1A": {
            "format": "int32",
            "description": "The recognized text should be exported to PDF/A-1a format.",
            "type": "integer"
          },
          "PDF_QUALITY_MAXSPEED": {
            "format": "int32",
            "description": "Optimize the PDF (PDF/A) export in order to receive the highest speed of processing.",
            "type": "integer"
          },
          "WHITESPACE_DEFAULT": {
            "format": "int32",
            "description": "Let the OCR Whitespace characters as they are.",
            "type": "integer"
          },
          "MESSAGES_LANGUAGE_GERMAN": {
            "format": "int32",
            "type": "integer"
          },
          "PDF_COMPLIANCE_PDFA_2U": {
            "format": "int32",
            "description": "The recognized text should be exported to PDF/A-2u format.",
            "type": "integer"
          },
          "UNIT_MILLIMETER": {
            "format": "int32",
            "type": "integer"
          },
          "SPACES_EXACT": {
            "format": "int32",
            "description": "Used in SingleCoulmnMode. The OCR tries to insert the correct number of blanks.",
            "type": "integer"
          },
          "ENCODING_UTF16LE": {
            "format": "int32",
            "type": "integer"
          },
          "ODD_PAGES": {
            "format": "int32",
            "description": "Internal Use only. OCR will process all odd pages of the given document.",
            "type": "integer"
          },
          "CHAR_AND_RECT": {
            "format": "int32",
            "description": "Compute character positions.\nThe OCR result is a binary stream of subsequent records of this\n layout: <br/>\n <table>\n <tr>\n <td>UTF-16 Character<\/td>\n <td>2 Bytes<\/td>\n <\/tr>\n <tr>\n <td>Horizontal position of upper left corner<\/td>\n <td>4 Bytes (Integer)<\/td>\n <\/tr>\n <tr>\n <td>Vertical position of upper left corner<\/td>\n <td>4 Bytes (Integer)<\/td>\n <\/tr>\n <tr>\n <td>Horizontal position of bottom right corner<\/td>\n <td>4 Bytes (Integer)<\/td>\n <\/tr>\n <tr>\n <td>Vertical position of bottom right corner<\/td>\n <td>4 Bytes (Integer)<\/td>\n <\/tr>\n <tr>\n <td>Confidence in percent<\/td>\n <td>4 Bytes (Integer)<\/td>\n <\/tr>\n <tr>\n <td>Original UTF-16 Character<\/td>\n <td>2 Bytes<\/td>\n <\/tr>\n <\/table>\n <p>\n The character and integer byte order is Little Endian.\n <\/p>\n <p>\n If the recognition confidence is lower than {@link OcrInfoRecognizeFile#minCharConfidence}, the\n UTF-16 character is equal to {@link OcrInfoRecognizeFile#replaceChar}.\n <\/p>\n <p>\n The rectangle coordinates are measured in points. The vertical axis points to the bottom in\n positive direction.",
            "type": "integer"
          },
          "PDF": {
            "format": "int32",
            "description": "PDF output. OCR will convert the output in a PDF format.",
            "type": "integer"
          },
          "UNIT_POINT": {
            "format": "int32",
            "type": "integer"
          },
          "ALL_PAGES": {
            "format": "int32",
            "description": "OCR will process all pages of the given document.",
            "type": "integer"
          },
          "PDF_COMPLIANCE_PDFA_2A": {
            "format": "int32",
            "description": "The recognized text should be exported to PDF/A-2a format.",
            "type": "integer"
          },
          "WHITESPACE_REPLACE": {
            "format": "int32",
            "description": "OCR Whitespace characters will be replaced: Line break and Paragraph break -> '\\n' Tabulation\n-> '\\t' Object replacement character -> ' ' Soft hyphen -> '-'",
            "type": "integer"
          },
          "MESSAGES_LANGUAGE_HUNGARIAN": {
            "format": "int32",
            "type": "integer"
          },
          "PDF_COMPLIANCE_NONE": {
            "format": "int32",
            "description": "Compliance with PDF/A standard is not necessary.",
            "type": "integer"
          },
          "MESSAGES_LANGUAGE_ITALIAN": {
            "format": "int32",
            "type": "integer"
          },
          "PDF_COMPLIANCE_PDFA_3U": {
            "format": "int32",
            "description": "The recognized text should be exported to PDF/A-3u format.",
            "type": "integer"
          },
          "CHAR_AND_RECT_EX": {
            "format": "int32",
            "description": "Compute character positions.\nThe OCR result is a binary stream as defined in\n {@link #CHAR_AND_RECT} prefixed by a header of this layout:\n <table>\n <tr>\n <td>Magic<\/td>\n <td>4 Bytes (Integer)<\/td>\n <\/tr>\n <tr>\n <td>Version<\/td>\n <td>4 Bytes (Integer)<\/td>\n <\/tr>\n <tr>\n <td>Skew Angle<\/td>\n <td>8 Bytes (Double)<\/td>\n <\/tr>\n <tr>\n <td>Width<\/td>\n <td>4 Bytes (Integer)<\/td>\n <\/tr>\n <tr>\n <td>Height<\/td>\n <td>4 Bytes (Integer)<\/td>\n <\/tr>\n <\/table>\n The value of Magic is 0x52434F45. The value of Version is 1. The Integer and Double byte order\n is Little Endian. The Double value format is IEEE 754.",
            "type": "integer"
          },
          "MESSAGES_LANGUAGE_BULGARIAN": {
            "format": "int32",
            "type": "integer"
          },
          "PDF_QUALITY_MAXQUALITY": {
            "format": "int32",
            "description": "Optimize the PDF (PDF/A) export in order to receive the best quality of the resulting file.",
            "type": "integer"
          },
          "ENCODING_UTF8": {
            "format": "int32",
            "type": "integer"
          },
          "PDF_QUALITY_MINSIZE": {
            "format": "int32",
            "description": "Optimize the PDF (PDF/A) export in order to receive the minimum size of the resulting file.",
            "type": "integer"
          },
          "XML": {
            "format": "int32",
            "description": "XML output. The OCR result is a xml style layout.",
            "type": "integer"
          },
          "MESSAGES_LANGUAGE_UKRAINIAN": {
            "format": "int32",
            "type": "integer"
          },
          "PDF_COMPLIANCE_PDFA_3A": {
            "format": "int32",
            "description": "The recognized text should be exported to PDF/A-3a format.",
            "type": "integer"
          },
          "MESSAGES_LANGUAGE_FRENCH": {
            "format": "int32",
            "type": "integer"
          },
          "SPACES_NORMAL": {
            "format": "int32",
            "description": "Used in SingleCoulmnMode. All words are separated by one blank.",
            "type": "integer"
          },
          "EVEN_PAGES": {
            "format": "int32",
            "description": "Internal Use only. OCR will process all even pages of the given document.",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinConfigFiles": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "configFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigFile"
            }
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BResult_1835331414": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/SordPaths"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BResult_770771503": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/DocumentProcessor"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutNotes": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          },
          "noteZ": {
            "$ref": "#/components/schemas/NoteZ"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "noteIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BRequest_IXServicePortIF_lockArchive": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "groupId": {
            "type": "string"
          }
        }
      },
      "BeginForwardWorkflowNodeInfo": {
        "type": "object"
      },
      "BRequest_IXServicePortIF_checkinSubstitutions": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "checkinSubstitutionsInfo": {
            "$ref": "#/components/schemas/CheckinSubstitutionsInfo"
          },
          "substitutionZ": {
            "$ref": "#/components/schemas/SubstitutionZ"
          }
        }
      },
      "KeywordZ": {
        "description": "This class encapsulates the constants of KeywordC.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants from KeywordC class.",
            "type": "string"
          }
        }
      },
      "MapHistC": {
        "description": "Element selectors for class MapHist.",
        "type": "object",
        "properties": {
          "mbAll": {
            "description": "All members.",
            "$ref": "#/components/schemas/MapHistZ"
          },
          "mbAllMembers": {
            "type": "string"
          },
          "mbHistItems": {
            "type": "string"
          },
          "mbAllNoItems": {
            "description": "All members but without {@link MapHist#histItems}.",
            "$ref": "#/components/schemas/MapHistZ"
          },
          "mbAllMembersNoItems": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinReplNames": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "replNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplSetName"
            }
          }
        }
      },
      "FindAlertInfo": {
        "description": "Find criterias for selecting alerts.\nRESERVED",
        "type": "object",
        "properties": {
          "sourceId": {
            "description": "Find alerts created by this user, ID or name.",
            "type": "string"
          },
          "inclWorkFlow": {
            "description": "Find workflow notifications. Ignored, if <code>inclAll<\/code> is true.",
            "type": "boolean"
          },
          "inclSubs": {
            "description": "Find notifications related to substitution rules. Ignored, if <code>inclAll<\/code> is true.",
            "type": "boolean"
          },
          "destId": {
            "description": "Find alerts sendet to this user, ID or name.\nOnly main administrators can set this value to an\n arbitary user ID. Other users can only set one of her or his groups or one of her or his\n substituted users.",
            "type": "string"
          },
          "timeIso": {
            "description": "Find notifiations with this create date or in this date range.\nA date range must be separated\n by \"...\".",
            "type": "string"
          },
          "inclReminder": {
            "description": "Find reminder notifications. Ignored, if <code>inclAll<\/code> is true.",
            "type": "boolean"
          },
          "objId": {
            "description": "Find notifications related to this object. For valid values see <code>checkoutSord<\/code>.",
            "type": "string"
          },
          "inclAll": {
            "description": "Find all notification types.\nIf this member is set, the other members related to notification\n types are ignored.",
            "type": "boolean"
          },
          "inclAlam": {
            "description": "Find alarm notifications. Ignored, if <code>inclAll<\/code> is true.",
            "type": "boolean"
          },
          "inclInTray": {
            "description": "Find notifications related to the In Tray. Ignored, if <code>inclAll<\/code> is true.",
            "type": "boolean"
          },
          "inclOthers": {
            "description": "Find all other notifications that are not explicitly listed here.\nIgnored, if\n <code>inclAll<\/code> is true.",
            "type": "boolean"
          }
        }
      },
      "BResult_1597637633": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/PluginInfo"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_DocumentEvents_beginDownload": {
        "type": "object",
        "properties": {
          "rwInfo": {
            "$ref": "#/components/schemas/UpDownloadEventInfo"
          },
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteNoteTemplates": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "ServerInfoDM": {
        "description": "This class contains infomation about the filing paths of the document manager (DM).",
        "type": "object",
        "properties": {
          "basisStoreIds": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "backupStoreIds": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "storeMode": {
            "format": "int32",
            "description": "Mode to be used to fill the filing paths. This value is a bitset of the ServerInfoDMC.STOREMODE_* constants.",
            "type": "integer"
          },
          "blackeningEnabled": {
            "description": "DM is enabled for blackening of document parts.",
            "type": "boolean"
          },
          "restoreStoreId": {
            "format": "int32",
            "description": "ID of restore path.",
            "type": "integer"
          },
          "proxyMode": {
            "format": "int32",
            "description": "DM proxy mode. Read-only.\n<table>\n <tr>\n <td>-1<\/td>\n <td>Proxy mode is not active<\/td>\n <\/tr>\n <tr>\n <td>0<\/td>\n <td>Main instance<\/td>\n <\/tr>\n <tr>\n <td>&gt;0<\/td>\n <td>Branch instance<\/td>\n <\/tr>\n <\/table>",
            "type": "integer"
          }
        }
      },
      "BResult_256674679": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/Reminder"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BResult_BUtility_upload": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/BStreamReference"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutUsers": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "checkoutUsersZ": {
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "UserInfo": {
        "description": "<p>\nData class containing the user information data for the user logged in to the Index server. User\n information includes ID, name, rights, parent, etc.\n <\/p>\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "parent": {
            "format": "int32",
            "description": "User ID of the users parent (users adminstrator).",
            "type": "integer"
          },
          "sessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionInfo"
            }
          },
          "tStampSync": {
            "description": "Timestamp of this object's last export by the replication.",
            "type": "string"
          },
          "ldapProperties": {
            "description": "Reserved (LDAP user properties). Keys of this map named LDAP_PROP_* in class UserInfoC.\nAll\n keys are lower case. Mandatory properties - For user: objectGUID, distinguishedName,\n displayName, sAMAccountName und UserPrincipalName - For group: objectGUID, distinguishedName,\n name und sAMAccountName",
            "$ref": "#/components/schemas/MapToString"
          },
          "flags2": {
            "format": "int32",
            "description": "Second bitset of user rights.",
            "type": "integer"
          },
          "flags": {
            "format": "int32",
            "description": "User rights. Possible values are combinations of <code>AccessC.FLAG_*<\/code> constants.",
            "type": "integer"
          },
          "groupList": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "type": {
            "format": "int32",
            "description": "User type. <code>TYPE_USER<\/code> for user, <code>TYPE_GROUP<\/code> for group.",
            "type": "integer"
          },
          "keylist": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "userProps": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "superiorId": {
            "format": "int32",
            "description": "ID of the users superior.\nIf the user does not have a superior, this value is equal to\n <code>id<\/code>.",
            "type": "integer"
          },
          "availableRoles": {
            "description": "The user can activate this roles.",
            "$ref": "#/components/schemas/ListOfUserName"
          },
          "internalUser": {
            "description": "The flag for a group which will not be removed by LDAP replication.",
            "type": "boolean"
          },
          "tStamp": {
            "description": "Timestamp The format is JJJJ.MM.DD.hh.mm.\nss",
            "type": "string"
          },
          "lastLoginIso": {
            "description": "Last login timestamp (in timezone UTC). This value is read-only and undefined for groups.\nOnly\n the date part is valid.",
            "type": "string"
          },
          "name": {
            "description": "User name",
            "type": "string"
          },
          "guid": {
            "description": "GUID",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "User identifier",
            "type": "integer"
          },
          "packageName": {
            "description": "The package name of UserInfo",
            "type": "string"
          },
          "workspaceInfo": {
            "description": "Workspace related data.",
            "type": "string"
          },
          "pwd": {
            "description": "User password",
            "type": "string"
          },
          "orgUnitIds": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "desc": {
            "description": "User description.",
            "type": "string"
          }
        }
      },
      "WFCacheSyncInfo": {
        "description": "This class is used to synchronize the workflow cache.",
        "type": "object",
        "properties": {
          "tstamp": {
            "description": "Workflow timestamp.",
            "type": "string"
          },
          "flowId": {
            "format": "int32",
            "description": "Workflow ID.",
            "type": "integer"
          },
          "hash": {
            "format": "int32",
            "description": "Checksum on workflow data.",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_configureBackup": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "backupProfiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupProfile"
            }
          }
        }
      },
      "BResult_460199434": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/Activity"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "FindByNotes": {
        "description": "Finds an object according to the objects notes (sticky notes) content.",
        "type": "object",
        "properties": {
          "term": {
            "description": "The search term to be found within the notes.",
            "type": "string"
          },
          "type": {
            "format": "int32",
            "description": "Find notes of this type. Use TYPE_NONE (=0) to find all notes.",
            "type": "integer"
          }
        }
      },
      "SordLink": {
        "description": "This class represents a link to an archive entry.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "linkId": {
            "description": "Link ID.",
            "type": "string"
          },
          "permanent": {
            "description": "True, if this SordLink is permanent. Permanent links between Sords cannot be deleted.",
            "type": "boolean"
          },
          "id": {
            "description": "Numerical ID or GUID of referenced Sord.",
            "type": "string"
          }
        }
      },
      "MapToArrayListOfWFNodeHistory": {
        "additionalProperties": {
          "$ref": "#/components/schemas/ArrayListOfWFNodeHistory"
        },
        "type": "object"
      },
      "NoteFreehand": {
        "description": "This class describes a freehand line annotation.",
        "type": "object",
        "properties": {
          "width": {
            "format": "int32",
            "description": "Line width.",
            "type": "integer"
          },
          "strikeoutColor": {
            "format": "int32",
            "description": "Color for strikeout pen (only TYPE_ANNOTATION_STRIKEOUT).",
            "type": "integer"
          },
          "strikeoutWidth": {
            "format": "int32",
            "description": "Line width for strikeout pen (only TYPE_ANNOTATION_STRIKEOUT).",
            "type": "integer"
          },
          "points": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PointInfo"
            }
          }
        }
      },
      "BRequest_IXServicePortIF_deleteActivity": {
        "type": "object",
        "properties": {
          "deleteOptions": {
            "$ref": "#/components/schemas/DeleteActivityOptions"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "actGuid": {
            "type": "string"
          }
        }
      },
      "FindByFulltextCtrlC": {
        "description": "Constants for {@link FindByFulltextCtrl}.\nEIX-2773",
        "type": "object",
        "properties": {
          "KEY_TR": {
            "description": "Textreader uses this value as {@link FindByFulltextCtrl#profileKeyPrefix}.",
            "type": "string"
          },
          "KEY_FT_PLUGIN": {
            "description": "ELOftPlugin uses this value as {@link FindByFulltextCtrl#profileKeyPrefix}.",
            "type": "string"
          }
        }
      },
      "ListOfDateValue": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DateValue"
        }
      },
      "SearchTermOptions": {
        "description": "Use this class if alternative search terms should be retrieved by\n{@link de.elo.ix.client.IXServicePortIF#findSearchTerms(de.elo.ix.client.ClientInfo, de.elo.ix.client.FindInfo, int)}.<br>\n Deliver query by {@link de.elo.ix.client.esearch.ESearchParams}.",
        "type": "object",
        "properties": {
          "synonyms": {
            "description": "Return synonyms for search query.",
            "type": "boolean"
          },
          "correction": {
            "description": "Return correction suggestion for search query.\n<br>\n Example for a correction: tets -> test",
            "type": "boolean"
          }
        }
      },
      "InheritKeywordingResult": {
        "description": "Return values for server event {@link IXServerEvents#onInheritKeywording}.",
        "type": "object",
        "properties": {
          "APPLY_DEFAULT": {
            "description": "The event function has not modified keywording of the given Sord.\nIndexserver applies the\n default inheritance algorithm to the given Sord and continues processing of children.",
            "$ref": "#/components/schemas/InheritKeywordingResult"
          },
          "NOTHING": {
            "description": "Indexserver should stop processing of children of the given Sord.",
            "$ref": "#/components/schemas/InheritKeywordingResult"
          },
          "INHERITED": {
            "description": "The event function has modified keywording of the given Sord.\nIndexserver updates the given\n Sord in the database and continues processing of children.",
            "$ref": "#/components/schemas/InheritKeywordingResult"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutKeywordList": {
        "type": "object",
        "properties": {
          "kwid": {
            "type": "string"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "keywordZ": {
            "$ref": "#/components/schemas/KeywordZ"
          }
        }
      },
      "ReportInfoUserModified": {
        "description": "Additional report information for modified user.",
        "type": "object",
        "properties": {
          "newProps": {
            "description": "Modified properties.",
            "$ref": "#/components/schemas/ReportInfoUserProps"
          },
          "oldProps": {
            "description": "Properties before modification. This member is null for new users and for deleted users.",
            "$ref": "#/components/schemas/ReportInfoUserProps"
          }
        }
      },
      "BResult_1132956238": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserInfo"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BResult_1754570852": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/CheckoutWorkflowHistoryResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "WorkFlowHead": {
        "description": "Helperclass to access the DB table workflowtemplhead, workflowactivedochead, ...",
        "type": "object",
        "properties": {
          "callNodeId": {
            "format": "int32",
            "description": "The call node id of the main workflow, which call this sub workflow.",
            "type": "integer"
          },
          "parentWorkflow": {
            "format": "int32",
            "description": "Id of the main workflow.",
            "type": "integer"
          },
          "tStampSync": {
            "description": "Timestamp of this object's last export by the replication.",
            "type": "string"
          },
          "tStamp": {
            "description": "Timestamp The format is JJJJ.MM.DD.hh.mm.\nss",
            "type": "string"
          },
          "guid": {
            "description": "GUID",
            "type": "string"
          },
          "type": {
            "format": "int32",
            "description": "Workflow type.",
            "type": "integer"
          },
          "flowId": {
            "format": "int32",
            "description": "Workflow ID",
            "type": "integer"
          },
          "actServerId": {
            "description": "The current sever ID (resp. replication branch) where the workflow can be condinued.",
            "type": "string"
          },
          "status": {
            "format": "int32",
            "description": "Status, != 0 means deleted",
            "type": "integer"
          }
        }
      },
      "ListOfAclItem": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AclItem"
        }
      },
      "BRequest_IXServicePortIF_checkoutCryptInfos": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_PluginService_getPlugin": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "symbolicName": {
            "type": "string"
          }
        }
      },
      "FeedService": {
        "type": "object"
      },
      "BRequest_FeedService_findHashTags": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindHashTagInfo"
          }
        }
      },
      "MapToMapValue": {
        "additionalProperties": {
          "$ref": "#/components/schemas/MapValue"
        },
        "type": "object"
      },
      "BRequest_ConfigService_deleteConfigurations": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "configIds": {
            "$ref": "#/components/schemas/ListOfLong"
          }
        }
      },
      "ProcessInfo": {
        "description": "Specific processing information for each node of processTrees(...) or processFindResults(...).\nThe operations will be for existence (not null) in order of their appearance in ProcessInfo. Some\n of the underlying structures may allow toggling between prefix and postfix processing when used\n with processTrees.\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "procMoveDocumentsToStoragePath": {
            "description": "Move documents to storage path.",
            "$ref": "#/components/schemas/ProcessMoveDocumentsToStoragePath"
          },
          "procMsgs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "procReplSet": {
            "description": "Prefix processing, valid ProcessReplSet data.",
            "$ref": "#/components/schemas/ProcessReplSet"
          },
          "inclReferences": {
            "description": "Process references (logical copies) too.",
            "type": "boolean"
          },
          "ignoreDocuments": {
            "description": "processing flag for documents.",
            "type": "boolean"
          },
          "procInheritKeywording": {
            "description": "Inherit keywording.",
            "$ref": "#/components/schemas/ProcessInheritKeywording"
          },
          "procMsgMax": {
            "format": "int32",
            "description": "Maximum amount of recorded errors in procMsgs; from ProcessInfoC: PROCMSGMAX.",
            "type": "integer"
          },
          "errorMode": {
            "format": "int32",
            "description": "From ProcessInfoC: ERRORMODE_ALL, ERRORMODE_SKIP_SUBTREE, ERRORMODE_SKIP_PROCINFO or\nERRORMODE_CRITICAL_ONLY.",
            "type": "integer"
          },
          "lockZ": {
            "description": "Use this parameter to access potentially locked nodes.",
            "$ref": "#/components/schemas/LockZ"
          },
          "procFulltext": {
            "description": "Prefix processing, valid ProcessFulltext data.",
            "$ref": "#/components/schemas/ProcessFulltext"
          },
          "procScript": {
            "description": "Either prefix or postfix processing.",
            "$ref": "#/components/schemas/ProcessScript"
          },
          "procCountElem": {
            "description": "Prefix processing count all elements",
            "$ref": "#/components/schemas/ProcessCountElements"
          },
          "procSpaceGuid": {
            "description": "Workspace GUID processing.",
            "$ref": "#/components/schemas/ProcessSpaceGuid"
          },
          "delStatus": {
            "format": "int32",
            "description": "pass 0 for valid (undeleted) nodes, &gt;0 otherwise.",
            "type": "integer"
          },
          "procAcl": {
            "description": "Prefix processing, valid ProcessAcl data.",
            "$ref": "#/components/schemas/ProcessAcl"
          },
          "procRegion": {
            "description": "Process region of sub-trees.",
            "$ref": "#/components/schemas/ProcessRegion"
          },
          "ignoreStructures": {
            "description": "processing flag for structure elements.",
            "type": "boolean"
          },
          "procCopyElements": {
            "description": "Copy the elements into other archive location.",
            "$ref": "#/components/schemas/ProcessCopyElements"
          },
          "forceOperation": {
            "description": "Defines, if the data allways have to be written",
            "type": "boolean"
          },
          "procReleaseLock": {
            "description": "Release the locks on processed elements.",
            "$ref": "#/components/schemas/ProcessReleaseLock"
          },
          "desc": {
            "description": "Holds the user defined description of a specific call. This member must not be null or empty.",
            "type": "string"
          }
        }
      },
      "FindActivityInfo": {
        "description": "This class specifies constraints for the API function\n{@link IXServicePortIF#findFirstActivities(ClientInfo, FindActivityInfo, int, ActivityZ)}.\n <p>\n By default, the members of this class are combined by AND. If {@link #senderOrReceiver} is set,\n senderId and receiverId are combined by OR.\n <\/p>\n <p>\n If neither senderId nor receiverId is set, the function findFirstActivities collects all\n activities that can be read by the current session.\n <\/p>",
        "type": "object",
        "properties": {
          "inclDeputy": {
            "description": "Search for the activities of the deputized users too.",
            "type": "boolean"
          },
          "senderId": {
            "description": "Find activities created by this user. Can be set to a user ID, user GUID or user name.\nOptional.",
            "type": "string"
          },
          "receiverId": {
            "description": "Find activities created for this receiver. Can be set to a user ID, user GUID or user name.\nOptional.",
            "type": "string"
          },
          "inclGroup": {
            "description": "Search for all groups of sender and receiver too.",
            "type": "boolean"
          },
          "objId": {
            "description": "Find by object ID. Find activities assigned to this object. Optional.",
            "type": "string"
          },
          "senderOrReceiver": {
            "description": "Search for sender or receiver. Combine the senderId and receiverId by logical OR operation.",
            "type": "boolean"
          },
          "inclDeleted": {
            "description": "Find activities for deleted folders and documents too.",
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_processOcr": {
        "type": "object",
        "properties": {
          "ocrInfo": {
            "$ref": "#/components/schemas/OcrInfo"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ListOfAspectLine": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AspectLine"
        }
      },
      "BResult_1485735592": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/UserInfo"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_HealthCheckService_update": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "hci": {
            "$ref": "#/components/schemas/HealthCheckInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_logout": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ArrayOfNote": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Note"
        }
      },
      "BRequest_IXServicePortIF_findFirstSubscriptions": {
        "type": "object",
        "properties": {
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindSubscriptionInfo"
          },
          "subsZ": {
            "$ref": "#/components/schemas/SubscriptionZ"
          }
        }
      },
      "ArrayListOfWFNodeHistory": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WFNodeHistory"
        }
      },
      "BRequest_IXServicePortIF_copySord": {
        "type": "object",
        "properties": {
          "copyInfo": {
            "$ref": "#/components/schemas/CopyInfo"
          },
          "copySordZ": {
            "$ref": "#/components/schemas/CopySordZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "newParentId": {
            "type": "string"
          },
          "objId": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteUserProfile": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userProfile": {
            "$ref": "#/components/schemas/UserProfile"
          }
        }
      },
      "MapDataC": {
        "description": "Constant class for MapData",
        "type": "object",
        "properties": {
          "lnValue": {
            "format": "int32",
            "description": "Maximum length of map item value.",
            "type": "integer"
          },
          "lnBlob": {
            "format": "int32",
            "description": "Maximum length of blob value.\n1048576 Bytes",
            "type": "integer"
          },
          "lnKey": {
            "format": "int32",
            "description": "Maximum length of map item key.",
            "type": "integer"
          },
          "lnId": {
            "format": "int32",
            "description": "Maximum length of map id.",
            "type": "integer"
          }
        }
      },
      "AclItemC": {
        "description": "<p>\nTypes of ACL items.\n <\/p>",
        "type": "object",
        "properties": {
          "TYPE_USER": {
            "format": "int32",
            "description": "ACL item for user.",
            "type": "integer"
          },
          "TYPE_OWNER": {
            "format": "int32",
            "description": "ACL item to set rights for the owner.",
            "type": "integer"
          },
          "TYPE_GROUP": {
            "format": "int32",
            "description": "ACL item for group.",
            "type": "integer"
          },
          "TYPE_KEY": {
            "format": "int32",
            "description": "ACL item for key.",
            "type": "integer"
          },
          "ACL_EVERYONE_RAW": {
            "description": "String representation of an ACL entry for group \"Everyone\" with full access.",
            "type": "string"
          },
          "TYPE_PARTICIPANTS": {
            "format": "int32",
            "description": "ACL item to set rights for the workflow participants. Only used for workflows.",
            "type": "integer"
          },
          "ACL_EVERYONE": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "TYPE_INHERIT": {
            "format": "int32",
            "description": "ACL item to inherit rights.",
            "type": "integer"
          }
        }
      },
      "ListOfEActionType": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EActionType"
        }
      },
      "BRequest_IXServicePortIF_createNote2": {
        "type": "object",
        "properties": {
          "noteType": {
            "format": "int32",
            "type": "integer"
          },
          "templId": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          }
        }
      },
      "FindTranslateTermInfoC": {
        "description": "Constants for {@link #FindTranslateTermInfo}.",
        "type": "object",
        "properties": {
          "ALL_TRANSLATIONS_FROM_PROPERY_FILES": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutEsSettings": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "License": {
        "description": "<p>\nThis class contains license information.\n <\/p>\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "nbOfIgLicenses": {
            "format": "int32",
            "description": "Number of ELO Internet Gateway users.",
            "type": "integer"
          },
          "backup": {
            "description": "Backup enabled.",
            "type": "boolean"
          },
          "stack": {
            "description": "STACK",
            "type": "boolean"
          },
          "sapALink": {
            "description": "SAPALINK interface",
            "type": "boolean"
          },
          "licenseOptions": {
            "description": "License options as name-value pairs.",
            "$ref": "#/components/schemas/MapToString"
          },
          "signature": {
            "description": "SIGNATURE",
            "type": "boolean"
          },
          "xmlImport": {
            "description": "XML-Import",
            "type": "boolean"
          },
          "emailOnly": {
            "description": "EMail",
            "type": "boolean"
          },
          "nbOfFulltextLangs": {
            "format": "int32",
            "description": "Number of languages for which linguistic processing can be used during fulltext indexing.",
            "type": "integer"
          },
          "cold": {
            "description": "COLD",
            "type": "boolean"
          },
          "professional": {
            "description": "True for ELOprofessional",
            "type": "boolean"
          },
          "features": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "limitedIg": {
            "description": "Limited Internet Gateway",
            "type": "boolean"
          },
          "fultext": {
            "description": "Fulltext enabled.",
            "type": "boolean"
          },
          "replication": {
            "description": "Replication enabled.",
            "type": "boolean"
          },
          "licenseFileContent": {
            "description": "License file content.",
            "type": "string"
          },
          "serno": {
            "description": "License key.",
            "type": "string"
          },
          "httpServer": {
            "description": "HTTP DocServer",
            "type": "boolean"
          },
          "domea": {
            "description": "DOMEA",
            "type": "boolean"
          },
          "licenseValid": {
            "description": "True, if license is valid.",
            "type": "boolean"
          },
          "publicLicenseKey": {
            "description": "Public part of key pair supplied for license download.",
            "type": "string"
          },
          "nbOfServerLicenses": {
            "format": "int32",
            "description": "Number of server licenses.",
            "type": "integer"
          },
          "tobid": {
            "description": "Tobit",
            "type": "boolean"
          },
          "indexServer": {
            "description": "Indexserver",
            "type": "boolean"
          },
          "validityDate": {
            "format": "date-time",
            "description": "License is valid until this date. This valid is null if the license does not expire.",
            "type": "string"
          },
          "demoVersion": {
            "description": "Demo version.",
            "type": "boolean"
          },
          "limitedVersion": {
            "description": "Limited version.",
            "type": "boolean"
          },
          "dispatchFolder": {
            "description": "Dispatch folder (Versendemappe)",
            "type": "boolean"
          }
        }
      },
      "PublicDownload": {
        "description": "This class describes the public download information.\n<p>\n Internal use.\n <\/p>",
        "type": "object",
        "properties": {
          "timeStamp": {
            "description": "The time stamp.",
            "type": "string"
          },
          "attachmentCode": {
            "description": "Indicates whether the download is inline or as attachment. this field is ignored in ELO 11.\n03\n and ongoing versions.",
            "type": "string"
          },
          "fileName": {
            "description": "The fileName in the download url. It is readonly.",
            "type": "string"
          },
          "docId": {
            "format": "int32",
            "description": "The document ID.",
            "type": "integer"
          },
          "objId": {
            "format": "int32",
            "description": "The object ID.",
            "type": "integer"
          },
          "expiration": {
            "description": "The expired time.",
            "type": "string"
          },
          "id": {
            "description": "The download ID.",
            "type": "string"
          },
          "userId": {
            "format": "int32",
            "description": "The user ID.",
            "type": "integer"
          },
          "remaining": {
            "format": "int32",
            "description": "The download count.",
            "type": "integer"
          },
          "url": {
            "description": "The download URL",
            "type": "string"
          }
        }
      },
      "WFCollectNode": {
        "description": "<p>\nData used to display a workflow node int the task view.\n <\/p>\n <p>\n This class bundles the data which is required for displaying a workflow node. The class is used\n by <code>findFirstTasks<\/code>\n <\/p>",
        "type": "object",
        "properties": {
          "nodeName": {
            "description": "Description/processing instructions for the workflow node",
            "type": "string"
          },
          "access": {
            "format": "int32",
            "description": "Access rights to the active workflow for the current user. A combination of LUR_* constants.\nRead-only.",
            "type": "integer"
          },
          "hidden": {
            "description": "Indicates whether this workflow is hidden.",
            "type": "boolean"
          },
          "processOnServerId": {
            "description": "Allows the clients to decide whether the workflow is editable or not without loading the\nWFDiagram.",
            "type": "string"
          },
          "timeLimitEscalations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFTimeLimit"
            }
          },
          "userDelayDateIso": {
            "description": "The workflow node is deferred until this date. Not valid for template workflows.\nOnly valid for\n person nodes. ELO date format.",
            "type": "string"
          },
          "overTimeLimit": {
            "description": "True, if the node exceeds the time limit.",
            "type": "boolean"
          },
          "designDepartmentId": {
            "format": "int32",
            "description": "ID of the user that was assigned to the node when the workflow started.",
            "type": "integer"
          },
          "overTimeLimitAny": {
            "description": "Indicates whether the workflow is an escalation.",
            "type": "boolean"
          },
          "timeLimitsWorkflow": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFTimeLimit"
            }
          },
          "workflowOwnerName": {
            "description": "Workflow owner name.\nThis member is only valid when this object is returned by the\n findFirstTasks or findNextTasks functions.",
            "type": "string"
          },
          "terminateDateIso": {
            "description": "Date the node was completed/terminated",
            "type": "string"
          },
          "completionDateIso": {
            "description": "Date the workfow was completed",
            "type": "string"
          },
          "activateDateWorkflowIso": {
            "description": "Workflow start date.",
            "type": "string"
          },
          "designDepartmentName": {
            "description": "Name of the user that was assigned to the node when the workflow started.",
            "type": "string"
          },
          "prio": {
            "format": "int32",
            "description": "Node priority",
            "type": "integer"
          },
          "flowId": {
            "format": "int32",
            "description": "Workflow id",
            "type": "integer"
          },
          "objType": {
            "format": "int32",
            "description": "Object type of the object for which the workflow is started.\n(1 for cabinet, 2 for folder,\n etc.)",
            "type": "integer"
          },
          "nodeNameTranslationKey": {
            "description": "Translation-keyword for nodeName.",
            "type": "string"
          },
          "workflowOwnerId": {
            "format": "int32",
            "description": "Workflow owner ID.\nThis member is only valid when this object is returned by the findFirstTasks\n or findNextTasks functions.",
            "type": "integer"
          },
          "timeLimitIso": {
            "description": "Node must be completed until this date.\nThis member is only valid when this object is returned\n by the findFirstTasks or findNextTasks functions.",
            "type": "string"
          },
          "callNodeId": {
            "format": "int32",
            "description": "The call node id of the main workflow, which call this sub workflow.",
            "type": "integer"
          },
          "formSpec": {
            "description": "Same as {@link WFNode#formSpec}.",
            "type": "string"
          },
          "objGuid": {
            "description": "Object GUID of the object for which the workflow is started.\nThis member will be set only if a\n search is run via <code>findFirstTasks<\/code> or <code>findNextTasks<\/code>. In this case it is\n equal to the GUID of {@link UserTask#sord}.",
            "type": "string"
          },
          "active": {
            "description": "Is the node active or not?",
            "type": "boolean"
          },
          "objName": {
            "description": "Sord name.",
            "type": "string"
          },
          "label": {
            "description": "Display name by forwarding",
            "type": "string"
          },
          "userName": {
            "description": "User name of the user for whom the workflow node is intended.",
            "type": "string"
          },
          "flowName": {
            "description": "Workflow name",
            "type": "string"
          },
          "inUseDateIso": {
            "description": "Date the node was set to <i>In Use<\/i>",
            "type": "string"
          },
          "userId": {
            "format": "int32",
            "description": "User number of the user for whom the workflow node is intended.",
            "type": "integer"
          },
          "nodeComment": {
            "description": "Node description.",
            "type": "string"
          },
          "timeLimit": {
            "format": "int32",
            "description": "Time limit in minutes.",
            "type": "integer"
          },
          "parentFlowId": {
            "format": "int32",
            "description": "ID of the parent workflow.",
            "type": "integer"
          },
          "timeLimitUserName": {
            "description": "User name for timeLimitUserId; When writing a workflow with checkinWorkFlow, this value has\npreceedence before timeLimitUserId. Set timeLimitUserName to an empty string, if\n timeLimitUserId should be used.",
            "type": "string"
          },
          "nodeCommentTranslationKey": {
            "description": "Translation-keyword for nodeComment.",
            "type": "string"
          },
          "objId": {
            "format": "int32",
            "description": "Object id of the object for which the workflow is started.",
            "type": "integer"
          },
          "flowNameTranslationKey": {
            "description": "Translation-keyword for workflow name.",
            "type": "string"
          },
          "flowStatus": {
            "description": "Workflow status.\nThis member is only valid when this object is returned by the findFirstTasks\n or findNextTasks functions.",
            "type": "string"
          },
          "nodeId": {
            "format": "int32",
            "description": "Node identifier",
            "type": "integer"
          },
          "timeLimitUserId": {
            "format": "int32",
            "description": "The ID of the user that should be informed, if the time-limit is exceeded.\nThe Indexserver does\n not send any notification to the user. The client application is responsible for doing this.",
            "type": "integer"
          },
          "activateDateIso": {
            "description": "Date the node was activated",
            "type": "string"
          },
          "properties": {
            "description": "Node properties",
            "type": "string"
          },
          "labelTranslationKey": {
            "description": "Translation-keyword for {@link WFCollectNode#label}.",
            "type": "string"
          }
        }
      },
      "BRequest_HealthCheckService_computeDoubleValue": {
        "type": "object",
        "properties": {
          "hciUpdateOperation": {
            "$ref": "#/components/schemas/HealthCheckValueOperation"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "hciValueName": {
            "type": "string"
          },
          "hciUpdateValue": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "BRequest_IXServicePortIF_endEditWorkFlowNode": {
        "type": "object",
        "properties": {
          "nFlowId": {
            "format": "int32",
            "type": "integer"
          },
          "bTerminate": {
            "type": "boolean"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "sName": {
            "type": "string"
          },
          "nNodeId": {
            "format": "int32",
            "type": "integer"
          },
          "sComment": {
            "type": "string"
          },
          "bCancel": {
            "type": "boolean"
          },
          "arrEnterNodesIds": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      },
      "PackageDataZ": {
        "description": "Type safe element selector for class PackageData.",
        "type": "object",
        "properties": {
          "bset": {
            "type": "string"
          }
        }
      },
      "HistogramAggregationResult": {
        "description": "The result object of a histogram aggregation on numeric values.\n<br>\n It consists mainly of buckets and within its inner aggregations results (sub-aggregations).",
        "type": "object",
        "properties": {
          "buckets": {
            "description": "The result buckets.",
            "$ref": "#/components/schemas/ListOfBucket"
          }
        }
      },
      "EloFtOpt": {
        "description": "Internal class.",
        "type": "object",
        "properties": {
          "remark": {
            "description": "DB column: remark",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "DB column: optid",
            "type": "integer"
          },
          "value": {
            "description": "DB column: optval",
            "type": "string"
          }
        }
      },
      "BResult_1401065069": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/UserProfile"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_FeedService_checkinAction": {
        "type": "object",
        "properties": {
          "actionZ": {
            "$ref": "#/components/schemas/ActionZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          }
        }
      },
      "BRequest_IXServicePortIF_getWebDAVPathFromObjID2": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "options": {
            "$ref": "#/components/schemas/GetWebDAVPathOptions"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinDocMaskLineTemplate": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "options": {
            "$ref": "#/components/schemas/CheckInDocMaskLineTemplateOptions"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "dmltZ": {
            "$ref": "#/components/schemas/DocMaskLineTemplateZ"
          },
          "dmlt": {
            "$ref": "#/components/schemas/DocMaskLineTemplate"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteDocMask": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "assignMaskId": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "maskId": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutColors": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BResult_1963952629": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MapDomain"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "SetOfMasterDataE": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MasterDataE"
        }
      },
      "BRequest_IXServicePortIF_checkoutPreviewImageURLs": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "previewImageInfo": {
            "$ref": "#/components/schemas/PreviewImageInfo"
          }
        }
      },
      "RangeAggregationQueryParams": {
        "description": "Defines parameters to run an aggregation of type \"Range\" (a multi-bucket-aggregation).\n<br>\n This aggregation query allows sub-aggregations.",
        "type": "object",
        "properties": {
          "ranges": {
            "description": "Defines a set of ranges - each representing a bucket.\n<br>\n During the aggregation process, the values extracted from each document will be checked against\n each bucket range and \"bucket\" the relevant/matching document.",
            "$ref": "#/components/schemas/ListOfDoubleRangeValue"
          },
          "subAggregations": {
            "description": "Inner aggregations of this aggregation.",
            "$ref": "#/components/schemas/MapToAggregationQuery"
          }
        }
      },
      "HashMapToHashTag": {
        "additionalProperties": {
          "$ref": "#/components/schemas/HashTag"
        },
        "type": "object"
      },
      "AndOperator": {
        "description": "This operator contains a list of QueryObjects and concatenates them with an \"AND\" operation.\nThis\n means, a document is returned if all of the QueryObjects are present in the document. For REST\n calls, use class QueryOperator and set the operator type in {@link QueryOperator#operatorType}.",
        "type": "object",
        "properties": {
          "queryObjectList": {
            "description": "List of QueryObjects which are and combined.",
            "$ref": "#/components/schemas/ListOfQueryObject"
          }
        }
      },
      "EloIxOpt": {
        "description": "Internal class.",
        "type": "object",
        "properties": {
          "name": {
            "description": "DB column: optname",
            "type": "string"
          },
          "ixId": {
            "description": "DB column: ixid",
            "type": "string"
          },
          "value": {
            "description": "DB column: optval",
            "type": "string"
          }
        }
      },
      "UpDownloadUsage": {
        "description": "This enumeration defines constants that describe, from where an event in {@link DocumentEvents}\nis called.",
        "type": "object",
        "properties": {
          "INTERN": {
            "description": "Event called from internal process. An internal process is e.g. import or export.",
            "$ref": "#/components/schemas/UpDownloadUsage"
          },
          "API": {
            "description": "Event called from client application via API.",
            "$ref": "#/components/schemas/UpDownloadUsage"
          }
        }
      },
      "ArrayOfMapHistItem": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MapHistItem"
        }
      },
      "FindByAcl": {
        "description": "Find objects by ACL",
        "type": "object",
        "properties": {
          "acls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "distinctAcl": {
            "description": "Return a list of unique ACL entries.\nThe ACL entries are wrapped in arbitary Sord objects which\n are returned in FindResult.sords. This functionality can be combinded with a FindChildren\n object to return all ACLs used in a sub tree.",
            "type": "boolean"
          }
        }
      },
      "HttpRequestInfo": {
        "description": "This class contains information from the HttpServletRequest received by the Indexserver servlet",
        "type": "object",
        "properties": {
          "headers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "requestURL": {
            "description": "Value of the request URL. HttpServletRequest.\ngetRequestURL()",
            "type": "string"
          },
          "requestParams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "requestURI": {
            "description": "Value of the request URI. HttpServletRequest.\ngetRequestURI()",
            "type": "string"
          },
          "cookies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          }
        }
      },
      "BRequest_IXServicePortIF_reloadScripts": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "MapToListOfConfigRecord": {
        "additionalProperties": {
          "$ref": "#/components/schemas/ListOfConfigRecord"
        },
        "type": "object"
      },
      "PurgeSettings": {
        "description": "This class represents the purge settings of the ELOdm purge task",
        "type": "object",
        "properties": {
          "excludePathIds": {
            "description": "List of path ids to exclude from purging if pathId=0 is set.",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "dayLimit": {
            "format": "int32",
            "description": "Original documents older than the specified number of days are deleted (0 or higher), e.g.\n0\n for no limit, 1 for 24 hours, 365 for a year",
            "type": "integer"
          },
          "startHour": {
            "format": "int32",
            "description": "When processing should take place: <br>\nSTART_EVERY_HOUR: when the purge task is starting and then every 60 minutes <br>\n 0 to 23: hour of the day, such as 8:00 p.m.",
            "type": "integer"
          },
          "fileCheckMode": {
            "format": "int32",
            "description": "The original and the backup document can be compared before cleanup.\nPossible values (1 to 3)\n are defined in PurgeSettingsC.",
            "type": "integer"
          },
          "pathId": {
            "format": "int32",
            "description": "Possible path restriction for filing paths: <br>\n0: include all paths <br>\n 1 and higher: only include a path with this ID where documents should be deleted",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_getSessionInfos": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "params": {
            "$ref": "#/components/schemas/SessionInfoParams"
          }
        }
      },
      "ExecuteScriptResult": {
        "description": "The function executeScript returns an object of this class to provide returned information or\nerror information.",
        "type": "object",
        "properties": {
          "returnedString": {
            "description": "Return value as string.",
            "type": "string"
          },
          "errorMessage": {
            "description": "Error message.",
            "type": "string"
          },
          "errorColumn": {
            "format": "int32",
            "description": "Column where the error occured.",
            "type": "integer"
          },
          "errorLine": {
            "format": "int32",
            "description": "Line where the error occured.",
            "type": "integer"
          }
        }
      },
      "ProcessInheritKeywording": {
        "description": "This class of keywording.",
        "type": "object"
      },
      "Bucket": {
        "description": "Represents a bucket within an AggregationResult for a bucket aggregation.",
        "type": "object",
        "properties": {
          "docCount": {
            "description": "Number of documents belonging to the bucket's criteria.",
            "type": "string"
          },
          "from": {
            "description": "For aggregations of type RANGE and DATE_RANGE, this value is a string representation of the\nlower bound of this bucket.",
            "type": "string"
          },
          "to": {
            "description": "For aggregations of type RANGE and DATE_RANGE, this value is a string representation of the\nupper bound of this bucket.",
            "type": "string"
          },
          "type": {
            "description": "Type of aggregation.",
            "$ref": "#/components/schemas/AggregationTypeE"
          },
          "aggregations": {
            "description": "In case the bucket aggregation query has defined sub-aggregations, this Map contains the\nresults of that sub-aggregations within this bucket.",
            "$ref": "#/components/schemas/MapToAggregationResult"
          },
          "key": {
            "description": "The bucket key identifying the bucket.",
            "type": "string"
          }
        }
      },
      "ConfigResult": {
        "description": "Return value for {@link ConfigService} functions.",
        "type": "object",
        "properties": {
          "configRecords": {
            "description": "Selected records.",
            "$ref": "#/components/schemas/MapToListOfConfigRecord"
          },
          "writtenRecords": {
            "description": "Updated or inserted records.",
            "$ref": "#/components/schemas/ListOfConfigRecord"
          }
        }
      },
      "BRequest_IXServicePortIF_getEditInfoFromESW": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "eswOptions": {
            "$ref": "#/components/schemas/EditInfoEswOptions"
          },
          "fileDatas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileData"
            }
          }
        }
      },
      "BResult_1701141707": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Reminder"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "PackageDataC": {
        "description": "<p>Bit constants for members of PackageData<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnDescription": {
            "format": "int32",
            "description": "Column length: Package description.\nDB column: pkdesc",
            "type": "integer"
          },
          "lnContentType": {
            "format": "int32",
            "description": "Column length: Content type of the icon\nDB column: contenttype",
            "type": "integer"
          },
          "lnMaintainer": {
            "format": "int32",
            "description": "Column length: Maintainer of package\nDB column: maintainer",
            "type": "integer"
          },
          "mbTStamp": {
            "description": "Member bit: Timestamp of last modification.\nDB column: pktstamp",
            "type": "string"
          },
          "mbLockId": {
            "description": "Member bit: The ID of the user that holds the lock or -1, if the note is not locked.\nDB column: lockid",
            "type": "string"
          },
          "lnNamespace": {
            "format": "int32",
            "description": "Column length: Name of the package, which can be used (as technical name).\nDB column: namespace",
            "type": "integer"
          },
          "mbName": {
            "description": "Member bit: Name of the package, which is displayed.\nDB column: pkname",
            "type": "string"
          },
          "mbDescription": {
            "description": "Member bit: Package description.\nDB column: pkdesc",
            "type": "string"
          },
          "lnGuid": {
            "format": "int32",
            "description": "Column length: Package GUID.\nDB column: pkguid",
            "type": "integer"
          },
          "lnName": {
            "format": "int32",
            "description": "Column length: Name of the package, which is displayed.\nDB column: pkname",
            "type": "integer"
          },
          "mbNamespace": {
            "description": "Member bit: Name of the package, which can be used (as technical name).\nDB column: namespace",
            "type": "string"
          },
          "mbMaintainer": {
            "description": "Member bit: Maintainer of package\nDB column: maintainer",
            "type": "string"
          },
          "mbIconData": {
            "description": "Member bit: Icon of package.\nDB column: icon",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbGuid": {
            "description": "Member bit: Package GUID.\nDB column: pkguid",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "Column length: Timestamp of last modification.\nDB column: pktstamp",
            "type": "integer"
          },
          "mbContentType": {
            "description": "Member bit: Content type of the icon\nDB column: contenttype",
            "type": "string"
          },
          "lnIconData": {
            "format": "int32",
            "description": "Column length: Icon of package.\nDB column: icon",
            "type": "integer"
          }
        }
      },
      "ArrayOfKeyValue": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/KeyValue"
        }
      },
      "BRequest_IXServicePortIF_getUserNames": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "checkoutUsersZ": {
            "$ref": "#/components/schemas/CheckoutUsersZ"
          }
        }
      },
      "ServerInfoDMC": {
        "description": "Constants used by the members of the class ServerInfoDM.",
        "type": "object",
        "properties": {
          "STOREMODE_BASEPATH_FILL_UP": {
            "format": "int32",
            "description": "Fill up base paths subsequently.",
            "type": "integer"
          },
          "STOREMODE_BASEPATH_MASK": {
            "format": "int32",
            "description": "This bitmask selects the lower two bits of the ServerInfoDM.storeMode.\nThis bits are equal to\n one of the STOREMODE_BASEPATH_* constants.",
            "type": "integer"
          },
          "STOREMODE_BASEPATH_ROUNDROBIN": {
            "format": "int32",
            "description": "Fill base paths by round robin algorithm.",
            "type": "integer"
          }
        }
      },
      "ArrayOfOrgUnitInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/OrgUnitInfo"
        }
      },
      "LicenseInfo": {
        "description": "License information to be checked with\n{@link IXServicePortIF#checkLicense(ClientInfo, LicenseInfo)}.",
        "type": "object",
        "properties": {
          "licenseKey": {
            "description": "License key.",
            "type": "string"
          },
          "moduleName": {
            "description": "Module name.",
            "type": "string"
          },
          "customerName": {
            "description": "Customer name.",
            "type": "string"
          }
        }
      },
      "FindReportInfo": {
        "description": "Objects of this class specify the selection criteria for report entries in\n<code>findReport<\/code>.\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "searchId": {
            "description": "reserved.",
            "type": "string"
          },
          "startDateIso": {
            "description": "Start date (UTC)",
            "type": "string"
          },
          "objId": {
            "description": "Object ID or GUID",
            "type": "string"
          },
          "orderBy": {
            "description": "Can contain an SQL ORDER BY clause.",
            "type": "string"
          },
          "timeoutSeconds": {
            "format": "int32",
            "description": "Specifies the time limit for the search. If the limit is exceeded, the search is interruped.\n<code>timeoutSeconds=0<\/code> means that the search has no time limit.",
            "type": "integer"
          },
          "endDateIso": {
            "description": "End date (UTC)",
            "type": "string"
          },
          "findLastEntryBeforeEndDate": {
            "description": "Find the last entry before the given {@link #endDateIso}. This option e.g.\nallows to find the\n user permissions at the given {@link #endDateIso}. Therefore, set\n <code>erpCodes = new int[] { ReportOptionsC.ERP_LOGOPENARC, ReportOptionsC.ERP_LOGUSERDATA };<\/code>.",
            "type": "boolean"
          },
          "extra1": {
            "description": "Specifies the extra1 value. Only Integer values are allowed for this element.",
            "type": "string"
          },
          "erpCodes": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "totalCount": {
            "format": "int32",
            "description": "The search is ended once this number of objects have been found.\nA value of <code>0<\/code> sets\n no constraint to the number of objects.",
            "type": "integer"
          },
          "userId": {
            "description": "User ID or name.",
            "type": "string"
          }
        }
      },
      "ArrayOfWFCollectNode": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WFCollectNode"
        }
      },
      "FeedDataC": {
        "description": "<p>Bit constants for members of Feed<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnGuid": {
            "format": "int32",
            "description": "Column length: Feed GUID.\nDB column: feedguid",
            "type": "integer"
          },
          "mbTStampSync": {
            "description": "Member bit: Timestamp of this object's last export by the replication.\nDB column: feedtstampsync",
            "type": "string"
          },
          "lnObjGuid": {
            "format": "int32",
            "description": "Column length: GUID of the associated Sord object.\nDB column: objguid",
            "type": "integer"
          },
          "lnCreateDateIso": {
            "format": "int32",
            "description": "Column length: Create date. It holds the ISO formatted create date in the time zone of the client application.\nDB column: createdateiso",
            "type": "integer"
          },
          "mbTStamp": {
            "description": "Member bit: Time stamp. Time stamp of creation or modification.\nDB column: feedtstamp",
            "type": "string"
          },
          "mbCreateDateIso": {
            "description": "Member bit: Create date. It holds the ISO formatted create date in the time zone of the client application.\nDB column: createdateiso",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbGuid": {
            "description": "Member bit: Feed GUID.\nDB column: feedguid",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "Column length: Time stamp. Time stamp of creation or modification.\nDB column: feedtstamp",
            "type": "integer"
          },
          "lnTStampSync": {
            "format": "int32",
            "description": "Column length: Timestamp of this object's last export by the replication.\nDB column: feedtstampsync",
            "type": "integer"
          },
          "mbObjGuid": {
            "description": "Member bit: GUID of the associated Sord object.\nDB column: objguid",
            "type": "string"
          }
        }
      },
      "ListOfInvalidateCacheInfoParam": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/InvalidateCacheInfoParam"
        }
      },
      "ListOfArchivValue": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ArchivValue"
        }
      },
      "UserProfileData": {
        "description": "Internal class.",
        "type": "object",
        "properties": {
          "user": {
            "format": "int32",
            "description": "User ID.\nDB column: userid",
            "type": "integer"
          },
          "value": {
            "description": "Option value.\nDB column: optvalue",
            "type": "string"
          },
          "key": {
            "description": "Option key.\nDB column: optkey",
            "type": "string"
          }
        }
      },
      "BResult_1088095067": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslateTerm"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "UpDownloadKind": {
        "description": "This enum defines constants to distinguish between different kinds of file data assigned to a\ndocument.",
        "type": "object",
        "properties": {
          "ATTACHMENT": {
            "description": "Document attachment. This kind is only detected in upload events.\nCurrently, download events\n for attachments are detected as {@link #VERSION}.",
            "$ref": "#/components/schemas/UpDownloadKind"
          },
          "FULLTEXT": {
            "description": "Fulltext content.",
            "$ref": "#/components/schemas/UpDownloadKind"
          },
          "VERSION": {
            "description": "Document version.\nThis kind is also used for attachments in download events, see\n {@link #ATTACHMENT}.",
            "$ref": "#/components/schemas/UpDownloadKind"
          },
          "PREVIEW": {
            "description": "Document preview.",
            "$ref": "#/components/schemas/UpDownloadKind"
          },
          "SIGNATURE": {
            "description": "Document version signature.",
            "$ref": "#/components/schemas/UpDownloadKind"
          }
        }
      },
      "ConfigResultOptions": {
        "description": "This options control grouping of configuration entries returned by\n{@link ConfigService#checkoutConfigurations(de.elo.ix.client.ClientInfo, ConfigInfo, ConfigResultOptions)}.",
        "type": "object",
        "properties": {
          "exploded": {
            "description": "If true, entries are not merged by their {@link ConfigRecord#level} values.",
            "type": "boolean"
          },
          "groupingType": {
            "description": "Map the returned entries on this value type.",
            "$ref": "#/components/schemas/GroupingType"
          }
        }
      },
      "ConflictHandlingE": {
        "description": "FIXME: add javadoc",
        "type": "object",
        "properties": {
          "TSTAMP": {
            "$ref": "#/components/schemas/ConflictHandlingE"
          },
          "OVERRIDE": {
            "$ref": "#/components/schemas/ConflictHandlingE"
          },
          "RETAIN": {
            "$ref": "#/components/schemas/ConflictHandlingE"
          }
        }
      },
      "HashTagRelation": {
        "description": "This class represents the relation between HashTags and Actions.",
        "type": "object",
        "properties": {
          "actionGuid": {
            "description": "Guid of the Action in which the HashTag is used.",
            "type": "string"
          },
          "tStamp": {
            "description": "Timestamp for replication.",
            "type": "string"
          },
          "hashtagGuid": {
            "description": "Guid of the HashTag.",
            "type": "string"
          },
          "status": {
            "format": "int32",
            "description": "Status.",
            "type": "integer"
          }
        }
      },
      "ReminderDataC": {
        "description": "<p>Bit constants for members of Reminder<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbId": {
            "description": "DB column: wvident",
            "type": "string"
          },
          "mbActionCode": {
            "description": "DB column: action",
            "type": "string"
          },
          "mbDesc": {
            "description": "DB column: wvdesc",
            "type": "string"
          },
          "mbReceiverId": {
            "description": "DB column: userowner",
            "type": "string"
          },
          "mbLockId": {
            "description": "DB column: wvlock",
            "type": "string"
          },
          "mbObjType": {
            "description": "DB column: parenttype",
            "type": "string"
          },
          "mbCreateDate": {
            "description": "DB column: createdate",
            "type": "string"
          },
          "mbName": {
            "description": "DB column: short",
            "type": "string"
          },
          "lnDesc": {
            "format": "int32",
            "description": "DB column: wvdesc",
            "type": "integer"
          },
          "mbPromptDate": {
            "description": "DB column: wvdate",
            "type": "string"
          },
          "mbSenderId": {
            "description": "DB column: userfrom",
            "type": "string"
          },
          "lnName": {
            "format": "int32",
            "description": "DB column: short",
            "type": "integer"
          },
          "mbObjId": {
            "description": "DB column: parentid",
            "type": "string"
          },
          "mbPrio": {
            "description": "DB column: prio",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbDueDate": {
            "description": "DB column: duedate",
            "type": "string"
          }
        }
      },
      "FindResultAccessMode": {
        "description": "This constants are used to control the caching of find results.",
        "type": "object",
        "properties": {
          "RANDOM": {
            "description": "Find results are cached inside Indexserver.\nThis value allows to call a findNext-function for\n already delivered results. The client application has random access to all results as long as\n findClose has not been called.",
            "$ref": "#/components/schemas/FindResultAccessMode"
          },
          "SEQUENTIAL": {
            "description": "Find results may not be cached inside Indexserver.\nA findNext-function can only address results\n that have not already been delivered. The client application has to sequentially read the\n results. This mode can save memory on the server.",
            "$ref": "#/components/schemas/FindResultAccessMode"
          }
        }
      },
      "BResult_755261279": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "ProcessReplSet": {
        "description": "Replication sets to be added to/removed from an object.\nThe replication set parameter must refer\n to existing objects that may contain empty lists. Null values are not allowed.\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "addReplSets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          },
          "setReplSets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          },
          "andReplSets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          },
          "subReplSets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          }
        }
      },
      "BResult_1700162512": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/FioResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "ActivityProjectC": {
        "description": "Constants for class ActivityProject.",
        "type": "object",
        "properties": {
          "SYSTEM": {
            "description": "Reserved. This name is used internally only. Do not use this name in your code.",
            "type": "string"
          },
          "NOTIFY": {
            "description": "Activity used to notify about a new document version or new sub-item.",
            "type": "string"
          },
          "REQUEST": {
            "description": "Activity for observing documents and folders.",
            "type": "string"
          },
          "mbOptions": {
            "type": "string"
          },
          "DEFAULT": {
            "description": "Default project name.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinReport": {
        "type": "object",
        "properties": {
          "reserved": {
            "$ref": "#/components/schemas/CheckinReportInfo"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "report": {
            "$ref": "#/components/schemas/ReportInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_openEventBus": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "params": {
            "$ref": "#/components/schemas/EventBusParams"
          }
        }
      },
      "BRequest_IXServicePortIF_configurePurge": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "purgeSettings": {
            "$ref": "#/components/schemas/PurgeSettings"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinSordPath": {
        "type": "object",
        "properties": {
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "sords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sord"
            }
          },
          "parentId": {
            "type": "string"
          }
        }
      },
      "ObjHistC": {
        "description": "<p>Bit constants for members of SordHist<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnUserName": {
            "format": "int32",
            "description": "DB column: username",
            "type": "integer"
          },
          "mbTimeStampUTC": {
            "description": "DB column: objhistts",
            "type": "string"
          },
          "lnObjGuid": {
            "format": "int32",
            "description": "DB column: objguid",
            "type": "integer"
          },
          "mbTimeStampLocal": {
            "description": "DB column: objhistlocts",
            "type": "string"
          },
          "lnHistGuid": {
            "format": "int32",
            "description": "Column length: Serialisation version ID\nDB column: objhistguid",
            "type": "integer"
          },
          "mbUserName": {
            "description": "DB column: username",
            "type": "string"
          },
          "lnTimeStampLocal": {
            "format": "int32",
            "description": "DB column: objhistlocts",
            "type": "integer"
          },
          "lnWorkStation": {
            "format": "int32",
            "description": "DB column: objhistwks",
            "type": "integer"
          },
          "mbHistSource": {
            "description": "DB column: objhistsrc",
            "type": "string"
          },
          "mbUserNo": {
            "description": "DB column: objuser",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnTimeStampUTC": {
            "format": "int32",
            "description": "DB column: objhistts",
            "type": "integer"
          },
          "mbWorkStation": {
            "description": "DB column: objhistwks",
            "type": "string"
          },
          "mbHistGuid": {
            "description": "Member bit: Serialisation version ID\nDB column: objhistguid",
            "type": "string"
          },
          "mbObjGuid": {
            "description": "DB column: objguid",
            "type": "string"
          }
        }
      },
      "HashSetOfString": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "ActionDataC": {
        "description": "<p>Bit constants for members of Action<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbUserGuid": {
            "description": "Member bit: User GUID. The GUID of the user who has created this action.\nFor actions of type\n DB column: userguid",
            "type": "string"
          },
          "lnUserGuid": {
            "format": "int32",
            "description": "Column length: User GUID. The GUID of the user who has created this action.\nFor actions of type\n DB column: userguid",
            "type": "integer"
          },
          "mbTStamp": {
            "description": "Member bit: Time stamp. Time stamp of creation or modification.\nDB column: actiontstamp",
            "type": "string"
          },
          "lnAcl": {
            "format": "int32",
            "description": "Column length: Raw ACL representation.\nOnly valid for Actions of type {@link EActionType#UserComment} or\n DB column: actionacl",
            "type": "integer"
          },
          "lnText": {
            "format": "int32",
            "description": "Column length: Comment text.\nThis element is only valid for {@link EActionType#UserComment}, and\n DB column: actiontext",
            "type": "integer"
          },
          "lnGuid": {
            "format": "int32",
            "description": "Column length: Action GUID. Unique identifier.\nDB column: actionguid",
            "type": "integer"
          },
          "mbTStampSync": {
            "description": "Member bit: Timestamp of this object's last export by the replication.\nDB column: actiontstampsync",
            "type": "string"
          },
          "lnCreateDateIso": {
            "format": "int32",
            "description": "Column length: Create date. This element is the ISO formatted create date of the action.\nWhen this object is\n DB column: createdateiso",
            "type": "integer"
          },
          "lnUpdateDateIso": {
            "format": "int32",
            "description": "Column length: Update date. This element is only valid for {@link EActionType#UserComment}.\nIt holds the ISO\n DB column: updatedateiso",
            "type": "integer"
          },
          "mbUpdateDateIso": {
            "description": "Member bit: Update date. This element is only valid for {@link EActionType#UserComment}.\nIt holds the ISO\n DB column: updatedateiso",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnParentGuid": {
            "format": "int32",
            "description": "Column length: Parent action GUID.\nThis element is only valid for user comments,\n DB column: parentguid",
            "type": "integer"
          },
          "mbAcl": {
            "description": "Member bit: Raw ACL representation.\nOnly valid for Actions of type {@link EActionType#UserComment} or\n DB column: actionacl",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "Column length: Time stamp. Time stamp of creation or modification.\nDB column: actiontstamp",
            "type": "integer"
          },
          "lnTStampSync": {
            "format": "int32",
            "description": "Column length: Timestamp of this object's last export by the replication.\nDB column: actiontstampsync",
            "type": "integer"
          },
          "mbDocVersionGuid": {
            "description": "Member bit: GUID of the associated document version.\nThis element is only valid for generated actions that\n DB column: docversionguid",
            "type": "string"
          },
          "mbCreateDateIso": {
            "description": "Member bit: Create date. This element is the ISO formatted create date of the action.\nWhen this object is\n DB column: createdateiso",
            "type": "string"
          },
          "mbFeedGuid": {
            "description": "Member bit: Feed GUID. This action belongs to the feed identified by this GUID.\nDB column: feedguid",
            "type": "string"
          },
          "lnWorkflowGuid": {
            "format": "int32",
            "description": "Column length: GUID of the associated workflow.\nThis element is valid for action types that belong to a\n DB column: workflowguid",
            "type": "integer"
          },
          "lnFeedGuid": {
            "format": "int32",
            "description": "Column length: Feed GUID. This action belongs to the feed identified by this GUID.\nDB column: feedguid",
            "type": "integer"
          },
          "mbParentGuid": {
            "description": "Member bit: Parent action GUID.\nThis element is only valid for user comments,\n DB column: parentguid",
            "type": "string"
          },
          "mbText": {
            "description": "Member bit: Comment text.\nThis element is only valid for {@link EActionType#UserComment}, and\n DB column: actiontext",
            "type": "string"
          },
          "mbGuid": {
            "description": "Member bit: Action GUID. Unique identifier.\nDB column: actionguid",
            "type": "string"
          },
          "mbChangeCounter": {
            "description": "Member bit: Counts the number of updates. This element is only valid for {@link EActionType#UserComment}.\nDB column: changecounter",
            "type": "string"
          },
          "mbRawType": {
            "description": "Member bit: Action type.\nDB column: actiontype",
            "type": "string"
          },
          "mbWorkflowGuid": {
            "description": "Member bit: GUID of the associated workflow.\nThis element is valid for action types that belong to a\n DB column: workflowguid",
            "type": "string"
          },
          "lnDocVersionGuid": {
            "format": "int32",
            "description": "Column length: GUID of the associated document version.\nThis element is only valid for generated actions that\n DB column: docversionguid",
            "type": "integer"
          }
        }
      },
      "DateRoundE": {
        "description": "<p>\nEnum for rounding DateValues.\n <\/p>\n It defines if a date should be rounded to year, month, day, hour or minute.",
        "type": "object",
        "properties": {
          "MONTH": {
            "$ref": "#/components/schemas/DateRoundE"
          },
          "YEAR": {
            "$ref": "#/components/schemas/DateRoundE"
          },
          "HOUR": {
            "$ref": "#/components/schemas/DateRoundE"
          },
          "MINUTE": {
            "$ref": "#/components/schemas/DateRoundE"
          },
          "NONE": {
            "$ref": "#/components/schemas/DateRoundE"
          },
          "DAY": {
            "$ref": "#/components/schemas/DateRoundE"
          }
        }
      },
      "FioService": {
        "type": "object"
      },
      "LicenseCounter": {
        "description": "License counters of a user.",
        "type": "object",
        "properties": {
          "DELETED_USER": {
            "format": "int32",
            "type": "integer"
          },
          "userInfo": {
            "description": "User object.",
            "$ref": "#/components/schemas/UserInfo"
          },
          "WINWOS_CLIENT": {
            "format": "int32",
            "type": "integer"
          },
          "sumAccess": {
            "format": "int32",
            "type": "integer"
          },
          "accessMap": {
            "description": "License counters. Counter 0 contains the number of writes from a full client.",
            "$ref": "#/components/schemas/HashMapToInteger"
          },
          "JAVA_CLIENT": {
            "format": "int32",
            "type": "integer"
          },
          "IX_USER": {
            "format": "int32",
            "type": "integer"
          },
          "disabled": {
            "description": "True, if the user has been inactive for 30 days.",
            "type": "boolean"
          },
          "FREE_USER": {
            "format": "int32",
            "type": "integer"
          },
          "countType": {
            "format": "int32",
            "type": "integer"
          },
          "FULL_USER": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_cleanupStop": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ArrayOfOcrRect": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/OcrRect"
        }
      },
      "BRequest_IXServicePortIF_checkoutReplNames": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_executeScript": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "params": {
            "$ref": "#/components/schemas/ExecuteScriptParams"
          }
        }
      },
      "SordPaths": {
        "type": "object",
        "properties": {
          "sordPaths": {
            "$ref": "#/components/schemas/ListOfSordPath"
          }
        }
      },
      "BResult_498630295": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/MapToString"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "NotifyServerInfo": {
        "description": "This class is used in IXServicePortIF.\nnotifyServer to describe which operation(s) has (have) been\n processed by the client application.",
        "type": "object",
        "properties": {
          "reserved": {
            "description": "Reserved for internal usage.\nEIX-2770",
            "type": "string"
          },
          "ocrCount": {
            "format": "int32",
            "description": "The number of documents for which OCR was processed.",
            "type": "integer"
          },
          "scanCount": {
            "format": "int32",
            "description": "The number of scanned documents.",
            "type": "integer"
          }
        }
      },
      "ListOfBucket": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Bucket"
        }
      },
      "BResult_494610451": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/Notification"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "ColorDataInternC": {
        "description": "<p>Bit constants for members of ColorData<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbNameTranslationKey": {
            "description": "Member bit: Translation key.\nOptional identifier in the localization property files or translations stored\n DB column: trankey",
            "type": "string"
          },
          "mbId": {
            "description": "DB column: colorno",
            "type": "string"
          },
          "mbPackageName": {
            "description": "Member bit: Package name of ColorData\nDB column: packagename",
            "type": "string"
          },
          "mbTStamp": {
            "description": "Member bit: TStamp\nDB column: colortstamp",
            "type": "string"
          },
          "mbName": {
            "description": "DB column: colorname",
            "type": "string"
          },
          "lnGuid": {
            "format": "int32",
            "description": "Column length: GUID\nDB column: colorguid",
            "type": "integer"
          },
          "mbTStampSync": {
            "description": "Member bit: Timestamp of this object's last export by the replication.\nDB column: colortstampsync",
            "type": "string"
          },
          "lnNameTranslationKey": {
            "format": "int32",
            "description": "Column length: Translation key.\nOptional identifier in the localization property files or translations stored\n DB column: trankey",
            "type": "integer"
          },
          "mbStatus": {
            "description": "DB column: colorstatus",
            "type": "string"
          },
          "lnName": {
            "format": "int32",
            "description": "DB column: colorname",
            "type": "integer"
          },
          "mbRGB": {
            "description": "DB column: colorid",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbGuid": {
            "description": "Member bit: GUID\nDB column: colorguid",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "Column length: TStamp\nDB column: colortstamp",
            "type": "integer"
          },
          "lnTStampSync": {
            "format": "int32",
            "description": "Column length: Timestamp of this object's last export by the replication.\nDB column: colortstampsync",
            "type": "integer"
          },
          "mbFlags": {
            "description": "Member bit: This color should not be selectable in client applications.\nThis color is reserved as marker\n DB column: colorflags",
            "type": "string"
          },
          "lnPackageName": {
            "format": "int32",
            "description": "Column length: Package name of ColorData\nDB column: packagename",
            "type": "integer"
          }
        }
      },
      "SordTypeZ": {
        "description": "<p>\nThis class encapsulates the constants of <code>SordTypeC<\/code>\n <\/p>\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants from SordTypeC class.",
            "type": "string"
          }
        }
      },
      "Sord": {
        "description": "<p>\nIndexing information of an archive entry.\n <\/p>\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "delDateIso": {
            "description": "ISO encoded expiry date. Only users having right AccessC.\nFLAG_EDITDUEDATE are allowed to set\n the expiry date. Once the expiry date is set, it cannot be set to a date before the original\n expiry date.",
            "type": "string"
          },
          "acl": {
            "description": "Access control language in coded form. The checkInSord method must set either acl or aclItems.\naclItems has priority.",
            "type": "string"
          },
          "ownerId": {
            "format": "int32",
            "description": "The id of the owner of the object.\nMain-administrators can assign an owner ID for new Sords in\n {@link IXServicePortIF#checkinSord(ClientInfo, Sord, SordZ, LockZ)} and\n {@link IXServicePortIF#checkinSordPath(ClientInfo, String, Sord[], SordZ)}. This member is\n read-only for Non-adminstrators or existing Sords.",
            "type": "integer"
          },
          "type": {
            "format": "int32",
            "description": "The type of sord object.\nFolder objects: 0 &lt; type &lt; LBT_DOCUMENT Document objects:\n LBT_DOCUMENT &lt;= type &lt; LBT_DOCUMENT_MAX",
            "type": "integer"
          },
          "objKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjKey"
            }
          },
          "path": {
            "format": "int32",
            "description": "Filing path for the document manager. Only valid for documents. Read-only.\n<p>\n If this Sord object is obtained by a call to checkoutSord or checkoutDoc with a database lock\n (e.g. LockC.IF_FREE), this member contains the storage path specified in the associated\n keywording form (DocMask.DPath). If the keywording form does not define a path, the default\n storage path is returned (ServerInfoDM.basisStoreIds[0]). Hence, the current value of the\n database column objekte.objpath is not used as default for new versions anymore.\n <\/p>\n <p>\n If this Sord object is obtained by a call without a lock, e.g. from findFirstSords, this value\n should not be used anymore. The storage path of the work version should be used instead, which\n can be found in Sord.docVersion.pathId.\n <\/p>",
            "type": "integer"
          },
          "details": {
            "description": "Object encapsulates flags.",
            "$ref": "#/components/schemas/SordDetails"
          },
          "id": {
            "format": "int32",
            "description": "Numeric ID.",
            "type": "integer"
          },
          "IDateIso": {
            "description": "ISO encoded internal (archive defined) date.",
            "type": "string"
          },
          "lockName": {
            "description": "The name of the user who has locked the object. Read-only.",
            "type": "string"
          },
          "docVersion": {
            "description": "Version information of current document work version. Read-only.",
            "$ref": "#/components/schemas/DocVersion"
          },
          "deleteDateIso": {
            "description": "The Sord is deleted at this date. ClientInfo determines the Timezone.\n<p>\n Is undefined if isDeleted() returns false.\n <\/p>",
            "type": "string"
          },
          "info": {
            "format": "int32",
            "description": "RESERVED",
            "type": "integer"
          },
          "att": {
            "format": "int32",
            "description": "Id of the current attachment version. Read-only.",
            "type": "integer"
          },
          "refPaths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ArcPath"
            }
          },
          "kind": {
            "format": "int32",
            "description": "Colour",
            "type": "integer"
          },
          "hiddenText": {
            "description": "Hidden text that must not be displayed to the user.",
            "type": "string"
          },
          "lockNameSord": {
            "description": "The name of the user who has locked the object. Read-only.",
            "type": "string"
          },
          "lockId": {
            "format": "int32",
            "description": "This is the id of the user who has a lock on the object.\nTo know whether the Sord or the\n Document is locked, see lockIdSord or lockIdDoc respectively. The object is locked using\n checkoutSord with the LOCK.YES, LOCK.SORD or LOCK.DOC parameter. Read-only.",
            "type": "integer"
          },
          "spaceGuid": {
            "description": "If the sord belongs to a workspace, this value contains the GUID of that workspace.",
            "type": "string"
          },
          "aclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "name": {
            "description": "The short description/name for the object.",
            "type": "string"
          },
          "deleteUser": {
            "format": "int32",
            "description": "The Sord is deleted at this user.\n<p>\n Is undefined if isDeleted() returns false.\n <\/p>",
            "type": "integer"
          },
          "doc": {
            "format": "int32",
            "description": "Read-only. Id of the current document version.",
            "type": "integer"
          },
          "guid": {
            "description": "GUID.",
            "type": "string"
          },
          "TStampAcl": {
            "description": "Timestamp of the last ACL change. The format is JJJJ.MM.DD.hh.mm.\nss",
            "type": "string"
          },
          "desc": {
            "description": "The (visible) memo text.\nIf the value starts with a \"!\" this member can define a dynamic\n folder. This is a folder which contents are filled by an arbitrary SQL statement.",
            "type": "string"
          },
          "lockNameDoc": {
            "description": "The name of the user who has locked the document. Read-only.",
            "type": "string"
          },
          "access": {
            "format": "int32",
            "description": "The current users access rights for this Sord. Returns a combination of AccessC.LUR_ constants. Read-only.\nIs\n returned when SordC.mbAcl is set in checkoutSord.",
            "type": "integer"
          },
          "TStampAclSync": {
            "description": "Timestamp of this object's ACLs last export by the replication.",
            "type": "string"
          },
          "parentIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "aspects": {
            "description": "Index values.\nThis member is only valid, if the associated keywording form {@link DocMask} is\n organized as {@link DocMask#dataOrganisation} = {@link DocMaskC#DATA_ORGANISATION_ASPECT}.<br>\n The outer key is the name of an {@link AspectAssoc}. The value is a list of maps.<br>\n This list can contain more than one element according to cardinality of the aspect\n association.<br>\n The inner maps are aspect objects, i.e. maps from lineKey of the corresponding aspect to an\n object of class {@link IndexValue} which holds the actual data for an aspect line.",
            "$ref": "#/components/schemas/MapToListOfMapToIndexValue"
          },
          "vtRep": {
            "format": "int32",
            "description": "RESERVED",
            "type": "integer"
          },
          "replSet": {
            "description": "Replication sets. Binary encoded information.\nBoth replNames and replSet contain the\n information determining in which replications sets the object is contain in. replNames has\n priority when checking the object in.",
            "$ref": "#/components/schemas/ReplSet"
          },
          "TStamp": {
            "description": "Timestamp of the last change. The format is JJJJ.MM.DD.hh.mm.\nss",
            "type": "string"
          },
          "linksComeIn": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SordLink"
            }
          },
          "ownerName": {
            "description": "Name of the owner (read-only).",
            "type": "string"
          },
          "TStampSync": {
            "description": "Timestamp of this object's last export by the replication.",
            "type": "string"
          },
          "replNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplSetName"
            }
          },
          "XDateIso": {
            "description": "ISO encoded external (user defined) date.",
            "type": "string"
          },
          "packageName": {
            "description": "Package name of sord",
            "type": "string"
          },
          "key": {
            "format": "int32",
            "description": "RESERVED",
            "type": "integer"
          },
          "mask": {
            "format": "int32",
            "description": "The id of the filing mask used to archive the sord. Read-only.",
            "type": "integer"
          },
          "lockIdDoc": {
            "format": "int32",
            "description": "This is the id of the user who has a lock on the document (not the object).\nThe object is\n locked using checkoutSord with the LOCK.DOC parameter. Read-only.",
            "type": "integer"
          },
          "lockIdSord": {
            "format": "int32",
            "description": "This is the id of the user who has a lock on the object (not the document).\nThe object is\n locked using checkoutSord with the LOCK.SORD parameter. Read-only.",
            "type": "integer"
          },
          "histCount": {
            "format": "int32",
            "description": "Number of document versions.",
            "type": "integer"
          },
          "spaceGuids": {
            "description": "If the sord belongs to a workspace, this value contains the GUIDs of parent workspaces.",
            "$ref": "#/components/schemas/ListOfString"
          },
          "SReg": {
            "description": "Version numer of the current work version.",
            "type": "string"
          },
          "childCount": {
            "format": "int32",
            "description": "Estimated sum of the sub-entries in a directory.\nThis does not take account of any access\n rights assigned to the entries. This property should only be used to determine whether the\n directory has additional entries. Read-only.",
            "type": "integer"
          },
          "TStampLocal": {
            "description": "Timestamp that indicates the next iSearch Index run The format is JJJJ.MM.DD.hh.mm.\nss",
            "type": "string"
          },
          "parentId": {
            "format": "int32",
            "description": "Id of the parent object(archive heirachy) of the sord object.\nRead-only",
            "type": "integer"
          },
          "linksGoOut": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SordLink"
            }
          },
          "deleted": {
            "description": "Indicates whether the sord has been deleted or not.",
            "type": "boolean"
          },
          "maskName": {
            "description": "Name of keywording form.\nThis value is translated into the language given by\n {@link ClientInfo#language}. It cannot be used as a parameter in Indexserver API functions. Use\n {@link Sord#getMask()} to specify the Keywording form in API functions. Read-only.",
            "type": "string"
          },
          "regionId": {
            "format": "int32",
            "description": "This is a RESERVED field for future use. Do not use.\n<br>\n If the sord is contained in a region (i.e. lies below an object in archive tree that has an\n associated keywording form which defines a region), this value contains the numeric Id of that\n region sord. This value is only valid, if the associated keywording form {@link DocMask} is\n organized as {@link DocMask#dataOrganisation} = {@link DocMaskC#DATA_ORGANISATION_ASPECT}.",
            "type": "integer"
          },
          "attVersion": {
            "description": "Work version of the attachment.",
            "$ref": "#/components/schemas/DocVersion"
          }
        }
      },
      "VtDoc": {
        "description": "Internal class.",
        "type": "object",
        "properties": {
          "code": {
            "format": "int32",
            "description": "DB column: vtcode",
            "type": "integer"
          },
          "docId": {
            "format": "int32",
            "description": "DB column: objdoc",
            "type": "integer"
          },
          "objId": {
            "format": "int32",
            "description": "DB column: objid",
            "type": "integer"
          }
        }
      },
      "WClientC": {
        "type": "object",
        "properties": {
          "NEW_VERSION": {
            "format": "int32",
            "type": "integer"
          },
          "WORK_VERSION_CHANGED": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "BResult_784089396": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/IXExceptionData"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "ArrayOfReportInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ReportInfo"
        }
      },
      "UserReportC": {
        "description": "<p>\nConstants for user report information. Each member of this class with prefix \"mb\" has a\n corresponding member in class <code>ReportInfo<\/code>\n <\/p>",
        "type": "object",
        "properties": {
          "COUNT_DOCUMENTS_OVER_ALL_REPOSITORIES": {
            "description": "Count documents over all repositories.\nEIX-3356",
            "$ref": "#/components/schemas/UserReportZ"
          },
          "mbINCLUDE_USERNAMES": {
            "description": "The user names.",
            "type": "string"
          },
          "mbNOTHING": {
            "description": "nothing",
            "type": "string"
          },
          "FULL_USERREPORT": {
            "$ref": "#/components/schemas/UserReportZ"
          },
          "mbINCLUDE_COUNTER": {
            "description": "The counter",
            "type": "string"
          },
          "NONE": {
            "$ref": "#/components/schemas/UserReportZ"
          },
          "mbINCLUDE_RIGHTS": {
            "description": "Rights in numerical form",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_configureFulltext": {
        "type": "object",
        "properties": {
          "opts": {
            "$ref": "#/components/schemas/FulltextConfig"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_controlBackup": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "controlBackupInfo": {
            "$ref": "#/components/schemas/ControlBackupInfo"
          }
        }
      },
      "UserReportZ": {
        "description": "<p>\nThis class encapsulates the constants of <code>UserReportC<\/code>\n <\/p>",
        "type": "object",
        "properties": {
          "bset": {
            "type": "string"
          }
        }
      },
      "ActivityProject": {
        "description": "This class represents an activity project. An activity project is a template for an activity.",
        "type": "object",
        "properties": {
          "major": {
            "format": "int32",
            "description": "Reserved.",
            "type": "integer"
          },
          "minor": {
            "format": "int32",
            "description": "Reserved.",
            "type": "integer"
          },
          "optValue": {
            "description": "Reserved.",
            "type": "string"
          },
          "protectedProject": {
            "description": "Activity project is protected.",
            "type": "boolean"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityOption"
            }
          },
          "project": {
            "description": "Project name. This can be one of the predefined project names: ActivityProjectC.\nDEFAULT,\n ActivityProjectC.REQUEST, ActivityProjectC.NOTIFY. Or an arbitrary name for an application\n defined use case. The name must be unique because it is internally used as an ID. It has to\n start with a letter and must only contain letters, numbers or underscores.",
            "type": "string"
          },
          "lockedWhenFinished": {
            "description": "Activity project is locked when finished.",
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteWorkflowTemplate": {
        "type": "object",
        "properties": {
          "versionId": {
            "type": "string"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "flowId": {
            "type": "string"
          }
        }
      },
      "ListOfContextTerm": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ContextTerm"
        }
      },
      "CheckinOrgUnitInfo": {
        "description": "Objects of this class specify the selection criteria for <code>checkinOrgUnits<\/code>.\n<p>\n Copyright: Copyright (c) 2013\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object"
      },
      "PackageLevelDataC": {
        "description": "<p>Bit constants for members of PackageLevelData<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnGuid": {
            "format": "int32",
            "description": "Column length: Level GUID.\nDB column: guid",
            "type": "integer"
          },
          "lnPackageGuid": {
            "format": "int32",
            "description": "Column length: Package GUID.\nDB column: pkguid",
            "type": "integer"
          },
          "lnName": {
            "format": "int32",
            "description": "Column length: Level name.\nDB column: name",
            "type": "integer"
          },
          "mbPackageGuid": {
            "description": "Member bit: Package GUID.\nDB column: pkguid",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbGuid": {
            "description": "Member bit: Level GUID.\nDB column: guid",
            "type": "string"
          },
          "mbName": {
            "description": "Member bit: Level name.\nDB column: name",
            "type": "string"
          },
          "mbLevel": {
            "description": "Member bit: The level.\nDB column: pkglevel",
            "type": "string"
          }
        }
      },
      "QueryOperator": {
        "description": "A QueryOperator is used to include or exclude QueryObjects from a search and to concatenate\nQueryObjects.<br>\n Like this, complex queries can be build.",
        "type": "object",
        "properties": {
          "operatorType": {
            "description": "Operator to be used to combine the objects.\nThis field is required in REST calls to distinguish\n between the operators {@link AndOperator} and {@link OrOperator}.",
            "$ref": "#/components/schemas/OperatorType"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteReminders": {
        "type": "object",
        "properties": {
          "reminderIds": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "Feed": {
        "description": "This class represents a document feed. Each Sord can have at most one Feed object.\nA Feed\n contains of a list of Action objects which can be user comments, comments generated by scripts\n and actions generated by the system. The Feed object acts like a header for the list of actions.\n Its main purpose is the mapping between feed actions and a Sord object. In order to receive a\n feed of a Sord object inclusive all actions, call function\n {@link FeedService#findFirstActions(de.elo.ix.client.ClientInfo, FindActionsInfo, int, ActionZ)}.",
        "type": "object",
        "properties": {
          "createDateIso": {
            "description": "Create date. It holds the ISO formatted create date in the time zone of the client application.\nIn order to convert this value into a date object, invoke function\n {@link de.elo.ix.client.IXConnection#isoToDate}.",
            "type": "string"
          },
          "TStampSync": {
            "description": "Timestamp of this object's last export by the replication.",
            "type": "string"
          },
          "tStamp": {
            "description": "Time stamp. Time stamp of creation or modification.",
            "type": "string"
          },
          "objGuid": {
            "description": "GUID of the associated Sord object.",
            "type": "string"
          },
          "guid": {
            "description": "Feed GUID.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinUser": {
        "type": "object",
        "properties": {
          "userInfo": {
            "$ref": "#/components/schemas/UserInfo"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "checkinUsersZ": {
            "$ref": "#/components/schemas/CheckinUsersZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "CheckoutUsersZ": {
        "description": "This class encapsulates the constants of CheckoutUsersC.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants from CheckoutUsersC class.",
            "type": "string"
          }
        }
      },
      "FindWorkflowInfo": {
        "description": "This class contains the search criteria for selecting workflows.\n<p>\n Copyright: Copyright (c) 2008, 2010\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "ownerIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sordZ": {
            "description": "Return the associated Sord objects to the selected workflows.\nIf this member is not null, the\n Sord objects to the selected workflows are read from the database. The Sord objects can be\n found in {@link FindResult#sords} in a random order. A Sord object is returned only once, even\n if there are more workflows assigned to the Sord. The Sord objects contain the elements defined\n in this element selector as valid members.",
            "$ref": "#/components/schemas/SordZ"
          },
          "excludeUserGroups": {
            "description": "If true, only select workflows of the users. The group workflows are excluded.",
            "type": "boolean"
          },
          "activeUserIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "overTimeLimit": {
            "description": "Collect only WFs that exceeded the time limit.\nThe entire WF or one of its nodes must be over\n time.",
            "type": "boolean"
          },
          "type": {
            "description": "Workflow type.\nThis parameter controls the search for nodes of either active or finished\n workflows. If this parameter is null, the search is performed on active workflows.",
            "$ref": "#/components/schemas/WFTypeZ"
          },
          "templateId": {
            "description": "Workflow template ID or name.\nIf not null and not empty, the result is constrained to workflows\n based on this workflow template.",
            "type": "string"
          },
          "completionDateIso": {
            "description": "Completion date.\nIf not null and not empty, workflows completed at this date or in this date\n range are returned. Only valid if <code>wfType=FINISHED<\/code>. A time span can be specified by\n using \"...\".",
            "type": "string"
          },
          "startDateIso": {
            "description": "Start date.\nIf not null and not empty, workflows started at this date or in this date range are\n returned. It can be a single date value or a time span of two ISO dates separated by \"...\". To\n return workflows with a start date up to a given time, set startDateIso=\"...\"+time (the first\n time value can be omitted).",
            "type": "string"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "inclHidden": {
            "description": "If true, include hidden/technical workflows with the result.",
            "type": "boolean"
          },
          "name": {
            "description": "Workflow name.\nIf not null and not empty, it the search is restricted to workflows named like\n this value. It may contain wildcards, e. g. *bill*.",
            "type": "string"
          },
          "objId": {
            "description": "Object ID. Active and finished workflows only.\nIf not null and not empty, only workflows\n assigned to this object are returned.",
            "type": "string"
          },
          "findResultAccessMode": {
            "description": "Describes how the client application will access the results.",
            "$ref": "#/components/schemas/FindResultAccessMode"
          },
          "inclDeleted": {
            "description": "Only template workflows: include deleted templates.",
            "type": "boolean"
          }
        }
      },
      "IndexSearchValue": {
        "description": "This class is used to search for index values in aspect objects.\nRegardless of whether the\n search-mode is set to {@link SearchModeC#OR}, all of the conditions defined in this class must be\n met. In other words, the server will evaluate all the conditions in this class in a\n \"<tt>???<\/tt>\" manner.<br>\n Please not that you must use the correct field according to the aspect's line type. The\n Indexserver will not evaluate other fields. That means that if the aspect's line type is\n {@link AspectLineC#TYPE_DOUBLE}, the Indexserver will look at {@link #doubleValue} and\n {@link #doubleValues} only.",
        "type": "object",
        "properties": {
          "intValues": {
            "description": "{@link List} of conditions that all must be fulfilled when searching for integer values in\naspect objects. The Indexserver will evaluate this field only if the respective aspect line is\n of type {@link AspectLineC#TYPE_INTEGER}.",
            "$ref": "#/components/schemas/ListOfIndexSearchIntegerValue"
          },
          "stringValue": {
            "description": "A single {@link IndexSearchStringValue}.\nSet this field if you only have a single condition for\n this line. This field is for convenience only. The Indexserver will merge its value into\n {@link #stringValues}. Nevertheless you can use both {@link #stringValue} and\n {@link #stringValues}. Please look at further descriptions at {@link #stringValues}.",
            "$ref": "#/components/schemas/IndexSearchStringValue"
          },
          "stringValues": {
            "description": "{@link List} of conditions that all must be fulfilled when searching for string values in\naspect objects. The Indexserver will evaluate this field only if the respective aspect line is\n not of type {@link AspectLineC#TYPE_INTEGER} or {@link AspectLineC#TYPE_DOUBLE}.",
            "$ref": "#/components/schemas/ListOfIndexSearchStringValue"
          },
          "doubleValues": {
            "description": "{@link List} of conditions that all must be fulfilled when searching for double values in\naspect objects. The Indexserver will evaluate this field only if the respective aspect line is\n of type {@link AspectLineC#TYPE_DOUBLE}.",
            "$ref": "#/components/schemas/ListOfIndexSearchDoubleValue"
          },
          "intValue": {
            "description": "A single {@link IndexSearchIntegerValue}.\nSet this field if you only have a single condition\n for this line. This field is for convenience only. The Indexserver will merge its value into\n {@link #intValues}. Nevertheless you can use both {@link #intValue} and {@link #intValues}.\n Please look at further descriptions at {@link #intValues}.",
            "$ref": "#/components/schemas/IndexSearchIntegerValue"
          },
          "doubleValue": {
            "description": "A single {@link IndexSearchDoubleValue}.\nSet this field if you only have a single condition for\n this line. This field is for convenience only. The Indexserver will merge its value into\n {@link #doubleValues}. Nevertheless you can use both {@link #doubleValue} and\n {@link #doubleValues}. Please look at further descriptions at {@link #doubleValues}.",
            "$ref": "#/components/schemas/IndexSearchDoubleValue"
          }
        }
      },
      "MapHistItem": {
        "description": "This class provides the version information for a map attribute that has been modified.",
        "type": "object",
        "properties": {
          "histGuid": {
            "description": "GUID of the assigned SordHist object.",
            "type": "string"
          },
          "value": {
            "description": "Map value. An empty value means, that the map item has been deleted.",
            "type": "string"
          },
          "blobValue": {
            "description": "BLOB value.",
            "$ref": "#/components/schemas/FileData"
          },
          "key": {
            "description": "Map key.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_findNextNotes": {
        "type": "object",
        "properties": {
          "searchId": {
            "type": "string"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "noteZ": {
            "$ref": "#/components/schemas/NoteZ"
          },
          "idx": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_findNextWorkflows": {
        "type": "object",
        "properties": {
          "searchId": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "maxResults": {
            "format": "int32",
            "type": "integer"
          },
          "index": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "ArrayOfEvent": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Event"
        }
      },
      "DoubleRangeValue": {
        "description": "<p>\nClass to commit a range filter of double values or specify a range aggregation.\n <\/p>\n \n <p>\n To perform an open range query (e.g. from now to infinite), only submit either a value for from\n or to\n <\/p>\n <p>\n To perform a range aggregation, submit both from/to or at least from or to for each requested\n bucket (e.g. [from 3.14 to 6.28] or [from 3.14 to infinite]). Note that this aggregation includes\n the \"from\"-value and excludes the \"to\"-value for each range.\n <\/p>",
        "type": "object",
        "properties": {
          "from": {
            "$ref": "#/components/schemas/DoubleSingleValue"
          },
          "to": {
            "$ref": "#/components/schemas/DoubleSingleValue"
          }
        }
      },
      "BRequest_SystemInformation_archivReport": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "si": {
            "$ref": "#/components/schemas/SystemInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_findBackgroundThreads": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findBackgroundThreadOptions": {
            "$ref": "#/components/schemas/FindBackgroundThreadOptions"
          }
        }
      },
      "FindDirectC": {
        "description": "Constants used in class FindDirect",
        "type": "object",
        "properties": {
          "FIELD_GUID": {
            "description": "ELO iSearch field: GUID (Sord.\nguid)",
            "type": "string"
          },
          "FIELD_EXT": {
            "description": "ELO iSearch field: document file extension without leading dot (DocVersion.\next)",
            "type": "string"
          },
          "FIELD_DOC_SIZE": {
            "description": "Document size",
            "type": "string"
          },
          "FIELD_DESC": {
            "description": "ELO iSearch field: descripton (memo text, Sord.\ndesc)",
            "type": "string"
          },
          "FIELD_DELDATE_YEAR": {
            "description": "ELO iSearch field: Year of delete date, UTC (Sord.\ndelDateIso)",
            "type": "string"
          },
          "FIELD_MASK_NAME": {
            "description": "ELO iSearch field: Keywording form name, (Sord.\nmaskName)",
            "type": "string"
          },
          "FIELD_DELDATE_MONTH": {
            "description": "ELO iSearch field: Month of delete date, UTC (Sord.delDateIso), always 2 characters, e.g.\n01\n for January.",
            "type": "string"
          },
          "FIELD_NAME": {
            "description": "ELO iSearch field: short description (Sord.\nname)",
            "type": "string"
          },
          "FIELD_VERSION_NUMBER": {
            "description": "DocVersion.\nversion",
            "type": "string"
          },
          "FIELD_XDATE": {
            "description": "ELO iSearch field: ISO formatted document date, UTC (Sord.\nxDateIso)",
            "type": "string"
          },
          "FIELD_TSTAMP": {
            "description": "ELO iSearch field: last modified time stamp, UTC (Sord.\ntStamp)",
            "type": "string"
          },
          "FIELD_IDATE_YEAR": {
            "description": "ELO iSearch field: Year of archiving date, UTC (Sord.\niDateIso)",
            "type": "string"
          },
          "FIELD_OBJ_KEY_DATE": {
            "description": "Date Indexfields (dLINE)",
            "type": "string"
          },
          "FIELD_MASK_ID": {
            "description": "ELO iSearch field: Keywording form ID, (Sord.\nmask)",
            "type": "string"
          },
          "FIELD_OBJ_KEY": {
            "description": "ELO iSearch field: group name of index field (Sord.objKey[.].name, DocMask.line[.].\nkey)",
            "type": "string"
          },
          "FIELD_OWNER": {
            "description": "ELO iSearch field: owner name (Sord.\nownerName)",
            "type": "string"
          },
          "FIELD_ID": {
            "description": "ELO iSearch field: ID (Sord.\nid)",
            "type": "string"
          },
          "FIELD_OBJ_KEY_TOKENIZED": {
            "description": "ELO iSearch field: group name of index field (Sord.objKey[.].name, DocMask.line[.].\nkey) This\n field contains tokenized content (linguistic processing applied)",
            "type": "string"
          },
          "FIELD_DELDATE": {
            "description": "ELO iSearch field: ISO formatted delete date, UTC (Sord.\ndelDateIso)",
            "type": "string"
          },
          "FIELD_XDATE_YEAR": {
            "description": "ELO iSearch field: Year of document date, UTC (Sord.\nxDateIso)",
            "type": "string"
          },
          "FIELD_XDATE_MONTH": {
            "description": "ELO iSearch field: Month of document date, UTC (Sord.xDateIso), always 2 characters, e.g.\n01\n for January.",
            "type": "string"
          },
          "FIELD_VERSION_COMMENT": {
            "description": "DocVersion.\ncomment",
            "type": "string"
          },
          "FIELD_TYPE": {
            "description": "ELO iSearch field: folder or document type (Sord.\ntype)",
            "type": "string"
          },
          "FIELD_IDATE_MONTH": {
            "description": "ELO iSearch field: Month of archiving date, UTC (Sord.iDateIso), always 2 characters, e.g.\n01\n for January.",
            "type": "string"
          },
          "FIELD_OBJ_KEY_NUMERIC": {
            "description": "Numeric Indexfields (nLINE)",
            "type": "string"
          },
          "FIELD_OWNER_ID": {
            "description": "ELO iSearch field: owner ID (Sord.\nownerId)",
            "type": "string"
          },
          "FIELD_IDATE": {
            "description": "ELO iSearch field: ISO formatted archiving date, UTC (Sord.\niDateIso)",
            "type": "string"
          },
          "FIELD_VERSION_OWNER": {
            "description": "DocVersion.\nownerId",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_runEsProcess": {
        "type": "object",
        "properties": {
          "startProcess": {
            "type": "boolean"
          },
          "processName": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BResult_1330120264": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/License"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "ListOfPackageLevelData": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PackageLevelData"
        }
      },
      "EloDmOptC": {
        "description": "Internal class",
        "type": "object",
        "properties": {
          "INSTANCE_ALL": {
            "description": "Instance name for options related to all ELOdm instances.",
            "type": "string"
          }
        }
      },
      "BResult_884364631": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReplSetName"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_getServerInfo": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "CheckoutUsersC": {
        "description": "<p>\nConstants to select users and groups\n <\/p>",
        "type": "object",
        "properties": {
          "bsetALL_USERS_AND_GROUPS": {
            "description": "Internal use only.",
            "type": "string"
          },
          "BY_IDS": {
            "description": "Selects the user objects of the specified users. Returned user data contains effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "ALL_GROUPS": {
            "description": "Selects all groups. Returned user data contains effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "bsetGROUPS_OF_MEMBER": {
            "description": "Internal use only.",
            "type": "string"
          },
          "bsetMEMBERS_OF_GROUP": {
            "description": "Internal use only.",
            "type": "string"
          },
          "bsetBY_IDS": {
            "description": "Internal use only.",
            "type": "string"
          },
          "MEMBERS_OF_GROUP_RECURSIVE": {
            "description": "Selects all members (users and groups) of the specified group.\nWalks recursively over the group\n members and selects all members directly or indirectly contained in the specified group.\n Returned user data contains effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "MEMBERS_OF_GROUP": {
            "description": "Selects all members (users and groups) of the specified group.\nDoes not look for members of\n member groups recursively. Returned user data contains effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "USERS_OF_GROUP_RECURSIVE": {
            "description": "Selects all users of the specified group.\nWalks recursively over the group members and selects\n all users directly or indirectly contained in the specified group. Returned user data contains\n effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "ALL_USERS_AND_GROUPS": {
            "description": "Selects all users an all groups. Returned user data contains effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "BY_IDS_RAW": {
            "description": "Selects the user objects of the specified users.\nReturned user data does not contain effective\n rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "MEMBERS_OF_GROUP_RAW": {
            "description": "Selects all members (users and groups) of the specified group.\nDoes not look for members of\n member groups recursively. Returned user data does not contain effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "bsetUSERS_OF_SUBADMIN": {
            "description": "Internal use only.",
            "type": "string"
          },
          "bsetUSERS_OF_SUPERIOR": {
            "description": "Internal use only.",
            "type": "string"
          },
          "ALL_GROUPS_RAW": {
            "description": "Selects all groups. Returned user data does not contain effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "bsetALL_USERS": {
            "description": "Internal use only.",
            "type": "string"
          },
          "bsetMEMBERS_OF_GROUP_RECURSIVE": {
            "description": "Internal use only.",
            "type": "string"
          },
          "GROUPS_OF_MEMBER": {
            "description": "Selects all direct groups of a user (or group). Does not look for groups recursively.\nReturned\n user data contains effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "bsetALL_GROUPS": {
            "description": "Internal use only.",
            "type": "string"
          },
          "bsetUSERS_OF_GROUP_RECURSIVE": {
            "description": "Internal use only.",
            "type": "string"
          },
          "NOTHING": {
            "description": "Select no user or group. Makes sense if you only want to lock user data.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "ALL_USERS_AND_GROUPS_RAW": {
            "description": "Selects all users an all groups. Returned user data does not contain effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "USERS_OF_SUPERIOR_OR_SUBADMIN": {
            "description": "Combined OR-search of {@link #USERS_OF_SUBADMIN} and {@link #USERS_OF_SUPERIOR}.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "bsetUSERS_OF_GROUP": {
            "description": "Internal use only.",
            "type": "string"
          },
          "bsetNOTHING": {
            "description": "Internal use only.",
            "type": "string"
          },
          "bsetMEMBERS_OF_ORGUNIT": {
            "description": "Internal use only.",
            "type": "string"
          },
          "bsetGROUPS_OF_MEMBER_RECURSIVE": {
            "description": "Internal use only.",
            "type": "string"
          },
          "bsetUSERS_OF_SUPERIOR_OR_SUBADMIN": {
            "description": "Internal use only.",
            "type": "string"
          },
          "ALL_USERS_RAW": {
            "description": "Selects all users. Returned user data does not contain effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "SESSION_USERS_RAW": {
            "description": "Selects all active users. Returned user data does not contain effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "bsetSESSION_INFO": {
            "description": "Internal use only.",
            "type": "string"
          },
          "MEMBERS_OF_GROUP_RECURSIVE_RAW": {
            "description": "Selects all members (users and groups) of the specified group.\nWalks recursively over the group\n members and selects all members directly or indirectly contained in the specified group.\n Returned user data does not contain effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "MEMBERS_OF_ORGUNIT": {
            "description": "Selects all Members of a given Orgunit",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "ALL_USERS": {
            "description": "Selects all users. Returned user data contains effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "USERS_OF_GROUP_RECURSIVE_RAW": {
            "description": "Selects all users of the specified group.\nWalks recursively over the group members and selects\n all users directly or indirectly contained in the specified group. Returned user data does not\n contain effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "bsetSUBADMINS": {
            "description": "Internal use only.",
            "type": "string"
          },
          "USERS_OF_GROUP_RAW": {
            "description": "Selects all users of the specified group.\nDoes not look for members of member groups\n recursively. Returned user data does not contain effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "GROUPS_OF_MEMBER_RECURSIVE_RAW": {
            "description": "Selects all direct groups of a user (or group). Walks recursively over the users groups.\nReturned user data does not contain effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "bsetSELECT_MASK": {
            "description": "Internal use only.",
            "type": "string"
          },
          "GROUPS_OF_MEMBER_RAW": {
            "description": "Selects all direct groups of a user (or group). Does not look for groups recursively.\nReturned\n user data does not contain effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "GROUPS_OF_MEMBER_RECURSIVE": {
            "description": "Selects all direct groups of a user (or group). Walks recursively over the users groups.\nReturned user data contains effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "SESSION_USERS": {
            "description": "Selects all active users.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "SUBADMINS": {
            "description": "Selects all sub-administrators.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "bsetEFFECTIVE_RIGHTS": {
            "description": "Internal use only.",
            "type": "string"
          },
          "bsetMY_USERS": {
            "description": "Internal use only.",
            "type": "string"
          },
          "USERS_OF_SUBADMIN": {
            "description": "Selects all users and group managed by the given user.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "USERS_OF_SUPERIOR": {
            "description": "Selects all users and groups where {@link UserInfo#superiorId} is either\n{@link FindUserInfo#userIds} or any of the raw groups of {@link FindUserInfo#userIds}. If the\n found user is a group, all raw members of this group are also returned.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "USERS_OF_GROUP": {
            "description": "Selects all users of the specified group.\nDoes not look for members of member groups\n recursively. Returned user data contains effective rights.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          }
        }
      },
      "CryptInfo": {
        "description": "This class defines an encryption set.",
        "type": "object",
        "properties": {
          "aesUserKeyInfo": {
            "type": "string"
          },
          "systemPwd": {
            "type": "string"
          },
          "aesUserInitVector": {
            "type": "string"
          },
          "systemUserId": {
            "type": "string"
          },
          "aesSystemKeyInfo": {
            "type": "string"
          },
          "keyInfo": {
            "description": "Only for TwoFish-Encyption! Key material.\nContains the external and internal password in\n serialized and encrypted format. Only for internal use. This member is ignored in\n <code>checkinCryptInfos<\/code>.",
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "currentPwd": {
            "type": "string"
          },
          "name": {
            "description": "Name.",
            "type": "string"
          },
          "aesSystemInitVector": {
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "Numerical ID of the encryption information. The first ID is 1.",
            "type": "integer"
          },
          "currentSystemPwd": {
            "type": "string"
          },
          "pwd": {
            "description": "External password used for encrypting documents.\nIt is empty if this object was returned by\n <code>checkoutCryptInfos<\/code>.",
            "type": "string"
          }
        }
      },
      "RangeAggregationResult": {
        "description": "The result object of a range aggregation.\n<br>\n It consists mainly of buckets and within its inner aggregations results (sub-aggregations).",
        "type": "object",
        "properties": {
          "buckets": {
            "description": "The result buckets.",
            "$ref": "#/components/schemas/ListOfBucket"
          }
        }
      },
      "TranslateTermData": {
        "type": "object",
        "properties": {
          "lang18": {
            "description": "Language 18",
            "type": "string"
          },
          "lang17": {
            "description": "Language 17",
            "type": "string"
          },
          "lang19": {
            "description": "Language 19",
            "type": "string"
          },
          "translationKey": {
            "description": "Language independent translation key.",
            "type": "string"
          },
          "lang14": {
            "description": "Language 14",
            "type": "string"
          },
          "lang13": {
            "description": "Language 13",
            "type": "string"
          },
          "lang16": {
            "description": "Language 16",
            "type": "string"
          },
          "lang15": {
            "description": "Language 15",
            "type": "string"
          },
          "TStamp": {
            "description": "Timestamp.\nLast mofified time, ISO date with dots measured in UTC The format is\n JJJJ.MM.DD.hh.mm.ss",
            "type": "string"
          },
          "lang9": {
            "description": "Language 9",
            "type": "string"
          },
          "lang8": {
            "description": "Language 8",
            "type": "string"
          },
          "TStampSync": {
            "description": "Timestamp. Timestamp of this object's last export by the replication.\nThe format is\n JJJJ.MM.DD.hh.mm.ss",
            "type": "string"
          },
          "lang7": {
            "description": "Language 7",
            "type": "string"
          },
          "lang6": {
            "description": "Language 6",
            "type": "string"
          },
          "lang5": {
            "description": "Language 5",
            "type": "string"
          },
          "lang10": {
            "description": "Language 10",
            "type": "string"
          },
          "lang4": {
            "description": "Language 4",
            "type": "string"
          },
          "lang3": {
            "description": "Language 3",
            "type": "string"
          },
          "lang12": {
            "description": "Language 12",
            "type": "string"
          },
          "lang2": {
            "description": "Language 2",
            "type": "string"
          },
          "packageName": {
            "description": "Configuration package.",
            "type": "string"
          },
          "lang11": {
            "description": "Language 11",
            "type": "string"
          },
          "lang1": {
            "description": "Language 1. System language.",
            "type": "string"
          },
          "lang30": {
            "description": "Language 30",
            "type": "string"
          },
          "lang29": {
            "description": "Language 29",
            "type": "string"
          },
          "lang28": {
            "description": "Language 28",
            "type": "string"
          },
          "lang25": {
            "description": "Language 25",
            "type": "string"
          },
          "level": {
            "format": "int32",
            "description": "Priority level of this entry.",
            "type": "integer"
          },
          "lang24": {
            "description": "Language 24",
            "type": "string"
          },
          "lang27": {
            "description": "Language 27",
            "type": "string"
          },
          "lang26": {
            "description": "Language 26",
            "type": "string"
          },
          "lang21": {
            "description": "Language 21",
            "type": "string"
          },
          "guid": {
            "description": "GUID",
            "type": "string"
          },
          "lang20": {
            "description": "Language 20",
            "type": "string"
          },
          "lang23": {
            "description": "Language 23",
            "type": "string"
          },
          "lang22": {
            "description": "Language 22",
            "type": "string"
          },
          "status": {
            "format": "int32",
            "description": "Status. The object is not deleted, if <code>status<\/code> is -1.",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_refSord": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "newParentId": {
            "type": "string"
          },
          "objId": {
            "type": "string"
          },
          "oldParentId": {
            "type": "string"
          },
          "manSortIdx": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutEsInfo": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_notifyServer": {
        "type": "object",
        "properties": {
          "msg": {
            "$ref": "#/components/schemas/NotifyServerInfo"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BResult_820228328": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/EditInfo"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_PluginService_uninstall": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutEsStatus": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ReportInfo": {
        "description": "This class describes a report/protocol entry for an action carried out in the archive.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "extra2": {
            "format": "int32",
            "description": "Reserved - internal, dependant on actionNo",
            "type": "integer"
          },
          "actTime": {
            "format": "int32",
            "description": "Reserved - internal function.",
            "type": "integer"
          },
          "extra3": {
            "description": "Reserved.",
            "type": "string"
          },
          "extra1": {
            "format": "int32",
            "description": "Reserved - internal, dependant on actionNo.",
            "type": "integer"
          },
          "userName": {
            "description": "Name of the user who carried out the action.",
            "type": "string"
          },
          "sessionNo": {
            "format": "int32",
            "description": "Id of the session which carried out the action.",
            "type": "integer"
          },
          "userId": {
            "format": "int32",
            "description": "Id of the user who carried out the action.",
            "type": "integer"
          },
          "objId": {
            "format": "int32",
            "description": "Id of the object for which the action is entered in the protocoll.",
            "type": "integer"
          },
          "action": {
            "description": "ActionNo as name.",
            "type": "string"
          },
          "comment": {
            "description": "Descriptive text or details.",
            "type": "string"
          },
          "id": {
            "description": "Identifier",
            "type": "string"
          },
          "text": {
            "description": "Reserved - internal, dependant on actionNo",
            "type": "string"
          },
          "actTimeISO": {
            "description": "Time of the action in ISO format.",
            "type": "string"
          },
          "actionNo": {
            "format": "int32",
            "description": "Action number in numeric form.",
            "type": "integer"
          },
          "extraInfo": {
            "description": "Extra information.\nThis member is always null for report entries written by Windows-Client or\n by ELOix versions older than 9.00.016. The type of data depends on {@link #actionNo} as shown\n in the following table:\n <table>\n <tr>\n <td>ReportInfoC.ACT_LOGIN_IX<\/td>\n <td>{@link ReportInfoUserProps} object, member userInfo is set to the user logged on.<\/td>\n <\/tr>\n <tr>\n <td>ReportInfoC.ACT_IX_CREATE_USER<\/td>\n <td>{@link ReportInfoUserModified} object, member newProps is set to the new user.<\/td>\n <\/tr>\n <tr>\n <td>ReportInfoC.ACT_IX_DELETE_USER<\/td>\n <td>{@link ReportInfoUserModified} object, member newProps is set to deleted user.<\/td>\n <\/tr>\n <tr>\n <td>ReportInfoC.ACT_IX_CHECKIN_USER<\/td>\n <td>{@link ReportInfoUserModified} object, member newProps is set to the modified values.\n Member oldProps is set to the values before modification.<\/td>\n <\/tr>\n <\/table>",
            "type": "string"
          }
        }
      },
      "HealthCheckInfoC": {
        "description": "<p>Bit constants for members of HealthCheckInfo<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnName": {
            "format": "int32",
            "description": "Column length: Value name.\nDB column: name",
            "type": "integer"
          },
          "lnStringValue": {
            "format": "int32",
            "description": "Column length: String value. Either this or {@link #doubleValue} has to be set.\nDB column: stringValue",
            "type": "integer"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbSampleSize": {
            "description": "Member bit: Sample size for mean values.\nIf {@link #doubleValue} is a arithmetic mean, this value gives the\n DB column: sampleSize",
            "type": "string"
          },
          "mbName": {
            "description": "Member bit: Value name.\nDB column: name",
            "type": "string"
          },
          "mbDoubleValue": {
            "description": "Member bit: Numeric value. Either this value or {@link #stringValue} has to be set.\nDB column: doubleValue",
            "type": "string"
          },
          "mbStringValue": {
            "description": "Member bit: String value. Either this or {@link #doubleValue} has to be set.\nDB column: stringValue",
            "type": "string"
          },
          "lnSampleSize": {
            "format": "int32",
            "description": "Column length: Sample size for mean values.\nIf {@link #doubleValue} is a arithmetic mean, this value gives the\n DB column: sampleSize",
            "type": "integer"
          },
          "lnDoubleValue": {
            "format": "int32",
            "description": "Column length: Numeric value. Either this value or {@link #stringValue} has to be set.\nDB column: doubleValue",
            "type": "integer"
          }
        }
      },
      "ComputeDocumentHashInfo": {
        "description": "This class defines the parameters for computing a document file hash by\n{@link IXServicePortIF#computeDocumentHash(ClientInfo, ComputeDocumentHashInfo)}.",
        "type": "object",
        "properties": {
          "docId": {
            "format": "int32",
            "description": "Document ID.",
            "type": "integer"
          }
        }
      },
      "FindActionsInfo": {
        "description": "Describes search criteria for\n{@link FeedService#findFirstActions(de.elo.ix.client.ClientInfo, FindActionsInfo, int, ActionZ)}.\n <p>\n If only objId is set, userId and createDateIso is empty, the entire document feed of the given\n object is returned. The (main) actions are sorted descending by create date. The answers (child\n actions) follow immediately their associated main action. Answers are sorted ascending by create\n date.\n <\/p>\n <p>\n If any other member is also set, or if objId is combined with another member, the search combines\n the elements by logical AND. The result list contains all actions sorted descending by create\n date. The ordering does not distinguish between main actions and child actions.\n <\/p>",
        "type": "object",
        "properties": {
          "spaceGuid": {
            "description": "Collect feed actions of all items in a teamspace or workspace.\nThis option contains the\n {@link Sord#getGuid()} of a teamspace or workspace and can only be combinded with\n {@link #createDateIso}, {@link #actionTypes}, {@link #userId}, and {@link #sordZ}.",
            "type": "string"
          },
          "sordZ": {
            "description": "Sord element selector.\nIf this member is not null or empty, the returned FindResult object\n contains the associated Sord objects in FindResult.sords.",
            "$ref": "#/components/schemas/SordZ"
          },
          "createDateIso": {
            "description": "Search by create date. A date range can be specified by using the default range delimiter \"...\n\"\n or the one defined in {@link de.elo.ix.client.FindOptions#getRangeDelimiter()}. The time part\n is assumed to be in the timezone defined by {@link ClientInfo#getTimeZone()}.",
            "type": "string"
          },
          "objId": {
            "description": "Search by Sord ID, GUID, etc.\nThis value can be an ID, a GUID or an expression as defined in\n {@link de.elo.ix.client.IXServicePortIF#checkoutSord(de.elo.ix.client.ClientInfo, String, de.elo.ix.client.EditInfoZ, de.elo.ix.client.LockZ)}.",
            "type": "string"
          },
          "findResultAccessMode": {
            "description": "Describes how the client application will access the results.",
            "$ref": "#/components/schemas/FindResultAccessMode"
          },
          "userId": {
            "description": "Search by user ID, GUID, name.",
            "type": "string"
          },
          "findNotifications": {
            "description": "Search for notifications.\nIf this member is true, only those actions are found for which the\n user was notified.",
            "type": "boolean"
          },
          "findSubscriptions": {
            "description": "If true a Map&lt;String, Subscription&gt; will be set in the FindResult",
            "type": "boolean"
          },
          "actionTypes": {
            "description": "Search by action types. If this element is empty, actions of all types are returned.",
            "$ref": "#/components/schemas/ListOfEActionType"
          },
          "findHashTags": {
            "description": "Search for HashTags If this member is true, all HashTags within the action will be returned",
            "type": "boolean"
          }
        }
      },
      "Any": {
        "description": "This class is a container for one value of a serializable type.",
        "type": "object",
        "properties": {
          "stringValue": {
            "description": "String value.",
            "type": "string"
          },
          "intValue": {
            "format": "int32",
            "description": "Integer value.",
            "type": "integer"
          },
          "byteArray": {
            "format": "byte",
            "description": "Byte array.",
            "type": "string"
          },
          "booleanValue": {
            "description": "Boolean value.",
            "type": "boolean"
          },
          "objectValue": {
            "description": "Object value.",
            "$ref": "#/components/schemas/ValueClass"
          },
          "doubleValue": {
            "format": "double",
            "description": "Double value.",
            "type": "number"
          },
          "type": {
            "format": "int32",
            "description": "Type. One of the type constants given in AnyC.",
            "type": "integer"
          },
          "longValue": {
            "description": "Long value.",
            "type": "string"
          },
          "anyArray": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Any"
            }
          }
        }
      },
      "BRequest_ConfigService_checkinConfigurations": {
        "type": "object",
        "properties": {
          "configRecords": {
            "$ref": "#/components/schemas/ListOfConfigRecord"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteEventBusSubscriber": {
        "type": "object",
        "properties": {
          "subsId": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ApplyForNotificationsInfo": {
        "description": "This class defines which notification messages the server has to send.",
        "type": "object",
        "properties": {
          "adminMode": {
            "description": "Receive {@link de.elo.ix.client.notify.\nClientNotification#adminMode(ClientInfo, int)}",
            "type": "boolean"
          },
          "userTask": {
            "description": "Reserved",
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutWorkFlow": {
        "type": "object",
        "properties": {
          "workFlowDiagramZ": {
            "$ref": "#/components/schemas/WFDiagramZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "typeZ": {
            "$ref": "#/components/schemas/WFTypeZ"
          },
          "flowId": {
            "type": "string"
          }
        }
      },
      "BRequest_FioService_finishExport": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "options": {
            "$ref": "#/components/schemas/FioFinishOptions"
          }
        }
      },
      "BRequest_IXServicePortIF_getESWFromEditInfo": {
        "type": "object",
        "properties": {
          "editInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EditInfo"
            }
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "eswOptions": {
            "$ref": "#/components/schemas/EditInfoEswOptions"
          }
        }
      },
      "SubstitutionStatus": {
        "description": "The substitution status is used to inform if a substitution is currently deactivated or\nactivated. If activated, it also informs how it was activated (either by a\n {@link SubstitutionPeriod} or manually)",
        "type": "object",
        "properties": {
          "DEACTIVATED": {
            "description": "A substitution which is currently not active.",
            "$ref": "#/components/schemas/SubstitutionStatus"
          },
          "ACTIVATED_BY_PERIOD": {
            "description": "A substitution which is currently active and is active because it is within a defined\n{@link SubstitutionPeriod}",
            "$ref": "#/components/schemas/SubstitutionStatus"
          },
          "ACTIVATED_MANUALLY": {
            "description": "A substitution which is currently active and is active because it was activated manually by\ncalling {@link IXServicePortIF#activateSubstitution}()",
            "$ref": "#/components/schemas/SubstitutionStatus"
          }
        }
      },
      "ArrayOfWFTimeLimit": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WFTimeLimit"
        }
      },
      "ArrayOfMapDomain": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MapDomain"
        }
      },
      "BRequest_IXServicePortIF_setServerInfo": {
        "type": "object",
        "properties": {
          "serverInfo": {
            "$ref": "#/components/schemas/ServerInfo"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BResult_1888107655": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "CounterInfoC": {
        "description": "Constants class for the CounterInfo class.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "lnName": {
            "format": "int32",
            "description": "length field for Name.",
            "type": "integer"
          }
        }
      },
      "ValuesOfObjKeyOptions": {
        "type": "object"
      },
      "BRequest_IXServicePortIF_checkinNotes": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          },
          "noteZ": {
            "$ref": "#/components/schemas/NoteZ"
          }
        }
      },
      "BResult_1870182600": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColorData"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteConfigFiles": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "SordTypeC": {
        "description": "Constants for folder or document types.",
        "type": "object",
        "properties": {
          "GUID_CALC": {
            "description": "calc",
            "type": "string"
          },
          "GUID_FIRMA": {
            "description": "firma",
            "type": "string"
          },
          "mbIconsPNG": {
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "mbAllBMP": {
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "MAX_FOLDER_TYPES": {
            "format": "int32",
            "description": "Maximum number of folder types (=253).",
            "type": "integer"
          },
          "GUID_EINZELPERSON": {
            "description": "einzelperson",
            "type": "string"
          },
          "GUID_GIF": {
            "description": "gif",
            "type": "string"
          },
          "GUID_WEB_DOKUMENT": {
            "description": "web_dokument",
            "type": "string"
          },
          "GUID_DOKUMENT": {
            "description": "dokument",
            "type": "string"
          },
          "GUID_ACCESS": {
            "description": "access",
            "type": "string"
          },
          "GUID_ORDNER": {
            "description": "ordner",
            "type": "string"
          },
          "GUID_SCHRANK": {
            "description": "schrank",
            "type": "string"
          },
          "GUID_REGISTER_GELB": {
            "description": "register_gelb",
            "type": "string"
          },
          "GUID_AUTOCAD_DXF": {
            "description": "autocad_dxf",
            "type": "string"
          },
          "GUID_WORKFLOWORDNER": {
            "description": "workflowordner",
            "type": "string"
          },
          "mbBMP": {
            "type": "string"
          },
          "mbNoIcons": {
            "description": "Return only ID, name, extension - no icon data.",
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "GUID_REGISTER_ROT": {
            "description": "register_rot",
            "type": "string"
          },
          "GUID_VISIO": {
            "description": "visio",
            "type": "string"
          },
          "GUID_XML": {
            "description": "xml",
            "type": "string"
          },
          "mbJPG": {
            "type": "string"
          },
          "GUID_ORDNER_GELB": {
            "description": "ordner_gelb",
            "type": "string"
          },
          "mbIconsBMP": {
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "mbWorkflowIconMember": {
            "description": "Return file data of workflow icon in <code>checkoutSordType<\/code>.",
            "type": "string"
          },
          "mbIconMember": {
            "description": "Return icon file data in <code>checkoutSordType<\/code>.",
            "type": "string"
          },
          "mbIconPNG": {
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "GUID_AKTEN_SCHUBLADE": {
            "description": "akten_schublade",
            "type": "string"
          },
          "GUID_POWERPOINT": {
            "description": "powerpoint",
            "type": "string"
          },
          "GUID_SORD_TYPE_ICONS": {
            "description": "GUID for folder \"/Administration/Sord Type Icons\"",
            "type": "string"
          },
          "GUID_ZIP": {
            "description": "zip",
            "type": "string"
          },
          "mbAllPNG": {
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "GUID_ORDNER_BLAU": {
            "description": "ordner_blau",
            "type": "string"
          },
          "GUID_EBENE_32": {
            "description": "ebene_32",
            "type": "string"
          },
          "GUID_PNG": {
            "description": "png",
            "type": "string"
          },
          "mbIconsICO": {
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "GUID_AUFTRAGSBEARBEITUNG": {
            "description": "auftragsbearbeitung",
            "type": "string"
          },
          "GUID_ORDNER_GRUEN": {
            "description": "ordner_gruen",
            "type": "string"
          },
          "GUID_IMPRESS": {
            "description": "impress",
            "type": "string"
          },
          "mbIdNameExt": {
            "description": "ID, name, extension.",
            "type": "string"
          },
          "mbAllICO": {
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "GUID_AKTIVITAETEN": {
            "description": "aktivitaeten",
            "type": "string"
          },
          "GUID_WEB_ARCHIV": {
            "description": "web_archiv",
            "type": "string"
          },
          "mbIconICO": {
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "GUID_BILD": {
            "description": "bild",
            "type": "string"
          },
          "GUID_EBENE_5": {
            "description": "ebene_5",
            "type": "string"
          },
          "GUID_EBENE_4": {
            "description": "ebene_4",
            "type": "string"
          },
          "GUID_AKTEN_SCHUBLADE_ROT": {
            "description": "akten_schublade_rot",
            "type": "string"
          },
          "GUID_EBENE_6": {
            "description": "ebene_6",
            "type": "string"
          },
          "mbPackageName": {
            "type": "string"
          },
          "GUID_WRITER": {
            "description": "writer",
            "type": "string"
          },
          "GUID_EMAIL": {
            "description": "EMAIL",
            "type": "string"
          },
          "GUID_VIDEO": {
            "description": "video",
            "type": "string"
          },
          "mbIconBMP": {
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "GUID_AUDIO": {
            "description": "audio",
            "type": "string"
          },
          "GUID_REGISTER_GRUEN": {
            "description": "register_gruen",
            "type": "string"
          },
          "GUID_BMP": {
            "description": "bmp",
            "type": "string"
          },
          "GUID_REGISTER_BLAU": {
            "description": "register_blau",
            "type": "string"
          },
          "GUID_WORD": {
            "description": "word",
            "type": "string"
          },
          "mbAllMembers": {
            "type": "string"
          },
          "GUID_SUPPORT": {
            "description": "support",
            "type": "string"
          },
          "GUID_SCAN_DOKUMENT": {
            "description": "scan_dokument",
            "type": "string"
          },
          "GUID_ADRESSE": {
            "description": "adresse",
            "type": "string"
          },
          "GUID_BESUCHSBERICHTE": {
            "description": "besuchsberichte",
            "type": "string"
          },
          "GUID_KUNDEN": {
            "description": "kunden",
            "type": "string"
          },
          "GUID_KUNDENGRUPPE": {
            "description": "kundengruppe",
            "type": "string"
          },
          "GUID_CHM_HILFE": {
            "description": "chm_hilfe",
            "type": "string"
          },
          "mbAllJPG": {
            "description": "Return file data of normal, workflow and disabled icon in <code>checkoutSordType<\/code>.",
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "GUID_EXCEL": {
            "description": "excel",
            "type": "string"
          },
          "GUID_REGISTER": {
            "description": "register",
            "type": "string"
          },
          "GUID_ORDNER_ROT": {
            "description": "ordner_rot",
            "type": "string"
          },
          "mbICO": {
            "type": "string"
          },
          "GUID_PROJEKTARBEIT": {
            "description": "projektarbeit",
            "type": "string"
          },
          "mbIconJPG": {
            "description": "Return icon file data in <code>checkoutSordType<\/code>.",
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "GUID_AKTENKOFFER": {
            "description": "aktenkoffer",
            "type": "string"
          },
          "GUID_DRAW": {
            "description": "draw",
            "type": "string"
          },
          "GUID_JAVASCRIPT": {
            "description": "javascript",
            "type": "string"
          },
          "mbDisabledIconMember": {
            "description": "Return file data of disabled icon in <code>checkoutSordType<\/code>.",
            "type": "string"
          },
          "GUID_AUTOCAD_DWG": {
            "description": "autocad_dwg",
            "type": "string"
          },
          "GUID_AUTOCAD_DWF": {
            "description": "autocad_dwf",
            "type": "string"
          },
          "mbPNG": {
            "type": "string"
          },
          "GUID_TXT": {
            "description": "txt",
            "type": "string"
          },
          "GUID_PDF": {
            "description": "pdf",
            "type": "string"
          },
          "GUID_TELEFON": {
            "description": "telefon",
            "type": "string"
          },
          "GUID_SCHRIFTVERKEHR": {
            "description": "schriftverkehr",
            "type": "string"
          },
          "MAX_DOCUMENT_TYPES": {
            "format": "int32",
            "description": "Maximum number of document types (=746).",
            "type": "integer"
          },
          "mbIconsJPG": {
            "description": "Return file data of normal icon and disabled icon in <code>checkoutSordType<\/code>.",
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "GUID_FORMULARORDNER": {
            "description": "formularordner",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinActivityProject": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "actProj": {
            "$ref": "#/components/schemas/ActivityProject"
          }
        }
      },
      "BRequest_FeedService_registerNotify": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "feedGuid": {
            "type": "string"
          },
          "notify": {
            "$ref": "#/components/schemas/FeedNotification"
          }
        }
      },
      "BResult_847213937": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ComputeDocumentHashResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "ProcessCountElements": {
        "description": "This class make possible the count of the archive elements.\n<p>\n Copyright: Copyright (c) 2008\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "countResult": {
            "description": "Result of the countprocess.",
            "$ref": "#/components/schemas/CountResult"
          }
        }
      },
      "BRequest_IXServicePortIF_restoreSord": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          },
          "restoreOptions": {
            "$ref": "#/components/schemas/RestoreOptions"
          }
        }
      },
      "BResult_1535847981": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/HashSetOfHashTag"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "MapToAggregationResult": {
        "additionalProperties": {
          "$ref": "#/components/schemas/AggregationResult"
        },
        "type": "object"
      },
      "HealthCheckInfos": {
        "description": "This class holds the values for health check evaluation.",
        "type": "object",
        "properties": {
          "customerLicenseKeyHash": {
            "description": "MD5 hash of license key.\nThe part of the license key used to compute this hash can be obtained\n by <code><pre>conn.getServerInfo().getLicense().getSerno();<\/pre><\/code>",
            "type": "string"
          },
          "archiveGuid": {
            "description": "Archive GUID.",
            "type": "string"
          },
          "infos": {
            "description": "Health check data.\nIf returned from\n {@link HealthCheckService#read(de.elo.ix.client.ClientInfo, List)}, this list is sorted by\n {@link HealthCheckInfo#getName()}.",
            "$ref": "#/components/schemas/ListOfHealthCheckInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_registerOcrWorker": {
        "type": "object",
        "properties": {
          "ocrWorker": {
            "$ref": "#/components/schemas/OcrWorker"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ProcessRegion": {
        "description": "This class specifies the options for setting a sord's {@link Sord#regionId} (i.e.\nID of the\n region it belongs to) for sub-trees of sords. It is used as member in {@link ProcessInfo} and\n defines a respective operation.\n\n <p>\n Copyright: Copyright (c) 2022\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "isNewRegion": {
            "description": "Determines if the root sord has changed from \"is no region\" to \"is region\".\nThis can only\n happen during checkin of a sord (flag {@link SordDetails#isRegion()} and never when a sord is\n moved.",
            "type": "boolean"
          },
          "regionId": {
            "format": "int32",
            "description": "The resulting regionId of the root sord which has to be passed to its sub-tree.",
            "type": "integer"
          },
          "rootObjId": {
            "format": "int32",
            "description": "The id of the root sord for which its sub-tree has to be adapted according to its region.",
            "type": "integer"
          }
        }
      },
      "BRequest_MyELOService_readHashTagCloud": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "info": {
            "$ref": "#/components/schemas/HtCloudInfo"
          }
        }
      },
      "CopyResult": {
        "description": "Results of a {@link ProcessCopyElements}-Operation.",
        "type": "object",
        "properties": {
          "mapGuidsSource2Copy": {
            "description": "Maps the GUIDs of the source elements to the copied element's GUIDs.\n<p>\n The same rules apply as for {@link CopyResult#mapIdsSource2Copy}.\n <\/p>",
            "$ref": "#/components/schemas/MapToString"
          },
          "mapIdsSource2Copy": {
            "description": "Maps the Ids of the source elements to the copied element's Ids.\n<p>\n To reduce memory consumption, this map only contains the mapping for elements in the\n {@link NavigationInfo#startIDs} when using\n {@link IXServicePortIF#processTrees(ClientInfo, NavigationInfo, ProcessInfo)} .\n <\/p>\n <p>\n In case of using {@link IXServicePortIF#processFindResult(ClientInfo, String, ProcessInfo)},\n each element found by the search will be listed in this map!\n <\/p>",
            "$ref": "#/components/schemas/MapToInteger"
          }
        }
      },
      "FindDirect": {
        "description": "<p>\nSearch query for locating text in the archive.\n <\/p>\n \n <p>\n The fulltext search is performed via iSearch. Therefore, use\n {@link de.elo.ix.client.esearch.FindByESearch} instead. The {@link #query} should be replaces by\n the actual query term and additional filters (e.g. DocMask) should be submitted by\n {@link de.elo.ix.client.esearch.ESearchParams#queryOperator}. The areas in which should be search\n should be set in {@link de.elo.ix.client.esearch.ESearchParams#searchIn}.<br>\n Searches using this class are still executed but internally mapped to\n {@link de.elo.ix.client.esearch.FindByESearch} objects and some values might be ignored.\n <\/p>",
        "type": "object",
        "properties": {
          "searchInMemo": {
            "description": "<i>Is ignored, reserved for future use<\/i>",
            "type": "boolean"
          },
          "searchInSordName": {
            "type": "boolean"
          },
          "searchInFulltext": {
            "type": "boolean"
          },
          "searchInIndex": {
            "type": "boolean"
          },
          "query": {
            "description": "Search query.",
            "type": "string"
          },
          "searchInNotes": {
            "description": "<i>Is ignored, reserved for future use<\/i>",
            "type": "boolean"
          },
          "searchInVersions": {
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteMap": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "domainName": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "keyNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BResult_1959732439": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/PackageData"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_ConfigService_checkinConfigurationsBatch": {
        "type": "object",
        "properties": {
          "configBatchData": {
            "$ref": "#/components/schemas/ConfigBatchData"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BResult_2056457945": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ArchiveStatistics"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "OrgUnitInfo": {
        "description": "<p>\nData class containing organizational unit information data. Information includes ID, name, etc.\n <\/p>\n <p>\n Copyright: Copyright (c) 2013\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "tStamp": {
            "description": "Timestamp The format is JJJJ.MM.DD.hh.mm.\nss",
            "type": "string"
          },
          "name": {
            "description": "OU name",
            "type": "string"
          },
          "guid": {
            "description": "GUID",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "OU identifier",
            "type": "integer"
          },
          "ouProps": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "desc": {
            "description": "OU description.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinUsers": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "checkinUsersZ": {
            "$ref": "#/components/schemas/CheckinUsersZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserInfo"
            }
          }
        }
      },
      "FindHashTagInfo": {
        "type": "object",
        "properties": {
          "lastUsedIso": {
            "description": "Search by last used. A date range can be specified by using the default range delimiter \"...\n\"\n or the one defined in {@link de.elo.ix.client.FindOptions#getRangeDelimiter()}.",
            "type": "string"
          },
          "actionZ": {
            "description": "Action element selector.",
            "$ref": "#/components/schemas/ActionZ"
          },
          "sordZ": {
            "description": "Sord element selector.",
            "$ref": "#/components/schemas/SordZ"
          },
          "createDateIso": {
            "description": "Search by create date. A date range can be specified by using the default range delimiter \"...\n\"\n or the one defined in {@link de.elo.ix.client.FindOptions#getRangeDelimiter()}.",
            "type": "string"
          },
          "findFeeds": {
            "description": "If true a Map&lt;String, Feed&gt; will be set in the FindResult.\nby default true",
            "type": "boolean"
          },
          "findResultAccessMode": {
            "description": "Describes how the client application will access the results.",
            "$ref": "#/components/schemas/FindResultAccessMode"
          },
          "minCount": {
            "format": "int32",
            "description": "Filter the result by number of use.\nOnly HashTags with >= minCount will be returned",
            "type": "integer"
          },
          "hashtagGuidOrName": {
            "description": "HashTag Guid or Name",
            "type": "string"
          },
          "findSubscriptions": {
            "description": "If true a Map&lt;String, Subscription&gt; will be set in the FindResult",
            "type": "boolean"
          },
          "findHashTags": {
            "type": "boolean"
          }
        }
      },
      "ArrayOfKeyInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/KeyInfo"
        }
      },
      "Document": {
        "description": "Document object with identifier and version arrays for the document and attachments.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "docs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocVersion"
            }
          },
          "objId": {
            "description": "Object ID for the document.",
            "type": "string"
          },
          "atts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocVersion"
            }
          }
        }
      },
      "NoteC": {
        "description": "<p>\nConstants for notes.\n <\/p>",
        "type": "object",
        "properties": {
          "TYPE_ANNOTATION_LINE": {
            "format": "int32",
            "description": "Note type: reserved",
            "type": "integer"
          },
          "TYPE_ANNOTATION_NOTE": {
            "format": "int32",
            "description": "Note type: annotation text",
            "type": "integer"
          },
          "TYPE_NORMAL_ACL": {
            "format": "int32",
            "description": "Note type: standard ACL",
            "type": "integer"
          },
          "TYPE_ANNOTATION_FILETEXT": {
            "format": "int32",
            "description": "Note type: reserved",
            "type": "integer"
          },
          "TYPE_ANNOTATION_NOTE_WITHFONT": {
            "format": "int32",
            "description": "Draws a filled rectangular box on a document and displays text in the box.",
            "type": "integer"
          },
          "TYPE_NONE": {
            "format": "int32",
            "description": "Note type: needed in FindByNotes to indicate typeless filtering",
            "type": "integer"
          },
          "TYPE_ANNOTATION_RECTANGLE": {
            "format": "int32",
            "description": "Note type: reserved",
            "type": "integer"
          },
          "mbObjId": {
            "description": "Member objId.",
            "type": "string"
          },
          "mbOnlyLock": {
            "description": "Only remove or set lock.",
            "$ref": "#/components/schemas/NoteZ"
          },
          "TYPE_ANOTEWG_NOTE": {
            "format": "int32",
            "description": "Use TYPE_ANNOTATION_NOTE",
            "type": "integer"
          },
          "TYPE_ANOTEW_MARKER": {
            "format": "int32",
            "description": "Use TYPE_ANNOTATION_MARKER",
            "type": "integer"
          },
          "TYPE_ANNOTATION_STAMP": {
            "format": "int32",
            "description": "Adds a stamp, such as a received date for example, to a document.\n<p>\n The font size in the client application has to be computed by FontInfo.height * 3.7 *\n resolution_in_dpi/100\n <\/p>",
            "type": "integer"
          },
          "TYPE_PERSONAL": {
            "format": "int32",
            "description": "Note type: standard green note",
            "type": "integer"
          },
          "TYPE_ANNOTATION_HOLLOWRECTANGLE": {
            "format": "int32",
            "description": "Note type: draws a hollow rectangle (frame) on a document.",
            "type": "integer"
          },
          "mbAll": {
            "description": "All members.",
            "$ref": "#/components/schemas/NoteZ"
          },
          "mbNoteText": {
            "description": "Member noteText",
            "type": "string"
          },
          "mbLockId": {
            "description": "Member lockId",
            "type": "string"
          },
          "mbCreateDateIso": {
            "type": "string"
          },
          "TYPE_ANNOTATION_HORIZONTAL_LINE": {
            "format": "int32",
            "description": "Note type: horizontal line.",
            "type": "integer"
          },
          "TYPE_ANNOTATION_MARKER": {
            "format": "int32",
            "description": "Note type: highlighting rectange (filled) on the document.\n<p>\n If the note is assigned the colour 0xC0C0C0 the note will be interpreted by ELODM. In this case\n a black rectangle will painted on the document, using the note coordinates supplied, if the\n note ACL does not contain sufficient read access rights for the current user. This allows\n document contact to be blacked out for certain users The document must be a graphic based\n document, eg. tiff, bmp etc.\n <\/p>",
            "type": "integer"
          },
          "mbNoteImage": {
            "description": "Member noteImage",
            "type": "string"
          },
          "TYPE_ANNOTATION_STAMP_NEW": {
            "format": "int32",
            "description": "Note type: adds a stamp, such as a received date for example, to a document.\n<p>\n The font size in the client application has to be computed by FontInfo.height * 2.2 *\n resolution_in_dpi/100\n <\/p>",
            "type": "integer"
          },
          "COLOR_ANNOTATION_MARKER_DM": {
            "format": "int32",
            "description": "This color is used for notes of type TYPE_ANNOTATION_MARKER to specify a black rectangle that\nis painted on the document by Document Manager.",
            "type": "integer"
          },
          "mbNoteFreehand": {
            "description": "Member noteFreehand",
            "type": "string"
          },
          "mbAclItems": {
            "type": "string"
          },
          "TYPE_ANNOTATION_TEXT": {
            "format": "int32",
            "description": "Annotation with text but without a rectangle.\n<p>\n The font size in the client application has to be computed by FontInfo.height * 3.7 *\n resolution_in_dpi/100\n <\/p>",
            "type": "integer"
          },
          "TYPE_STAMP": {
            "format": "int32",
            "description": "Note type: standard red note",
            "type": "integer"
          },
          "TYPE_ANNOTATION_FREEHAND": {
            "format": "int32",
            "description": "Note type: freehand line.",
            "type": "integer"
          },
          "TYPE_ANNOTATION_FILLEDRECTANGLE": {
            "format": "int32",
            "description": "Note type: draws a filled coloured box on the document, over the existing document.",
            "type": "integer"
          },
          "TYPE_NORMAL": {
            "format": "int32",
            "description": "Note type: standard yellow note",
            "type": "integer"
          },
          "mbDeleted": {
            "type": "string"
          },
          "mbNoDesc": {
            "description": "All members but without note text.",
            "$ref": "#/components/schemas/NoteZ"
          },
          "TYPE_ANNOTATION_STRIKEOUT": {
            "format": "int32",
            "description": "Note type: strike out text",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_findNextConfigFiles": {
        "type": "object",
        "properties": {
          "searchId": {
            "type": "string"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "configFileZ": {
            "$ref": "#/components/schemas/ConfigFileZ"
          },
          "idx": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "MapToListOfString": {
        "additionalProperties": {
          "$ref": "#/components/schemas/ListOfString"
        },
        "type": "object"
      },
      "EventBusC": {
        "description": "Constants related to the event bus API.",
        "type": "object",
        "properties": {
          "EVENT_OCR_REQUEST": {
            "description": "OCR Request Event.\nOCR Worker Processes listen to this event and process OCR on the supplied\n image data. In order to listen for this event, the session user must have the permission\n FLAG_ADMIN.",
            "type": "string"
          },
          "EVENT_OCR_RESULT": {
            "description": "OCR Finished Event. OCR Worker Process sends this event if the OCR processing is finished.\nThe\n client application initiates a OCR request by calling API function processOCR. It receives an\n Event ID",
            "type": "string"
          },
          "BUSID_MAX_SYSTEM": {
            "description": "Reserved.",
            "type": "string"
          },
          "WATCH_DELETE": {
            "format": "int32",
            "description": "An object was deleted.",
            "type": "integer"
          },
          "BUSID_BROADCAST": {
            "description": "Broadcast bus ID. The EventBusC.\nBUSID_BROADCAST refers to a public communication channel that\n can used by all applications and users. Any user can send events to this bus and is allowed to\n listen to it.",
            "type": "string"
          },
          "EVENT_TYPE_WATCH_FOLDER": {
            "description": "Watch folder event.\nAn event of this type is sent, if the contents of a given folder have been\n changed.\n <p>\n In order to register a listener for such events, the folder to be watched has to be specified\n with an object ID expression in <code>EventFilter.param2<\/code>(see checkoutSord):\n \n <pre>\n <code>\n IXConnection conn = ...\n \n // Folder to be watched\n int folderId = ...\n \n // Register listener  \n conn.getEventBusApi().getBroadcastBus().addListener( \n   EventBusC.EVENT_TYPE_WATCH_FOLDER, \n   Integer.toString(folderId) );\n <\/code>\n <\/pre>\n <\/p>\n <p>\n For each modified Sord object in the watched folder, the client application receives one\n <code>Event<\/code>, whereby the data members are set as follows:\n \n <pre>\n <code>\n Event ev = ...\n \n // Folder being watched\n int folderId = Integer.parseInt(ev.getParam2());\n \n // Arguments \n Object[] args = (Object[])AnyToObject.toObject(ev.getAny());\n \n // Inserted, updated (e.g. locked) or deleted Sord  \n Sord sord = (Sord)args[0];\n \n // Valid members of args[0]\n SordZ sordMembersZ = (SordZ)args[1];\n \n // What has happened: EventBusC.WATCH_INSERT, EventBusC.WATCH_UPDATE, EventBusC.WATCH_DELETE\n int what = (Integer)args[2]; \n <\/code>\n <\/pre>\n <\/p>\n <p>\n Watch folder events are sent to every current acitve connection, provided that a listener was\n registered for it and the associated user has at least read access to the changed object. It is\n also sent to the connection that fires this event.\n <\/p>",
            "type": "string"
          },
          "EVENT_TYPE_CHAT": {
            "description": "Chat event type. Events of this type contain chat text.",
            "type": "string"
          },
          "WATCH_INSERT": {
            "format": "int32",
            "description": "An object was inserted.",
            "type": "integer"
          },
          "BUSID_USER": {
            "description": "User related bus ID. For each user, an event bus exists with the bus ID EventBusC.\nBUSID_USER +\n user-ID. Any user can send events to this bus but only the owning user can listen to it.",
            "type": "string"
          },
          "WATCH_UPDATE": {
            "format": "int32",
            "description": "An object was updated, locked or unlocked.",
            "type": "integer"
          },
          "EVENT_TYPE_MAX_SYSTEM": {
            "description": "User defined events must have a higher type value than this limit.",
            "type": "string"
          },
          "EVENT_TYPE_CLOSE_CHAT": {
            "description": "Close chat event type.\nAn event of this type is sent to notify the subscribers that the chat\n channel (resp. event bus) will be closed shortly.",
            "type": "string"
          },
          "EVENT_TYPE_OPEN_CHAT": {
            "description": "Open chat event type.\nEvents of this type are used to invite subscribers to open a public final\n static chat channel.",
            "type": "string"
          },
          "EVENT_FULLTEXT_INDEXING_STATUS_UPDATE": {
            "description": "Notify about status change in fulltext indexing.",
            "type": "string"
          }
        }
      },
      "BRequest_SystemInformation_userReport": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "si": {
            "$ref": "#/components/schemas/SystemInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_createNote": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          }
        }
      },
      "BResult_892356058": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/InheritKeywordingResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_closeEventBus": {
        "type": "object",
        "properties": {
          "busId": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_findFirstActivities": {
        "type": "object",
        "properties": {
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindActivityInfo"
          },
          "activityZ": {
            "$ref": "#/components/schemas/ActivityZ"
          }
        }
      },
      "BResult_63967077": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ExecuteScriptResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinSubscription": {
        "type": "object",
        "properties": {
          "subs": {
            "$ref": "#/components/schemas/Subscription"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "subsZ": {
            "$ref": "#/components/schemas/SubscriptionZ"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutSordPath": {
        "type": "object",
        "properties": {
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          },
          "csi": {
            "$ref": "#/components/schemas/CheckoutSordPathInfo"
          }
        }
      },
      "BResult_1034263904": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/CombineAclResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_getDistinctValuesOfObjKey": {
        "type": "object",
        "properties": {
          "opts": {
            "$ref": "#/components/schemas/ValuesOfObjKeyOptions"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "okeyName": {
            "type": "string"
          }
        }
      },
      "MapToBValueClass": {
        "additionalProperties": {
          "$ref": "#/components/schemas/BValueClass"
        },
        "type": "object"
      },
      "ReplSet": {
        "description": "<p>\nObjects of this class store the replication information of archive entries.\n <\/p>\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "TStamp": {
            "description": "Timestamp of the last alteration of replication sets for the corresponding archive entry.\nThe\n format is JJJJ.MM.DD.hh.mm.ss",
            "type": "string"
          },
          "dw": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "combiGuid": {
            "type": "string"
          },
          "TStampSync": {
            "description": "Timestamp of this object's last export by the replication.",
            "type": "string"
          },
          "dwSync": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "objId": {
            "format": "int32",
            "description": "This replication information belongs to the archive entry with ID <code>objId<\/code>",
            "type": "integer"
          }
        }
      },
      "BRequest_FeedService_checkoutHashTag": {
        "type": "object",
        "properties": {
          "hstgZ": {
            "$ref": "#/components/schemas/HashTagZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "hashtagGuidOrName": {
            "type": "string"
          }
        }
      },
      "DateSingleValue": {
        "type": "object"
      },
      "BRequest_IXServicePortIF_findNextTasks": {
        "type": "object",
        "properties": {
          "searchId": {
            "type": "string"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "idx": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "BResult_607287445": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityProject"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BResult_1067648097": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/PackageContent"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BResult_382788180": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/Aspect"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_reload": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "AccessC": {
        "description": "<p>\nThis class defines constants for access rights.\n <\/p>\n <p>\n The\n \n <pre>\n <code>FLAG_*<\/code>\n <\/pre>\n \n constants are used in\n \n <pre>\n <code>UserInfo.flags.\n The <pre><code>LUR_*<\/code>\n <\/pre>\n \n constants are used in access control lists.\n <\/p>\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "FLAGS_NOT_TO_INHERIT": {
            "format": "int32",
            "description": "Rights (UserInfo.flags) which are not inherited from groups the user is a member.",
            "type": "integer"
          },
          "LUR_WRITE": {
            "format": "int32",
            "description": "Access control right for writing an archive entry.",
            "type": "integer"
          },
          "FLAG2_ALL": {
            "format": "int32",
            "description": "User right: all rights for {@link UserInfo#flags2}. Default flags2 value for administrators.",
            "type": "integer"
          },
          "FLAG_DELDOC": {
            "format": "int32",
            "description": "Delete documents.",
            "type": "integer"
          },
          "FLAG2_FUNCTIONAL_ROLE": {
            "format": "int32",
            "description": "Functional role that can be chosen by the user.",
            "type": "integer"
          },
          "FLAG2_VISIBLE_USER": {
            "format": "int32",
            "description": "User right: user is visible in a select box. This value has to be used in the UserInfo.\nflags2\n member.",
            "type": "integer"
          },
          "FLAGS_EXCLUSIVE_FOR_GROUPS": {
            "format": "int32",
            "description": "These rights are removed from UserInfo.flags if UserInfo.type == UserInfoC.\nTYPE_USER",
            "type": "integer"
          },
          "FLAG_HASFILEACCESS": {
            "format": "int32",
            "description": "Read document file.",
            "type": "integer"
          },
          "FLAG2_IS_DMS_DESKTOP_USER": {
            "format": "int32",
            "description": "User right: user works with ELO DMS Desktop. This value has to be used in the UserInfo.\nflags2\n member.",
            "type": "integer"
          },
          "FLAG_ADMIN": {
            "format": "int32",
            "description": "Main administrator, can edit all users and groups.",
            "type": "integer"
          },
          "FLAG_IGNOREACL": {
            "format": "int32",
            "description": "Ignore access control lists.",
            "type": "integer"
          },
          "FLAGS_NOT_TO_SUBSTITUTE": {
            "format": "int32",
            "description": "Rights (UserInfo.flags) which are not substituted.\nEIX-864",
            "type": "integer"
          },
          "LUR_LIST": {
            "format": "int32",
            "description": "Insert or remove an entry to the list of subentries of a Sord.",
            "type": "integer"
          },
          "FLAG_EDITDUEDATE": {
            "format": "int32",
            "description": "Edit expiration date of archive entries.",
            "type": "integer"
          },
          "FLAG_NOLOGIN": {
            "format": "int32",
            "description": "User cannot login. This is not a right but a prohibition.",
            "type": "integer"
          },
          "FLAG_EDITACL": {
            "format": "int32",
            "description": "Edit security settings.",
            "type": "integer"
          },
          "FLAG_EDITSWL": {
            "format": "int32",
            "description": "Edit catchwords.",
            "type": "integer"
          },
          "FLAG_EDITDOCS": {
            "format": "int32",
            "description": "Edit documents: checkin, checkout.",
            "type": "integer"
          },
          "FLAG_DELREADONLY": {
            "format": "int32",
            "description": "Delete read only documents.",
            "type": "integer"
          },
          "FLAG_CHANGEPATH": {
            "format": "int32",
            "description": "Change storage path settings.",
            "type": "integer"
          },
          "FLAG2_EXTEND_WORKFLOW_RIGHTS": {
            "format": "int32",
            "description": "User right: extend ACL during workflow execution.\nThis value has to be used in the\n UserInfo.flags2 member.",
            "type": "integer"
          },
          "FLAG_SUBADMIN": {
            "format": "int32",
            "description": "Administrator, can edit only the users and groups he created.",
            "type": "integer"
          },
          "FLAG2_ANALYTICS_DISCOVER": {
            "format": "int32",
            "description": "User right: analytics discover.\nThis right allows a user to access the 'discover' area at ELO\n Analytics and to edit searches.",
            "type": "integer"
          },
          "LUR_NOTHING": {
            "format": "int32",
            "description": "No access.",
            "type": "integer"
          },
          "FLAG_EXPORT": {
            "format": "int32",
            "description": "Export.",
            "type": "integer"
          },
          "LUR_EDIT": {
            "format": "int32",
            "description": "Access control right for beeing able to checkin a new document version.",
            "type": "integer"
          },
          "FLAG_EDITCONFIG": {
            "format": "int32",
            "description": "Edit master data",
            "type": "integer"
          },
          "FLAG_SAPADMIN": {
            "format": "int32",
            "description": "SAP administrator.",
            "type": "integer"
          },
          "FLAG_EDITWF": {
            "format": "int32",
            "description": "Edit work flows.",
            "type": "integer"
          },
          "LUR_READ": {
            "format": "int32",
            "description": "Access control right for reading an archive entry.",
            "type": "integer"
          },
          "LUR_SPACE": {
            "format": "int32",
            "description": "Access control right to combine rights for an object contained in a workspace.",
            "type": "integer"
          },
          "FLAG2_ANALYTICS_VISUALIZE": {
            "format": "int32",
            "description": "User right: analytics visualize.\nThis right allows a user to access the 'visualize' area at ELO\n Analytics and to edit visualizations.",
            "type": "integer"
          },
          "FLAG_EDITACT": {
            "format": "int32",
            "description": "Edit activity projects.",
            "type": "integer"
          },
          "LUR_ALL": {
            "format": "int32",
            "description": "All access control rights.",
            "type": "integer"
          },
          "FLAG_ALL": {
            "format": "int32",
            "description": "All rights (without flag\n<pre>\n <code>FLAG_NOLOGIN<\/code>\n <\/pre>\n \n and\n \n <pre>\n <code>FLAG_IS_OPTION_GROUP<\/code>\n <\/pre>\n \n ).",
            "type": "integer"
          },
          "FLAG_CHANGEPW": {
            "format": "int32",
            "description": "Change password.",
            "type": "integer"
          },
          "FLAG2_ANALYTICS_DASHBOARD_VIEW": {
            "format": "int32",
            "description": "User right: analytics dashboard view. This right allows a user to view predefined dashboards.",
            "type": "integer"
          },
          "LUR_PERMISSION": {
            "format": "int32",
            "description": "Access control right to change ACL of an object.",
            "type": "integer"
          },
          "LUR_DELETE": {
            "format": "int32",
            "description": "Access control right for deleting an archive entry.",
            "type": "integer"
          },
          "FLAG_IMPORT": {
            "format": "int32",
            "description": "Import.",
            "type": "integer"
          },
          "FLAG2_WF_CONTROLLER": {
            "format": "int32",
            "description": "User right: workflow controller.\nThis right allows a user to read all active workflows - even\n those where she or he is not involved. In IX 8.x, this functionality was implemented by the IX\n option usersCanReadAllActiveWorkflows. IX 9.x does not support this option, since it was a\n quick and very limited solution to archive compatibility with Windows Client.",
            "type": "integer"
          },
          "FLAGS2_NOT_TO_SUBSTITUTE": {
            "format": "int32",
            "description": "Rights (UserInfo.flags2) which are not substituted.\nEIX-864, RID11413",
            "type": "integer"
          },
          "FLAG2_VISIBLE_FEED_USER": {
            "format": "int32",
            "description": "User right: user is visible in document feed. This value has to be used in the UserInfo.\nflags2\n member.",
            "type": "integer"
          },
          "FLAG_IS_OPTION_GROUP": {
            "format": "int32",
            "description": "This flag marks an option group.",
            "type": "integer"
          },
          "FLAG_STARTWF": {
            "format": "int32",
            "description": "Start work flows.",
            "type": "integer"
          },
          "FLAG_AUTHOR": {
            "format": "int32",
            "description": "Author for release documents",
            "type": "integer"
          },
          "FLAG2_ANALYTICS_DASHBOARD_EDIT": {
            "format": "int32",
            "description": "User right: analytics dashboard edit.\nThis right allows a user to access the 'dashboard' area\n at ELO Analytics and to edit dashboards.",
            "type": "integer"
          },
          "FLAG2_DESKTOP_CLIENT_PLUS": {
            "format": "int32",
            "description": "Allows to use Desktop Client Plus. This value has to be used in the UserInfo.flags2 member.",
            "type": "integer"
          },
          "FLAGS2_NOT_TO_INHERIT": {
            "format": "int32",
            "description": "Rights (UserInfo.flags2) which are not inherited from groups the user is a member.",
            "type": "integer"
          },
          "FLAG_CHANGEREV": {
            "format": "int32",
            "description": "Change the archiving mode of a document.",
            "type": "integer"
          },
          "FLAG_DELSTRUC": {
            "format": "int32",
            "description": "Delete archive entries.",
            "type": "integer"
          },
          "FLAG_EDITSCAN": {
            "format": "int32",
            "description": "Edit scanner settings.",
            "type": "integer"
          },
          "FLAG_DELVERSION": {
            "format": "int32",
            "description": "Delete a document version in history",
            "type": "integer"
          },
          "FLAG_CHANGEMASK": {
            "format": "int32",
            "description": "Change the storage mask of an existing (not new) archive entry.",
            "type": "integer"
          },
          "FLAG2_INTERACTIVE_LOGIN": {
            "format": "int32",
            "description": "User right: Allow interactive login. This value has to be used in the UserInfo.flags2 member.",
            "type": "integer"
          },
          "FLAG2_LAST": {
            "format": "int32",
            "description": "Highest bit currently used in {@link UserInfo#flags2}. Reserved.",
            "type": "integer"
          },
          "FLAG2_SHOW_EXTRA_INFO": {
            "format": "int32",
            "description": "User right: user can see additional keywording information.\nThis value has to be used in the\n UserInfo.flags2 member.",
            "type": "integer"
          },
          "FLAG2_LIMITED_CLIENT": {
            "format": "int32",
            "description": "User right: limited client. This right limits the functionality of the client application.\nIn\n AdminConsole, this flag ist named \"ELOxc Client User, Email only\".",
            "type": "integer"
          },
          "FLAG_EDITSCRIPT": {
            "format": "int32",
            "description": "Create, edit, delete scripts.",
            "type": "integer"
          },
          "FLAG_EDITREPL": {
            "format": "int32",
            "description": "Edit replication set assignment.",
            "type": "integer"
          },
          "FLAG_EDITMASK": {
            "format": "int32",
            "description": "Create, edit, delete storage masks.",
            "type": "integer"
          },
          "FLAG_EDITSTRUCTURE": {
            "format": "int32",
            "description": "Edit archive structure: create, edit, move archive entries.",
            "type": "integer"
          },
          "FLAG2_CAN_BE_SUBSTITUTED": {
            "format": "int32",
            "description": "Group right: This group can be substituted to an other user.\n<p>\n This right cannot be inherited by sub groups and is not inherited by substituted groups or\n users.\n <\/p>",
            "type": "integer"
          }
        }
      },
      "OcrResultQueryLanguages": {
        "description": "This class contains the result of a OcrInfoQueryLanguages request.",
        "type": "object",
        "properties": {
          "internalLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "externalLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DoubleListValue": {
        "description": "A list of double values which is joined by AND or OR depending on\n<code>andOpeDoubleListrator<\/code>.<br>\n Defaults to an OR-disjunction.",
        "type": "object",
        "properties": {
          "valueList": {
            "description": "A list of double values which is joined by AND or OR depending on <code>andOperator<\/code>.",
            "$ref": "#/components/schemas/ListOfDoubleValue"
          },
          "andOperator": {
            "description": "Connective of list elements (default is OR (=false) ).",
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutDocMaskLineTemplates": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "dmltZ": {
            "$ref": "#/components/schemas/DocMaskLineTemplateZ"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinDocBegin": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          }
        }
      },
      "BRequest_IXServicePortIF_createNoteTemplate": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "RestoreOptions": {
        "description": "<p>\nThis class contains several options for undeleting archive SORDs by <code>restoreSord<\/code>\n <\/p>\n <p>\n Copyright: Copyright (c) 2004-2006\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "minDeleteDate": {
            "description": "<p>\nRestore only document versions that are deleted after <code>minDeleteDate<\/code>. Its String\n representation is the ISO format in the client's time zone.\n <\/p>",
            "type": "string"
          },
          "singleObject": {
            "description": "<p>\n<code>singleObject=true<\/code> restricts the operation to the specified object not traversing\n sub trees.\n <\/p>",
            "type": "boolean"
          },
          "minIDate": {
            "description": "<p>\n<code>minIDate<\/code> ist the ISO representation of the local date used to mark the lower limit\n for restoring.\n <\/p>",
            "type": "string"
          },
          "parentId": {
            "description": "<p>\nSince references also got a delete date, they can be restored independently from their main\n reference. To restore a reference selectively, set parentId to the references' parentId.\n Restoring a reference does not affect the delete status of its main reference.\n <\/p>\n <p>\n Setting parentId implies singleObject=true.\n <\/p>",
            "type": "string"
          }
        }
      },
      "BResult_954316611": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/SubstitutionsResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "NoteFreehandC": {
        "description": "Constants for NoteFreehand",
        "type": "object",
        "properties": {
          "MAX_POINTS": {
            "format": "int32",
            "description": "Maximum number of points in NoteFreehand.",
            "type": "integer"
          }
        }
      },
      "SessionInfo": {
        "description": "<p>\nProvides details of the current session with the Index Server\n <\/p>\n <p>\n Copyright: Copyright (c) 2003\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "runAs": {
            "description": "Session is constrained to this account",
            "type": "string"
          },
          "sessionOptions": {
            "description": "Session options assigned by\n{@link IXServicePortIF#setSessionOptions(ClientInfo, SessionOptions)}.",
            "$ref": "#/components/schemas/MapToString"
          },
          "clientComputer": {
            "description": "The client computer connected with the Index Server.",
            "type": "string"
          },
          "validSeconds": {
            "format": "int32",
            "description": "The length of time the connection is valid for.",
            "type": "integer"
          },
          "appVersion": {
            "description": "The version of the client's application connected with the Index Server.",
            "type": "string"
          },
          "ticket": {
            "description": "The ticket of this session within the Index Server.",
            "type": "string"
          },
          "bestBefore": {
            "description": "The time stamp of the session best before date.",
            "type": "string"
          },
          "appName": {
            "description": "The name of the client's application connected with the Index Server.",
            "type": "string"
          },
          "appType": {
            "description": "The type of the client's application connected with the Index Server.",
            "type": "string"
          },
          "loginName": {
            "description": "The name of the user who initialized the runAs connection",
            "type": "string"
          },
          "userName": {
            "description": "The name of the user used for the connection.",
            "type": "string"
          },
          "userId": {
            "format": "int32",
            "description": "The id of the user used for the connection.",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_sendEvents": {
        "type": "object",
        "properties": {
          "subsId": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          }
        }
      },
      "BRequest_FeedService_createHashTagSubscription": {
        "type": "object",
        "properties": {
          "userGuidOrId": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "hashtagGuidOrName": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinWorkFlow": {
        "type": "object",
        "properties": {
          "workFlowDiagramZ": {
            "$ref": "#/components/schemas/WFDiagramZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "wf": {
            "$ref": "#/components/schemas/WFDiagram"
          }
        }
      },
      "FeedC": {
        "description": "Constants for class Feed.",
        "type": "object",
        "properties": {
          "mbAll": {
            "$ref": "#/components/schemas/FeedZ"
          }
        }
      },
      "EloFtStopC": {
        "description": "<p>Bit constants for members of EloFtStop<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbStopword": {
            "description": "DB column: stopword",
            "type": "string"
          },
          "lnStopword": {
            "format": "int32",
            "description": "DB column: stopword",
            "type": "integer"
          }
        }
      },
      "BResult_730157667": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/OcrWorker"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "ArrayOfDocMaskLine": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DocMaskLine"
        }
      },
      "FeedZ": {
        "description": "Type safe element selector for class Feed.",
        "type": "object",
        "properties": {
          "bset": {
            "type": "string"
          }
        }
      },
      "Thesaurus": {
        "description": "Internal class.",
        "type": "object",
        "properties": {
          "listId": {
            "format": "int32",
            "description": "DB column: listid",
            "type": "integer"
          },
          "compare": {
            "description": "DB column: compare",
            "type": "string"
          },
          "data": {
            "description": "DB column: data",
            "type": "string"
          },
          "groupId": {
            "format": "int32",
            "description": "DB column: groupid",
            "type": "integer"
          },
          "prio": {
            "format": "int32",
            "description": "DB column: prio",
            "type": "integer"
          }
        }
      },
      "MapToIndexValue": {
        "additionalProperties": {
          "$ref": "#/components/schemas/IndexValue"
        },
        "type": "object"
      },
      "ArrayOfint": {
        "type": "array",
        "items": {
          "format": "int32",
          "type": "integer"
        }
      },
      "BRequest_IXServicePortIF_deleteAspect": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "aspectId": {
            "type": "string"
          }
        }
      },
      "DeleteSubstitutionsInfo": {
        "description": "Define which substitutions should be deleted.",
        "type": "object",
        "properties": {
          "substitutionGuids": {
            "description": "List of substitution GUIDs to delete",
            "$ref": "#/components/schemas/ListOfString"
          }
        }
      },
      "ArchivValue": {
        "type": "object",
        "properties": {
          "year": {
            "format": "int32",
            "type": "integer"
          },
          "count": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "ArchivReport": {
        "type": "object",
        "properties": {
          "objecte": {
            "$ref": "#/components/schemas/ListOfArchivValue"
          },
          "archivGUID": {
            "type": "string"
          },
          "elodmdocs": {
            "$ref": "#/components/schemas/ListOfArchivValue"
          }
        }
      },
      "FindTranslateTermInfo": {
        "description": "This class is used to find translations of terms.\nLocalization information is stored in two kinds of storage: in the database and in property files\n in the repository. The former kind use the database table <code>translations<\/code> which has a\n column for each language. This localization data can be modified or extended via API function\n {@link IXServicePortIF#checkinTranslateTerms(ClientInfo, TranslateTerm[], LockZ)}. The latter\n kind stores localization as property files under /Administration/Localization. This data can only\n be changed via checkin/out and takes effect only after Indexserver re-start.\n \n Indexserver function\n {@link IXServicePortIF#findFirstTranslateTerms(ClientInfo, FindTranslateTermInfo, int)} searches\n over both localization sources and returns matches from both. The translations found in the\n database are returned first.\n \n EIX-2912: Since IX version 21.3, a language is specified as IETF language tag (lang). The\n language part is from ISO 639-1. It is optionally followed by a country tag from ISO 3166-1\n alpha-2. The parts are separated by hyphen. Examples: de-DE, de-CH, de-AT. The function tries to\n find the translation for a given lang in the following order:\n \n <pre>\n 1. lang as defined, e.g. de-CH\n 2. lang without country, e.g. de\n 3. first lang with the same language tag, e.g. de-DE\n 4. first system language\n <\/pre>",
        "type": "object",
        "properties": {
          "disableFallback": {
            "description": "Disable fallback to default language if a key in {@link #translationKeyPrefixes} is not found.\nIf there is no translation term associated to a key for a language in {@link #langs}, an empty\n String is returned in the corresponding {@link FindResult#translateTerms}.\n \n EIX-3008",
            "type": "boolean"
          },
          "translationKeyPrefixes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "terms": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "level": {
            "format": "int32",
            "description": "Find terms of this priority level. If 0 (default), return the terms with the highest level.",
            "type": "integer"
          },
          "langs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "inclToBeTranslated": {
            "description": "Return those terms too, that should be translated into other languages: e.g.\nKeywording form\n names (DocMask.name), index value lables (DocMaskLine.name) and Keywords.",
            "type": "boolean"
          },
          "packageName": {
            "description": "Package GUID.",
            "type": "string"
          },
          "inclDeleted": {
            "description": "Reserved - Find deleted terms too (currently not implemented).",
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_changeSordMask": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "maskId": {
            "type": "string"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          },
          "editInfoZ": {
            "$ref": "#/components/schemas/EditInfoZ"
          }
        }
      },
      "SordHistKeyC": {
        "type": "object",
        "properties": {
          "ID_SORD_NAME": {
            "format": "int32",
            "description": "Entry ID for Sord.name.",
            "type": "integer"
          },
          "ID_SORD_DESC": {
            "format": "int32",
            "description": "Entry ID for Sord.desc.",
            "type": "integer"
          },
          "NAME_SORD_NAME": {
            "description": "Entry name for Sord.name.",
            "type": "string"
          },
          "NAME_SORD_DELDATE": {
            "description": "Entry name for Sord.delDate.",
            "type": "string"
          },
          "NAME_SORD_ACL": {
            "description": "Entry ID for Sord.\nacl",
            "type": "string"
          },
          "ID_SORD_XDATE": {
            "format": "int32",
            "description": "Entry ID for Sord.xDate.",
            "type": "integer"
          },
          "NAME_SORD_DESC": {
            "description": "Entry name for Sord.desc.",
            "type": "string"
          },
          "ID_SORD_DELDATE": {
            "format": "int32",
            "description": "Entry ID for Sord.delDate.",
            "type": "integer"
          },
          "NAME_SORD_XDATE": {
            "description": "Entry name for Sord.xDate.",
            "type": "string"
          },
          "NAME_DOCMASK_NAME": {
            "description": "Entry mame for Sord.name.",
            "type": "string"
          },
          "ID_RESERVED_MIN": {
            "format": "int32",
            "description": "Entry IDs greater or equal of this value are used for Sord.name, Sord.xDate etc.",
            "type": "integer"
          },
          "ID_DOCMASK_NAME": {
            "format": "int32",
            "description": "Entry ID for Sord.mask.",
            "type": "integer"
          },
          "ID_SORD_ACL": {
            "format": "int32",
            "description": "Entry ID for Sord.\nacl",
            "type": "integer"
          }
        }
      },
      "BRequest_PackageService_checkoutPackages": {
        "type": "object",
        "properties": {
          "packageZ": {
            "$ref": "#/components/schemas/PackageDataZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "checkoutInfo": {
            "$ref": "#/components/schemas/PackageCheckoutInfo"
          }
        }
      },
      "BValueClass": {
        "type": "object"
      },
      "LdapService": {
        "type": "object"
      },
      "ObjKey": {
        "description": "This class wraps the ObjKeyData class to provide a convenient way to access the index lines that\nhave multiple columns. Unlike ObjKeyData the getData and setData functions work with String\n arrays inspite of single String objects.\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "description": "The group name of the index line",
            "type": "string"
          },
          "objId": {
            "format": "int32",
            "description": "The ELO object ID this object belongs to",
            "type": "integer"
          },
          "displayData": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "id": {
            "format": "int32",
            "description": "ID of the index line",
            "type": "integer"
          }
        }
      },
      "QueryObject": {
        "description": "<p>\nA QueryObject is used to build a search query.\n <\/p>\n <p>\n It can either be a QueryOperator, which is a either a list of concatenated QueryObjects or a\n negated QueryObject, or a QueryFilter which describes an actual value of a document.\n <\/p>",
        "type": "object"
      },
      "ArrayOfWFNode": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WFNode"
        }
      },
      "SubsInfoC": {
        "description": "Constants for class SubsInfo.",
        "type": "object",
        "properties": {
          "mbSubsName": {
            "type": "string"
          },
          "mbUserName": {
            "type": "string"
          },
          "mbSubsId": {
            "type": "string"
          },
          "mbUserId": {
            "type": "string"
          },
          "mbInheritRights": {
            "type": "string"
          },
          "mbActiveId": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_provideSystemCryptPassword": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "encryptionSet": {
            "type": "string"
          },
          "pwd": {
            "type": "string"
          }
        }
      },
      "DoubleValue": {
        "description": "Class to commit a numeric double value to iSearch via QueryFilter.",
        "type": "object"
      },
      "SordHistC": {
        "description": "Constanst for class SordHist.",
        "type": "object",
        "properties": {
          "SRC_IGW": {
            "format": "int32",
            "description": "History entry created by ELO Internet Gateway.",
            "type": "integer"
          },
          "SRC_SYNC": {
            "format": "int32",
            "description": "History entry created by ELO Archive Synchronisation.",
            "type": "integer"
          },
          "SRC_OLE": {
            "format": "int32",
            "description": "History entry created by ELO Automation Interface.",
            "type": "integer"
          },
          "SRC_XML": {
            "format": "int32",
            "description": "History entry created by ELO XML Importer",
            "type": "integer"
          },
          "SRC_NONE": {
            "format": "int32",
            "description": "History entry created by unknown program.",
            "type": "integer"
          },
          "SRC_SAP": {
            "format": "int32",
            "description": "History entry created by ELO SAPALINK.",
            "type": "integer"
          },
          "SRC_CLIENT": {
            "format": "int32",
            "description": "History entry created by ELO Windows Client.",
            "type": "integer"
          },
          "SRC_REPL": {
            "format": "int32",
            "description": "History entry created by ELO Replication.",
            "type": "integer"
          },
          "SRC_IX": {
            "format": "int32",
            "description": "History entry created by Indexserver.",
            "type": "integer"
          }
        }
      },
      "WFNodeAssoc": {
        "description": "<p>\nRepresents a bridge (connection) in a workflow diagram\n <\/p>\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "nodeFrom": {
            "format": "int32",
            "description": "Start node (starting location)",
            "type": "integer"
          },
          "type": {
            "format": "int32",
            "description": "Type of bridge (connection).\n{@link WFNodeMatrixC#ALWAYS}, {@link WFNodeMatrixC#IF_TRUE},\n {@link WFNodeMatrixC#IF_FALSE}.",
            "type": "integer"
          },
          "done": {
            "description": "Indicates whether the bridge has been passed through/over (used).\nFor a condition node, this\n member is true for both paths (TRUE and FALSE) if either has been passed. Thus it cannot be\n used in a client application to find out, which path the workflow has taken.",
            "type": "boolean"
          },
          "nodeTo": {
            "format": "int32",
            "description": "Destination (end) node",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_findNextReportInfos": {
        "type": "object",
        "properties": {
          "searchId": {
            "type": "string"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "idx": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "ColorDataC": {
        "type": "object",
        "properties": {
          "GUID_GREEN": {
            "description": "Color green",
            "type": "string"
          },
          "GUID_SYSTEM": {
            "description": "System color",
            "type": "string"
          },
          "GUID_BLUE": {
            "description": "Color blue",
            "type": "string"
          },
          "mbHidden": {
            "description": "Hidden flag.",
            "type": "string"
          },
          "GUID_RED": {
            "description": "Color red",
            "type": "string"
          },
          "INCLUSIVE_HIDDEN": {
            "format": "int32",
            "description": "Read colors inclusive hidden colors.\nThis option can be passed to\n {@link IXServicePortIF#checkoutColors2(ClientInfo, int, LockZ)}.",
            "type": "integer"
          },
          "SORD_COLORS": {
            "format": "int32",
            "description": "Read colors that can be assigned to Sord objects.\nThis option can be passed to\n {@link IXServicePortIF#checkoutColors2(ClientInfo, int, LockZ)}.",
            "type": "integer"
          },
          "INCLUSIVE_DELETED": {
            "format": "int32",
            "description": "Read colors inclusive logically deleted colors.\nThis option can be passed to\n {@link IXServicePortIF#checkoutColors2(ClientInfo, int, LockZ)}.",
            "type": "integer"
          },
          "mbDeleted": {
            "type": "string"
          },
          "ALL_COLORS": {
            "format": "int32",
            "description": "Read all colors.\nThis option can be passed to\n {@link IXServicePortIF#checkoutColors2(ClientInfo, int, LockZ)}.",
            "type": "integer"
          }
        }
      },
      "BResult_1756288553": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MapHist"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "PurgeStatus": {
        "description": "This class represents the status of the ELOdm purge task",
        "type": "object",
        "properties": {
          "lastPurgeTime": {
            "description": "last purge work time (ISO UTC date and time without dots) If no purge has been done yet, the\nvariable is empty.",
            "type": "string"
          },
          "isRunning": {
            "description": "if the ELOdm purge task is running (it can only run in combination with the backup task)",
            "type": "boolean"
          },
          "errorMessage": {
            "description": "an error message, if an error occured, else an empty String",
            "type": "string"
          },
          "numberOfDocsPurged": {
            "format": "int32",
            "description": "number of purged documents",
            "type": "integer"
          }
        }
      },
      "CheckinSubstitutionsInfo": {
        "description": "Object to define substitutions to be checked in.\n<p>\n Substitutions which do not have a {@link Substitution#guid} are new substitutions. If a\n {@link Substitution#guid} is set, the corresponding substitution is updated.\n <\/p>",
        "type": "object",
        "properties": {
          "substitutions": {
            "description": "List of substitutions to be inserted/ updated",
            "$ref": "#/components/schemas/ListOfSubstitution"
          }
        }
      },
      "SubstitutionSettings": {
        "description": "This class wraps various boolean settings and parameters for {@link Substitution}",
        "type": "object",
        "properties": {
          "canAccessPostbox": {
            "description": "Define if the substitute can access the user's postbox.",
            "type": "boolean"
          },
          "canBeActivatedManually": {
            "description": "Define if the substitution can be activated manually.",
            "type": "boolean"
          },
          "activatePeriodsAutomatically": {
            "description": "Define if substitution is activated automatically during a {@link SubstitutionPeriod}.",
            "type": "boolean"
          },
          "superiorSubstitution": {
            "description": "<p>\nDefines if a substitution was created as a superior substitution with all rights set.\n <\/p>\n <p>\n This flag cannot be set by a user himself, but the superior and administrators.\n <\/p>\n <p>\n To create such a substitution, call {@link IXServicePortIF#createSuperiorSubstitution}.\n <\/p>",
            "type": "boolean"
          },
          "isActivatedManually": {
            "description": "Is the substitution activated manually by calling\n{@link IXServicePortIF#activateSubstitution(de.elo.ix.client.ClientInfo, String, de.elo.ix.client.LockZ)}\n <i>Read-only<\/i>",
            "type": "boolean"
          },
          "inheritEffectivePrincipalRights": {
            "description": "If set to true, the principals effective rights (with all groups and so on) are inherited to\nthe substitute. The substitute then is able to do everything the principal could.",
            "type": "boolean"
          },
          "canAccessPersonalTasks": {
            "description": "Define if the substitute is allowed to find and access tasks (e.g.\n{@link WFDiagram},\n {@link Activity}, {@link Reminder}) which are assigned to the user ({@link Substitution#userId}\n himself and not a substituted group ({@link Substitution#groupsToInheritRights}.",
            "type": "boolean"
          },
          "canBeForwarded": {
            "description": "Define if the the substitution can be forwarded to an other user.",
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_processTrees": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "procInfo": {
            "$ref": "#/components/schemas/ProcessInfo"
          },
          "navigationInfo": {
            "$ref": "#/components/schemas/NavigationInfo"
          }
        }
      },
      "ArrayOfIdName": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/IdName"
        }
      },
      "SystemInfo": {
        "description": "This class controls the report functions\n{@link SystemInformation#countDocsInStorePath(de.elo.ix.client.ClientInfo, SystemInfo)} and\n {@link SystemInformation#userReport(de.elo.ix.client.ClientInfo, SystemInfo)}.",
        "type": "object",
        "properties": {
          "endDate": {
            "description": "Select documents created before or on this date. This is an ISODate in UTC.",
            "type": "string"
          },
          "userReportMode": {
            "type": "string"
          },
          "storePathID": {
            "format": "int32",
            "description": "ID of the {@link StoreInfo} where the documents should be counted.",
            "type": "integer"
          },
          "reportMode": {
            "description": "Report mode for {@link SystemInformation#userReport(de.elo.ix.client.\nClientInfo, SystemInfo)}\n to determine which information should be reported.",
            "$ref": "#/components/schemas/UserReportZ"
          },
          "startDate": {
            "description": "Select documents created on or after this date. This is an ISODate in UTC.",
            "type": "string"
          }
        }
      },
      "ArrayOfSubsInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SubsInfo"
        }
      },
      "PackageDeleteInfo": {
        "description": "Describe delete criteria for\n{@link PackageService#deletePackages(ClientInfo ci, PackageDeleteInfo deleteInfo, LockZ unlockZ)}.\n EIX-1895",
        "type": "object",
        "properties": {
          "deletePackageContent": {
            "description": "if true then archive elements belonging to that package will be deleted as well",
            "type": "boolean"
          },
          "nameOrGuids": {
            "description": "List of names or GUIDs of packages to be deleted. It must be filled with at least one value.",
            "$ref": "#/components/schemas/ListOfString"
          }
        }
      },
      "ArrayOfMapHist": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MapHist"
        }
      },
      "MapToSubscription": {
        "additionalProperties": {
          "$ref": "#/components/schemas/Subscription"
        },
        "type": "object"
      },
      "ListOfResolveRightsResult": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ResolveRightsResult"
        }
      },
      "BucketKeyDateFormatE": {
        "description": "Date formats of the bucket key in return buckets of aggregations of type DATE_HISTOGRAM and\nDATE_RANGE.",
        "type": "object",
        "properties": {
          "ELO_ISO_DATE_FORMAT_YEAR": {
            "description": "Date format yyyy with only the year.",
            "$ref": "#/components/schemas/BucketKeyDateFormatE"
          },
          "ELO_ISO_DATE_FORMAT_DAY": {
            "description": "Date format yyyyMMdd without time.",
            "$ref": "#/components/schemas/BucketKeyDateFormatE"
          },
          "ELO_TSTAMP_FORMAT": {
            "description": "Date format yyyy.MM.dd.HH.mm.ss as used in ELO tstamp fields.",
            "$ref": "#/components/schemas/BucketKeyDateFormatE"
          },
          "ELO_ISO_DATE_FORMAT_SECONDS": {
            "description": "Date format yyyyMMddHHmmss with seconds.",
            "$ref": "#/components/schemas/BucketKeyDateFormatE"
          },
          "ELO_ISO_DATE_FORMAT_MILLIS": {
            "description": "Date format yyyyMMddHHmmssSSS with millis as default.",
            "$ref": "#/components/schemas/BucketKeyDateFormatE"
          }
        }
      },
      "BRequest_FeedService_findNextActions": {
        "type": "object",
        "properties": {
          "searchId": {
            "type": "string"
          },
          "actionZ": {
            "$ref": "#/components/schemas/ActionZ"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "idx": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "ArchiveStatisticsOptionsC": {
        "description": "An object of this class controls the function getArchiveStatistics.",
        "type": "object",
        "properties": {
          "mbMaxDocId": {
            "description": "Find the maximum document (version) ID",
            "type": "string"
          },
          "mbMaxObjId": {
            "description": "Find the maximum object ID",
            "type": "string"
          }
        }
      },
      "ListOfIndexSearchValue": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/IndexSearchValue"
        }
      },
      "BRequest_IXServicePortIF_checkoutKeys": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ListOfSord": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Sord"
        }
      },
      "PointInfo": {
        "description": "This class describes a 2D point.",
        "type": "object",
        "properties": {
          "x": {
            "format": "int32",
            "description": "X coordinate",
            "type": "integer"
          },
          "y": {
            "format": "int32",
            "description": "Y coordinate",
            "type": "integer"
          }
        }
      },
      "ArrayOfSordLink": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SordLink"
        }
      },
      "HashSetOfInteger": {
        "type": "array",
        "items": {
          "format": "int32",
          "type": "integer"
        }
      },
      "HashTagC": {
        "description": "Constants for class HashTag",
        "type": "object",
        "properties": {
          "mbAll": {
            "$ref": "#/components/schemas/HashTagZ"
          },
          "mbGuid": {
            "$ref": "#/components/schemas/HashTagZ"
          },
          "mbLastUsed": {
            "$ref": "#/components/schemas/HashTagZ"
          }
        }
      },
      "CopyOptions": {
        "description": "Structure for the options for the copy-process.\n<p>\n Copyright: Copyright (c) 2009\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "copyStructuresAndDocuments": {
            "description": "Copy all structures with the documents.",
            "type": "boolean"
          },
          "targetName": {
            "description": "Name of the target archive element.",
            "type": "string"
          },
          "copyOnlyWorkversion": {
            "description": "Do not copy all documents versions but only workversion",
            "type": "boolean"
          },
          "keepOriginalPermissions": {
            "description": "Keep the current permissions.\nOnly one of the three options keepOriginalPermissions,\n takeTargetPermissions and acceptChanges can be true.",
            "type": "boolean"
          },
          "inclAttachments": {
            "description": "Also copy all attachments.",
            "type": "boolean"
          },
          "copyOnlyBaseElement": {
            "description": "Copy only the base element.",
            "type": "boolean"
          },
          "keepOriginalOwner": {
            "description": "Keep the original owner of the archive element.",
            "type": "boolean"
          },
          "keepReferences": {
            "description": "Keep references to original objects in copied parents.\nThis member is ignored, if\n ProcessInfo.inclReferences=false. If this member is true or only the parent is included in the\n tree, the copied reference links the copied parent to the original object. If this member is\n false and both the parent and object of a reference is included in the tree, the copied\n reference links the copied parent to the copied object.",
            "type": "boolean"
          },
          "takeTargetPermissions": {
            "description": "Take the target permissions.\nOnly one of the three options keepOriginalPermissions,\n takeTargetPermissions and acceptChanges can be true.",
            "type": "boolean"
          },
          "keepCurrentNotes": {
            "description": "Keep the current documentnotes.",
            "type": "boolean"
          },
          "newParentId": {
            "format": "int32",
            "description": "ParentId of the new element.",
            "type": "integer"
          },
          "moveOnly": {
            "description": "Only move the element.",
            "type": "boolean"
          },
          "acceptChanges": {
            "description": "Accept the change.\nOnly one of the three options keepOriginalPermissions, takeTargetPermissions\n and acceptChanges can be true.",
            "type": "boolean"
          },
          "adjustAclDifference": {
            "description": "The permissions of the moved objects are modified.\nThe permissions inherited from the old\n parent are substracted and the permissions of the new parent are added to the object.",
            "type": "boolean"
          },
          "copyOnlyWorkAttachment": {
            "description": "If inclAttachments and copyOnlyWorkAttachment are true, copy only the work attachments.\nSetting\n copyOnlyWorkAttachment to true when inclAttachments is false is invalid.",
            "type": "boolean"
          }
        }
      },
      "DeleteActivityOptions": {
        "description": "This class defines options for the API function deleteActivity.",
        "type": "object",
        "properties": {
          "deleteFinally": {
            "description": "Delete activity finally.\nThe database information for the activity is deleted, if this member\n is true. Otherwise the Activity.backAt is set to the current date.",
            "type": "boolean"
          }
        }
      },
      "IndexSearchIntegerValue": {
        "description": "This class represents a condition to filter aspect data of type {@link IndexValueC#TYPE_INT} in\nthe database.",
        "type": "object",
        "properties": {
          "operator": {
            "description": "Operator for this search condition",
            "$ref": "#/components/schemas/IndexSearchOperator"
          },
          "operand": {
            "format": "int32",
            "description": "Value on the right side of the operation.\nThe left side implicitly is the value in the\n database.",
            "type": "integer"
          }
        }
      },
      "PluginMessageSource": {
        "description": "Source of plugin message.",
        "type": "object",
        "properties": {
          "IXAPI": {
            "description": "Message was sent over Indexserver API.",
            "$ref": "#/components/schemas/PluginMessageSource"
          },
          "HTTP": {
            "description": "Message was sent by HTTP request.",
            "$ref": "#/components/schemas/PluginMessageSource"
          },
          "NOTIHNG": {
            "description": "Used as default if source is undefined.",
            "$ref": "#/components/schemas/PluginMessageSource"
          }
        }
      },
      "BRequest_IXServicePortIF_alive": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "DateNowValue": {
        "description": "<p>\nClass to commit a time which refers to the current time.\n <\/p>\n <p>\n Depending on the committed values, different searches are performed:\n <ul>\n <li>If <code>roundTo == null<\/code> and <code>relative == null<\/code>, a search for the exact\n current times is performed.\n <li>If <code>roundTo != null<\/code> and <code>relative == null<\/code>, a range query is\n performed.<br>\n From is current time rounded down, To is current time rounded up, defined by\n <code>roundTo<\/code>.\n <li>If <code>relative != null<\/code>: A range query relative to current time is performed.<br>\n <ul>\n <li>If the biggest relative value is negative, a range query into the past is performed.<br>\n <code>From<\/code> is current time - <code>relative<\/code>, rounded down if\n <code>roundTo != null<\/code>. <code>To<\/code> is current time, rounded up if\n <code>roundTo != null<\/code>.\n <li>If the biggest relative value is positive, a range query into the future is performed.<br>\n <code>From<\/code> is current time, rounded down if <code>roundTo != null<\/code>. <code>To<\/code>\n is current time + <code>relative<\/code>, rounded to if <code>roundTo != null<\/code>.\n <\/ul>\n <p>\n The delivered date is converted to the time zone submitted in ClientInfo\n <\/p>\n <\/ul>\n \n <p>\n A time offset to UTC time can be delivered by <code>diffToUtc<\/code>.<br>\n {@link SearchFieldE#X_DATE}, {@link SearchFieldE#I_DATE}, {@link SearchFieldE#DELETED_DATE} and\n {@link SearchFieldE#TIMESTAMP} are converted to UTC prior to saving them, index lines in date\n format are not converted.<br>\n Therefore, a timezone should always be commited for these four.\n <\/p>",
        "type": "object",
        "properties": {
          "roundTo": {
            "description": "Define to which time unit this date should be rounded.\n<br>\n If it is != null, a range query is performed.",
            "$ref": "#/components/schemas/DateRoundE"
          },
          "relative": {
            "description": "Relative time differences to now.\n<br>\n Can be null.",
            "$ref": "#/components/schemas/DateRelative"
          }
        }
      },
      "CombineAclResult": {
        "description": "This class contains the results returned by the function combineAcl.",
        "type": "object",
        "properties": {
          "differenceAclStr": {
            "description": "String representation of AclItem array difference.",
            "type": "string"
          },
          "compareIgnoreAccessCode": {
            "format": "int32",
            "description": "Compare result by ignoring the member AclItem.access. Negative if ACL lhs is less than rhs.\nPosiitve if ACL lhs is greater than rhs. Zero if ACLs are equal.",
            "type": "integer"
          },
          "compareCode": {
            "format": "int32",
            "description": "Compare result. Negative if ACL lhs is less than rhs. Positive if ACL lhs is greater than rhs.\nZero if ACLs are equal.",
            "type": "integer"
          },
          "intersection": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "difference": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "inverseDifference": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "sum": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "inverseDifferenceAclStr": {
            "description": "String representation of AclItem array inverseDifference.",
            "type": "string"
          },
          "intersectionAclStr": {
            "description": "String representation of AclItem array intersection.",
            "type": "string"
          },
          "spaceIntersection": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "sumAclStr": {
            "description": "String representation of AclItem array sum.",
            "type": "string"
          },
          "spaceIntersectionStr": {
            "description": "String representation of AclItem array {@link #spaceIntersection}.",
            "type": "string"
          }
        }
      },
      "DeleteOptions": {
        "description": "This class contains options for deleting archive SORDs using the deleteSord function.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "folderMustBeEmpty": {
            "description": "Delete a folder only if it is empty.\nSet this member to true, if deleteSord should delete only\n empty folders. If the parameters to deleteSord specify the original location of a non-empty\n folder, the exception IXExceptionC.ACCESS_DENIED is thrown. This option is ignored, if\n deleteSord is invokded with a reference.",
            "type": "boolean"
          },
          "deleteExpiredFolders": {
            "description": "Delete only expired folders and documents. Only expired empty folders can be deleted.\nOnly\n supported in function <code>cleanupStart<\/code>. This option can be combined with\n <code>deleteFinally<\/code>.\n <table border=\"2\" summary=\"\">\n <tr>\n <td><code>deleteFinally<\/code><\/td>\n <td>Action<\/td>\n <\/tr>\n <tr>\n <td><code>false<\/code><\/td>\n <td>All expired objects will be marked as deleted (but not finally deleted). The objects ACL is\n checked before it is deleted. LockC.FORCE is applied when deleting an object.<\/td>\n <\/tr>\n <tr>\n <td><code>true<\/code><\/td>\n <td>Objects that are expired and marked are deleted finally.<\/td>\n <\/tr>\n <\/table>",
            "type": "boolean"
          },
          "maxIDate": {
            "description": "maxIDate ist the ISO representation of the local date used to mark the upper limit for\ndeleting.",
            "type": "string"
          },
          "deleteResidueFree": {
            "description": "Delete all references to the objects in the database.\nThis includes reporting, replication\n control information, fulltext, etc. This option is ignroed, if deleteFinally is false.",
            "type": "boolean"
          },
          "deleteDocumentVersionsOnly": {
            "description": "Delete the document versions of the objects but keep keywording information.\nIn order to delete\n only the document versions, call deleteSord on an maybe undeleted object and set\n DeleteOptions.deleteFinally=true and DeleteOptions.deleteDocumentVersionsOnly=true.",
            "type": "boolean"
          },
          "deleteFinally": {
            "description": "deleteFinally=true causes the objects to be removed physically.\nWhen used together with\n <code>cleanupStart<\/code>, this option is always true. Exception: see\n {@link #deleteExpiredOnly}",
            "type": "boolean"
          },
          "deleteExpiredOnly": {
            "description": "Delete only expired objects. Only supported in function <code>cleanupStart<\/code>.\nThis option\n can be combined with <code>deleteFinally<\/code>.\n <table border=\"2\" summary=\"\">\n <tr>\n <td><code>deleteFinally<\/code><\/td>\n <td>Action<\/td>\n <\/tr>\n <tr>\n <td><code>false<\/code><\/td>\n <td>All expired objects will be marked as deleted (but not finally deleted). The objects ACL is\n checked before it is deleted. LockC.FORCE is applied when deleting an object.<\/td>\n <\/tr>\n <tr>\n <td><code>true<\/code><\/td>\n <td>Objects that are expired and marked are deleted finally.<\/td>\n <\/tr>\n <\/table>",
            "type": "boolean"
          },
          "deleteCertainDocumentVersionsOnly": {
            "description": "Delete physically certain document versions of the objects.\nIn order to delete physically\n certain document versions, first mark document versions as deleted (using\n DocVersion.setDeleted, followed by checkinDocEnd). Then call deleteSord after having set\n DeleteOptions.deleteFinally=true and DeleteOptions.deleteCertainDocumentVersionsOnly=true. (In\n order to delete all document versions, use field deleteDocumentVersionsOnly)",
            "type": "boolean"
          },
          "maxTStamp": {
            "description": "Delete objects modified last time before this date.\nOnly supported in function\n <code>cleanupStart<\/code>. If deleteFinally is true and this member is set, ony those objects\n are deleted finally, which were deleted logically before the given time. It must be an ISO\n value in the local time zone.",
            "type": "string"
          }
        }
      },
      "CryptInfoC": {
        "type": "object",
        "properties": {
          "MAX_LENGTH_ENCRYPTIONSET_NAME": {
            "format": "int32",
            "description": "Maximum length of encryption set name.",
            "type": "integer"
          },
          "ENCRYPTION_VERSION_AES_V1": {
            "description": "Denotes the current internal version of encryption method used for file encryption.",
            "type": "string"
          },
          "DELETE_SYSTEM_PART": {
            "description": "Marker for the action \"delete the system part from an encryption set\".\nThis is used within the\n field {@link CryptInfo#systemPwd} to indicate the above desired action.",
            "type": "string"
          }
        }
      },
      "BResult_1712381166": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/InvalidateCacheResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BResult_491352407": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SordHist"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_findFirstSords": {
        "type": "object",
        "properties": {
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindInfo"
          }
        }
      },
      "ListOfIndexSearchDoubleValue": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/IndexSearchDoubleValue"
        }
      },
      "ArrayOfWFDiagram": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WFDiagram"
        }
      },
      "BRequest_IXServicePortIF_deleteSord": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "deleteOptions": {
            "$ref": "#/components/schemas/DeleteOptions"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          },
          "parentId": {
            "type": "string"
          }
        }
      },
      "FindByIndex": {
        "description": "Finds an object according to the object's index properties.\nThe search terms are concatinated by\n the operator specified with FindOptions.searchMode. If FindOptionsC.OPERATOR_OR is the specified\n searchMode the members of this class are concatinated in the search string with the boolean\n operator \"OR\". Any other searchMode concatinates with \"AND\". Exception: userId and maskId are\n always used as \"AND\" terms.\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "delDateIso": {
            "description": "Find objects with this due date. It is a single date value or a date range in ISO format.",
            "type": "string"
          },
          "includeChildMasks": {
            "description": "Set this flag to {@code true} if you want to include masks that inherit from the specified\nmasks in {@link #maskId} and {@link #maskIds}.",
            "type": "boolean"
          },
          "kind": {
            "description": "Colour. If the colour is to be ignored this value must be set to null.",
            "type": "string"
          },
          "spaceGuids": {
            "description": "List of spaceGuids. Find objects that contain these spaceGuids.",
            "$ref": "#/components/schemas/ListOfString"
          },
          "aspectSortOrder": {
            "description": "This parameter controls an aspect-search's sorting of its results.\nYou can leave this parameter\n empty or null to get the results from the database's default ordering. Please note that sorting\n the result leads to higher computational requirements and therefor lower performance.",
            "$ref": "#/components/schemas/ListOfFindResultSortSpecification"
          },
          "aspects": {
            "description": "Find objects according to this filter for aspect objects.\nThe filter is a map of lists that\n uses a {@link String} as key and {@link List} of {@link IndexSearchValue} as value. To match an\n object all operations in {@link IndexSearchValue} must be fulfilled for the respective key. If\n you want to filter for different, non-overlapping values, then use the {@link List} of\n {@link IndexSearchValue}s in {@link FindByAspectValue}.<br>\n <br>\n To give an example, lets take an aspect called \"asp\" which is associated under the name \"a\" to\n a mask. That aspect has a line called \"aspl1\" and another one called \"aspl2\". The type of\n \"apsl1\" is an Integer and we want all values that ranges between 5 and 20 or between 105 and\n 120. Then your code to create such a filter would look like this:<br>\n \n <pre>\n var integerRange1 = new IndexSearchValue();\n integerRange1.intValues =\n     List.of(new IndexSearchIntegerValue(IndexSearchOperator.GREATER_THAN, 5),\n         new IndexSearchIntegerValue(IndexSearchOperator.LOWER_THAN, 20));\n\n var integerRange2 = new IndexSearchValue();\n integerRange2.intValues =\n     List.of(new IndexSearchIntegerValue(IndexSearchOperator.GREATER_THAN, 105),\n         new IndexSearchIntegerValue(IndexSearchOperator.LOWER_THAN, 120));\n\n var filterKeyAspl1 = \"a¶asp¶aspl1\";\n\n var filter = new HashMap<String, FindByAspectValue>();\n filter.put(filterKeyAspl1, new FindByAspectValue(integerRange1, integerRange2));\n <\/pre>\n\n Now there is need for an additional restriction: The index line \"aspl2\" (of type text) must be\n \"hello world\" in both of the above cases. We support this requirement by adding the appropriate\n key and {@link IndexSearchValue} to the {@code filter} object:\n \n <pre>\n var filterKeyAspl2 = \"a¶asp¶aspl2\";\n var stringRestriction = new IndexSearchValue();\n stringRestriction.stringValue =\n     new IndexSearchStringValue(IndexSearchOperator.EQUALS, \"hello world\");\n filter.put(filterKeyAspl2, new FindByAspectValue(stringRestriction));\n <\/pre>\n \n As you can see in the code above the key in the map is composed of the\n {@link AspectAssoc#name}, the {@link Aspect#name}'s name (or {@link Aspect#id}/\n {@link Aspect#guid}), and the {@link AspectLine#key}. The separator must be the pilcrow symbol\n and there must always be two pilcrow symbols. A single pilcrow symbol will get treated as an\n input error as well as three pilcrow symbols. Escaping of pilcrow symbols is right out.<br>\n <br>\n You can leave some or all of the fields in the key blank as long as the separator symbols are\n present. The server treats an empty field as a wildcard. To give an example lets consider you\n have the same {@link Aspect} assigned multiple times to the same {@link DocMask} using\n different {@link AspectAssoc}s (obviously). You want to search for value in all aspect objects\n regardless of there assiciation to a mask. To achieve this goal you simply do not set a value\n for {@link #aspectAssocName} and the server will search the value in every aspect object data\n that matches the name of the {@link Aspect} and the key of the {@link AspectLine}.<br>\n <br>\n Please note that you can leave all the fields blank. This will lead to a search in all fields\n of every aspect table which in turn will lead to heavy load on the database server as it will\n perform a full table scan on every aspect table. So be strongly advised to not execute such\n searches in a regular manner.<br>\n Even if you leave the {@link AspectLine#key} part blank there are some restrictions still: in\n case your condition is of type {@link IndexSearchStringValue}, the server will not look for the\n given filters in fields that cannot be converted from strings. Currently these are\n {@link AspectLine}s of the types {@link AspectLineC#TYPE_INTEGER} and\n {@link AspectLineC#TYPE_DOUBLE}. Accordingly the Indexserver will not look in\n {@link AspectLine}s of {@link AspectLineC#TYPE_INTEGER} if you specify a\n {@link AspectLineC#TYPE_DOUBLE} as search term.<br>\n <br>\n In case you specify {@link SearchModeC#OR} at {@link FindOptions#searchMode} only the junction\n mode of the {@link FindByAspectValue}s changes to a disjunction. The conditions you define\n inside {@link FindByAspectValue} will be treated as stated in the documentation.",
            "$ref": "#/components/schemas/MapToFindByAspectValue"
          },
          "maskId": {
            "description": "Find objects related to this mask ID or name.\nIf the mask relation is to be ignored this value\n must be set to an empty string or null.",
            "type": "string"
          },
          "exactName": {
            "description": "If this option is false, all objects are found that contain the term specified in\n<code>name<\/code> anywhere in their short description (Sord.name). In other words: a search by\n <code>*name*<\/code> is executed. Set this option true, if wildcards should not added implicitly\n to the search term.",
            "type": "boolean"
          },
          "acl": {
            "description": "Constrain results to objects with this access control list.",
            "type": "string"
          },
          "pathId": {
            "description": "Storage path ID or name",
            "type": "string"
          },
          "objKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ObjKey"
            }
          },
          "ownerId": {
            "description": "Find objects owned by the user with this user ID or name.\nIf the owner is to be ignored this\n value must be set to null.",
            "type": "string"
          },
          "lockId": {
            "description": "Set this value to an user's id or name to search for objects currently locked by that user.\nTo\n ignore this option, set this value to <code>null<\/code> (default).",
            "type": "string"
          },
          "xDateIso": {
            "description": "Find objects with this external date. It is a single date value or a date range in ISO format.\n<p>\n IX versions from 9.00.060 support relative date values. Relative date values give an offset to\n the current date and use a format similar to ISO format: \"{+|-}YYYY-MM-DD hh:mm:ss\", whereby\n the separator characters can be omitted: \"{+|-}YYYYMMDDhhmmss\". A relative date has to be\n prefixed by + (date is added) or - (date is subtracted).\n <\/p>\n <p>\n Examples, assuming the current date is 2016-06-24 16:29:00\n <table border=\"2\">\n <tr>\n <td>Relative date<\/td>\n <td>Resulting absolute date<\/td>\n <td>Remark<\/td>\n <\/tr>\n <tr>\n <td>+0001-00-00 00:00:00<\/td>\n <td>2017-06-24 16:29<\/td>\n <td>Next year, same month etc.<\/td>\n <\/tr>\n <tr>\n <td>-0000-01-00 00:00:00<\/td>\n <td>2016-05-24 16:29<\/td>\n <td>Previous month, same day etc.<\/td>\n <\/tr>\n <tr>\n <td>+0000<\/td>\n <td>2016-01-01 00:00...2016-12-31 23:59<\/td>\n <td>Search documents of this year. Incomplete relative dates are automatically expanded to a\n date range.<\/td>\n <\/tr>\n <tr>\n <td>+0000-00<\/td>\n <td>2016-06-01 00:00...2016-06-30 23:59<\/td>\n <td>Search documents of this month.<\/td>\n <\/tr>\n <tr>\n <td>-0000-01<\/td>\n <td>2016-05-01 00:00...2016-05-31 23:59<\/td>\n <td>Search documents of the last month.<\/td>\n <\/tr>\n <tr>\n <td>-0000-00-10...+0000-00-00 00:00:00<\/td>\n <td>2016-06-14 00:00...2016-06-24 16:29<\/td>\n <td>Search documents from the last 10 days.<\/td>\n <\/tr>\n <tr>\n <td>-0001...<\/td>\n <td>2015-01-01 00:00...<\/td>\n <td>Search documents from last year or newer.<\/td>\n <\/tr>\n <\/table>\n <\/p>\n <p>\n <i>Hint: Only relative date values are allowed that could also be an absolute date. E.g. a\n relative date of 100 days or 13 months cannot be specified.<\/i>\n <\/p>",
            "type": "string"
          },
          "iDateIso": {
            "description": "Find objects with this internal date. It is a single date value or a date range in ISO format.",
            "type": "string"
          },
          "name": {
            "description": "Find objects with this term(s) included in the name of the object (case insensitive).\nThis\n value can be a list of terms separated with blanks. They are concatinated with the operator\n specified by FindOptions.searchMode. The wildcard * is allowed, it matches any number of\n characters. If name is to be ignored this value must be set to null.",
            "type": "string"
          },
          "deleteUser": {
            "description": "Find objects deleted by the user with this user ID or name.\nIf the deleted user is to be\n ignored this value must be set to null.",
            "type": "string"
          },
          "deleteDateIso": {
            "description": "Find objects with this delete date. It is a single date value or a date range in ISO format.",
            "type": "string"
          },
          "desc": {
            "description": "Find objects with this term included in the description of the object (case insensitive).\nThis\n value can be a list of terms separated by blanks. The terms are concatinated with the operator\n specified by FindOptions.searchMode. The wildcard * is allowed, it matches any number of\n characters. If desc is to be ignored this value must be set to null.",
            "type": "string"
          },
          "maskIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ArrayOfSessionInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SessionInfo"
        }
      },
      "ESNodeObj": {
        "description": "<b><i>Note: For internal use only. Might change in the near future.\n<\/i><\/b>",
        "type": "object",
        "properties": {
          "Status": {
            "type": "string"
          },
          "port": {
            "format": "int32",
            "type": "integer"
          },
          "ip": {
            "type": "string"
          },
          "discSpaceUsage": {
            "type": "string"
          }
        }
      },
      "ArrayOfNoteTemplate": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/NoteTemplate"
        }
      },
      "ActivityOption": {
        "description": "This class represents an option for an activity project.",
        "type": "object",
        "properties": {
          "sorted": {
            "description": "The value has to be displayed in an appropriate order.\nThis option has to be checked by the\n client application. It is not checked by Indexserver.",
            "type": "boolean"
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "description": "Activity option name.\nThe name must not contain one of this characters: ! $ - + *",
            "type": "string"
          },
          "stamp": {
            "description": "This option is a stamp field. This option has to be checked by the client application.\nIt is\n not checked by Indexserver.",
            "type": "boolean"
          },
          "readOnly": {
            "description": "The value can not be edited in the user interface.\nThis option has to be checked by the client\n application. It is not checked by Indexserver.",
            "type": "boolean"
          },
          "id": {
            "format": "int32",
            "description": "Option ID. This value can be one of the predefined option IDs in ActivityOptionC.\nOr you can\n use an application defined value greater or equal to ActivityOptionC.ID_VALUE.",
            "type": "integer"
          },
          "mandatory": {
            "description": "A value must be defined for this option.\nThis option has to be checked by the client\n application. It is not checked by Indexserver.",
            "type": "boolean"
          },
          "onlyKeyword": {
            "description": "The value can only be selected from the associated keyword list.\nThis option has to be checked\n by the client application. It is not checked by Indexserver.",
            "type": "boolean"
          }
        }
      },
      "ConfigRecordDataC": {
        "description": "<p>Bit constants for members of ConfigRecord<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbInstanceId": {
            "description": "Member bit: Instance ID for workspace.\nFor workspace entries, this value is assigned to the related\n DB column: cfginstance",
            "type": "string"
          },
          "mbId": {
            "description": "Member bit: Row ID. This ID is unique over all entries.\nDB column: cfgid",
            "type": "string"
          },
          "mbPackageName": {
            "description": "Member bit: Package name or GUID.\nDB column: cfgpackage",
            "type": "string"
          },
          "mbBlobValue": {
            "description": "DB column: cfgvalueblob",
            "type": "string"
          },
          "mbKey": {
            "description": "Member bit: Entry key.\nDB column: cfgkey",
            "type": "string"
          },
          "mbGroupId": {
            "description": "Member bit: Groups related entries.\nDB column: cfggroup",
            "type": "string"
          },
          "lnAcl": {
            "format": "int32",
            "description": "Column length: Access control in raw representation.\nDB column: cfgacl",
            "type": "integer"
          },
          "lnGroupId": {
            "format": "int32",
            "description": "Column length: Groups related entries.\nDB column: cfggroup",
            "type": "integer"
          },
          "lnId": {
            "format": "int32",
            "description": "Column length: Row ID. This ID is unique over all entries.\nDB column: cfgid",
            "type": "integer"
          },
          "mbLevel": {
            "description": "Member bit: Layer level. This value defines the priority for the entry.\nDB column: cfglevel",
            "type": "string"
          },
          "lnComponent": {
            "format": "int32",
            "description": "Column length: ELO module name or ID.\nDB column: cfgcomponent",
            "type": "integer"
          },
          "lnValue": {
            "format": "int32",
            "description": "Column length: Entry value. This value can hold up to {@link ConfigRecordC#MAX_VALUE_LENGTH} characters.\nDB column: cfgvalue",
            "type": "integer"
          },
          "mbComponent": {
            "description": "Member bit: ELO module name or ID.\nDB column: cfgcomponent",
            "type": "string"
          },
          "mbValue": {
            "description": "Member bit: Entry value. This value can hold up to {@link ConfigRecordC#MAX_VALUE_LENGTH} characters.\nDB column: cfgvalue",
            "type": "string"
          },
          "lnBlobValue": {
            "format": "int32",
            "description": "DB column: cfgvalueblob",
            "type": "integer"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnKey": {
            "format": "int32",
            "description": "Column length: Entry key.\nDB column: cfgkey",
            "type": "integer"
          },
          "mbAcl": {
            "description": "Member bit: Access control in raw representation.\nDB column: cfgacl",
            "type": "string"
          },
          "lnInstanceId": {
            "format": "int32",
            "description": "Column length: Instance ID for workspace.\nFor workspace entries, this value is assigned to the related\n DB column: cfginstance",
            "type": "integer"
          },
          "lnPackageName": {
            "format": "int32",
            "description": "Column length: Package name or GUID.\nDB column: cfgpackage",
            "type": "integer"
          }
        }
      },
      "Domain": {
        "description": "This class defines how to connect to a domain controller, login a user and find her groups.",
        "type": "object",
        "properties": {
          "requiredGroup": {
            "description": "Users must be member of this LDAP group.\nOptional, short LDAP group name (not a DN) the user\n must be a member of in order to login. The membership in this group is checked after the group\n list has been collected. Hence, {@link #groupSearchDNList} and {@link #maxGroupNesting} have an\n effect on this check too. The comparison to this value is case-sensitive.",
            "type": "string"
          },
          "searchFilterForPerson": {
            "description": "Search filter for person.\nDefaults to \"(&amp;(objectclass=person)(sAMAccountName={0}))\"",
            "type": "string"
          },
          "attributesToRead": {
            "description": "Read this LDAP attributes into ldapProperties of UserInfo.\nThe attributes\n {@link #getAttributeNameMail()} and {@link #getAttributeNameMemberOf()} are always read and\n need not to be included in this collection.",
            "$ref": "#/components/schemas/SetOfString"
          },
          "FILTER_PERSON": {
            "description": "Filter expression used to find a person by her/his sAMAccountName.",
            "type": "string"
          },
          "attributeForUserPropOS": {
            "description": "LDAP attribute to be used as OS name for {@link UserInfoC#PROP_NAME_OS}.\nThis value is either\n {@link #AD_SAM_ACCOUNT_NAME} or {@link #AD_USER_PRINCIPAL_NAME}. If set as\n {@link #AD_USER_PRINCIPAL_NAME}, also set {@link #searchFilterForPerson} to\n {@link #FILTER_PERSON_USER_PRINCIPAL_NAME}. Default is sAMAccountName.",
            "type": "string"
          },
          "servers": {
            "description": "List of LDAP servers of the domain.",
            "$ref": "#/components/schemas/ListOfServer"
          },
          "AD_SAM_ACCOUNT_NAME": {
            "description": "LDAP attribute ID for sAMAccountName.",
            "type": "string"
          },
          "FILTER_PERSON_MAIL": {
            "description": "Filter expression used to find a person by her mail address.",
            "type": "string"
          },
          "connectionTimeoutSeconds": {
            "format": "int32",
            "description": "Timeout limit when connecting to a LDAP server.",
            "type": "integer"
          },
          "AD_USER_PRINCIPAL_NAME": {
            "description": "LDAP attribute ID for userPrincipalName.",
            "type": "string"
          },
          "groupSearchDNList": {
            "description": "Search paths to find groups.\nIf empty, only those groups are assigned to the user in ELO the\n user is a direct member of in LDAP. If not empty, the user's groups are recursively searched\n through group in group membership. A group found via this search is always added to the user\n regardless of whether its location fits to the given list. But groups that do not match any\n location are not investigated deeper.",
            "$ref": "#/components/schemas/ListOfString"
          },
          "attributeNameMemberOf": {
            "description": "Name of attribute that contains the user's groups. Defaults to \"memberOf\".",
            "type": "string"
          },
          "nameFormatter": {
            "description": "Format string to build a unique ELO account name from LDAP attributes.\nLDAP attributes have to\n be enclosed in $. Examples: 1. $cn$, $department$ ; 2. $sAMAccountName$ $department$",
            "type": "string"
          },
          "FILTER_PERSON_USER_PRINCIPAL_NAME": {
            "description": "Filter expression used to find a person by her/his userPrinicpalName.",
            "type": "string"
          },
          "AD_ATTRIBUTE_MAIL": {
            "description": "LDAP attribute ID that specifies the mail address of a given user.",
            "type": "string"
          },
          "DEFAULT_ATTRIBUTES": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "searchFilterForMail": {
            "description": "Search filter for mail address.\nDefaults to \"(&amp;(objectclass=person)(mail={0}))\"",
            "type": "string"
          },
          "attributeSuperior": {
            "description": "Attribute to determine the superior of an ELO user. Set this attribute ID e.g.\nto\n {@link #AD_ATTRIBUTE_MANAGER} to assign the superior of a user on login. This value is empty by\n default, which means that ELO Administrator (user ID 0) is assigned as superior.",
            "type": "string"
          },
          "AD_ATTRIBUTE_MANAGER": {
            "description": "AD attribute ID -manager- that specifies the superior of an ELO user.",
            "type": "string"
          },
          "attributeNameMail": {
            "description": "Name of attribute that contains the user's mail address. Defaults to \"mail\".",
            "type": "string"
          },
          "defaultUserName": {
            "description": "Optional user name to connect to the LDAP servers.\nThis account must have the permission to\n list the group associations of all users. It does not need to be an ELO account too.",
            "type": "string"
          },
          "parentOfNewUser": {
            "description": "Assign this user as parent for a new ELO user.\nID, GUID or name of existing ELO user or group\n that is assigned as UserInfo#parent when a new ELO user is created. This value is empty by\n default, which means that ELO Administrator (user ID 0) is assigned as parent.",
            "type": "string"
          },
          "maxGroupNesting": {
            "format": "int32",
            "description": "Groups are collected recursively up to this depth. A value of 0 means no depth limit.\nThis\n value is ignored, if {@link #groupSearchDNList} is empty.",
            "type": "integer"
          },
          "searchFilterForGroups": {
            "description": "Name of attribute that contains the user's groups.\nDefaults to \"(&amp;(objectCategory=group)(member={0}))\"",
            "type": "string"
          },
          "defaultUserPasswordEncr": {
            "description": "Optional encrypted user password to connect to the LDAP servers.\nThis password can also be set\n in plain text. It is automatically encrypted when stored into a file or database.",
            "type": "string"
          },
          "personSearchDNList": {
            "description": "Search paths to find persons. Only users that are found in one of this DN can login to ELO.\nE.g. \"cn=users,dc=elotest2,dc=local\".",
            "$ref": "#/components/schemas/ListOfString"
          },
          "searchTimeLimitSeconds": {
            "format": "int32",
            "description": "Search for groups can least up to this number of seconds.",
            "type": "integer"
          },
          "DEFAULT_ENVIRONMENT": {
            "description": "Default properties for LDAP connection via Java.",
            "$ref": "#/components/schemas/Array2OfString"
          },
          "domainPrefix": {
            "description": "Domain prefix.\nThe login name of the user is prefixed by this value to build the user property\n {@link UserInfoC#PROP_NAME_OS}. When using this prefix, users should also use this prefix for\n login. This value must end with a separator char, e.g. backslash. E.g. ELO\\\\",
            "type": "string"
          },
          "FILTER_GROUPS": {
            "description": "Filter expression used to find groups of a given user.",
            "type": "string"
          },
          "initialContextEnvironment": {
            "description": "Additional properties to build the login environment.\nExample:\n initialContextEnvironment.put(Context.SECURITY_AUTHENTICATION, \"DIGEST-MD5\");",
            "$ref": "#/components/schemas/MapToString"
          },
          "name": {
            "description": "Domain name. E.g. ELO.\nLOCAL",
            "type": "string"
          },
          "AD_ATTRIBUTE_MEMBER_OF": {
            "description": "LDAP attribute ID that specifies the group list of a given user or group.",
            "type": "string"
          }
        }
      },
      "AspectLine": {
        "description": "This class contains data for a line in a document mask, if {@link DocMask#dataOrganisation} =\n{@link DocMaskC#DATA_ORGANISATION_ASPECT}. AspectLines are contained in keywording\n {@link Aspect}s.",
        "type": "object",
        "properties": {
          "access": {
            "format": "int32",
            "description": "Bitset of AccessC.LUR_* constants. It contains the access bits for the current user.\nOnly\n AccessC.LUR_READ and AccessC.LUR_WRITE are used.",
            "type": "integer"
          },
          "prefixAsterix": {
            "description": "Add \"*\" before index value in search operation.",
            "type": "boolean"
          },
          "postfixAsterix": {
            "description": "Add \"*\" after index value in search operation.",
            "type": "boolean"
          },
          "displayName": {
            "description": "The display name of the attribute. This value is displayed in the lable before the edit field.\nIt can be translated into reps. from the users language: set\n <code>SessionOptionsC.TRANSLATE_TERM<\/code>.",
            "type": "string"
          },
          "defaultValue": {
            "description": "This value is assigned to the element for a new Sord object.",
            "type": "string"
          },
          "notTokenized": {
            "description": "Defines whether a index value should be searchable as TOKENIZED or UN_TOKENIZED",
            "type": "boolean"
          },
          "commentTranslationKey": {
            "description": "Translation-keyword for {@link AspectLine#comment}.",
            "type": "string"
          },
          "keywordListId": {
            "description": "Keyword List ID.",
            "type": "string"
          },
          "aspectId": {
            "format": "int32",
            "description": "This line information belongs to an aspect with the ID AspectId.",
            "type": "integer"
          },
          "externalData": {
            "description": "External data. Can be used to store an arbitary string.",
            "type": "string"
          },
          "type": {
            "format": "int32",
            "description": "The type of the line information.\n<br>\n This can be one of the <code>AspectLineC.TYPE_*<\/code> constants but none of the\n <code>DocMaskLineC.TYPE_*<\/code> constants.",
            "type": "integer"
          },
          "allowedMaskIdsForKeywordingRelation": {
            "description": "Specifies the {@link DocMask#id} allowed in a {@link AspectLineC#TYPE_RELATION}.\nMandatory if AspectLine is of type {@link AspectLineC#TYPE_RELATION}. Only Sords with the\n specified {@link DocMask#id} can be referenced in this AspectLine.",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "translate": {
            "description": "Translate index values into or from the users language.",
            "type": "boolean"
          },
          "nameTranslationKey": {
            "description": "Translation-keyword for {@link AspectLine#displayName}.",
            "type": "string"
          },
          "important": {
            "description": "Display index value next to the objects short description.\nThis element has to be interpreted\n by the client application. Further it is used while generating dynamic keywords.",
            "type": "boolean"
          },
          "canBeFoundViaKeywordingRelation": {
            "description": "If the sord is referenced by keywording-relation, this flag must be true if this index value\nshould be available for search in iSearch within the referencing sord.",
            "type": "boolean"
          },
          "excludeFromISearch": {
            "description": "If true a index value will not be searchable via iSearch. Does not affect the index search.",
            "type": "boolean"
          },
          "dynamicKeywordReference": {
            "description": "A script or plugin at the server can serve as the data source of a dynamic keyword list.\nThis\n value represents the name of that script or plugin. If the value is not empty, the client can\n request a list of available input values by calling the function\n {@link IXServicePortIF#checkoutKeywordsDynamic(ClientInfo, KeywordsDynamicInfo)}. In case of a\n plugin, this value starts with the Bundle-SymbolicName and can be optionally appended by a\n path. E.g. serverScriptName=\"com.partner.dkeywords/invoice-solution\". The path has to start\n with a forward slash and is passed to\n {@link de.elo.ix.client.plugin.DynamicKeywordEventsFactory#create}.<br>",
            "type": "string"
          },
          "subType": {
            "description": "This field can be used by clients to determine a subtype of the given type.\nFor the purpose of\n properly displaying a value there are subtypes defined at client side.<br>\n The server does not evaluate the subtype.",
            "type": "string"
          },
          "comment": {
            "description": "Quickinfo text for the attribute.",
            "type": "string"
          },
          "key": {
            "description": "The attribute identifier.",
            "type": "string"
          }
        }
      },
      "FindBackgroundThreadOptions": {
        "type": "object",
        "properties": {
          "userInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserInfo"
            }
          },
          "inclFinishedJobs": {
            "description": "Includes finished Jobs in the result. Defaults to false.",
            "type": "boolean"
          },
          "dateAfter": {
            "description": "Filter jobs started after this date.",
            "type": "string"
          },
          "dateBefore": {
            "description": "Filter jobs started before this date.",
            "type": "string"
          },
          "sortOrder": {
            "format": "int32",
            "description": "The order in which the results has to be sorted.",
            "type": "integer"
          },
          "guids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "inclFullInfo": {
            "description": "enables extended result information in the ProcessInfo member (if available)",
            "type": "boolean"
          },
          "inclActiveJobs": {
            "description": "Includes running Jobs in the result. Defaults to true.",
            "type": "boolean"
          }
        }
      },
      "CheckinDocOptions": {
        "description": "This class defines options for the API function checkinDocBegin2.",
        "type": "object",
        "properties": {
          "keepIds": {
            "description": "If <tt>true<\/tt>, the DocVersion to check-in will use the ID and GUID you specify.\nIn order to\n only set the GUID, set the ID to 0.",
            "type": "boolean"
          }
        }
      },
      "Bitset": {
        "description": "This class is used in the scripting API of Indexserver and provides bit operations on 64 bit\nintegers. JavaScript does not support bit operations for 64 bit integers. The global context of\n the JavaScripts executed by Indexserver contain an object named Bitset which is an instance of\n this class.",
        "type": "object",
        "properties": {
          "v": {
            "description": "Internal 64 bit integer value",
            "type": "string"
          }
        }
      },
      "ListOfListOfString": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ListOfString"
        }
      },
      "BResult_1143177929": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/HashTag"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BResult_1116629552": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/PackageResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "FileDataZ": {
        "description": "Member selector for class FileData.",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants from the DocMaskC class.",
            "type": "string"
          }
        }
      },
      "MasterDataE": {
        "description": "Enumeration for the master data",
        "type": "object",
        "properties": {
          "COLORS": {
            "description": "Include colors",
            "$ref": "#/components/schemas/MasterDataE"
          },
          "KEYWORDING_FORMS": {
            "description": "Include all keywording forms",
            "$ref": "#/components/schemas/MasterDataE"
          },
          "ENTRY_TYPES": {
            "description": "Include entry type",
            "$ref": "#/components/schemas/MasterDataE"
          },
          "ORGANIZATIONAL_UNITS": {
            "description": "Include all organizational units",
            "$ref": "#/components/schemas/MasterDataE"
          },
          "USERS": {
            "description": "Include all users",
            "$ref": "#/components/schemas/MasterDataE"
          },
          "INDEX_FIELD_TEMPLATES": {
            "description": "Include all index field templates",
            "$ref": "#/components/schemas/MasterDataE"
          },
          "KEYWORD_LISTS": {
            "description": "Include keyword lists",
            "$ref": "#/components/schemas/MasterDataE"
          }
        }
      },
      "CheckoutSubstitutionsInfo": {
        "description": "This object is used to define which substitutions should be returned by\n{@link IXServicePortIF#checkoutSubstitutions}.\n \n <p>\n The elements in one list are always search with an OR operation. If various list are provided,\n they are connected using OR (default) (set {@link #andOperator} to true to use AND operator)\n <\/p>",
        "type": "object",
        "properties": {
          "substitutionGuids": {
            "description": "GUID of the substitutions to checkout.",
            "$ref": "#/components/schemas/ListOfString"
          },
          "substituteIds": {
            "description": "Returns all substitutions this users substitutes.\n(This user is set as\n {@link Substitution#substituteId})",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "creatorNames": {
            "description": "Returns all substitutions this users created.\n(This user is set as\n {@link Substitution#creatorId})",
            "$ref": "#/components/schemas/ListOfString"
          },
          "userIds": {
            "description": "Returns all substitutions of this users substitutes where this user is set as\n{@link Substitution#userId}.",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "userNames": {
            "description": "Returns all substitutions of this users where this user is set as {@link Substitution#userId}.",
            "$ref": "#/components/schemas/ListOfString"
          },
          "creatorIds": {
            "description": "Returns all substitutions this users created.\n(This user is set as\n {@link Substitution#creatorId})",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "substituteNames": {
            "description": "Returns all substitutions this users substitutes.\n(This user is set as\n {@link Substitution#substituteId})",
            "$ref": "#/components/schemas/ListOfString"
          },
          "includeSubstitutesGroups": {
            "description": "Include substitutions where {@link Substitution#substituteId} is set to the provided\nsubstitutes or any of their groups.",
            "type": "boolean"
          },
          "andOperator": {
            "description": "Search for elements of different lists with OR operator (default) or AND (set value to true)",
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteUsers": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BResult_1112009864": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyInfo"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "MapDomain": {
        "description": "This class contains the information of a map domain.\nA map is a set of key value pairs and can be\n addressed by a map domain name and a map ID. All maps with the same domain name are stored in the\n same database tables. These maps are distinguished by their ID, which can be an arbitary string.\n A map can be attached to a Sord object by setting the map ID to the Sord ID. Attached maps are\n deleted, when the Sord object is finally deleted. Furthermore they can be copied with the Sord\n object.",
        "type": "object",
        "properties": {
          "replicate": {
            "description": "This value is true, if the map items should be replicated with the associated Sord object.",
            "type": "boolean"
          },
          "name": {
            "description": "Map domain name.\nThis can be a user definined name or one of the predefined names in\n MapDomainC. The value is internally used as part of a database table name. Thus only\n alphanumeric characters are allowed.",
            "type": "string"
          },
          "copy": {
            "description": "This value is true, if the map items should be copied when the associated Sord object is\ncopied.",
            "type": "boolean"
          },
          "history": {
            "description": "This value is true, if a history should be maintained for map items.\nA history is always\n available for {@link MapDomainC#DOMAIN_SORD} and {@link MapDomainC#DOMAIN_WORKFLOW_ACTIVE}.",
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinActivity": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "act": {
            "$ref": "#/components/schemas/Activity"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "FindByRegisteredFunction": {
        "type": "object",
        "properties": {
          "args": {
            "$ref": "#/components/schemas/Any"
          },
          "functionName": {
            "type": "string"
          }
        }
      },
      "ArrayOfAclItem": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AclItem"
        }
      },
      "BRequest_IXServicePortIF_deleteKeys": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ObjChangeC": {
        "description": "<p>Bit constants for members of ObjChange<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbObjId": {
            "description": "DB column: chgobjid",
            "type": "string"
          },
          "mbTStamp": {
            "description": "DB column: chgtstamp",
            "type": "string"
          },
          "mbCode": {
            "description": "DB column: chgcode",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbParam2": {
            "description": "DB column: chgparam2",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "DB column: chgtstamp",
            "type": "integer"
          },
          "lnParam2": {
            "format": "int32",
            "description": "DB column: chgparam2",
            "type": "integer"
          },
          "lnObjId": {
            "format": "int32",
            "description": "DB column: chgobjid",
            "type": "integer"
          },
          "mbUser": {
            "description": "DB column: chguser",
            "type": "string"
          },
          "mbParam": {
            "description": "DB column: chgparam",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteDocMaskLineTemplates": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "groups": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "HashTagZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string"
          }
        }
      },
      "UserName": {
        "description": "<p>\nContains user name, ID and type (group or user).\n <\/p>\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "flags2": {
            "format": "int32",
            "description": "User rights, second set. This member is a bit set of AccessC.FLAGS2_* constants.",
            "type": "integer"
          },
          "name": {
            "description": "User name.",
            "type": "string"
          },
          "flags": {
            "format": "int32",
            "description": "User rights. To detect a suspended user, test bit AccessC.FLAG_NOLOGIN.",
            "type": "integer"
          },
          "guid": {
            "description": "User GUID.",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "User ID",
            "type": "integer"
          },
          "type": {
            "format": "int32",
            "description": "User type.",
            "type": "integer"
          }
        }
      },
      "MapItemC": {
        "description": "<p>Bit constants for members of MapItem<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnValue": {
            "format": "int32",
            "description": "DB column: mapvalue",
            "type": "integer"
          },
          "lnContentType": {
            "format": "int32",
            "description": "Column length: Content Type.\nDB column: mapcontenttype",
            "type": "integer"
          },
          "mbId": {
            "description": "DB column: mapid",
            "type": "string"
          },
          "mbKey": {
            "description": "DB column: mapkey",
            "type": "string"
          },
          "mbValue": {
            "description": "DB column: mapvalue",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnKey": {
            "format": "int32",
            "description": "DB column: mapkey",
            "type": "integer"
          },
          "lnBlobData": {
            "format": "int32",
            "description": "Column length: Blob data.\nDB column: mapblob",
            "type": "integer"
          },
          "mbBlobData": {
            "description": "Member bit: Blob data.\nDB column: mapblob",
            "type": "string"
          },
          "mbContentType": {
            "description": "Member bit: Content Type.\nDB column: mapcontenttype",
            "type": "string"
          },
          "lnId": {
            "format": "int32",
            "description": "DB column: mapid",
            "type": "integer"
          }
        }
      },
      "FileDataC": {
        "description": "Member constants for class FileData.",
        "type": "object",
        "properties": {
          "mbDataStream": {
            "$ref": "#/components/schemas/FileDataZ"
          },
          "lnContentType": {
            "format": "int32",
            "type": "integer"
          },
          "CONTENT_TYPE_IMAGE_X_ICON": {
            "description": "Mime type image/x-icon.",
            "type": "string"
          },
          "mbDataArray": {
            "$ref": "#/components/schemas/FileDataZ"
          },
          "CONTENT_TYPE_IMAGE_BMP": {
            "description": "Mime type image/bmp.",
            "type": "string"
          },
          "mbStream": {
            "type": "string"
          },
          "mbData": {
            "type": "string"
          },
          "MAX_BLOB_LENGTH": {
            "description": "Maximum length of BLOB fields. This value is set to 1MB.",
            "type": "string"
          },
          "CONTENT_TYPE_IMAGE_JPEG": {
            "description": "Mime type image/jpeg.",
            "type": "string"
          },
          "CONTENT_TYPE_IMAGE_X_ICO": {
            "description": "Mime type image/x-ico.",
            "type": "string"
          },
          "mbContentType": {
            "type": "string"
          },
          "CONTENT_TYPE_IMAGE_PNG": {
            "description": "Mime type image/png.",
            "type": "string"
          }
        }
      },
      "KeywordListC": {
        "description": "<p>Bit constants for members of KeywordList<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbNameTranslationKey": {
            "description": "Member bit: Translation-keyword for {@link KeywordList#displayName}.\nDB column: swlnametrkey",
            "type": "string"
          },
          "mbId": {
            "description": "Member bit: ID\nDB column: swlgroupid",
            "type": "string"
          },
          "mbPackageName": {
            "description": "Member bit: Package name of KeywordList\nDB column: packagename",
            "type": "string"
          },
          "mbTStamp": {
            "description": "Member bit: Last modified, ISO - UTC Read-only.\nDB column: swltstamp",
            "type": "string"
          },
          "mbLockId": {
            "description": "Member bit: ID of the user who holds a lock on the keyword list.\nDB column: swllock",
            "type": "string"
          },
          "mbUserId": {
            "description": "Member bit: ID of the user that has written the keyword list at last. Read-only.\nDB column: swluser",
            "type": "string"
          },
          "lnId": {
            "format": "int32",
            "description": "Column length: ID\nDB column: swlgroupid",
            "type": "integer"
          },
          "lnGuid": {
            "format": "int32",
            "description": "Column length: GUID\nDB column: swlguid",
            "type": "integer"
          },
          "mbTStampSync": {
            "description": "Member bit: Timestamp of this object's last export by the replication.\nDB column: swltstampsync",
            "type": "string"
          },
          "lnNameTranslationKey": {
            "format": "int32",
            "description": "Column length: Translation-keyword for {@link KeywordList#displayName}.\nDB column: swlnametrkey",
            "type": "integer"
          },
          "mbStatus": {
            "description": "DB column: swlstatus",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbDisplayName": {
            "description": "Member bit: The display name of the keyword. This value is displayed in the label before the edit field.\nIt\n DB column: swldisplayname",
            "type": "string"
          },
          "mbGuid": {
            "description": "Member bit: GUID\nDB column: swlguid",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "Column length: Last modified, ISO - UTC Read-only.\nDB column: swltstamp",
            "type": "integer"
          },
          "lnTStampSync": {
            "format": "int32",
            "description": "Column length: Timestamp of this object's last export by the replication.\nDB column: swltstampsync",
            "type": "integer"
          },
          "lnDisplayName": {
            "format": "int32",
            "description": "Column length: The display name of the keyword. This value is displayed in the label before the edit field.\nIt\n DB column: swldisplayname",
            "type": "integer"
          },
          "lnPackageName": {
            "format": "int32",
            "description": "Column length: Package name of KeywordList\nDB column: packagename",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinConfigFilesEnd": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "configFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigFile"
            }
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "SetOfObject": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "SubstitutionC": {
        "description": "<p>\nBit constants for members of {@link Substitution}\n <\/p>",
        "type": "object",
        "properties": {
          "mbAll": {
            "description": "All Substitution members.",
            "$ref": "#/components/schemas/SubstitutionZ"
          },
          "mbSubstituionPeriods": {
            "description": "Member bit to select {@link Substitution#substitutionPeriods}",
            "type": "string"
          },
          "mbStatus": {
            "description": "Member bit to select {@link Substitution#status}",
            "type": "string"
          },
          "mbUserName": {
            "description": "Member bit to select {@link Substitution#userName}",
            "type": "string"
          },
          "mbCreatorName": {
            "description": "Member bit to select {@link Substitution#creatorName}",
            "type": "string"
          },
          "mbLockName": {
            "description": "Member bit to select {@link Substitution#lockName}",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "Select all members",
            "type": "string"
          },
          "mbSubstituteName": {
            "description": "Member bit to select {@link Substitution#substituteName}",
            "type": "string"
          },
          "mbSubstituteType": {
            "description": "Member bit to select {@link Substitution#substituteType}",
            "type": "string"
          }
        }
      },
      "FioFinishOptions": {
        "type": "object",
        "properties": {
          "jobState": {
            "$ref": "#/components/schemas/JobState"
          }
        }
      },
      "BRequest_IXServicePortIF_setServerInfoDM": {
        "type": "object",
        "properties": {
          "serverInfo": {
            "$ref": "#/components/schemas/ServerInfoDM"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_SystemInformation_countDocsInStorePath": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "si": {
            "$ref": "#/components/schemas/SystemInfo"
          }
        }
      },
      "BResult_202623104": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ESStatusObj"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BResult_52201250": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/BackupPurgeStatus"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutTranslateTerms": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "termIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "DeleteOrgUnitInfo": {
        "description": "Objects of this class specify the selection criteria for <code>deleteOrgUnits<\/code>.\nOU IDs or\n names can be set or both.\n \n <p>\n Copyright: Copyright (c) 2013\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ids": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      },
      "ListOfServer": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Server"
        }
      },
      "BRequest_IXServicePortIF_checkoutKeywords": {
        "type": "object",
        "properties": {
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "kwids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "keywordZ": {
            "$ref": "#/components/schemas/KeywordZ"
          }
        }
      },
      "ArrayListOfSearchFieldE": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SearchFieldE"
        }
      },
      "EloIxOpt_oldC": {
        "description": "<p>Bit constants for members of EloIxOpt_old<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbOptVal": {
            "description": "DB column: optval",
            "type": "string"
          },
          "mbRemark": {
            "description": "DB column: remark",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnOptVal": {
            "format": "int32",
            "description": "DB column: optval",
            "type": "integer"
          },
          "lnRemark": {
            "format": "int32",
            "description": "DB column: remark",
            "type": "integer"
          },
          "mbOptNo": {
            "description": "DB column: optno",
            "type": "string"
          }
        }
      },
      "LoginScriptOptionsC": {
        "description": "Constants for {@link LoginScriptOptions}.",
        "type": "object",
        "properties": {
          "CLIENT_NAME_INTEGRATION": {
            "description": "Integration client.",
            "type": "string"
          },
          "CLIENT_NAME_LIMITED_WEB_CLIENT_D": {
            "description": "Web Client with limited access for special customer project.",
            "type": "string"
          },
          "CLIENT_NAME_WINDOWS_CLIENT": {
            "description": "Windows Client",
            "type": "string"
          },
          "CLIENT_NAME_UNKNOWN": {
            "description": "Constant for the name of unknown type.",
            "type": "string"
          },
          "CLIENT_NAME_ELOAPP": {
            "description": "Constant for the name ELO applications.",
            "type": "string"
          },
          "CLIENT_NAME_DMS_DESKTOP": {
            "description": "DMS Desktop",
            "type": "string"
          },
          "CLIENT_NAME_MOBILE_CLIENT": {
            "description": "Mobile client (Android, iOS)",
            "type": "string"
          },
          "CLIENT_NAME_DESKTOP_PLUS": {
            "description": "Desktop Plus.",
            "type": "string"
          },
          "CLIENT_NAME_PARTNERAPP": {
            "description": "Constant for the name of partner applications.",
            "type": "string"
          },
          "CLIENT_NAME_TASK": {
            "description": "Task client (a.k.a. Workflow Client).",
            "type": "string"
          },
          "CLIENT_NAME_WEBCLIENT": {
            "description": "Constant for the name of the Web and Mobile Client.",
            "type": "string"
          },
          "CLIENT_NAME_DESKTOP_LIGHT": {
            "description": "Desktop Plus.",
            "type": "string"
          },
          "CLIENT_NAME_FULLCLIENT": {
            "description": "Constant for the name of the Windows/Java Client.",
            "type": "string"
          },
          "CLIENT_NAME_WORKFLOW_SAP": {
            "description": "Workflow Client für SAP ECM.",
            "type": "string"
          }
        }
      },
      "NoteZ": {
        "description": "This class encapsulates the constants of the NoteC class.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants from the NoteC class.",
            "type": "string"
          }
        }
      },
      "Alert": {
        "description": "Alerts are messages shown in the alert tab of ELO client.",
        "type": "object",
        "properties": {
          "destName": {
            "description": "User name of the recipient.",
            "type": "string"
          },
          "timeIso": {
            "description": "ISO date when the alert was created. Timezone is related to ClientInfo.timezone.",
            "type": "string"
          },
          "objId": {
            "format": "int32",
            "description": "Object ID.\nDB column: objid",
            "type": "integer"
          },
          "extra2": {
            "format": "int32",
            "description": "Extra data 2.\nDB column: extra2",
            "type": "integer"
          },
          "memo": {
            "description": "Comment text.\nDB column: alertmemo",
            "type": "string"
          },
          "source": {
            "format": "int32",
            "description": "User ID of the sender.\nDB column: source",
            "type": "integer"
          },
          "sourceName": {
            "description": "User name of the sender.",
            "type": "string"
          },
          "extra1": {
            "format": "int32",
            "description": "Extra data 1.\nDB column: extra1",
            "type": "integer"
          },
          "time": {
            "format": "int32",
            "description": "Date and time when the alert was created.\nDB column: alerttime",
            "type": "integer"
          },
          "dest": {
            "format": "int32",
            "type": "integer"
          },
          "type": {
            "format": "int32",
            "description": "Alert type.\nDB column: alerttype",
            "type": "integer"
          }
        }
      },
      "NotOperator": {
        "description": "This operator contains a single QueryObject which is excluded from the search.\nThis means, a\n document is returned if the QueryObject is not present in the document.",
        "type": "object",
        "properties": {
          "queryFilter": {
            "description": "A negated QueryObject.",
            "$ref": "#/components/schemas/QueryFilter"
          }
        }
      },
      "AutoFilingOptions": {
        "description": "Options for function\n{@link IXServicePortIF#evalAutoFiling(ClientInfo, String, Sord, AutoFilingOptions)}",
        "type": "object",
        "properties": {
          "autoFilingDefinition": {
            "description": "Auto filing index string.\nIf this option is set, paramter <code>maskId<\/code> in\n {@link IXServicePortIF#evalAutoFiling(ClientInfo, String, Sord, AutoFilingOptions)} is ignored.",
            "type": "string"
          }
        }
      },
      "BResult_776454091": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "SubstitutionZ": {
        "description": "This class encapsulates the constants of {@link SubstitutionC}",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants from {@link SubstitutionC}.",
            "type": "string"
          }
        }
      },
      "ListOfSubstitutionPeriod": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SubstitutionPeriod"
        }
      },
      "BResult_1118179461": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ListOfPluginInfo"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "AutoFilingResult": {
        "description": "Contains the archive destination returned by a call to\n{@link IXServicePortIF#evalAutoFiling(ClientInfo, String, Sord, AutoFilingOptions)}.",
        "type": "object",
        "properties": {
          "parentIds": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "pathsAsString": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BRequest_IXServicePortIF_createKey": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ListOfSubsInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SubsInfo"
        }
      },
      "BRequest_IXServicePortIF_deleteKeywords": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "kwids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "NoteTemplateC": {
        "description": "Constants for class NoteTemplate",
        "type": "object",
        "properties": {
          "mbAll": {
            "description": "Elementselector: mbAllMembers",
            "$ref": "#/components/schemas/NoteTemplateZ"
          },
          "RAW_STAMPINFO_SEPARATOR": {
            "description": "Separates the values of the name and text in the raw data representation.",
            "type": "string"
          },
          "mbId": {
            "description": "Member bit: id",
            "type": "string"
          },
          "mbNoteText": {
            "description": "Member bit: noteText",
            "type": "string"
          },
          "mbUserId": {
            "description": "Member bit: UserId",
            "type": "string"
          },
          "mbNoteImage": {
            "description": "Member bit: noteImage",
            "type": "string"
          },
          "mbName": {
            "description": "Member bit: name",
            "type": "string"
          },
          "lnText": {
            "format": "int32",
            "description": "Length of text in class NoteText.",
            "type": "integer"
          },
          "mbMin": {
            "description": "Elementselector: mbId",
            "$ref": "#/components/schemas/NoteTemplateZ"
          },
          "PLACEHOLDER_DATE": {
            "description": "Placeholder for date. This constant can be used in NoteTemplate.textInfo.\ntext as a placeholder\n for the current date.",
            "type": "string"
          },
          "lnName": {
            "format": "int32",
            "description": "Length of note template name.",
            "type": "integer"
          },
          "RAW_ITEM_SEPARATOR": {
            "description": "Separates the values in the raw data representation.",
            "type": "string"
          },
          "PLACEHOLDER_USERNAME": {
            "description": "Placeholder for user name. This constant can be used in NoteTemplate.textInfo.\ntext as a\n placeholder for the current user name.",
            "type": "string"
          },
          "PLACEHOLDER_TIME": {
            "description": "Placeholder for time. This constant can be used in NoteTemplate.textInfo.\ntext as a placeholder\n for the current time.",
            "type": "string"
          },
          "USERID_ALL": {
            "description": "Read/write note template visible for all users",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "Member bit: all members",
            "type": "string"
          },
          "mbAcl": {
            "description": "Member bit: acl, aclItems",
            "type": "string"
          },
          "RAW_SUBITEM_SEPARATOR": {
            "description": "Separates the values of the subitems in the raw data representation.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinWorkflowTemplate": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "wfZ": {
            "$ref": "#/components/schemas/WFDiagramZ"
          },
          "wf": {
            "$ref": "#/components/schemas/WFDiagram"
          }
        }
      },
      "ConfigFileC": {
        "description": "Constants for the ConfigFile class. These are used for accessing server directories.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "mbAll": {
            "description": "Constant object for mbAllMembers.",
            "$ref": "#/components/schemas/ConfigFileZ"
          },
          "mbNoFileData": {
            "description": "Constant object for mbAllmembers without file data.",
            "$ref": "#/components/schemas/ConfigFileZ"
          },
          "CHECKOUT": {
            "description": "Server side checkout directory.",
            "type": "string"
          },
          "VIEWER_POSTBOX": {
            "description": "RESERVED",
            "type": "string"
          },
          "mbFileData": {
            "description": "Member bit: fileData",
            "type": "string"
          },
          "mbName": {
            "description": "Member bit: name",
            "type": "string"
          },
          "ELO_SCRIPTS": {
            "description": "Directory for scripts.",
            "type": "string"
          },
          "INIT_DATA": {
            "description": "Directory of initialization data.",
            "type": "string"
          },
          "POSTBOX": {
            "description": "Directory of Intray/postbox.",
            "type": "string"
          },
          "mbLastModified": {
            "description": "Member bit: lastModified",
            "type": "string"
          },
          "mbUrl": {
            "description": "Member bit: URL",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "Member bit set: all members.",
            "type": "string"
          },
          "TEMPLATE": {
            "description": "Old document template directory (ELO 5.0).",
            "type": "string"
          },
          "mbSize": {
            "description": "Member bit: size",
            "type": "string"
          },
          "COLD": {
            "description": "Directory for COLD background files.",
            "type": "string"
          }
        }
      },
      "ArchivingModeC": {
        "type": "object",
        "properties": {
          "dummy": {
            "format": "int32",
            "type": "integer"
          },
          "READWRITE": {
            "format": "int32",
            "description": "Version flag: no versioning.",
            "type": "integer"
          },
          "VERSION": {
            "format": "int32",
            "description": "Version flag: version controlled.",
            "type": "integer"
          },
          "NONE": {
            "format": "int32",
            "type": "integer"
          },
          "READONLY": {
            "format": "int32",
            "description": "Version flag: read only.",
            "type": "integer"
          },
          "DEFAULT": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "ListOfIndexSearchStringValue": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/IndexSearchStringValue"
        }
      },
      "KeywordsDynamicInfo": {
        "description": "This Class contains parameters for the IX call\n{@link IXServicePortIF#checkoutKeywordsDynamic(ClientInfo, KeywordsDynamicInfo)} .\n <p>\n There are two ways to execute the script for dynamic keyword lists. According to the parameter in\n this class, the one way or the other is chosen. The first way is to specify\n {@link KeywordsDynamicInfo#sord} and {@link KeywordsDynamicInfo#maskLineFocus}. Then, the IX\n passes these parameters to the script via the script-function open(ec, sord, fieldName). The\n other parameters will be overwritten by <code>null<\/code> and completely ignored. The other way\n is to set the fields {@link KeywordsDynamicInfo#mapData},\n {@link KeywordsDynamicInfo#mapLineFocus} and {@link KeywordsDynamicInfo#mapScriptName}. In this\n case, the IX passes these parameters to the scripting function openMap(ec, data, fieldName). To\n achieve this, <code>sord<\/code> as well as <code>maskLineFocus<\/code> must be <code>null<\/code>.\n <\/p>",
        "type": "object",
        "properties": {
          "ordinalFocus": {
            "format": "int32",
            "description": "<p>\nOnly for sords with data organization based on aspects. If aspectAssocFocus has a cardinality\n of {@link #Cardinality.MANDATORY_MANY} or {@link #Cardinality.OPTIONAL_MANY}, this value can\n optionally be given to set the focus to a particular number within the aspectObjects regarding\n to the index within the sords aspectObjectArray of the given aspect association.\n <\/p>\n <p>\n If this value is positive or equals to zero, this value is passed to the script to execute.\n Ignoring this value in the script is a valid use case. This value defaults to -1 which means\n \"no focus on a particular number\".\n <\/p>",
            "type": "integer"
          },
          "maskLineFocus": {
            "description": "<p>\nOnly for sords with data organization based on objkeys. At the client, set this value to the\n mask line that currently has the focus. This value determines the server script to be executed.\n The server only reads the members maskId and id. For the server-side processing necessary\n residual values are read from the database.\n <\/p>\n <p>\n The focused mask line is passed to the script to execute. Ignoring this value in the script is\n a valid use case.\n <\/p>",
            "$ref": "#/components/schemas/DocMaskLine"
          },
          "mapData": {
            "description": "Represents the input data of a form.\n<p>\n The script to execute uses the values in this map to filter the resulting data set.\n <\/p>",
            "$ref": "#/components/schemas/MapToString"
          },
          "mapLineFocus": {
            "description": "Represents the id of a field in a form.",
            "type": "string"
          },
          "mapScriptName": {
            "description": "Determines the script to execute.\n<p>\n This value has only an effect if sord and maskLineFocus are set to null. Setting this value\n requires to set the values mapLineFocus and mapData also.\n <\/p>",
            "type": "string"
          },
          "sord": {
            "description": "<p>\nThis value contains data gathered by the client. The contents of sord will be given to the\n script to execute.\n <\/p>",
            "$ref": "#/components/schemas/Sord"
          },
          "aspectAssocFocus": {
            "description": "<p>\nOnly for sords with data organization based on aspects. At the client, set this value to the\n aspect association being currently in focus. This value determines (together with field\n aspectLineFocus) the server script to be executed. The server only reads the members aspectId\n and name and determines the mask this aspect association is contained in. For the server-side\n processing necessary residual values are read from the database.\n <\/p>\n <p>\n The focused aspect association is passed to the script to execute. Ignoring this value in the\n script is a valid use case.\n <\/p>",
            "$ref": "#/components/schemas/AspectAssoc"
          },
          "aspectLineFocus": {
            "description": "<p>\nOnly for sords with data organization based on aspects. At the client, set this value to the\n aspect line being currently in focus. This value determines (together with field\n aspectAssocFocus) the server script to be executed. The server only reads the members aspectId\n and key. For the server-side processing necessary residual values are read from the database.\n <\/p>\n <p>\n The focused aspect line is passed to the script to execute. Ignoring this value in the script\n is a valid use case.\n <\/p>",
            "$ref": "#/components/schemas/AspectLine"
          }
        }
      },
      "ConfigFileZ": {
        "description": "This class encapsulates the constants of ConfigFileC.",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants of the ConfigFileC class.",
            "type": "string"
          }
        }
      },
      "ForwardSubstitutionInfo": {
        "description": "Forward a substitution from the its current substitute to a new substitute.\n<p>\n A substitution can either be forwarded or transfered.\n <\/p>\n <p>\n <b>Forward a substitution<\/b>: The original substitution is not altered. An additional\n {@link Substitution} object is created by copying the original one and setting the new\n substitute.<br>\n <ul>\n <li>If {@link SubstitutionSettings#canBeActivatedManually} is set to <code>true<\/code>, an\n arbitrary number of SubstitutionPeriods (also 0) can be provided. The original ones are replaced\n with the new ones.\n <li>If {@link SubstitutionSettings#canBeActivatedManually} is set to <code>false<\/code>, all\n provided SubstitutionPeriods must be sub-periods of the original ones.\n <\/ul>\n Set {@link #transferSubstitution} to false to forward a substitution.\n <\/p>\n <p>\n <b>Transfer a substitution<\/b>: A new {@link Substitution} object is created by copying it from\n the original one, only replacing the {@link Substitution#substituteId} by the provided new\n substitute. The original substitution is deleted. Set {@link #transferSubstitution} to true to\n transfer a substitution.\n <\/p>",
        "type": "object",
        "properties": {
          "newSubstituteName": {
            "description": "<p>\nUser name of the new substitute.\n <\/p>\n <p>\n {@link #newSubstituteId} is ignored if this member is set.\n <\/p>",
            "type": "string"
          },
          "transferSubstitution": {
            "description": "Define if the substitution should be forwarded or transfered.\n<\/p>",
            "type": "boolean"
          },
          "substitutionGuid": {
            "description": "GUID of substitution to be forwarded or transfered.",
            "type": "string"
          },
          "newSubstituteId": {
            "format": "int32",
            "description": "<p>\nId of the new substitute.\n <\/p>\n <p>\n This value is ignored if {@link #newSubstituteName} is set.\n <\/p>",
            "type": "integer"
          },
          "substitutionPeriods": {
            "description": "<p>\nNew substitution periods is a substitution if forwarded.\n <\/p>\n <p>\n Must be set if a substitution is forwarded (set {@link #transferSubstitution} to false) and is\n ignored if a substitution if transfered (set {@link #transferSubstitution} to true)\n <\/p>",
            "$ref": "#/components/schemas/ListOfSubstitutionPeriod"
          }
        }
      },
      "ESStatusObj": {
        "description": "Calling checkoutEsStatus returns this object to inform about the current status of connection to\nElasticsearch and running processes.",
        "type": "object",
        "properties": {
          "runningUpdaters": {
            "description": "List of all IXs with an active updater process. It returns the IX ID and its progress percent.",
            "$ref": "#/components/schemas/MapToString"
          },
          "runningReindexers": {
            "description": "List of all IXs with an active reindex process. It returns the IX ID and its progress percent.",
            "$ref": "#/components/schemas/MapToString"
          },
          "esConnection": {
            "description": "Is this IX connected to the Elasticsearch server.",
            "type": "boolean"
          },
          "lastExceptionReindexer": {
            "description": "Last exception of reindexer of this IX",
            "type": "string"
          },
          "lastExceptionUpdater": {
            "description": "Last exception of updater of this IX",
            "type": "string"
          }
        }
      },
      "HtCloudInfo": {
        "description": "Currently unused.",
        "type": "object"
      },
      "ArrayOfUserName": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserName"
        }
      },
      "BRequest_IXServicePortIF_findNextSords": {
        "type": "object",
        "properties": {
          "searchId": {
            "type": "string"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "idx": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "StringValue": {
        "description": "Class to commit a text value to iSearch via QueryFilter.",
        "type": "object"
      },
      "Subscription": {
        "description": "This class describes a subscription. A user can subscribe for changes to an object.\nCurrently,\n the only supported object type is a document feed. If the feed receives new comments,\n notification information is inserted into the database for the user. By calling\n FeedService.findFirstActions and setting FindActionsInfo.findNotifications=true, the user can\n search for her notifications.",
        "type": "object",
        "properties": {
          "createDateIso": {
            "description": "Create date of the subscription.",
            "type": "string"
          },
          "watchGuid": {
            "description": "GUID of Object to be watched.\nThis is either a {@link de.elo.ix.client.feed.Feed#getGuid()},\n {@link de.elo.ix.client.feed.Action#getGuid()} or\n {@link de.elo.ix.client.feed.HashTag#getHstgGuid()}.",
            "type": "string"
          },
          "userGuid": {
            "description": "GUID of user who registered the subscription.",
            "type": "string"
          }
        }
      },
      "BResult_1552114559": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/KeywordsDynamicResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BResult_341056676": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/Document"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_getServerInfoDM": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "HashSetOfHashTag": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/HashTag"
        }
      },
      "BRequest_IXServicePortIF_collectMapDomains": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ProcessInfoC": {
        "description": "Constants class for the ProcessInfo class.\nErrors: The error modes are ordered by increasing failure tolerance. In most cases a tree walk\n will traverse nodes in prefix mode except scripts, that may have an user defined processing\n position, so the operational success of a given node directly influences further processing.\n ERRORMODE_ALL, the zero failure tolerance, stops the job (nearly) immediately, while\n ERRORMODE_SKIP_SUBTREE just skips subtree traversals, but continues with lists or siblings. If\n you pass ERRORMODE_SKIP_PROCINFO the sequence of ProcessInfo members will be executed completely,\n whether errors occur or not. The most tolerant mode is ERRORMODE_SKIP_PROCINFO where only errors\n impeding further traversing stop the job.\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "DELSTATUS_DELETED": {
            "format": "int32",
            "description": "filter ony deleted SORDs.",
            "type": "integer"
          },
          "ERRORMODE_SKIP_SUBTREE": {
            "format": "int32",
            "description": "Stop the subtree processing (processTrees only), but continue with list elements respectively\nsiblings.",
            "type": "integer"
          },
          "DELSTATUS_ALL": {
            "format": "int32",
            "description": "Do not filter by SORD status.",
            "type": "integer"
          },
          "ERRORMODE_CRITICAL_ONLY": {
            "format": "int32",
            "description": "Stop only on non-recoverable errors.",
            "type": "integer"
          },
          "ERRORMODE_SKIP_PROCINFO": {
            "format": "int32",
            "description": "Stop the ProcessInfo sequence for the current Node.",
            "type": "integer"
          },
          "DELSTATUS_VALID": {
            "format": "int32",
            "description": "Filter only undeleted SORDs.",
            "type": "integer"
          },
          "ERRORMODE_ALL": {
            "format": "int32",
            "description": "Processing will be stopped when an error occurs, regardless of the error type.",
            "type": "integer"
          },
          "PROCMSGMAX": {
            "format": "int32",
            "description": "Maximum allowed amount of error messages.",
            "type": "integer"
          }
        }
      },
      "FilterAggregationResult": {
        "description": "The result object of a filter aggregation.\n<br>\n It consists mainly of inner aggregations results (sub-aggregations).",
        "type": "object",
        "properties": {
          "docCount": {
            "description": "Number of documents belonging to the filter's criteria.",
            "type": "string"
          },
          "aggregations": {
            "description": "This Map contains the results of all defined sub-aggregations within this filter.",
            "$ref": "#/components/schemas/MapToAggregationResult"
          }
        }
      },
      "BResult_998509414": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/OcrResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_ConfigService_deleteConfiguration2": {
        "type": "object",
        "properties": {
          "deleteInfo": {
            "$ref": "#/components/schemas/DeleteConfigInfo"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_PackageService_createPackage": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "nameOrGuid": {
            "type": "string"
          }
        }
      },
      "CheckoutWorkflowHistoryResult": {
        "description": "This class contains the results returned by the function checkoutWorkflowHistory.",
        "type": "object",
        "properties": {
          "nodeHistories": {
            "description": "Map of the node histories. Node ID is the key.",
            "$ref": "#/components/schemas/MapToArrayListOfWFNodeHistory"
          }
        }
      },
      "DocMaskLineDataC": {
        "description": "<p>Bit constants for members of DocMaskLine<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbLKey": {
            "description": "DB column: linelkey",
            "type": "string"
          },
          "mbNameTranslationKey": {
            "description": "Member bit: Translation-keyword for {@link DocMaskLine#name}.\nDB column: linebeztrkey",
            "type": "string"
          },
          "lnValidateExpression": {
            "format": "int32",
            "description": "Column length: RegEx to validate user input for entry.\nDB column: validateexpression",
            "type": "integer"
          },
          "lnComment": {
            "format": "int32",
            "description": "DB column: linecomment",
            "type": "integer"
          },
          "lnCommentTranslationKey": {
            "format": "int32",
            "description": "Column length: Translation-keyword for {@link DocMaskLine#comment}.\nDB column: linecommenttrkey",
            "type": "integer"
          },
          "mbRawFlags": {
            "description": "DB column: lineflags",
            "type": "string"
          },
          "mbName": {
            "description": "DB column: linebez",
            "type": "string"
          },
          "lnDefaultValue": {
            "format": "int32",
            "description": "Column length: This value is assigned to the ObjKey.data element for a new Sord object.\nDB column: linedefault",
            "type": "integer"
          },
          "mbMin": {
            "description": "DB column: linemin",
            "type": "string"
          },
          "mbAllowedReferencedMaskIdsRaw": {
            "description": "Member bit: Specifies the {@link DocMask#id} allowed in a {@link DocMaskLineC#TYPE_RELATION}.\nDB column: allowedrefmaskids",
            "type": "string"
          },
          "lnNameTranslationKey": {
            "format": "int32",
            "description": "Column length: Translation-keyword for {@link DocMaskLine#name}.\nDB column: linebeztrkey",
            "type": "integer"
          },
          "lnName": {
            "format": "int32",
            "description": "DB column: linebez",
            "type": "integer"
          },
          "lnInternalAcl": {
            "format": "int32",
            "description": "Column length: Internal acl.\nDB column: lineacl",
            "type": "integer"
          },
          "mbInternalAcl": {
            "description": "Member bit: Internal acl.\nDB column: lineacl",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnKey": {
            "format": "int32",
            "description": "DB column: linekey",
            "type": "integer"
          },
          "mbValidateExpression": {
            "description": "Member bit: RegEx to validate user input for entry.\nDB column: validateexpression",
            "type": "string"
          },
          "mbMax": {
            "description": "DB column: linemax",
            "type": "string"
          },
          "mbId": {
            "description": "DB column: mlineno",
            "type": "string"
          },
          "mbCommentTranslationKey": {
            "description": "Member bit: Translation-keyword for {@link DocMaskLine#comment}.\nDB column: linecommenttrkey",
            "type": "string"
          },
          "mbKey": {
            "description": "DB column: linekey",
            "type": "string"
          },
          "lnServerScriptName": {
            "format": "int32",
            "description": "Column length: A script or plugin at the server can serve as the data source of a dynamic keyword list.\nThis\n DB column: linescript",
            "type": "integer"
          },
          "mbMaskId": {
            "description": "DB column: maskno",
            "type": "string"
          },
          "lnAllowedReferencedMaskIdsRaw": {
            "format": "int32",
            "description": "Column length: Specifies the {@link DocMask#id} allowed in a {@link DocMaskLineC#TYPE_RELATION}.\nDB column: allowedrefmaskids",
            "type": "integer"
          },
          "lnExternalData": {
            "format": "int32",
            "description": "Column length: External data. Can be used to store an arbitary string.\nDB column: lineext",
            "type": "integer"
          },
          "mbExternalData": {
            "description": "Member bit: External data. Can be used to store an arbitary string.\nDB column: lineext",
            "type": "string"
          },
          "mbServerScriptName": {
            "description": "Member bit: A script or plugin at the server can serve as the data source of a dynamic keyword list.\nThis\n DB column: linescript",
            "type": "string"
          },
          "mbTabIndex": {
            "description": "Member bit: This value represents the number of the tab, this line has to appear on.\nThe first tab's index\n DB column: linetab",
            "type": "string"
          },
          "mbDefaultValue": {
            "description": "Member bit: This value is assigned to the ObjKey.data element for a new Sord object.\nDB column: linedefault",
            "type": "string"
          },
          "mbRawType": {
            "description": "DB column: linetype",
            "type": "string"
          },
          "mbComment": {
            "description": "DB column: linecomment",
            "type": "string"
          }
        }
      },
      "ArrayOfIndexServerForArchive": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/IndexServerForArchive"
        }
      },
      "FindByType": {
        "description": "This class holds additional information for FindInfo, in order to restrict a search using\ndocument types. The default resolving sequence is ordered by the grade of restriction: <br>\n 1. typeIDs, typeNames, typeExtensions is the most specialised information, <br>\n 2. typeDocuments containing all document types (IDs, Names, Extensions), <br>\n 3. and typeStructures including all levels of structure elements. <br>\n 4. If none of the parameters above is valid, the complete restriction FindByType is omitted. <br>\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "typeStructures": {
            "description": "Include all structure elements",
            "type": "boolean"
          },
          "typeNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "typeDocuments": {
            "description": "Include all document types",
            "type": "boolean"
          },
          "typeExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "typeIDs": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutActivityProject": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "projectName": {
            "type": "string"
          }
        }
      },
      "BRequest_ConfigService_deleteConfiguration": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "BResult_333475674": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/HealthCheckInfos"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "NoteTemplateZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string"
          }
        }
      },
      "PhysDel": {
        "description": "This class represents one row in the database table physdel.\nThis table contains the guids of\n physically deleted objects. Those objects can be any objects with a guid: e.g. folders,\n documents, versions, users, workflows...",
        "type": "object",
        "properties": {
          "TStamp": {
            "description": "The object is deleted at this timestamp. Measured in the UTC time-zone.",
            "type": "string"
          },
          "TStampSync": {
            "description": "Timestamp of this object's last export by the replication.",
            "type": "string"
          },
          "guid": {
            "description": "GUID of deleted object.",
            "type": "string"
          },
          "type": {
            "format": "int32",
            "description": "Type of deleted object.",
            "type": "integer"
          }
        }
      },
      "CheckinReportInfo": {
        "description": "Objects of this class specify the selection criteria for <code>checkinReport<\/code>.\n<p>\n Copyright: Copyright (c) 2014\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object"
      },
      "QueryFilter": {
        "description": "<p>\nA QueryFilter is used to describe a value to search for in a document.\n <\/p>\n <p>\n It references a field in which should be searched and its value.\n <\/p>\n <p>\n There are other usecases, in which a QueryFilter is used to describe a certain field and its\n value is not needed and therefore ignored: To retrieve context terms and completions.\n <\/p>\n <p>\n <b>Usage:<\/b> Define where to search for the value by the parameters searchField and\n indexFieldKey. If the field you want to search in is defined in SearchFieldC, use one of the\n constants. In this case, the value of indexFieldKey is ignored.<br>\n If you want to search in an index field, set searchField = SearchFieldC.INDEXFIELD and provide\n its name in indexFieldKey. For a DocMask with data organization \"Aspect\" the indexFieldKey must\n contain the name of the aspectAssoc and the lineKey of the aspectLine separated by \"¶\". For a\n DocMask with data organization \"ObjKey\" or \"Table\" the indexFieldKey must contain the lineKey of\n the docMaskLine.\n <p>\n <b>Examples:<\/b>\n <ul>\n <li>Search for \"Hello World\" in the title:<br>\n <code>fieldType = SearchFieldC.TITLE; FilterValue = new StringValue(\"Hello World\"); fieldType = FieldTypeC.tokenized;<\/code>\n <li>Search for \"200\" in a numeric index line called NUMERICFIELD:<br>\n <code>fieldType = SearchFieldC.INDEXFIELD; docMaskLine=\"NUMERICFIELD\", FilterValue = new IntValue(200); fieldType = FieldTypeC.numeric;<\/code>\n <\/ul>\n <\/p>",
        "type": "object",
        "properties": {
          "searchField": {
            "description": "Provide the constant of the field to search in.\n<br>\n To search in a index field, set this to SearchFieldC.INDEXFIELD and provide its name in\n indexFieldKey.",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "indexFieldKey": {
            "description": "Provide the name of the index field here.\n<br>\n If searchField != SearchFieldC.INDEXFIELD, this value is ignored. If the associated docmask is\n of type DocMaskC.DATA_ORGANISATION_OBJKEYS or DATA_ORGANISATION_TABLE the value of this field\n should be the line key of the docMaskLine. If the associated docMask is of type\n DocMaskC.DATA_ORGANISATION_ASPECT the value of this field should be the name of the aspectAssoc\n followed by \"¶\" followed by the line key of the aspectLine, e.g. CUSTOMERADDRESS¶STREET.",
            "type": "string"
          },
          "docMaskLine": {
            "description": "Provide the name of the index field here.\n<br>\n If searchField != SearchFieldC.INDEXFIELD, this value is ignored.",
            "type": "string"
          },
          "boost": {
            "format": "float",
            "description": "Boost for calculated relevance.\n<br>\n A field can be boosted and therefore has a higher influence on the calculated relevance.<br>\n For more information, refere to <a href=\n 'https://www.elastic.co/guide/en/elasticsearch/guide/current/multi-query-strings.html#prioritising-clauses'>https://www.elastic.co/guide/en/elasticsearch/guide/current/multi-query-strings.html#prioritising-clauses<\/a>",
            "type": "number"
          },
          "value": {
            "description": "The value for the QueryFilter.",
            "$ref": "#/components/schemas/FilterValue"
          },
          "fieldType": {
            "description": "Define how to search for a value.\n<br>\n Options are tokenized, not tokenized, numeric, date.<br>\n The delivered FilterValue must match this fieldType, if not, an exception is thrown.<br>",
            "$ref": "#/components/schemas/FieldTypeE"
          }
        }
      },
      "WorkFlowNodeMatrix": {
        "description": "Helperclass to access the node matrix.",
        "type": "object",
        "properties": {
          "succ_11": {
            "format": "int32",
            "type": "integer"
          },
          "succ_10": {
            "format": "int32",
            "type": "integer"
          },
          "succ_13": {
            "format": "int32",
            "type": "integer"
          },
          "succ_12": {
            "format": "int32",
            "type": "integer"
          },
          "isNext": {
            "format": "int32",
            "description": "Contains 1, if this node is active.\nDB column: wf_is_next",
            "type": "integer"
          },
          "flowId": {
            "format": "int32",
            "description": "Workflow ID",
            "type": "integer"
          },
          "succ_9": {
            "format": "int32",
            "type": "integer"
          },
          "succOvertime": {
            "format": "int32",
            "description": "Id of successor node, which should be activated by the escalation.",
            "type": "integer"
          },
          "succ_5": {
            "format": "int32",
            "type": "integer"
          },
          "succ_6": {
            "format": "int32",
            "type": "integer"
          },
          "succ_7": {
            "format": "int32",
            "type": "integer"
          },
          "succ_8": {
            "format": "int32",
            "type": "integer"
          },
          "succ_1": {
            "format": "int32",
            "type": "integer"
          },
          "succ_2": {
            "format": "int32",
            "type": "integer"
          },
          "succ_3": {
            "format": "int32",
            "type": "integer"
          },
          "succ_4": {
            "format": "int32",
            "type": "integer"
          },
          "succ_0": {
            "format": "int32",
            "type": "integer"
          },
          "succ_19": {
            "format": "int32",
            "type": "integer"
          },
          "succ_18": {
            "format": "int32",
            "type": "integer"
          },
          "versionId": {
            "format": "int32",
            "description": "Version ID.",
            "type": "integer"
          },
          "succ_15": {
            "format": "int32",
            "type": "integer"
          },
          "succ_14": {
            "format": "int32",
            "type": "integer"
          },
          "succ_17": {
            "format": "int32",
            "type": "integer"
          },
          "succType": {
            "format": "int32",
            "description": "Type of successor node.",
            "type": "integer"
          },
          "succ_16": {
            "format": "int32",
            "type": "integer"
          },
          "terminate": {
            "format": "int32",
            "description": "ELO-date when the node was exited.\nDB column: wf_terminate",
            "type": "integer"
          },
          "nodeId": {
            "format": "int32",
            "description": "Node ID",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_linkSords": {
        "type": "object",
        "properties": {
          "linkZ": {
            "$ref": "#/components/schemas/LinkSordZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "toIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fromId": {
            "type": "string"
          }
        }
      },
      "DocVersionC": {
        "type": "object",
        "properties": {
          "lnComment": {
            "format": "int32",
            "description": "Length of version comment.",
            "type": "integer"
          },
          "UPLOAD_RESULT_ERROR": {
            "description": "This value should be set in DocVersion.uploadResult, if preview creation fails.",
            "type": "string"
          },
          "URL_PARAM_LAST_UPDATE": {
            "description": "URL parameter last write date. Used to set the last write time of the file.\nISO date in UTC\n timezone. Example: String writeUrl = docVersion.url + \"&amp;\" + URL_PARAM_LAST_UPDATE + \"=\" +\n 20010203040506;",
            "type": "string"
          },
          "TYPE_ATTACHMENT": {
            "format": "int32",
            "type": "integer"
          },
          "URL_PARAM_CREATE_DATE": {
            "description": "URL parameter create date. Used to set the create date of the file. ISO date in UTC timezone.\nExample: String writeUrl = docVersion.url + \"&amp;\" + URL_PARAM_CREATE_DATE + \"=\" +\n 20010203040506;",
            "type": "string"
          },
          "URL_PARAM_LAST_ACCESS": {
            "description": "URL parameter last access date. Used to set the last access time of the file.\nISO date in UTC\n timezone. Example: String writeUrl = docVersion.url + \"&amp;\" + URL_PARAM_LAST_ACCESS + \"=\" +\n 20010203040506;",
            "type": "string"
          },
          "URL_PARAM_OFFSET": {
            "description": "URL parameter offset. Used to read a file at a particular offset.\nDo not position offset after\n the length of the file. Example: String readUrl = docVersion.url + \"&amp;\" + URL_PARAM_OFFSET +\n \"=\" + 123;",
            "type": "string"
          },
          "lnVersion": {
            "format": "int32",
            "description": "Length of version number (like 1.0).",
            "type": "integer"
          },
          "lnExt": {
            "format": "int32",
            "description": "Length of file extension.",
            "type": "integer"
          },
          "URL_PARAM_LENGTH": {
            "description": "URL parameter length. Used to read length bytes from a file.\nDo not read more bytes than the\n legnth of the file. Example: String readUrl = docVersion.url + \"&amp;\" + URL_PARAM_LENGTH + \"=\"\n + 123;",
            "type": "string"
          },
          "FLAG_MILESTONE": {
            "format": "int32",
            "description": "Document versions marked with this flag cannot be deleted.",
            "type": "integer"
          },
          "TYPE_DOCVERSION": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "ListOfContextTermQuery": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ContextTermQuery"
        }
      },
      "BResult_1768472140": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFVersion"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "PhysDelC": {
        "description": "Constants for the PhysDel.type member.",
        "type": "object",
        "properties": {
          "RELATION": {
            "format": "int32",
            "description": "Relation deleted.",
            "type": "integer"
          },
          "SORD": {
            "format": "int32",
            "description": "Folder or document deleted.",
            "type": "integer"
          },
          "USER": {
            "format": "int32",
            "description": "User deleted.",
            "type": "integer"
          },
          "MASK": {
            "format": "int32",
            "description": "Keywording form deleted.",
            "type": "integer"
          },
          "COLOR": {
            "format": "int32",
            "description": "Color deleted.",
            "type": "integer"
          },
          "NOTE": {
            "format": "int32",
            "description": "Note or annotation deleted.",
            "type": "integer"
          },
          "VERSION": {
            "format": "int32",
            "description": "Document version or attachment deleted.",
            "type": "integer"
          },
          "LINK": {
            "format": "int32",
            "description": "Link deleted.",
            "type": "integer"
          },
          "ERROR": {
            "format": "int32",
            "description": "Unknown object type deleted.",
            "type": "integer"
          },
          "MAP": {
            "format": "int32",
            "description": "Map deleted.",
            "type": "integer"
          },
          "ACTIVITY": {
            "format": "int32",
            "description": "Activity deleted.",
            "type": "integer"
          },
          "WORKFLOW": {
            "format": "int32",
            "description": "Workflow deleted.",
            "type": "integer"
          },
          "KEYWORDLIST": {
            "format": "int32",
            "description": "Keyword list deleted.",
            "type": "integer"
          }
        }
      },
      "BResult_888671717": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/FileData"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "KeyValue": {
        "description": "This class contains a name and an associated value.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "value": {
            "description": "Associated value.",
            "type": "string"
          },
          "key": {
            "description": "Key or identifying name.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutActivity": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "actGuid": {
            "type": "string"
          }
        }
      },
      "ServerInfo": {
        "description": "<p>\nLicense key, version and list of other Indexservers\n <\/p>\n <p>\n Copyright: Copyright (c) 2003\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "serverStreamVersion": {
            "description": "API stream version.\nEIX-2519",
            "type": "string"
          },
          "license": {
            "description": "License key for the Index Server. Read only.",
            "$ref": "#/components/schemas/License"
          },
          "indexServers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndexServerForArchive"
            }
          },
          "replProcessOnServerId": {
            "description": "This value defines the server ID which is checked when a workflow is forwared.",
            "type": "string"
          },
          "instanceName": {
            "description": "Indexserver name. This is the name configured in config.xml or web.xml as \"ixid\".",
            "type": "string"
          },
          "serverTime": {
            "format": "date-time",
            "description": "Server time.\nEIX-2519",
            "type": "string"
          },
          "postboxDisabled": {
            "description": "Serverside inbox is disabled.\nThe serverside inbox is disabled in cloud installations.",
            "type": "boolean"
          },
          "version": {
            "description": "The version of the Index Server. Read only.",
            "type": "string"
          },
          "databaseEngine": {
            "description": "Database engine name. E. g.\nMSSQL, ORACLE, DB2 If connected to DB2, the character set UTF-8 is\n assumed for database columns that store Strings. In this case the length members of the\n constant classes (e.g. SordC.lnName resp. CONST.SORD.lnName) contain the column widths in bytes\n rather than characters. Use the IXConnection.truncate function to truncate a String value to\n fit the corresponding database column.",
            "type": "string"
          }
        }
      },
      "IXServicePortC": {
        "description": "<p>\nConstants for options and classes used by Indexserver.\n <\/p>\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "STREAM_VERSION": {
            "description": "Version information used in binary serialization.",
            "type": "string"
          },
          "LOCK": {
            "description": "Constants to lock and unlock data against concurrent modification.",
            "$ref": "#/components/schemas/LockC"
          },
          "WORKFLOW_NODE": {
            "description": "Constants for workflow nodes",
            "$ref": "#/components/schemas/WFNodeC"
          },
          "EVENT_BUS": {
            "description": "Constants for event busses.",
            "$ref": "#/components/schemas/EventBusC"
          },
          "CLIENT_INFO": {
            "description": "Constants (options) for {@link ClientInfo#options}.",
            "$ref": "#/components/schemas/ClientInfoC"
          },
          "ADMIN_MODE": {
            "description": "Constants for the administration mode.",
            "$ref": "#/components/schemas/AdminModeC"
          },
          "WORKFLOW_TYPE": {
            "description": "Constants for workflows",
            "$ref": "#/components/schemas/WFTypeC"
          },
          "CHECKOUT_USERS": {
            "description": "Options for the <code>checkoutUsers<\/code> function.",
            "$ref": "#/components/schemas/CheckoutUsersC"
          },
          "RESOLVE_RIGHTS": {
            "description": "Constants for resolving rights.",
            "$ref": "#/components/schemas/ResolveRightsResultC"
          },
          "SESSION_OPTIONS": {
            "description": "Constants for session options.",
            "$ref": "#/components/schemas/SessionOptionsC"
          },
          "DOC_VERSION": {
            "description": "Constants for document or attachment version history.",
            "$ref": "#/components/schemas/DocVersionC"
          },
          "PROCESS_INFO": {
            "description": "Constants for process information",
            "$ref": "#/components/schemas/ProcessInfoC"
          },
          "SEARCH_MODE": {
            "description": "Constants for find options.",
            "$ref": "#/components/schemas/SearchModeC"
          },
          "FIND_ACTIONS_INFO": {
            "description": "Constants for\n{@link de.elo.ix.client.feed.FeedService#findFirstActions(ClientInfo, de.elo.ix.client.feed.FindActionsInfo, int, de.elo.ix.client.feed.ActionZ)}.",
            "$ref": "#/components/schemas/FindActionsInfoC"
          },
          "EXPORT_OPTIONS": {
            "description": "Export options constants.",
            "$ref": "#/components/schemas/ExportOptionsC"
          },
          "DOC_MASK": {
            "description": "Constants for storage masks.",
            "$ref": "#/components/schemas/DocMaskC"
          },
          "OBJ_KEY": {
            "description": "Index lines of indexing information.",
            "$ref": "#/components/schemas/ObjKeyC"
          },
          "IXEXCEPTION": {
            "description": "Error numbers used in Indexserver exceptions.",
            "$ref": "#/components/schemas/IXExceptionC"
          },
          "REPORT_OPTIONS": {
            "description": "Constants for report options containing report erp codes",
            "$ref": "#/components/schemas/ReportOptionsC"
          },
          "CHECKIN_USERS": {
            "description": "Options for the <code>checkinUsers<\/code> function.",
            "$ref": "#/components/schemas/CheckinUsersC"
          },
          "CONFIG_FILE": {
            "description": "Constanst for ConfigFile.",
            "$ref": "#/components/schemas/ConfigFileC"
          },
          "WORKFLOW_NODE_HISTORY": {
            "description": "Constants for workflow history.",
            "$ref": "#/components/schemas/WFNodeHistoryC"
          },
          "NAV_INFO": {
            "description": "Constants for navigation information.",
            "$ref": "#/components/schemas/NavigationInfoC"
          },
          "SERVER_INFO_DM": {
            "description": "Constants for the class ServerInfoDM.",
            "$ref": "#/components/schemas/ServerInfoDMC"
          },
          "OCR_INFO": {
            "description": "Constants for OcrInfoC.",
            "$ref": "#/components/schemas/OcrInfoC"
          },
          "SEARCH_TERMS": {
            "description": "Constants for {@link IXServicePortIF#getSearchTerms(ClientInfo, FindInfo, int)}.",
            "$ref": "#/components/schemas/SearchTermsC"
          },
          "MAP_HIST": {
            "description": "Constants for class MapHist.",
            "$ref": "#/components/schemas/MapHistC"
          },
          "WORKFLOW_VERSION": {
            "description": "Constants for WFVersion.",
            "$ref": "#/components/schemas/WFVersionC"
          },
          "PREVIEW_IMAGE_INFO": {
            "description": "Constants for preview image info.",
            "$ref": "#/components/schemas/PreviewImageInfoC"
          },
          "TRANSLATE_TERM": {
            "description": "Constants for translate term.",
            "$ref": "#/components/schemas/TranslateTermC"
          },
          "EDIT_INFO": {
            "description": "Constants for editing indexing information and documents.",
            "$ref": "#/components/schemas/EditInfoC"
          },
          "FULLTEXT_CONFIG": {
            "description": "Constanst for the fulltext configuration.",
            "$ref": "#/components/schemas/FulltextConfigC"
          },
          "SUBSCRIPTION": {
            "description": "Constants for Subscription",
            "$ref": "#/components/schemas/SubscriptionC"
          },
          "DOCMASK_INHERIT": {
            "description": "Constants for storage mask inheritance info.",
            "$ref": "#/components/schemas/DocMaskInheritC"
          },
          "USER_TASK_PRIORITY": {
            "description": "Priority constants.",
            "$ref": "#/components/schemas/UserTaskPriorityC"
          },
          "USER_TASK_SORT_ORDER": {
            "description": "Sort order used when collecting tasks.",
            "$ref": "#/components/schemas/UserTaskSortOrderC"
          },
          "SERVER_STATE": {
            "description": "Constants for server state providing the status of server modules.",
            "$ref": "#/components/schemas/ServerStateC"
          },
          "INDEXVALUE": {
            "description": "Constants for IndexValues.",
            "$ref": "#/components/schemas/IndexValueC"
          },
          "REPL_SET_NAME": {
            "description": "Constants for replication set names.",
            "$ref": "#/components/schemas/ReplSetNameC"
          },
          "SUBS_INFO": {
            "description": "Constants for SubsInfo.",
            "$ref": "#/components/schemas/SubsInfoC"
          },
          "SORT_ORDER": {
            "description": "Sort orders like manually, alphabetically, ...",
            "$ref": "#/components/schemas/SortOrderC"
          },
          "ORG_UNIT_INFO": {
            "description": "Constants for OrgUnitInfo.",
            "$ref": "#/components/schemas/OrgUnitInfoC"
          },
          "DOC_MASK_LINE": {
            "description": "Constants for storage mask index lines.",
            "$ref": "#/components/schemas/DocMaskLineC"
          },
          "IMPORT_OPTIONS": {
            "description": "Import options constants.",
            "$ref": "#/components/schemas/ImportOptionsC"
          },
          "WORKFLOW": {
            "description": "Constants for Workflows",
            "$ref": "#/components/schemas/WFDiagramC"
          },
          "NOTE_FREEHAND": {
            "description": "Constants for NoteFreehand",
            "$ref": "#/components/schemas/NoteFreehandC"
          },
          "COPY_SORD": {
            "description": "Constants (options) for the <code>copySord<\/code> function.",
            "$ref": "#/components/schemas/CopySordC"
          },
          "WORKFLOW_NODE_ASSOC_TYPE": {
            "description": "Constants for workflow node association types used by WFNodeMatrix",
            "$ref": "#/components/schemas/WFNodeMatrixC"
          },
          "ACTIVITY_PROJECT": {
            "description": "Constants for Activity project options.",
            "$ref": "#/components/schemas/ActivityProjectC"
          },
          "ELO_IX_OPT": {
            "description": "Constants for Indexserver options.",
            "$ref": "#/components/schemas/EloIxOptC"
          },
          "REPORT_INFO": {
            "description": "ReportInfo constants including report action codes.",
            "$ref": "#/components/schemas/ReportInfoC"
          },
          "KEYWORD": {
            "description": "Keyword constants.",
            "$ref": "#/components/schemas/KeywordC"
          },
          "ALERT": {
            "description": "Constants for Alerts (messages).",
            "$ref": "#/components/schemas/AlertC"
          },
          "TAKE_NODE": {
            "description": "Constants for take node.",
            "$ref": "#/components/schemas/WFTakeNodeC"
          },
          "ASPECT_LINE": {
            "description": "Constants for aspect index lines.",
            "$ref": "#/components/schemas/AspectLineC"
          },
          "COLOR": {
            "description": "Constants for colours",
            "$ref": "#/components/schemas/ColorDataC"
          },
          "PACKAGE": {
            "description": "Constants for the package.",
            "$ref": "#/components/schemas/PackageC"
          },
          "VT_DOC": {
            "description": "Constants for the control of the fulltext service.",
            "$ref": "#/components/schemas/VtDocC"
          },
          "SORD_TYPE": {
            "description": "Constants for sord type.",
            "$ref": "#/components/schemas/SordTypeC"
          },
          "SUBSTITUTION": {
            "description": "Constants for Substitution",
            "$ref": "#/components/schemas/SubstitutionC"
          },
          "DOC_MASK_LINE_TEMPLATE": {
            "description": "Constants for storage mask index line templates.",
            "$ref": "#/components/schemas/DocMaskLineTemplateC"
          },
          "SORD": {
            "description": "Constants for the indexing information (Sord object).",
            "$ref": "#/components/schemas/SordC"
          },
          "REPORT_MODE": {
            "description": "Constants for report modes (no, limited, verbose, full).",
            "$ref": "#/components/schemas/ReportModeC"
          },
          "USER_INFO": {
            "description": "Constants for user information.",
            "$ref": "#/components/schemas/UserInfoC"
          },
          "MAP_CONFIG": {
            "description": "Constants for MapDomain, checkoutMap etc.",
            "$ref": "#/components/schemas/MapDomainC"
          },
          "PACKAGE_LEVEL": {
            "description": "Constants for the package level.",
            "$ref": "#/components/schemas/PackageLevelDataC"
          },
          "ACL_ITEM": {
            "description": "Constants for access control lists.",
            "$ref": "#/components/schemas/AclItemC"
          },
          "INVALIDATE_CACHE": {
            "description": "Constants for function invalidateCache.",
            "$ref": "#/components/schemas/InvalidateCacheC"
          },
          "COUNTER_INFO": {
            "description": "Constants for CounterInfo.",
            "$ref": "#/components/schemas/CounterInfoC"
          },
          "ASPECT_ASSOC": {
            "description": "Constants for aspect associations.",
            "$ref": "#/components/schemas/AspectAssocC"
          },
          "LINK_SORD": {
            "description": "Constants for linkSords",
            "$ref": "#/components/schemas/LinkSordC"
          },
          "FEED": {
            "description": "Constants for document feed.",
            "$ref": "#/components/schemas/FeedC"
          },
          "MAP_DATA": {
            "description": "Constants for MapData",
            "$ref": "#/components/schemas/MapDataC"
          },
          "ANY": {
            "description": "Constants for class Any.",
            "$ref": "#/components/schemas/AnyC"
          },
          "REMINDER": {
            "description": "Constants for reminders.",
            "$ref": "#/components/schemas/ReminderC"
          },
          "PUBLIC_DOWNLOAD": {
            "description": "Constants for public download.",
            "$ref": "#/components/schemas/PublicDownloadC"
          },
          "E_SEARCH_PARAMS": {
            "description": "Constants for ESearchParams.\nsearchIn",
            "$ref": "#/components/schemas/ESearchParamsC"
          },
          "FILE_DATA": {
            "description": "Constants for FileDataC.",
            "$ref": "#/components/schemas/FileDataC"
          },
          "NOTE": {
            "description": "Note.",
            "$ref": "#/components/schemas/NoteC"
          },
          "USER_PROFILE": {
            "description": "Constants for user profile.",
            "$ref": "#/components/schemas/UserProfileC"
          },
          "PACKAGE_DATA": {
            "description": "Constants for the packages.",
            "$ref": "#/components/schemas/PackageDataC"
          },
          "ACCESS": {
            "description": "Constants for access rights.",
            "$ref": "#/components/schemas/AccessC"
          },
          "SORD_HIST": {
            "description": "Constants for sord history.",
            "$ref": "#/components/schemas/SordHistC"
          },
          "FIND_DIRECT": {
            "description": "Constants for the class FindDirect.",
            "$ref": "#/components/schemas/FindDirectC"
          },
          "ARCHIVING_MODE": {
            "description": "Archiving modes like version controlled, read-only,...",
            "$ref": "#/components/schemas/ArchivingModeC"
          },
          "ARCHIVE_STATISTICS_OPTIONS": {
            "description": "Constants for getArchiveStatistics",
            "$ref": "#/components/schemas/ArchiveStatisticsOptionsC"
          },
          "REPORT": {
            "description": "Constants for report.",
            "$ref": "#/components/schemas/ReportC"
          },
          "MAP_DOMAIN": {
            "description": "Constants for MapDomain, checkoutMap etc.",
            "$ref": "#/components/schemas/MapDomainC"
          },
          "SORD_HIST_KEY": {
            "description": "Constants for sord history entries.",
            "$ref": "#/components/schemas/SordHistKeyC"
          },
          "CRYPT_INFO": {
            "description": "Constants for CryptInfo.",
            "$ref": "#/components/schemas/CryptInfoC"
          },
          "WORKFLOW_EXPORT_OPTIONS": {
            "description": "Constants for function\n{@link IXServicePortIF#exportWorkflow(ClientInfo, WorkflowExportOptions)}.",
            "$ref": "#/components/schemas/WorkflowExportOptionsC"
          },
          "THESAURUS": {
            "description": "Constants for thesaurus.",
            "$ref": "#/components/schemas/ThesaurusC"
          },
          "ACTION": {
            "description": "Constants for feed actions.",
            "$ref": "#/components/schemas/ActionC"
          },
          "STORE_INFO": {
            "description": "Constants for store info.",
            "$ref": "#/components/schemas/StoreInfoC"
          },
          "ASPECT": {
            "description": "Constants for aspects.",
            "$ref": "#/components/schemas/AspectC"
          },
          "NOTE_TEMPLATE": {
            "description": "Constants for NoteTemplate",
            "$ref": "#/components/schemas/NoteTemplateC"
          },
          "ACTIVITY": {
            "description": "Constants for Activities",
            "$ref": "#/components/schemas/ActivityC"
          }
        }
      },
      "ListOfIndexSearchIntegerValue": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/IndexSearchIntegerValue"
        }
      },
      "BRequest_IXServicePortIF_findNextSubscriptions": {
        "type": "object",
        "properties": {
          "searchId": {
            "type": "string"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "idx": {
            "format": "int32",
            "type": "integer"
          },
          "subsZ": {
            "$ref": "#/components/schemas/SubscriptionZ"
          }
        }
      },
      "BRequest_IXServicePortIF_startWorkFlow2": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          },
          "startWorkflowInfo": {
            "$ref": "#/components/schemas/StartWorkflowInfo"
          }
        }
      },
      "BRequest_PluginService_getHistory": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "VtDocC": {
        "description": "<p>Bit constants for members of VtDoc<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbObjId": {
            "description": "DB column: objid",
            "type": "string"
          },
          "mbCode": {
            "description": "DB column: vtcode",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbDocId": {
            "description": "DB column: objdoc",
            "type": "string"
          }
        }
      },
      "FindByVersion": {
        "description": "This class holds additional information for FindInfo, in order to restrict a search using the\ndocument history (version).\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "versionComment": {
            "description": "User defined version description.\nThe wildcard * is allowed, it matches any number of\n characters.",
            "type": "string"
          },
          "versionMD5": {
            "description": "The md5 Hash value for the file.",
            "type": "string"
          },
          "versionNumber": {
            "description": "User defined version number or version id.\nThe wildcard * is allowed, it matches any number of\n characters.",
            "type": "string"
          },
          "workVersionOnly": {
            "description": "Optional flag to restrict the search to active versions only.",
            "type": "boolean"
          }
        }
      },
      "MapToNotification": {
        "additionalProperties": {
          "$ref": "#/components/schemas/Notification"
        },
        "type": "object"
      },
      "BResult_1078168929": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FileData"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "RelationC": {
        "description": "<p>Bit constants for members of Relation<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbOrdinal": {
            "description": "DB column: ordinal",
            "type": "string"
          },
          "mbTStamp": {
            "description": "DB column: reltstamp",
            "type": "string"
          },
          "mbParentId": {
            "description": "DB column: parentid",
            "type": "string"
          },
          "mbDeleteDate": {
            "description": "Member bit: The Relation is deleted at this date. ClientInfo determines the Timezone.\nDB column: reldeletedate",
            "type": "string"
          },
          "lnGuid": {
            "format": "int32",
            "description": "Column length: GUID\nDB column: relguid",
            "type": "integer"
          },
          "mbTStampSync": {
            "description": "Member bit: Timestamp of this object's last export by the replication.\nDB column: reltstampsync",
            "type": "string"
          },
          "mbStatus": {
            "description": "DB column: relstatus",
            "type": "string"
          },
          "mbObjId": {
            "description": "DB column: objectid",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbRelMain": {
            "description": "Member bit: This Relation represents the main relation of an object, if this value is <code>true<\/code>.\nDB column: relmain",
            "type": "string"
          },
          "mbGuid": {
            "description": "Member bit: GUID\nDB column: relguid",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "DB column: reltstamp",
            "type": "integer"
          },
          "lnTStampSync": {
            "format": "int32",
            "description": "Column length: Timestamp of this object's last export by the replication.\nDB column: reltstampsync",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_createEventBusSubscriber": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ListOfString": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "IndexSearchStringValue": {
        "description": "This class represents a condition to filter aspect data that is not of type\n{@link IndexValueC#TYPE_INT} or {@link IndexValueC#TYPE_DOUBLE} in the database.",
        "type": "object",
        "properties": {
          "operator": {
            "description": "Operator for this search condition",
            "$ref": "#/components/schemas/IndexSearchOperator"
          },
          "operand": {
            "description": "Value on the right side of the operation.\nThe left side implicitly is the value in the\n database.",
            "type": "string"
          }
        }
      },
      "ServerState": {
        "description": "Internal class.",
        "type": "object",
        "properties": {
          "subKey": {
            "format": "int32",
            "description": "DB column: subkey",
            "type": "integer"
          },
          "actionId": {
            "format": "int32",
            "description": "DB column: actionid",
            "type": "integer"
          },
          "action": {
            "description": "DB column: action",
            "type": "string"
          }
        }
      },
      "HealthCheckValueNameC": {
        "description": "Predefined value names for HealthCheckInfo objects.",
        "type": "object",
        "properties": {
          "NB_OF_FAILED_LOGINS": {
            "description": "Number of failed logins. Due to wrong name or password.",
            "type": "string"
          },
          "NB_OF_SESSIONS": {
            "description": "Number of current sessions.",
            "type": "string"
          },
          "NB_OF_DOCUMENTS": {
            "description": "Number of logically documents.",
            "type": "string"
          },
          "NB_OF_SUCCESSFUL_LOGINS": {
            "description": "Number of successful logins.\nthe full number of attempted logins, whether successful or not is\n the sum of successful and failed logins.",
            "type": "string"
          },
          "NB_OF_CHECKOUTSORD": {
            "description": "Number of checkoutSord calls.",
            "type": "string"
          },
          "STATUS_OF_VERSIONS": {
            "description": "Version status.",
            "type": "string"
          },
          "NB_OF_GARBAGE_COLLECTIONS": {
            "description": "Number of Garbage Collections.",
            "type": "string"
          },
          "DURATION_OF_WORKFLOW_FORWARDING": {
            "description": "Duration of Workflow forwarding.",
            "type": "string"
          },
          "NB_OF_CHECKINSORD": {
            "description": "Number of checkinSord calls.",
            "type": "string"
          },
          "SIZE_OF_USED_JAVA_HEAP": {
            "description": "Java Heap Size.",
            "type": "string"
          },
          "DURATION_OF_SQL_QUERY": {
            "description": "Duration of SQL queries.",
            "type": "string"
          },
          "DURATION_OF_CHECKOUTSORD": {
            "description": "Duration of checkoutSord calls.",
            "type": "string"
          },
          "DYNAMIC": {
            "description": "Name of dynamically evaluated values starts with this prefix.",
            "type": "string"
          },
          "NB_OF_DOCUMENT_FILES_WITHOUT_BACKUP": {
            "description": "Number of logically documents without backup.",
            "type": "string"
          },
          "NB_OF_DOCUMENT_FILES": {
            "description": "Number of document files (resp. number of document versions).",
            "type": "string"
          },
          "DURATION_OF_SEARCH_QUERY": {
            "description": "Search Task duration.",
            "type": "string"
          },
          "NB_OF_IX_METHOD_CALLS": {
            "description": "Number of IX-method calls.",
            "type": "string"
          },
          "TOTAL_SIZE_OF_DOCUMENT_FILES": {
            "description": "Total size of document files (resp. document versions).",
            "type": "string"
          },
          "DURATION_OF_IX_METHOD_CALLS": {
            "description": "Duration of IX-method calls.",
            "type": "string"
          },
          "FREE_SPACE_OF_SQL_SERVER": {
            "description": "Freier Speicher SQL Server.",
            "type": "string"
          },
          "DURATION_OF_CHECKINSORD": {
            "description": "Duration of checkinSord calls.",
            "type": "string"
          },
          "NB_OF_DOCUMENT_FILES_WITH_BACKUP": {
            "description": "Number of document files with backup.",
            "type": "string"
          }
        }
      },
      "HistogramAggregationQueryParams": {
        "description": "Defines parameters to run an aggregation of type \"Histogram\" on numeric values (a\nmulti-bucket-aggregation).<br>\n This aggregation query allows sub-aggregations.",
        "type": "object",
        "properties": {
          "offset": {
            "description": "Provides an optional offset to change the start value of each bucket by the specified positive\noffset.<br>\n For example, when using an interval of 10, buckets will run from [0, 10), [10, 20), [20, 30)\n and so on. Setting the offset parameter to 5 changes buckets to run from [5, 15), [15, 25),\n [25, 35) and so on.<br>\n <br>\n The offset must be within [0, interval).",
            "$ref": "#/components/schemas/DoubleSingleValue"
          },
          "minDocCount": {
            "format": "int32",
            "description": "If minDocCount = 0, the response will fill gaps in the histogram with empty buckets.\nIt is\n possible to change that and request buckets with a higher minimum count by means of the\n min_doc_count setting.<br>\n We set the default to a value of 1, to not overload the client with tons of unwanted buckets.",
            "type": "integer"
          },
          "extendedBounds": {
            "description": "Sets optional extended bounds if parameter minDocCount equals to zero.\n<br>\n Explanation:<br>\n By default the histogram returns all the buckets within the range of the data itself, that is,\n the documents with the smallest values will determine the min bucket (the bucket with the\n smallest key) and the documents with the highest values will determine the max bucket (the\n bucket with the highest key). So, even if minDocCount is set to 0, you won't get empty buckets\n at the beginning and at the end of the intended range.<br>\n With extended_bounds setting, you now can \"force\" the histogram aggregation to start building\n buckets on a specific min value and also keep on building buckets up to a max value (even if\n there are no documents anymore).<br>\n Using extended_bounds only makes sense when min_doc_count is 0 (the empty buckets will never be\n returned if min_doc_count is greater than 0).<br>\n <br>\n <p>\n Note that (as the name suggest) extended_bounds is not filtering buckets. Meaning, if the\n extended_bounds.min is higher than the values extracted from the documents, the documents will\n still dictate what the first bucket will be (and the same goes for the extended_bounds.max and\n the last bucket). For filtering buckets, one should add an appropriate filter to the search\n query or one could nest the histogram aggregation under a filter aggregation.\n <\/p>\n <br>\n <p>\n Note that if parameter hardBounds is also given, extendedBounds must be completely inside\n hardBounds, otherwise ES will emit an error.\n <\/p>",
            "$ref": "#/components/schemas/DoubleRangeValue"
          },
          "missingValue": {
            "description": "The optional missingValue parameter defines how documents that are missing a value should be\ntreated. By default they will be ignored but it is also possible to treat them as if they have\n a value.<br>",
            "$ref": "#/components/schemas/DoubleSingleValue"
          },
          "interval": {
            "description": "Specifies the width of generated buckets.\n<br>\n The interval must be greater than zero.<br>\n Important: The generated buckets include the lower bound and exclude the upper bound, i.e.\n [from, to).",
            "$ref": "#/components/schemas/DoubleSingleValue"
          },
          "hardBounds": {
            "description": "The optional hard_bounds is a counterpart of extended_bounds and can limit the range of buckets\nin the histogram.<br>\n It is particularly useful in the case of open data ranges that can result in a very large\n number of buckets.<br>\n If you set a hard limit, all other buckets outside the limit will be omitted even if documents\n that should go to this buckets are present in the results.<br>\n <br>\n <p>\n Note that if parameter extendedBounds is also given, extendedBounds must be completely inside\n hardBounds, otherwise ES will emit an error.\n <\/p>",
            "$ref": "#/components/schemas/DoubleRangeValue"
          },
          "subAggregations": {
            "description": "Inner aggregations of this aggregation.",
            "$ref": "#/components/schemas/MapToAggregationQuery"
          },
          "order": {
            "description": "The optional order buckets are retrieved.\n<br>\n By default, the histogram aggregation orders buckets by their key ascending.<br>\n <br>\n If this value is omitted, the default will be used.",
            "$ref": "#/components/schemas/AggregationOrderE"
          }
        }
      },
      "BResult_105830886": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubsInfo"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "MapToUserName": {
        "additionalProperties": {
          "$ref": "#/components/schemas/UserName"
        },
        "type": "object"
      },
      "BResult_1425760760": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ServerInfoDM"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "PackageCheckoutInfo": {
        "description": "Describes checkout criteria for\n{@link PackageService#checkoutPackages(ClientInfo ci, PackageCheckoutInfo checkoutInfo, PackageDataZ packageZ, LockZ lockZ)}.\n \n EIX-1895",
        "type": "object",
        "properties": {
          "nameOrGuids": {
            "description": "List of names or GUIDs of packages to checkout.\nIf the list is null or empty, all packages will\n be checkout.",
            "$ref": "#/components/schemas/ListOfString"
          }
        }
      },
      "PublicDownloadOptions": {
        "description": "This class contains several options that are used to get the public downloads.\n<p>\n Copyright: Copyright (c) 2014\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "contentDispositionAttachment": {
            "description": "If true, the document is downloaded as an attachment.\nOtherwise it content is shown in-line in\n the browser.",
            "type": "boolean"
          },
          "docId": {
            "description": "The doc id.",
            "type": "string"
          },
          "fileNameFromSordName": {
            "description": "If true, the short description of the sord is used as file name in the download URL.\nOtherwise\n the original file name is used.",
            "type": "boolean"
          },
          "objId": {
            "description": "The obj id.",
            "type": "string"
          },
          "expiration": {
            "description": "The expired time.",
            "type": "string"
          },
          "remaining": {
            "format": "int32",
            "description": "The remaining download.",
            "type": "integer"
          },
          "downloadIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "WFVersionC": {
        "description": "Constants for WFVersion",
        "type": "object",
        "properties": {
          "lnComment": {
            "format": "int32",
            "description": "Length of WFVersion.comment.",
            "type": "integer"
          },
          "lnVersion": {
            "format": "int32",
            "description": "Length of WFVersion.version.",
            "type": "integer"
          }
        }
      },
      "BRequest_PluginService_upload": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "istream": {
            "$ref": "#/components/schemas/BStreamReference"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinAspect": {
        "type": "object",
        "properties": {
          "aspectZ": {
            "$ref": "#/components/schemas/AspectZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "aspect": {
            "$ref": "#/components/schemas/Aspect"
          }
        }
      },
      "BRequest_IXServicePortIF_linkSords2": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "linkSordZ": {
            "$ref": "#/components/schemas/LinkSordZ"
          },
          "toIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fromId": {
            "type": "string"
          },
          "linkSordInfo": {
            "$ref": "#/components/schemas/LinkSordInfo"
          }
        }
      },
      "ListOfESNodeObj": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ESNodeObj"
        }
      },
      "NavigationInfo": {
        "description": "NavigationInfo is used as traversal information for structured bulk operations restricting\nspecific processsing, e.g. pooled jobs, to scalable amounts. It provides parameters controlling\n the traversal.\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "maxDepth": {
            "format": "int32",
            "description": "The maximum depth of the tree walk. Passing maxDepth &lt; 1 turns off this limit.",
            "type": "integer"
          },
          "maxSiblings": {
            "format": "int32",
            "description": "The maximum number of siblings for one tree level.\nThis limit is most useful for ignoring the\n contents of large folders. Passing maxSiblings &lt; 1 will turn the limit off.",
            "type": "integer"
          },
          "ignoreDocuments": {
            "description": "ignore the navigation of documents",
            "type": "boolean"
          },
          "findInfo": {
            "description": "Specify additional filters for the tree walk.\n<p>\n Please note that specifying a custom findInfo always leads to a second search for each\n directory decreasing the overall performance. Use this only if processFindResult is not\n suitable.\n <\/p>\n <p>\n Then, not every feature is supported which findInfo offers. Firstly, the member findChildren\n will be overwritten during the tree walk. Secondly, as a fulltext or direct search respectively\n influence the search for children, they are unsupported also.\n <\/p>",
            "$ref": "#/components/schemas/FindInfo"
          },
          "startIDs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "maxCount": {
            "format": "int32",
            "description": "maxCount is the overall maximum amount of visited nodes and is independent of successful\nprocessing. maxCount does not depend on successful processing to be incremented, and it can\n stop the traversal before any of the other limits have been reached. Passing maxCount &lt; 1\n will turn off this limit.",
            "type": "integer"
          }
        }
      },
      "SystemInformation": {
        "type": "object"
      },
      "ESInfoObj": {
        "description": "<b><i>Note: For internal use only. Might change in the near future.\n<\/i><\/b>",
        "type": "object",
        "properties": {
          "STATUS_RED": {
            "format": "int32",
            "type": "integer"
          },
          "documentCount": {
            "format": "int32",
            "type": "integer"
          },
          "connectionCount": {
            "format": "int32",
            "type": "integer"
          },
          "langsWithDocCount": {
            "$ref": "#/components/schemas/ListOfString"
          },
          "STATUS_GREEN": {
            "format": "int32",
            "type": "integer"
          },
          "STATUS_YELLOW": {
            "format": "int32",
            "type": "integer"
          },
          "thesaurusLangs": {
            "$ref": "#/components/schemas/ListOfString"
          },
          "nodeList": {
            "$ref": "#/components/schemas/ListOfESNodeObj"
          },
          "installedPlugins": {
            "$ref": "#/components/schemas/ListOfString"
          },
          "arhiveStatus": {
            "format": "int32",
            "type": "integer"
          },
          "thesaurusStatus": {
            "format": "int32",
            "type": "integer"
          },
          "lastUpdate": {
            "type": "string"
          },
          "installedVersion": {
            "type": "string"
          }
        }
      },
      "ObjKeyC": {
        "description": "<p>\nConstants for the ObjKey class.\n <\/p>\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "DUMMY_KEY_ID": {
            "format": "int32",
            "description": "This ID marks an ObjKey as Dummy.",
            "type": "integer"
          }
        }
      },
      "MapItem": {
        "description": "Internal class.",
        "type": "object",
        "properties": {
          "blobData": {
            "description": "Blob data.",
            "$ref": "#/components/schemas/BStreamReference"
          },
          "id": {
            "description": "Map id.",
            "type": "string"
          },
          "value": {
            "description": "Map value.",
            "type": "string"
          },
          "contentType": {
            "description": "Content Type.",
            "type": "string"
          },
          "key": {
            "description": "Map key.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_forwardWorkflowNode": {
        "type": "object",
        "properties": {
          "fwdInfo": {
            "$ref": "#/components/schemas/ForwardWorkflowNodeInfo"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "flowId": {
            "format": "int32",
            "type": "integer"
          },
          "nodeId": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "ProcessMoveDocumentsToStoragePath": {
        "description": "This class specifies the options for moving a document into another storage path.\nIt is used as\n member in <code>ProcessInfo<\/code> and is interpreted in the functions\n <code>processFindResult<\/code> and <code>processTrees<\/code>.",
        "type": "object",
        "properties": {
          "pathId": {
            "description": "Name or ID of the storage path",
            "type": "string"
          }
        }
      },
      "DocumentEvents": {
        "type": "object"
      },
      "ObjChange": {
        "description": "Internal class.",
        "type": "object",
        "properties": {
          "code": {
            "format": "int32",
            "description": "DB column: chgcode",
            "type": "integer"
          },
          "param": {
            "format": "int32",
            "description": "DB column: chgparam",
            "type": "integer"
          },
          "tStamp": {
            "description": "DB column: chgtstamp",
            "type": "string"
          },
          "objId": {
            "description": "DB column: chgobjid",
            "type": "string"
          },
          "user": {
            "format": "int32",
            "description": "DB column: chguser",
            "type": "integer"
          },
          "param2": {
            "description": "DB column: chgparam2",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinNotification": {
        "type": "object",
        "properties": {
          "notif": {
            "$ref": "#/components/schemas/Notification"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "notiZ": {
            "$ref": "#/components/schemas/NotificationZ"
          }
        }
      },
      "ArrayOfTranslateTerm": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/TranslateTerm"
        }
      },
      "BResult_1": {
        "type": "object",
        "properties": {
          "result": {
            "type": "boolean"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "AlertC": {
        "type": "object",
        "properties": {
          "POSTMOVE": {
            "format": "int32",
            "description": "(to be defined)",
            "type": "integer"
          },
          "DELVERT": {
            "format": "int32",
            "description": "(to be defined)",
            "type": "integer"
          },
          "WVSEEN": {
            "format": "int32",
            "description": "(to be defined)",
            "type": "integer"
          },
          "WFARRIVED": {
            "format": "int32",
            "description": "(to be defined)",
            "type": "integer"
          },
          "MASKWF": {
            "format": "int32",
            "description": "(to be defined)",
            "type": "integer"
          },
          "WVDELETED": {
            "format": "int32",
            "description": "(to be defined)",
            "type": "integer"
          },
          "MASKVERT": {
            "format": "int32",
            "description": "(to be defined)",
            "type": "integer"
          },
          "NEWVERT": {
            "format": "int32",
            "description": "(to be defined)",
            "type": "integer"
          },
          "MESSAGE": {
            "format": "int32",
            "description": "(to be defined)",
            "type": "integer"
          },
          "MASKWV": {
            "format": "int32",
            "description": "(to be defined)",
            "type": "integer"
          },
          "MASKPOST": {
            "format": "int32",
            "description": "(to be defined)",
            "type": "integer"
          },
          "MASKWVEDMSG": {
            "format": "int32",
            "description": "(to be defined)",
            "type": "integer"
          },
          "MASKWVDELMSG": {
            "format": "int32",
            "description": "(to be defined)",
            "type": "integer"
          },
          "WVEDITED": {
            "format": "int32",
            "description": "(to be defined)",
            "type": "integer"
          },
          "WFSTART": {
            "format": "int32",
            "description": "(to be defined)",
            "type": "integer"
          },
          "MASKALARM": {
            "format": "int32",
            "description": "(to be defined)",
            "type": "integer"
          },
          "MASKSONST": {
            "format": "int32",
            "description": "(to be defined)",
            "type": "integer"
          },
          "REPLERR": {
            "format": "int32",
            "description": "Alert is a message from the replication module",
            "type": "integer"
          }
        }
      },
      "BRequest_RawStreamService_download": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "params": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BResult_6": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BResult_5": {
        "type": "object",
        "properties": {
          "result": {
            "format": "int32",
            "type": "integer"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "ListOfContextTermResults": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ContextTermResults"
        }
      },
      "BRequest_IXServicePortIF_checkinKeys": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "keyInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyInfo"
            }
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "DeleteConfigInfo": {
        "description": "Describe what to delete in\n{@link ConfigService#deleteConfiguration2(de.elo.ix.client.ClientInfo, DeleteConfigInfo)}.",
        "type": "object",
        "properties": {
          "level": {
            "format": "int32",
            "description": "Layer level. This value defines the priority for the entry.\nIf level is 0, all levels of the\n given {@link #packageName} are deleted.",
            "type": "integer"
          },
          "packageName": {
            "description": "Package GUID. Delete all configuration entries related to this package.",
            "type": "string"
          }
        }
      },
      "TranslateTermC": {
        "description": "Constants for class TranslateTerm.",
        "type": "object",
        "properties": {
          "GUID_SYSTEM_LANGUAGES": {
            "description": "Use this value in parameter <code>termIds[.]<\/code> to retrieve the system languages.",
            "type": "string"
          },
          "lnTermLang": {
            "format": "int32",
            "description": "Maximum term length;",
            "type": "integer"
          },
          "TASKIDS_FOR_SYSTEM_LANGUAGES": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "TRANSLATION_KEY_REGEX": {
            "description": "Allowed characters for {@link TranslateTerm#translationKey}.\nOnly a-z, A-Z, 0-9 and forward\n slash, hyphen, underscore and colon are allowed.",
            "type": "string"
          },
          "OPT_LANGUAGES": {
            "description": "This user profile key stores the registered languages.\nThe items are separated by dot and the\n order corresponds to the langN-fields in table &qt;translations&qt;. Example: &qt;de.en.fr&qt;\n EIX-3037",
            "type": "string"
          },
          "DEFAULT_LANGUAGES": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BRequest_IXServicePortIF_findSearchTerms": {
        "type": "object",
        "properties": {
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_terminatePublicDownloadUrls": {
        "type": "object",
        "properties": {
          "opts": {
            "$ref": "#/components/schemas/PublicDownloadOptions"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "HashTagDataC": {
        "description": "<p>Bit constants for members of HashTag<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbStatus": {
            "description": "Member bit: Status.\nDB column: status",
            "type": "string"
          },
          "lnCreateDateIso": {
            "format": "int32",
            "description": "Column length: Create date. It holds the ISO formatted create date in the time zone of the client application.\nDB column: createdateiso",
            "type": "integer"
          },
          "mbHstgGuid": {
            "description": "Member bit: HashTag GUID. Unique identifier.\nDB column: hstgguid",
            "type": "string"
          },
          "mbHstgName": {
            "description": "Member bit: HashTag Name.\nDB column: hstgname",
            "type": "string"
          },
          "mbTStamp": {
            "description": "Member bit: Timestamp for replication.\nDB column: tstamp",
            "type": "string"
          },
          "mbCreateDateIso": {
            "description": "Member bit: Create date. It holds the ISO formatted create date in the time zone of the client application.\nDB column: createdateiso",
            "type": "string"
          },
          "lnLastUsedIso": {
            "format": "int32",
            "description": "Column length: Last used.\nIt holds the ISO formatted date of the last use of this HashTag In order to convert\n DB column: lastusediso",
            "type": "integer"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbLastUsedIso": {
            "description": "Member bit: Last used.\nIt holds the ISO formatted date of the last use of this HashTag In order to convert\n DB column: lastusediso",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "Column length: Timestamp for replication.\nDB column: tstamp",
            "type": "integer"
          },
          "lnHstgName": {
            "format": "int32",
            "description": "Column length: HashTag Name.\nDB column: hstgname",
            "type": "integer"
          },
          "lnHstgGuid": {
            "format": "int32",
            "description": "Column length: HashTag GUID. Unique identifier.\nDB column: hstgguid",
            "type": "integer"
          }
        }
      },
      "WorkflowExportOptions": {
        "description": "Structure for the options for the workflow-export.\n<p>\n Copyright: Copyright (c) 2009\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "characterSet": {
            "description": "Character set for the export-data.",
            "type": "string"
          },
          "flowVersId": {
            "description": "Reserved.",
            "type": "string"
          },
          "wordWrap": {
            "description": "Word wrap for the export-data.",
            "type": "string"
          },
          "format": {
            "format": "int32",
            "description": "Export format.",
            "type": "integer"
          },
          "flowId": {
            "description": "Id of the workflow, that will be exported.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_getCompiledScripts": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "NavigationInfoC": {
        "description": "Constants class for the NavigationInfo class.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "MIN_NAV_DEPTH": {
            "format": "int32",
            "description": "The minimum depth for tree walks.",
            "type": "integer"
          },
          "MIN_NAV_MAX_COUNT": {
            "format": "int32",
            "description": "The overall limit for any visited element.",
            "type": "integer"
          },
          "SKIP_NAV_LIMIT": {
            "format": "int32",
            "description": "This constant is used to override the navigation limit.",
            "type": "integer"
          },
          "MIN_NAV_SIBLINGS": {
            "format": "int32",
            "description": "The minimum amount of collected siblings.",
            "type": "integer"
          }
        }
      },
      "ArrayListOfString": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "MapToListOfMapToIndexValue": {
        "additionalProperties": {
          "$ref": "#/components/schemas/ListOfMapToIndexValue"
        },
        "type": "object"
      },
      "BRequest_IXServicePortIF_login": {
        "type": "object",
        "properties": {
          "runAsUser": {
            "type": "string"
          },
          "clientComputer": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userPwd": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          }
        }
      },
      "PurgeSettingsC": {
        "description": "Constants for class PurgeSettings",
        "type": "object",
        "properties": {
          "COMPARE_OFF": {
            "format": "int32",
            "description": "for fileCheckMode: no file comparison (not recommended)",
            "type": "integer"
          },
          "COMPARE_CONTENT": {
            "format": "int32",
            "description": "for fileCheckMode: file comparision by file content",
            "type": "integer"
          },
          "START_EVERY_HOUR": {
            "format": "int32",
            "description": "for startHour: when the purge task is starting and then every 60 minutes",
            "type": "integer"
          },
          "COMPARE_SIZE": {
            "format": "int32",
            "description": "for fileCheckMode: file comparison by file size",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_createDocMask": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "maskId": {
            "type": "string"
          }
        }
      },
      "BResult_1107316733": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocMaskLineTemplate"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "ReportErpCode": {
        "description": "This class describes an ERP code - a filter code number in the ELO report.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "limited": {
            "description": "This code is wirtten in limited report",
            "type": "boolean"
          },
          "name": {
            "description": "ERP name",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "ERP code",
            "type": "integer"
          },
          "verbose": {
            "description": "This code is written in verbose report",
            "type": "boolean"
          }
        }
      },
      "QueryJobProtocolInfo": {
        "description": "This class contains the parameters for the interface function\n{@link IXServicePortIF#queryJobProtocol(ClientInfo, QueryJobProtocolInfo)}.",
        "type": "object",
        "properties": {
          "jobGuid": {
            "description": "The GUID of the background thread to query the log informations. Mandatory.",
            "type": "string"
          },
          "startEventId": {
            "format": "int32",
            "description": "If the value of startEventId is &ge;0, only eventIds &ge; that value will be returned.\nOptional.",
            "type": "integer"
          },
          "level": {
            "format": "int32",
            "description": "Filter for the level of log messages.\nIf set, it has to be one of\n {@link QueryJobProtocolC#LOG_LEVEL_ERROR}, {@link QueryJobProtocolC#LOG_LEVEL_WARN}, or\n {@link QueryJobProtocolC#LOG_LEVEL_INFO}. Multiple values can be set via the bit operation \"|\".\n If not set, only messages of LOG_LEVEL_ERROR are returned.",
            "type": "integer"
          },
          "startDateISO": {
            "description": "Marks the earliest date at which log information has to be reported.\nAs only cached values are\n returned, the value is ignored, if the oldest cached log information is younger that that date.\n Optional.",
            "type": "string"
          }
        }
      },
      "BRequest_FioService_startImport": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "options": {
            "$ref": "#/components/schemas/ImportOptions"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinTranslateTerms": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "tterms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslateTerm"
            }
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutReportOptions": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "DocMaskLineTemplateZ": {
        "description": "This class encapsulates the constants of the DocMaskLineTemplateC class.",
        "type": "object",
        "properties": {
          "bset": {
            "type": "string"
          }
        }
      },
      "ListOfLong": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "BResult_1383534582": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ArchivReport"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "ClientInfo": {
        "description": "Contains the session ticket and the users language and country.\nEach Indexserver interface\n function, except the login, requires a <code>ClientInfo<\/code> object as parameter with a valid\n session ticket.\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "callId": {
            "description": "This string is used for debugging purposes only. It is displayed in error messages and reports.",
            "type": "string"
          },
          "country": {
            "description": "Country in ISO 3166 format.\nThis value defines number formats (especially the decimal delimiter) used in numeric values in\n {@link Sord#objKeys}.\n \n Examples:\n <table border=\"2\" summary=\"\">\n <tr>\n <\/tr>\n <tr>\n <td>CZ<\/td>\n <td>Czeach Republic<\/td>\n <\/tr>\n <tr>\n <td>FR<\/td>\n <td>France<\/td>\n <\/tr>\n <tr>\n <td>DE<\/td>\n <td>Germany<\/td>\n <\/tr>\n <\/table>\n \n A country can also be specified in {@link #language}.",
            "type": "string"
          },
          "ticket": {
            "description": "<p>\nThis is the session ID in the communication between the client and the Indexserver. It has a\n limited lifetime. The lifetime can be configured at the ELOAM (access manager server). The\n Indexserver returns a valid ticket if the IXServicePortIF.login call succeeds. The lifetime of\n the ticket can be extended by calling IXServicePortIF.alive.\n <\/p>",
            "type": "string"
          },
          "options": {
            "format": "int32",
            "description": "Internal use only.\nBit 0 of this member is set for requests that are send from one Indexserver\n instance to another instance in load balancing scenarios.",
            "type": "integer"
          },
          "timeZone": {
            "description": "The time zone for the ELO client.\nCan be one of the predefined time zone IDs in the Java\n platform or a string of format \"GMT\" + sign + hh + \":\" + mm.",
            "type": "string"
          },
          "language": {
            "description": "The user's language as IETF language tag.\nA language is specified as IETF language tag. The language part conforms to ISO 639-1. Starting\n with IX version 21.3, a language tag is optionally followed by a country tag from ISO 3166-1\n alpha-2. The parts are separated by hyphen.\n \n Examples:\n <table border=\"2\" summary=\"\">\n <tr>\n <\/tr>\n <tr>\n <td>de<\/td>\n <td>German<\/td>\n <\/tr>\n <tr>\n <td>de-CH<\/td>\n <td>German language in Switzerland<\/td>\n <\/tr>\n <tr>\n <td>de-AT<\/td>\n <td>German language in Austria<\/td>\n <\/tr>\n <\/table>\n If a translation for a given language is not found, other language tags are taken into account\n as described in {@link FindTranslateTermInfo}. The country part in this value is overwritten by\n {@link #country} if provided.",
            "type": "string"
          }
        }
      },
      "BResult_206201524": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Keyword"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "MapHeadC": {
        "description": "<p>Bit constants for members of MapHead<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnGuid": {
            "format": "int32",
            "description": "DB column: mapguid",
            "type": "integer"
          },
          "mbTStampSync": {
            "description": "Member bit: EIX-3097: TimeStampSync\nDB column: maptstampsync",
            "type": "string"
          },
          "mbId": {
            "description": "DB column: mapid",
            "type": "string"
          },
          "mbObjId": {
            "description": "DB column: mapobjid",
            "type": "string"
          },
          "mbTStamp": {
            "description": "DB column: maptstamp",
            "type": "string"
          },
          "mbLockId": {
            "description": "DB column: maplockid",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbGuid": {
            "description": "DB column: mapguid",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "DB column: maptstamp",
            "type": "integer"
          },
          "lnTStampSync": {
            "format": "int32",
            "description": "Column length: EIX-3097: TimeStampSync\nDB column: maptstampsync",
            "type": "integer"
          },
          "lnId": {
            "format": "int32",
            "description": "DB column: mapid",
            "type": "integer"
          }
        }
      },
      "ActivityDataC": {
        "description": "<p>Bit constants for members of Activity<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbUd1": {
            "description": "DB column: ud1",
            "type": "string"
          },
          "lnUd6": {
            "format": "int32",
            "description": "DB column: ud6",
            "type": "integer"
          },
          "mbUd0": {
            "description": "DB column: ud0",
            "type": "string"
          },
          "lnUd5": {
            "format": "int32",
            "description": "DB column: ud5",
            "type": "integer"
          },
          "lnSentAtIso": {
            "format": "int32",
            "description": "DB column: sentat",
            "type": "integer"
          },
          "mbUd3": {
            "description": "DB column: ud3",
            "type": "string"
          },
          "lnUd8": {
            "format": "int32",
            "description": "DB column: ud8",
            "type": "integer"
          },
          "lnComment": {
            "format": "int32",
            "description": "DB column: actcomment",
            "type": "integer"
          },
          "mbUd2": {
            "description": "DB column: ud2",
            "type": "string"
          },
          "lnUd7": {
            "format": "int32",
            "description": "DB column: ud7",
            "type": "integer"
          },
          "lnUd2": {
            "format": "int32",
            "description": "DB column: ud2",
            "type": "integer"
          },
          "mbTStamp": {
            "description": "DB column: acttstamp",
            "type": "string"
          },
          "lnUd1": {
            "format": "int32",
            "description": "DB column: ud1",
            "type": "integer"
          },
          "lnUd4": {
            "format": "int32",
            "description": "DB column: ud4",
            "type": "integer"
          },
          "lnUd3": {
            "format": "int32",
            "description": "DB column: ud3",
            "type": "integer"
          },
          "mbRevVers": {
            "description": "DB column: revvers",
            "type": "string"
          },
          "lnSentMode": {
            "format": "int32",
            "description": "DB column: sentmode",
            "type": "integer"
          },
          "lnBackAt": {
            "format": "int32",
            "description": "DB column: backat",
            "type": "integer"
          },
          "lnUd9": {
            "format": "int32",
            "description": "DB column: ud9",
            "type": "integer"
          },
          "lnDueDateIso": {
            "format": "int32",
            "description": "DB column: duedate",
            "type": "integer"
          },
          "mbObjId": {
            "description": "Member bit: Object ID of the associated folder or document. Read-only.\nDB column: objid",
            "type": "string"
          },
          "mbUd9": {
            "description": "DB column: ud9",
            "type": "string"
          },
          "mbUd8": {
            "description": "DB column: ud8",
            "type": "string"
          },
          "mbSentMode": {
            "description": "DB column: sentmode",
            "type": "string"
          },
          "lnTStampSync": {
            "format": "int32",
            "description": "Column length: Timestamp of this object's last export by the replication.\nDB column: acttstampsync",
            "type": "integer"
          },
          "mbUd5": {
            "description": "DB column: ud5",
            "type": "string"
          },
          "mbUd4": {
            "description": "DB column: ud4",
            "type": "string"
          },
          "mbUd7": {
            "description": "DB column: ud7",
            "type": "string"
          },
          "mbUd6": {
            "description": "DB column: ud6",
            "type": "string"
          },
          "mbReceiverId": {
            "description": "DB column: owner",
            "type": "string"
          },
          "mbSentAtIso": {
            "description": "DB column: sentat",
            "type": "string"
          },
          "lnFileName": {
            "format": "int32",
            "description": "DB column: filename",
            "type": "integer"
          },
          "mbFileName": {
            "description": "DB column: filename",
            "type": "string"
          },
          "mbGuid": {
            "description": "DB column: actguid",
            "type": "string"
          },
          "lnUd0": {
            "format": "int32",
            "description": "DB column: ud0",
            "type": "integer"
          },
          "mbComment": {
            "description": "DB column: actcomment",
            "type": "string"
          },
          "lnTransId": {
            "format": "int32",
            "description": "Column length: Application defined value.\nDB column: transmitid",
            "type": "integer"
          },
          "mbDestination": {
            "description": "DB column: destination",
            "type": "string"
          },
          "mbBackAt": {
            "description": "DB column: backat",
            "type": "string"
          },
          "mbName": {
            "description": "DB column: shortdesc",
            "type": "string"
          },
          "lnGuid": {
            "format": "int32",
            "description": "DB column: actguid",
            "type": "integer"
          },
          "mbTStampSync": {
            "description": "Member bit: Timestamp of this object's last export by the replication.\nDB column: acttstampsync",
            "type": "string"
          },
          "mbSenderId": {
            "description": "DB column: creator",
            "type": "string"
          },
          "lnName": {
            "format": "int32",
            "description": "DB column: shortdesc",
            "type": "integer"
          },
          "mbPrio": {
            "description": "DB column: prio",
            "type": "string"
          },
          "mbDueDateIso": {
            "description": "DB column: duedate",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "DB column: acttstamp",
            "type": "integer"
          },
          "mbProject": {
            "description": "DB column: project",
            "type": "string"
          },
          "mbObjGuid": {
            "description": "DB column: docguid",
            "type": "string"
          },
          "lnProject": {
            "format": "int32",
            "description": "DB column: project",
            "type": "integer"
          },
          "lnObjGuid": {
            "format": "int32",
            "description": "DB column: docguid",
            "type": "integer"
          },
          "mbBackMode": {
            "description": "DB column: backmode",
            "type": "string"
          },
          "lnDestination": {
            "format": "int32",
            "description": "DB column: destination",
            "type": "integer"
          },
          "mbObjType": {
            "description": "Member bit: Object type of the associated folder or document. Read-only.\nDB column: objtype",
            "type": "string"
          },
          "lnBackMode": {
            "format": "int32",
            "description": "DB column: backmode",
            "type": "integer"
          },
          "lnRevVers": {
            "format": "int32",
            "description": "DB column: revvers",
            "type": "integer"
          },
          "mbTransId": {
            "description": "Member bit: Application defined value.\nDB column: transmitid",
            "type": "string"
          }
        }
      },
      "BResult_1001617329": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserName"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_findFirstTasks": {
        "type": "object",
        "properties": {
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindTasksInfo"
          }
        }
      },
      "BRequest_MyELOService_cleanUpNotifications": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "info": {
            "$ref": "#/components/schemas/CleanUpInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_getPublicDownloads": {
        "type": "object",
        "properties": {
          "opts": {
            "$ref": "#/components/schemas/PublicDownloadOptions"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ListOfInteger": {
        "type": "array",
        "items": {
          "format": "int32",
          "type": "integer"
        }
      },
      "AdminModeC": {
        "description": "Constants for the administration mode.",
        "type": "object",
        "properties": {
          "QUERY": {
            "format": "int32",
            "description": "Query administration mode",
            "type": "integer"
          },
          "OFF": {
            "format": "int32",
            "description": "Administration mode is inactive",
            "type": "integer"
          },
          "ON": {
            "format": "int32",
            "description": "Administration mode is active",
            "type": "integer"
          }
        }
      },
      "BRequest_FeedService_findHashTagByActions": {
        "type": "object",
        "properties": {
          "actionGuids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "hashTagZ": {
            "$ref": "#/components/schemas/HashTagZ"
          }
        }
      },
      "BResult_2011132580": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/MapData"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "EloIxOpt_old": {
        "description": "Internal class.",
        "type": "object",
        "properties": {
          "optNo": {
            "format": "int32",
            "description": "DB column: optno",
            "type": "integer"
          },
          "optVal": {
            "description": "DB column: optval",
            "type": "string"
          },
          "remark": {
            "description": "DB column: remark",
            "type": "string"
          }
        }
      },
      "CreateSuperiorSubstitutionInfo": {
        "description": "Define how a superior substitution is created.\n<p>\n A superior has the right to substitute any of its subordinates.\n <\/p>\n <p>\n A superior substitution has {@link SubstitutionSettings#superiorSubstitution} set to true.\n <\/p>",
        "type": "object",
        "properties": {
          "userToSubstituteId": {
            "format": "int32",
            "description": "<p>\nUser to be substituted by superior.\n <\/p>\n <p>\n This value is ignored if {@link #userToSubstituteName} is set.\n <\/p>",
            "type": "integer"
          },
          "userToSubstituteName": {
            "description": "<p>\nUser to be substituted by superior.\n <\/p>\n <p>\n {@link #userToSubstituteId} is ignored if this member is set.\n <\/p>",
            "type": "string"
          }
        }
      },
      "ReplSetCombinationC": {
        "description": "<p>Bit constants for members of ReplSetCombination<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbCombi": {
            "description": "DB column: dw",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbCombiGuid": {
            "description": "DB column: combiid",
            "type": "string"
          },
          "lnCombi": {
            "format": "int32",
            "description": "DB column: dw",
            "type": "integer"
          },
          "lnCombiGuid": {
            "format": "int32",
            "description": "DB column: combiid",
            "type": "integer"
          }
        }
      },
      "ExportDesc": {
        "description": "Descriptor for an Export.\nThis class should be the first Entity in an Export/Import-File and provides extra informationen about the Export",
        "type": "object",
        "properties": {
          "sourceArchive": {
            "description": "The name of the source repository of the export",
            "type": "string"
          },
          "exportRefPath": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "HealthCheckInfo": {
        "description": "This class represents one value for health check evaluation.",
        "type": "object",
        "properties": {
          "timeStamp": {
            "type": "string"
          },
          "stringValue": {
            "description": "String value. Either this or {@link #doubleValue} has to be set.",
            "type": "string"
          },
          "minValue": {
            "description": "Minimaler Wert für mean values.\n<p>\n EIX-1408\n <\/p>",
            "type": "string"
          },
          "maxValue": {
            "description": "Maximaler Wert für mean values.\n<p>\n EIX-1408\n <\/p>",
            "type": "string"
          },
          "name": {
            "description": "Value name.",
            "type": "string"
          },
          "doubleValue": {
            "format": "double",
            "description": "Numeric value. Either this value or {@link #stringValue} has to be set.",
            "type": "number"
          },
          "sampleSize": {
            "description": "Sample size for mean values.\nIf {@link #doubleValue} is a arithmetic mean, this value gives the\n number of the underlying samples. If {@link #stringValue} is set, this value has to be 0.",
            "type": "string"
          },
          "type": {
            "description": "Type defining interpretation of the given data.\n<p>\n EIX-1408\n <\/p>",
            "$ref": "#/components/schemas/HealthCheckInfoType"
          },
          "operation": {
            "description": "Operation to process when updating the value.",
            "$ref": "#/components/schemas/HealthCheckValueOperation"
          }
        }
      },
      "IndexValueC": {
        "description": "This class defines the constants for the type member in IndexValue.",
        "type": "object",
        "properties": {
          "TYPE_STATUS": {
            "format": "int32",
            "type": "integer"
          },
          "TYPE_USER": {
            "format": "int32",
            "type": "integer"
          },
          "TYPE_RELATION": {
            "format": "int32",
            "type": "integer"
          },
          "TYPE_INT": {
            "format": "int32",
            "type": "integer"
          },
          "TYPE_DOUBLE": {
            "format": "int32",
            "type": "integer"
          },
          "TYPE_STRING": {
            "format": "int32",
            "type": "integer"
          },
          "TYPE_ISO_DATE_TIME": {
            "format": "int32",
            "type": "integer"
          },
          "TYPE_ISO_DATE_ONLY": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "DocMaskLineTemplateC": {
        "description": "<p>\nConstants related to class <code>DocMaskLineTemplate<\/code>.",
        "type": "object",
        "properties": {
          "mbAll": {
            "description": "Read or write all elements.",
            "$ref": "#/components/schemas/DocMaskLineTemplateZ"
          },
          "mbType": {
            "description": "Member bit: The type of the line information.\nThis can be one of the\n <code>DocMaskLineC.LINETYPE_*<\/code> constants.",
            "type": "string"
          },
          "mbVersion": {
            "type": "string"
          },
          "mbHidden": {
            "type": "string"
          },
          "mbTranslate": {
            "type": "string"
          },
          "lnAcl": {
            "format": "int32",
            "description": "ACL length",
            "type": "integer"
          },
          "mbImportant": {
            "type": "string"
          },
          "mbAllowedMaskIdsForKeywordingRelation": {
            "description": "Member bit: allowedMaskIds",
            "type": "string"
          },
          "mbReadOnly": {
            "type": "string"
          },
          "mbPostfixAsterix": {
            "type": "string"
          },
          "mbOnlyBuzzwords": {
            "type": "string"
          },
          "mbOnlyLock": {
            "description": "Only lock or unlock",
            "$ref": "#/components/schemas/DocMaskLineTemplateZ"
          },
          "mbPrefixAsterix": {
            "type": "string"
          },
          "mbAcl": {
            "description": "Member bit: ACL",
            "type": "string"
          },
          "mbAclItems": {
            "type": "string"
          },
          "mbFlags": {
            "description": "Member bit: Line flags",
            "type": "string"
          }
        }
      },
      "MapToArrayOfbyte": {
        "additionalProperties": {
          "format": "byte",
          "type": "string"
        },
        "type": "object"
      },
      "LicenseType": {
        "description": "This enumeration defines constants for the license type.\nThe license type is set during\n installation as production, test or development.",
        "type": "object",
        "properties": {
          "TEST": {
            "description": "Test system.",
            "$ref": "#/components/schemas/LicenseType"
          },
          "DEVELOPMENT": {
            "description": "Development system.",
            "$ref": "#/components/schemas/LicenseType"
          },
          "PRODUCTION": {
            "description": "Production system.",
            "$ref": "#/components/schemas/LicenseType"
          }
        }
      },
      "MapToHashTag": {
        "additionalProperties": {
          "$ref": "#/components/schemas/HashTag"
        },
        "type": "object"
      },
      "BResult_1556767716": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/HashMapToHashTag"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "InvalidateCacheInfo": {
        "description": "This class contains the parameters for the API function invalidateCache2",
        "type": "object",
        "properties": {
          "workflowCacheSyncInfos": {
            "description": "Data for workflow cache synchronisation.",
            "$ref": "#/components/schemas/ListOfWFCacheSyncInfo"
          },
          "ticket": {
            "description": "Refresh options of this session.",
            "type": "string"
          },
          "flags": {
            "format": "int32",
            "description": "A combination of bits defined in InvalidateCacheC.",
            "type": "integer"
          },
          "guid": {
            "description": "A GUID to specify the modified object.",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "A numeric ID to specify an object, workflow etc.\nIf <code>flags<\/code> contains\n <code>InvalidateC.WORKFLOWS<\/code> this element defines the ID of the active workflow to be\n updated in the cache.",
            "type": "integer"
          },
          "value": {
            "description": "Optional value related to {@link #flags} member.\nIf flags specifies\n {@link InvalidateCacheC#OBJKEY_DISPLAY_DATA}, this value contains the",
            "type": "string"
          },
          "parameters": {
            "$ref": "#/components/schemas/ListOfInvalidateCacheInfoParam"
          }
        }
      },
      "AclAccessResult": {
        "description": "This class contains the result return by the method getAclAccess.",
        "type": "object",
        "properties": {
          "access": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "ContextTerm": {
        "type": "object",
        "properties": {
          "docNum": {
            "format": "int32",
            "type": "integer"
          },
          "term": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_getImportZipUrl": {
        "type": "object",
        "properties": {
          "importId": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ArrayOfConfigFile": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ConfigFile"
        }
      },
      "BRequest_IXServicePortIF_getExportZipUrl": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "exportId": {
            "type": "string"
          }
        }
      },
      "ESearchParamsC": {
        "description": "<p>\nConstants for searchIn selector.\n <\/p>\n <p>\n Example for multiple selection to search in title and fulltext:<br>\n <code>searchIn = SearchObjectC.TITLE | SearchObjectC.FULLTEXT<\/code>\n <\/p>",
        "type": "object",
        "properties": {
          "FULLTEXT": {
            "description": "Search in FULLTEXT",
            "type": "string"
          },
          "VERSION": {
            "description": "Search in latest VERSION",
            "type": "string"
          },
          "TITLE": {
            "description": "Search in title",
            "type": "string"
          },
          "INDEX_FIELDS": {
            "description": "Search in INDEX_FIELDS",
            "type": "string"
          },
          "EXTRA_TEXT": {
            "description": "Search in EXTRA_TEXT",
            "type": "string"
          },
          "FEED": {
            "description": "Search in FEED",
            "type": "string"
          }
        }
      },
      "EloFtOptDataC": {
        "description": "<p>Bit constants for members of EloFtOpt<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnValue": {
            "format": "int32",
            "description": "DB column: optval",
            "type": "integer"
          },
          "mbId": {
            "description": "DB column: optid",
            "type": "string"
          },
          "mbValue": {
            "description": "DB column: optval",
            "type": "string"
          },
          "mbRemark": {
            "description": "DB column: remark",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnRemark": {
            "format": "int32",
            "description": "DB column: remark",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinDocDupl": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          }
        }
      },
      "MapToAspectAssoc": {
        "additionalProperties": {
          "$ref": "#/components/schemas/AspectAssoc"
        },
        "type": "object"
      },
      "BRequest_IXServicePortIF_activateSubstitution": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "substitutionGuid": {
            "type": "string"
          }
        }
      },
      "ArrayOfColorData": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ColorData"
        }
      },
      "SordHist": {
        "description": "Version history for the keywording from an object.\nA version history is created for a sord object\n when the keywording is changed for the first time (a newly created sord has no version history).\n Once created only one SordHist object exist for the sord object and is assigned to the sord\n object via the Sord.guid = SordHist.objGuid relationship. The keywording properties that were\n altered in the change process are saved in an array of SordHistKey objects.\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "histGuid": {
            "description": "GUID of the SordHist object.",
            "type": "string"
          },
          "timeStampUTC": {
            "description": "Timestamp of the change in the timezone of the client, in UTC form.\nThe format is\n JJJJ.MM.DD.hh.mm.ss",
            "type": "string"
          },
          "workStation": {
            "description": "The name of the computer from which the change was carried out.\nThis is the parameter\n clientComputer which is provided by the ix.login function.",
            "type": "string"
          },
          "timeStampLocal": {
            "description": "Timestamp of the change in the timezone of the client. The format is JJJJ.MM.DD.hh.mm.\nss",
            "type": "string"
          },
          "objGuid": {
            "description": "GUID of the sord object.",
            "type": "string"
          },
          "userNo": {
            "format": "int32",
            "description": "The user who carried out the changes.",
            "type": "integer"
          },
          "histKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SordHistKey"
            }
          },
          "aspectObjects": {
            "description": "Index values.\nThis member is only valid, if the associated keywording form is organized as\n {@link DocMask#dataOrganisation} = {@link DocMaskC#DATA_ORGANISATION_ASPECT}.<br>\n .",
            "$ref": "#/components/schemas/MapToListOfMapToIndexValue"
          },
          "histSource": {
            "format": "int32",
            "description": "Identifies the application with which changes were made to the keywording.",
            "type": "integer"
          },
          "userName": {
            "description": "The name of the user who carried out the changes.",
            "type": "string"
          }
        }
      },
      "ArrayOfJobState": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/JobState"
        }
      },
      "BRequest_PluginService_getPlugins": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ConfigService": {
        "type": "object"
      },
      "BRequest_IXServicePortIF_applyForNotifications": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "info": {
            "$ref": "#/components/schemas/ApplyForNotificationsInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_checkLicense": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "licenseInfo": {
            "$ref": "#/components/schemas/LicenseInfo"
          }
        }
      },
      "KeywordList": {
        "description": "This class provides general informations for a keyword list.",
        "type": "object",
        "properties": {
          "lockId": {
            "format": "int32",
            "description": "ID of the user who holds a lock on the keyword list.",
            "type": "integer"
          },
          "nameTranslationKey": {
            "description": "Translation-keyword for {@link KeywordList#displayName}.",
            "type": "string"
          },
          "deleted": {
            "description": "RESERVED",
            "type": "boolean"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Keyword"
            }
          },
          "TStampSync": {
            "description": "Timestamp of this object's last export by the replication.",
            "type": "string"
          },
          "tStamp": {
            "description": "Last modified, ISO - UTC Read-only.",
            "type": "string"
          },
          "displayName": {
            "description": "The display name of the keyword. This value is displayed in the label before the edit field.\nIt\n can be translated into reps. from the users language: set\n <code>SessionOptionsC.TRANSLATE_TERM<\/code>.",
            "type": "string"
          },
          "guid": {
            "description": "GUID",
            "type": "string"
          },
          "id": {
            "description": "ID",
            "type": "string"
          },
          "packageName": {
            "description": "Package name of KeywordList",
            "type": "string"
          },
          "userName": {
            "description": "Name of the user that has written the keyword list at last. Read-only.",
            "type": "string"
          },
          "userId": {
            "format": "int32",
            "description": "ID of the user that has written the keyword list at last. Read-only.",
            "type": "integer"
          }
        }
      },
      "ExportFileC": {
        "type": "object",
        "properties": {
          "FILE_EXTENSION": {
            "description": "Filename Extension for export data files",
            "type": "string"
          },
          "MAGIC": {
            "format": "int32",
            "description": "Identifier for Export files",
            "type": "integer"
          },
          "CONTENT_TYPE": {
            "description": "Content Type for export data files",
            "type": "string"
          },
          "FILE_VERSION": {
            "description": "The export file version this IX creates.",
            "type": "string"
          }
        }
      },
      "AspectDataC": {
        "description": "<p>Bit constants for members of Aspect<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbId": {
            "description": "Member bit: Aspect ID. For a new aspect, this value is -1.\nThis value cannot be changed for an existing\n DB column: id",
            "type": "string"
          },
          "mbPackageName": {
            "description": "Member bit: Package name of Aspect.\nDB column: packagename",
            "type": "string"
          },
          "mbTStamp": {
            "description": "Member bit: Timestamp of last modification.\nDB column: tstamp",
            "type": "string"
          },
          "mbLockId": {
            "description": "Member bit: User ID that holds a lock on this object. If -1, the object is unlocked.\nDB column: lockid",
            "type": "string"
          },
          "mbTranslationKey": {
            "description": "Member bit: Translation key. Defines the {@link #displayName} as technical resource ID.\nDB column: translationkey",
            "type": "string"
          },
          "mbName": {
            "description": "Member bit: Aspect name.\n<br>\n DB column: name",
            "type": "string"
          },
          "lnGuid": {
            "format": "int32",
            "description": "Column length: Aspect GUID.\nDB column: guid",
            "type": "integer"
          },
          "mbTStampSync": {
            "description": "Member bit: Timestamp of this object's last export by the replication.\nDB column: tstampsync",
            "type": "string"
          },
          "lnTranslationKey": {
            "format": "int32",
            "description": "Column length: Translation key. Defines the {@link #displayName} as technical resource ID.\nDB column: translationkey",
            "type": "integer"
          },
          "mbStatus": {
            "description": "DB column: status",
            "type": "string"
          },
          "lnName": {
            "format": "int32",
            "description": "Column length: Aspect name.\n<br>\n DB column: name",
            "type": "integer"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbGuid": {
            "description": "Member bit: Aspect GUID.\nDB column: guid",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "Column length: Timestamp of last modification.\nDB column: tstamp",
            "type": "integer"
          },
          "lnTStampSync": {
            "format": "int32",
            "description": "Column length: Timestamp of this object's last export by the replication.\nDB column: tstampsync",
            "type": "integer"
          },
          "lnPackageName": {
            "format": "int32",
            "description": "Column length: Package name of Aspect.\nDB column: packagename",
            "type": "integer"
          }
        }
      },
      "ClientInfoC": {
        "description": "Constants for ClientInfo. These constanse are only for internal usage.",
        "type": "object",
        "properties": {
          "OPTION_AVOID_EVENT_CASCADING": {
            "format": "int32",
            "description": "Can be used to check if an operation is called from a client or not\n(initially requested by FLOWS to avoid event recursion).\n Constant has to be evaluated in scripts accordingly.\n IX does not evaluate this constant.",
            "type": "integer"
          },
          "OPTION_REPLICATION_REQUEST": {
            "format": "int32",
            "description": "Replication requests are marked with this bit.",
            "type": "integer"
          },
          "OPTION_DO_NOT_TRANSLATE_TERMS": {
            "format": "int32",
            "description": "Do not translate terms into the language given by {@link ClientInfo#language}.\nSession option\n {@link SessionOptionsC#TRANSLATE_TERMS} is ignored.",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_addUrlParams": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "params": {
            "$ref": "#/components/schemas/UrlParams"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "BResult_1881161566": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/AutoFilingResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "NotificationDataC": {
        "description": "<p>Bit constants for members of Notification<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbUserGuid": {
            "description": "Member bit: GUID of user who should receive this notification.\nDB column: userguid",
            "type": "string"
          },
          "lnUserGuid": {
            "format": "int32",
            "description": "Column length: GUID of user who should receive this notification.\nDB column: userguid",
            "type": "integer"
          },
          "lnCreateDateIso": {
            "format": "int32",
            "description": "Column length: Create date of the notification.\nDB column: createdateiso",
            "type": "integer"
          },
          "mbCreateDateIso": {
            "description": "Member bit: Create date of the notification.\nDB column: createdateiso",
            "type": "string"
          },
          "mbPrio": {
            "description": "Member bit: Indicates if the Notification is marked as important\nDB column: prio",
            "type": "string"
          },
          "mbWhat": {
            "description": "Member bit: Indicates the type of the watched Element. 0 - Action. 1 - HashTag.\nDB column: what",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbWatchGuid": {
            "description": "Member bit: GUID of changed Object.\nDB column: watchguid",
            "type": "string"
          },
          "lnWatchGuid": {
            "format": "int32",
            "description": "Column length: GUID of changed Object.\nDB column: watchguid",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_finishExport": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "exportId": {
            "type": "string"
          }
        }
      },
      "WorkFlowActiveDoc": {
        "description": "Internal class.",
        "type": "object",
        "properties": {
          "alertFromBegin": {
            "format": "int32",
            "description": "Time-limt for the entire workflow in minutes. This value is only valid for the begin node.\nDB\n column: wf_alert_from_begin",
            "type": "integer"
          },
          "succ_11": {
            "format": "int32",
            "description": "DB column: wf_succ_11",
            "type": "integer"
          },
          "succ_10": {
            "format": "int32",
            "description": "DB column: wf_succ_10",
            "type": "integer"
          },
          "onExitHandleRollback": {
            "description": "Name of script to be executed when the node encounters an error (exception).\nDB column:\n wf_ev_on_exception_after_exit",
            "type": "string"
          },
          "succ_13": {
            "format": "int32",
            "description": "DB column: wf_succ_13",
            "type": "integer"
          },
          "succ_12": {
            "format": "int32",
            "description": "DB column: wf_succ_12",
            "type": "integer"
          },
          "activeAcl": {
            "description": "Contains the ACL of the workflow. Only valid for begin nodes.",
            "type": "string"
          },
          "templateId": {
            "format": "int32",
            "description": "Workflow template ID. Not valid for template workflows.\nFor active and finished workflows this\n member specifies the template ID that was used to start the workflow. If the workflow is\n started as an adhoc workflow, this member is 0 and flags contains the bit FLAG_ROOT_ADHOC. DB\n column: wf_template",
            "type": "integer"
          },
          "versionName": {
            "description": "Version comment.",
            "type": "string"
          },
          "retVal": {
            "format": "int32",
            "description": "Return value of an end node.",
            "type": "integer"
          },
          "onActivate": {
            "description": "Name of script to be executed, if the node is activated (entered).\nDB column: wf_ev_on_activate",
            "type": "string"
          },
          "alertWait2": {
            "format": "int32",
            "description": "Second Time-limit for a person node or begin node.",
            "type": "integer"
          },
          "department2": {
            "format": "int32",
            "description": "A group ID to constrain access to the node.\nOnly members of this group are allowed to see and\n process the node. Only valid for person nodes. DB column: wf_department2",
            "type": "integer"
          },
          "isNext": {
            "format": "int32",
            "description": "Contains 1, if this node is active.\nDB column: wf_is_next",
            "type": "integer"
          },
          "tag": {
            "format": "int32",
            "description": "reserved.\nDB column: wf_tag",
            "type": "integer"
          },
          "alertWait3": {
            "format": "int32",
            "description": "Third Time-limit for a person node or begin node.",
            "type": "integer"
          },
          "locked": {
            "format": "int32",
            "description": "If node is locked, it contains 1 otherwise 0 DB column: wf_locked",
            "type": "integer"
          },
          "prio": {
            "format": "int32",
            "description": "Workflow priority: 0...high, 1...medium, 2...low.\nDB column: wf_prio",
            "type": "integer"
          },
          "succ_9": {
            "format": "int32",
            "description": "DB column: wf_succ_9",
            "type": "integer"
          },
          "iconId": {
            "description": "Object-GUID of an icon file that is displayed in the designer.",
            "type": "string"
          },
          "departmentGroup": {
            "format": "int32",
            "description": "Grouping of nodes for function takeWorkFlowNode.",
            "type": "integer"
          },
          "succ_5": {
            "format": "int32",
            "description": "DB column: wf_succ_5",
            "type": "integer"
          },
          "formSpec": {
            "description": "User defined data to be stored in the database.",
            "type": "string"
          },
          "succ_6": {
            "format": "int32",
            "description": "DB column: wf_succ_6",
            "type": "integer"
          },
          "succ_7": {
            "format": "int32",
            "description": "DB column: wf_succ_7",
            "type": "integer"
          },
          "alertWait": {
            "format": "int32",
            "description": "Time-limit for a single node. This value is only valid for person nodes.\nDB column:\n wf_alert_wait",
            "type": "integer"
          },
          "succ_8": {
            "format": "int32",
            "description": "DB column: wf_succ_8",
            "type": "integer"
          },
          "succ_1": {
            "format": "int32",
            "description": "DB column: wf_succ_1",
            "type": "integer"
          },
          "succ_2": {
            "format": "int32",
            "description": "DB column: wf_succ_2",
            "type": "integer"
          },
          "succ_3": {
            "format": "int32",
            "description": "DB column: wf_succ_3",
            "type": "integer"
          },
          "versionTag": {
            "description": "Version number.",
            "type": "string"
          },
          "succ_4": {
            "format": "int32",
            "description": "DB column: wf_succ_4",
            "type": "integer"
          },
          "nodeType": {
            "format": "int32",
            "description": "Node type (begin node, split node, etc.).\nDB column: wf_node_type",
            "type": "integer"
          },
          "moveCyclePosX": {
            "format": "int32",
            "description": "If a cycle is re-entered, the nodes in the cycle are duplicated.\nThe copied nodes will be\n placed in the designer moved by this value to the right. If this value is 0, the nodes are\n moved 60 points right and 20 points up. DB column: wf_dx",
            "type": "integer"
          },
          "flowName": {
            "description": "Workflow name.\nDB column: wf_flow_name",
            "type": "string"
          },
          "succ_0": {
            "format": "int32",
            "description": "Successor node(s) succ_0 ...\nSucc 19 DB column: wf_succ_0 This mebers are moved into\n WorkFlowNodeMatrix. They are still here due to compatibiltiy with older stream versions.",
            "type": "integer"
          },
          "posX": {
            "format": "int32",
            "description": "Node X position in designer view.\nDB column: pos_x",
            "type": "integer"
          },
          "lockId": {
            "format": "int32",
            "description": "User ID of the owner of the lock.\nDB column: wf_locked_owner",
            "type": "integer"
          },
          "nameTranslationKey": {
            "description": "Translation-keyword for {@link WFNode#name}.",
            "type": "string"
          },
          "posY": {
            "format": "int32",
            "description": "Node Y position in designer view.\nDB column: pos_y",
            "type": "integer"
          },
          "yNCondition": {
            "description": "IF-Nodes: test condition, person nodes: index values or scripts, split nodes: workflow status.\nDB column: wf_yesnocondition",
            "type": "string"
          },
          "condition": {
            "description": "Contains the ACL of the workflow template. Only valid for begin nodes.\nDB column: wf_condition",
            "type": "string"
          },
          "versionId": {
            "format": "int32",
            "description": "Version ID.",
            "type": "integer"
          },
          "name": {
            "description": "Node name (work instruction).\nDB column: wf_name",
            "type": "string"
          },
          "activate": {
            "format": "int32",
            "description": "ELO-date when the node was entered.\nDB column: wf_activate",
            "type": "integer"
          },
          "designDepartment": {
            "format": "int32",
            "description": "A group ID or user ID that was originally assigned in the designer.\nDB column:\n wf_designdepartment",
            "type": "integer"
          },
          "alertTo": {
            "format": "int32",
            "description": "ID of user who should be informed, if a time-limit exceeds.\nIt might be the time-limit for the\n entire workflow or for a signle person node. DB column: wf_alert_to",
            "type": "integer"
          },
          "terminate": {
            "format": "int32",
            "description": "ELO-date when the node was exited.\nDB column: wf_terminate",
            "type": "integer"
          },
          "versionUserId": {
            "format": "int32",
            "description": "ID of the user who created the workflow version.",
            "type": "integer"
          },
          "nodeId": {
            "format": "int32",
            "description": "Node ID.\nDB column: wf_nodeid",
            "type": "integer"
          },
          "userTerminate": {
            "description": "The ID of the user who has forwarded the node. Not valid for template workflows.\nOnly valid for\n person nodes. DB column: wf_userterminate",
            "type": "string"
          },
          "inUseDate": {
            "format": "int32",
            "description": "ELO-date when the node was visited the last time.\nDB column: wf_in_use_date",
            "type": "integer"
          },
          "eloObjId": {
            "format": "int32",
            "description": "Associated object ID. Only valid for non-template workflows.\nDB column: wf_eloobjid",
            "type": "integer"
          },
          "returnValue": {
            "description": "Return value of an end node.",
            "type": "string"
          },
          "subWorkflowTemplate": {
            "format": "int32",
            "description": "ID of the sub-workflow template.",
            "type": "integer"
          },
          "onTerminate": {
            "description": "Name of script to be executed, if the node is leaved (exited).\nDB column: wf_ev_on_terminate",
            "type": "string"
          },
          "delayDate": {
            "format": "int32",
            "description": "Activate + DelayDays. Not valid for template workflows. Only valid for person nodes.\nDB column:\n wf_duedate",
            "type": "integer"
          },
          "alertTo2": {
            "format": "int32",
            "description": "ID of user who should be informed, if the time-limit alertWait2 exceeds.",
            "type": "integer"
          },
          "userDelayDate": {
            "format": "int32",
            "description": "The workflow node is deferred until this date. ELO date format.\nDB column: wf_user_delaydate",
            "type": "integer"
          },
          "alertTo3": {
            "format": "int32",
            "description": "ID of user who should be informed, if the time-limit alertWait2 exceeds.",
            "type": "integer"
          },
          "packageName": {
            "description": "PackageName of a Workflow, only used for workflow templates",
            "type": "string"
          },
          "department": {
            "format": "int32",
            "description": "ID of user who has to process the node. Might be a group ID too. Only valid for person nodes.\nDB column: wf_department",
            "type": "integer"
          },
          "flowId": {
            "format": "int32",
            "description": "Workflow ID.\nDB column: wf_flowid",
            "type": "integer"
          },
          "nextServerId": {
            "description": "Next server name.\nThis value is used in replication environments and defines the ID of the next\n server (resp. replication branch) where the workflow continues processing.",
            "type": "string"
          },
          "versionCreateDate": {
            "format": "int32",
            "description": "ID of the user who created the workflow version.",
            "type": "integer"
          },
          "commentTranslationKey": {
            "description": "Translation-keyword for {@link WFNode#comment}.",
            "type": "string"
          },
          "subWorkflow": {
            "format": "int32",
            "description": "ID of the active sub-workflow.",
            "type": "integer"
          },
          "label": {
            "description": "Display name by forwarding.",
            "type": "string"
          },
          "succ_19": {
            "format": "int32",
            "description": "DB column: wf_succ_19",
            "type": "integer"
          },
          "succ_18": {
            "format": "int32",
            "description": "DB column: wf_succ_18",
            "type": "integer"
          },
          "deleted": {
            "format": "int32",
            "description": "Flag that indicates whether the workflow template is deleted.\nIf the value is not 0, the\n workflow template is deleted. Only valid for template workflows. DB column: wf_deleted",
            "type": "integer"
          },
          "succ_15": {
            "format": "int32",
            "description": "DB column: wf_succ_15",
            "type": "integer"
          },
          "succ_14": {
            "format": "int32",
            "description": "DB column: wf_succ_14",
            "type": "integer"
          },
          "succ_17": {
            "format": "int32",
            "description": "DB column: wf_succ_17",
            "type": "integer"
          },
          "succType": {
            "format": "int32",
            "description": "This value depends on the node type and is not processed anymore by Indexserver.\nIt is written\n for compability with workflows of older CLIENT versions. DB column: wf_succ_type",
            "type": "integer"
          },
          "succ_16": {
            "format": "int32",
            "description": "DB column: wf_succ_16",
            "type": "integer"
          },
          "delayDays": {
            "format": "int32",
            "description": "An active person node (Activate is set) might be displayed to the user delayed by this number\nof days. Only valid for person nodes. DB column: wf_delaydays",
            "type": "integer"
          },
          "comment": {
            "description": "Comment, only valid for person nodes.\nDB column: wf_comment",
            "type": "string"
          },
          "nodeFlags": {
            "format": "int32",
            "description": "Node flags.\nDB column: wf_nodeflags",
            "type": "integer"
          },
          "completionDate": {
            "format": "int32",
            "description": "ELO-date when the workflow was finished. All nodes contain the same value.\nDB column:\n wf_completion_date",
            "type": "integer"
          },
          "onEnterHandleRollback": {
            "description": "Name of script to be executed when the node encounters an error (exception).\nDB column:\n wf_ev_on_exception_after_enter",
            "type": "string"
          },
          "flowNameTranslationKey": {
            "description": "Translation-keyword for {@link WFDiagram#name}.",
            "type": "string"
          },
          "properties": {
            "description": "Properties field of node.",
            "type": "string"
          },
          "labelTranslationKey": {
            "description": "Translation-keyword for {@link WorkFlowActiveDoc#label}.",
            "type": "string"
          }
        }
      },
      "BResult_460462395": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ESSettingsObj"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinDocEnd": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "sordZ": {
            "$ref": "#/components/schemas/SordZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          }
        }
      },
      "ReportInfoUserProps": {
        "description": "Additional report information for user modifications.",
        "type": "object",
        "properties": {
          "userInfo": {
            "description": "UserInfo object.",
            "$ref": "#/components/schemas/UserInfo"
          },
          "substitutions": {
            "description": "List of active Substitution where the user or any of his groups is set as\n{@link Substitution#substituteId}.",
            "$ref": "#/components/schemas/ListOfSubstitution"
          },
          "idsToNames": {
            "description": "Map of user IDs to user names.\nThis map contains all users referred by {@link #userInfo},\n {@link #userInfoEff}, and {@link #subsInfos}.",
            "$ref": "#/components/schemas/MapToString"
          },
          "userInfoEff": {
            "description": "UserInfo object with effective permissions.",
            "$ref": "#/components/schemas/UserInfo"
          },
          "subsInfos": {
            "description": "Substitution information.\nReplaced by {@link #substitutions}",
            "$ref": "#/components/schemas/ListOfSubsInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_getSessionFromTicket": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "options": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "DocMask": {
        "description": "<p>\nContains the data for a storage mask.\n <\/p>\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "sordType": {
            "format": "int32",
            "description": "Prepare this type for a new Sord object.\n<p>\n If this value is 0, the Sord type is {@link SordC#LBT_DOCUMENT} for a new document. For a new\n folder, the default sord type is set as the parent's sord type plus 1. If the parent is\n undefined, the default type is 1.\n <\/p>\n <p>\n If this value is not 0, it must be given between 1 and {@link SordC#LBT_DOCUMENT}-1 for folder\n types and between {@link SordC#LBT_DOCUMENT} and {@link SordC#LBT_DOCUMENT_MAX} for document\n types.\n <\/p>",
            "type": "integer"
          },
          "dataOrganisation": {
            "format": "int32",
            "description": "This member specifies how the index values are stored in database.",
            "type": "integer"
          },
          "lifetime": {
            "description": "New objects are valid for this length of time.",
            "type": "string"
          },
          "acl": {
            "description": "Access control for the mask line",
            "type": "string"
          },
          "docAclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "inheritFromMasks": {
            "description": "Inherit aspects from this keywording forms.\nOnly valid for {@link #dataOrganisation} =\n {@link DocMaskC#DATA_ORGANISATION_ASPECT}.",
            "$ref": "#/components/schemas/ListOfDocMaskInherit"
          },
          "TStamp": {
            "description": "Last update time of the storage mask data.",
            "type": "string"
          },
          "transitiveChildren": {
            "description": "Transitive children of the mask.",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "TStampSync": {
            "description": "Timestamp of this object's last export by the replication.",
            "type": "string"
          },
          "DKind": {
            "format": "int32",
            "description": "The marker color ID for new objects created with this mask.",
            "type": "integer"
          },
          "details": {
            "description": "Detailed properties for the DocMask object.",
            "$ref": "#/components/schemas/DocMaskDetails"
          },
          "id": {
            "format": "int32",
            "description": "Storage mask ID.",
            "type": "integer"
          },
          "text": {
            "description": "Tab captions. List of tab captions separated by pipe char |.",
            "type": "string"
          },
          "packageName": {
            "description": "Package name of DocMask",
            "type": "string"
          },
          "lines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocMaskLine"
            }
          },
          "barcode": {
            "description": "Barcode string.",
            "type": "string"
          },
          "flowId": {
            "format": "int32",
            "description": "The ID of a workflow that is started if a new object with this mask is created.\nIf the\n SessionOption START_DOCMASK_WORKFLOWS is set, the Indexserver starts this workflow, if an\n associated document is created. Otherwise the client application is responsible for starting\n the workflow.",
            "type": "integer"
          },
          "lockName": {
            "description": "Name of the user that has locked th storage mask. Read-only, ignored in checkinDocMask.",
            "type": "string"
          },
          "textTranslationKey": {
            "description": "Translation-keyword for {@link DocMask#text}.",
            "type": "string"
          },
          "index": {
            "description": "This control string provides a way of storing new storage mask objects automatically in a\nparticular archive path.",
            "type": "string"
          },
          "localAspectAssocs": {
            "description": "Keywording aspect associations which are defined locally in this mask.\nOnly valid for\n {@link #dataOrganisation} = {@link DocMaskC#DATA_ORGANISATION_ASPECT}.",
            "$ref": "#/components/schemas/MapToAspectAssoc"
          },
          "DPath": {
            "format": "int32",
            "description": "Document storage path name where the documents of this mask should be stored.",
            "type": "integer"
          },
          "lockId": {
            "format": "int32",
            "description": "User ID of the user that has locked the storage mask. If -1, no lock is held.",
            "type": "integer"
          },
          "nameTranslationKey": {
            "description": "Translation-keyword for {@link DocMask#name}.",
            "type": "string"
          },
          "deleted": {
            "description": "Deleted status.",
            "type": "boolean"
          },
          "flowId2": {
            "format": "int32",
            "description": "The ID of a workflow that is to be started if a new version of an associated document is\nchecked in. If the SessionOption START_DOCMASK_WORKFLOWS is set, the Indexserver starts this\n workflow, if an associated document is checked in. Otherwise the client application is\n responsible for starting the workflow.",
            "type": "integer"
          },
          "maskIdsForChildEntries": {
            "description": "Child entries in the archive hierarchy should only use this keywording forms.\nIf this element\n is null or empty, child entries can use any keywording form. Otherwise, new child entries have\n to be assigned to one of the listed form. This rule only applies to physical and not to logical\n references. The maximum number of keywording forms is defined by\n {@link DocMaskC#MAX_MASK_IDS_FOR_CHILD_ENTRIES}.",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "aclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "name": {
            "description": "Storage mask name. It can be translated into reps.\nfrom the users language: set\n <code>SessionOptionsC.TRANSLATE_TERM<\/code>.",
            "type": "string"
          },
          "DAcl": {
            "description": "New objects are created with these ACL permission settings.",
            "type": "string"
          },
          "guid": {
            "description": "GUID",
            "type": "string"
          },
          "aspectAssocs": {
            "description": "Keywording aspect associations.\nThese are the effective aspect associations inluding locally\n defined associations and inherited associations. Only valid for {@link #dataOrganisation} =\n {@link DocMaskC#DATA_ORGANISATION_ASPECT}.",
            "$ref": "#/components/schemas/MapToAspectAssoc"
          },
          "deletionDeadline": {
            "description": "Deletion deadline for new objects.",
            "type": "string"
          }
        }
      },
      "LockZ": {
        "description": "This class encapsulates the constants of the LockC class.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants from the LockC class.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_createAspectMask": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "name": {
            "type": "string"
          },
          "aspectAssocs": {
            "$ref": "#/components/schemas/ListOfAspectAssoc"
          }
        }
      },
      "PreviewImageInfoC": {
        "type": "object",
        "properties": {
          "DEFAULT_DPI": {
            "format": "int32",
            "description": "Default dots per inch for scalable vector graphics.",
            "type": "integer"
          },
          "SIZE_LARGE": {
            "format": "int32",
            "description": "Flag that signalizes the server to scale down preview images to a size suitable for most\nbrowser's canvas element. Choosing this settings will scale down only very large images.",
            "type": "integer"
          },
          "SIZE_TINY": {
            "format": "int32",
            "description": "Flag that signalizes the server to process preview images in a size for thumbnails.",
            "type": "integer"
          },
          "SIZE_MEDIUM": {
            "format": "int32",
            "description": "Flag that signalizes the server to process preview images in a medium size.\nImages of this size\n are optimized in memory usage. They lack readability of text smaller than 10 points.",
            "type": "integer"
          },
          "SIZE_ORIGINAL": {
            "format": "int32",
            "description": "Flag that signalizes the server to process preview images in the size of the original document.\nIn case scalable documents sources like PDF, {@link PreviewImageInfoC#DEFAULT_DPI} is used.",
            "type": "integer"
          },
          "SIZE_TINIER": {
            "format": "int32",
            "description": "Flag that signalizes the server to process preview images in a size for tiny thumbnails.\nThe\n maximum length of an edge will be 100 pixels.",
            "type": "integer"
          }
        }
      },
      "Substitution": {
        "description": "A Substitution is used to create, update and read substitutions.",
        "type": "object",
        "properties": {
          "tstampsync": {
            "description": "Timestamp of last update. Read-only.",
            "type": "string"
          },
          "settings": {
            "description": "Contains all boolean settings for a Substitution",
            "$ref": "#/components/schemas/SubstitutionSettings"
          },
          "access": {
            "format": "int32",
            "description": "The current users access rights for this Substitution. Returns a combination of AccessC.\nLUR_\n constants. Read-only.",
            "type": "integer"
          },
          "substituteName": {
            "description": "<p>\nUser or group to whom the substitution is directed.\n <\/p>\n <p>\n {@link #substituteId} is ignored if this member is set when calling\n {@link IXServicePortIF#checkinSubstitutions}.\n <\/p>",
            "type": "string"
          },
          "substituteId": {
            "format": "int32",
            "description": "<p>\nUser or group to whom the substitution is directed.\n <\/p>\n <p>\n This variable is ignored when calling {@link IXServicePortIF#checkinSubstitutions} if\n {@link #substituteName} is set.\n <\/p>",
            "type": "integer"
          },
          "creatorId": {
            "format": "int32",
            "description": "<p>\nUser who created the Substitution. Read-only.\n <\/p>",
            "type": "integer"
          },
          "creatorName": {
            "description": "<p>\nUser who created the Substitution. Read-only.\n <\/p>",
            "type": "string"
          },
          "groupsToInheritRights": {
            "description": "<p>\nList of groups of which the substitute inherits the rights.\n <\/p>\n <p>\n It is not possible to inherit rights from a user, only from groups. Every group needs to have\n the the right {@link AccessC#FLAG2_CAN_BE_SUBSTITUTED}\n <\/p>",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "forwardedBy": {
            "description": "If the substitution was forwarded by {@link IXServicePortIF#forwardSubstitution}, the original\nsubstitutes ({@link #substituteId} are saved here.\n \n Read-only",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "userName": {
            "description": "<p>\nThe user or group which is substituted by this object.\n <\/p>\n <p>\n {@link #userId} is ignored if this member is set when calling\n {@link IXServicePortIF#checkinSubstitutions}.\n <\/p>",
            "type": "string"
          },
          "message": {
            "description": "Message to add to the substitution.",
            "type": "string"
          },
          "userId": {
            "format": "int32",
            "description": "<p>\nThe user or group which is substituted by this object.\n <\/p>\n <p>\n This variable is ignored when calling {@link IXServicePortIF#checkinSubstitutions} if\n {@link #userName} is set.\n <\/p>",
            "type": "integer"
          },
          "forwardedTo": {
            "description": "<p>\nIf a substitution was forwarded to an other one, this references the {@link #guid} of the\n substitution it was forwarded to.\n <\/p>\n Read-only.",
            "type": "string"
          },
          "substituteType": {
            "format": "int32",
            "description": "<p>\nType of the substitute.\n <\/p>\n <p>\n Read-only, refers to {@link UserInfoC#TYPE_GROUP} or {@link UserInfoC#TYPE_USER}\n <\/p>",
            "type": "integer"
          },
          "lockId": {
            "format": "int32",
            "description": "<p>\nUser ID of the user that has locked the Substitution\n <\/p>\n <p>\n If -1, no lock is held. Read-only, ignored in {@link IXServicePortIF#checkinSubstitutions}\n <\/p>",
            "type": "integer"
          },
          "tstamp": {
            "description": "Timestamp of last update. Read-only.",
            "type": "string"
          },
          "guid": {
            "description": "<p>\nGUID of substitution\n <\/p>\n <p>\n A new substitution is saved if guid is empty on checkin. An existing substitution is updated if\n a guid is provided.\n <\/p>",
            "type": "string"
          },
          "forwardedFrom": {
            "description": "<p>\nIf a substitution was forwarded to an other one, this references the {@link #guid} of the\n substitution it was forwarded from.\n <\/p>\n Read-only.",
            "type": "string"
          },
          "substitutionPeriods": {
            "description": "<p>\nList of time periods in which the substitution is activated automatically if\n {@link SubstitutionSettings#activatePeriodsAutomatically} is set to true.\n <\/p>",
            "$ref": "#/components/schemas/ListOfSubstitutionPeriod"
          },
          "lockName": {
            "description": "<p>\nName of the user that has locked the Substitution\n <\/p>\n <p>\n Read-only, ignored in {@link IXServicePortIF#checkinSubstitutions}\n <\/p>",
            "type": "string"
          },
          "status": {
            "description": "<p>\nReturns the status of the substitution.\n <\/p>\n <p>\n In case of checking in a substitution, this variable is ignored.\n <\/p>",
            "$ref": "#/components/schemas/SubstitutionStatus"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutNoteTemplates": {
        "type": "object",
        "properties": {
          "ntemplZ": {
            "$ref": "#/components/schemas/NoteTemplateZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinCryptInfos": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "cryptInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CryptInfo"
            }
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "OcrWorkerC": {
        "type": "object",
        "properties": {
          "UNREGISTERED": {
            "format": "int32",
            "type": "integer"
          },
          "BUSY": {
            "format": "int32",
            "type": "integer"
          },
          "IDLE": {
            "format": "int32",
            "type": "integer"
          },
          "REGISTERED": {
            "format": "int32",
            "type": "integer"
          },
          "DEAD": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_loginAdmin": {
        "type": "object",
        "properties": {
          "clientComputer": {
            "type": "string"
          },
          "reportAsUser": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userPwd": {
            "type": "string"
          },
          "userName": {
            "type": "string"
          }
        }
      },
      "BRequest_FeedService_findNextNotification": {
        "type": "object",
        "properties": {
          "searchId": {
            "type": "string"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "idx": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_getSessionOptions": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinCounters": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "counterInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CounterInfo"
            }
          }
        }
      },
      "ListOfNote": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Note"
        }
      },
      "BResult_777531606": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/LoginResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BResult_910482075": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Event"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "MapHead": {
        "description": "Internal class.",
        "type": "object",
        "properties": {
          "lockId": {
            "format": "int32",
            "description": "Lock status. -1: unlocked, &gt;=0 user-ID.",
            "type": "integer"
          },
          "TStamp": {
            "description": "Timestamp.",
            "type": "string"
          },
          "TStampSync": {
            "description": "EIX-3097: TimeStampSync",
            "type": "string"
          },
          "objId": {
            "format": "int32",
            "description": "Associated object ID or 0.",
            "type": "integer"
          },
          "guid": {
            "description": "GUID.",
            "type": "string"
          },
          "id": {
            "description": "Map id.",
            "type": "string"
          }
        }
      },
      "QueryJobProtocolC": {
        "description": "<p>\nConstants for querying log messages of background jobs.\n <\/p>",
        "type": "object",
        "properties": {
          "LOG_LEVEL_WARN": {
            "format": "int32",
            "description": "Return only warnings.",
            "type": "integer"
          },
          "LOG_LEVEL_ERROR": {
            "format": "int32",
            "description": "Return only errors.",
            "type": "integer"
          },
          "LOG_LEVEL_INFO": {
            "format": "int32",
            "description": "Return only normal informations.",
            "type": "integer"
          },
          "OBJID_NOT_SET": {
            "format": "int32",
            "description": "This value indicates that the object-ID is not set.",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_setSessionOptions": {
        "type": "object",
        "properties": {
          "opts": {
            "$ref": "#/components/schemas/SessionOptions"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BResult_1995912373": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/NoteTemplate"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "DocumentOptions": {
        "description": "Use this class to search for documents by\n{@link de.elo.ix.client.IXServicePortIF#findFirstSords(de.elo.ix.client.ClientInfo, de.elo.ix.client.FindInfo, int, de.elo.ix.client.SordZ)}\n and\n {@link de.elo.ix.client.IXServicePortIF#findNextSords(de.elo.ix.client.ClientInfo, String, int, int, de.elo.ix.client.SordZ)}.<br>\n Deliver query by {@link de.elo.ix.client.esearch.ESearchParams}.",
        "type": "object",
        "properties": {
          "highlightedText": {
            "description": "Return highlighted result text for each sord.\n<br>\n Highlighted text is retrieved from fulltext and surrounded by b-tags.<br>\n Defaults to false.",
            "type": "boolean"
          },
          "resultField": {
            "description": "Return fields in which search terms are found for each sord.\n<br>\n Defaults to false.",
            "type": "boolean"
          },
          "sort": {
            "description": "Results are ordered by this parameter.",
            "$ref": "#/components/schemas/ESearchOrderE"
          },
          "currentFolderId": {
            "format": "int32",
            "description": "Provide this ID to restrict search on current folder.\n<br>",
            "type": "integer"
          },
          "relevance": {
            "description": "Calculate relevance for each sord.\n<br>\n Defaults to false.",
            "type": "boolean"
          }
        }
      },
      "BRequest_FeedService_internalInsertSystemAction": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutUserProfile": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "userProfile": {
            "$ref": "#/components/schemas/UserProfile"
          }
        }
      },
      "MapToAggregationQuery": {
        "additionalProperties": {
          "$ref": "#/components/schemas/AggregationQuery"
        },
        "type": "object"
      },
      "Note": {
        "description": "<p>\nThis helper class inherits all members from <code>NoteData<\/code> and adds a static member to\n access the bit constants for the <code>NoteData<\/code> members.\n <\/p>",
        "type": "object",
        "properties": {
          "noteText": {
            "description": "Additional information for textual stamps.\nValid only for notes of type TYPE_ANNOTATION_NOTE,\n TYPE_ANNOTATION_STAMP and TYPE_ANNOTATION_NOTE_WITHFONT. Either desc, noteText, noteImage or\n noteFreehand can be set.",
            "$ref": "#/components/schemas/NoteText"
          },
          "access": {
            "format": "int32",
            "description": "Access rights for the current user. Read-only.",
            "type": "integer"
          },
          "color": {
            "format": "int32",
            "description": "RGB value. Undefined for notes of type TYPE_ANNOTATION_STAMP and TYPE_ANNOTATION_NOTE_WITHFONT.",
            "type": "integer"
          },
          "acl": {
            "description": "Access control list. Only used for notes of type TYPE_ANNOTATION_MARKER.\nSet member\n aclItems=null on check in otherwise it is ignored.",
            "type": "string"
          },
          "ownerId": {
            "format": "int32",
            "description": "The ID of the user who created the note.\nAdministrators can set the ownerId to an arbitary user\n ID in checkinNotes. Set ownerName=&quot;&quot; in this case.",
            "type": "integer"
          },
          "type": {
            "format": "int32",
            "description": "The note type.",
            "type": "integer"
          },
          "TStamp": {
            "description": "Timestamp of the last change to the note. The format is JJJJ.MM.DD.hh.mm.\nss",
            "type": "string"
          },
          "YPos": {
            "format": "int32",
            "description": "The position in the Y axis when the note is displayed on a document in ELO.\nTaken from the top\n left corner of the document.",
            "type": "integer"
          },
          "ownerName": {
            "description": "The name of the user that has created the note.\nAdministrators can set the ownerName to an\n arbitary user name in checkinNotes. Set ownerId=-1 in this case.",
            "type": "string"
          },
          "TStampSync": {
            "description": "Timestamp of this object's last export by the replication.",
            "type": "string"
          },
          "pageNo": {
            "format": "int32",
            "description": "The page number to which the note is attached.",
            "type": "integer"
          },
          "noteFreehand": {
            "description": "Point information for a freehand line.\nValid only for notes of type TYPE_ANNOTATION_FREEHAND\n and TYPE_ANNOTATION_HORIZONTAL_LINE. Either desc, noteText, noteImage or noteFreehand can be\n set.",
            "$ref": "#/components/schemas/NoteFreehand"
          },
          "id": {
            "format": "int32",
            "description": "The unique id for the note.",
            "type": "integer"
          },
          "lockName": {
            "description": "The user name that holds the lock or an empty string if the note is not locked.",
            "type": "string"
          },
          "deleteDateIso": {
            "description": "The Note is deleted at this date. ClientInfo determines the Timezone.\n<p>\n Is undefined if isDeleted() returns false.\n <\/p>",
            "type": "string"
          },
          "height": {
            "format": "int32",
            "description": "The height of the note (y axis), when displayed on a document in ELO.",
            "type": "integer"
          },
          "noteImage": {
            "description": "Additional information for image stamps. Valid only for notes of type TYPE_ANNOTATION_STAMP.\nEither desc, noteText, noteImage or noteFreehand can be set.",
            "$ref": "#/components/schemas/NoteImage"
          },
          "lockId": {
            "format": "int32",
            "description": "The ID of the user that holds the lock or -1, if the note is not locked.",
            "type": "integer"
          },
          "deleted": {
            "description": "True if the note is deleted, otherwise false.",
            "type": "boolean"
          },
          "XPos": {
            "format": "int32",
            "description": "The position in the x axis when the note is displayed on a document in ELO.\nTaken from the top\n left corner of the document.\n <p>\n For NoteC.TYPE_ANNOTATION_FREEHAND and NoteC.TYPE_ANNOTATION_HORIZONTAL_LINE the values XPos,\n YPos, Width, Height describe the enveloping rectangle of the line including the line width.\n This values are computed by the Indexserver if the note is stored.\n <\/p>",
            "type": "integer"
          },
          "createDateIso": {
            "description": "ISO encoded external (user defined) date.",
            "type": "string"
          },
          "aclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "width": {
            "format": "int32",
            "description": "Width ( x axis) of the note when displayed on a document in ELO.",
            "type": "integer"
          },
          "objId": {
            "description": "Object ID of the associated Sord object or any of the ID specifiers that are valid for\ncheckoutSord too. Functions createNote and checkoutNotes return only numerical object IDs.",
            "type": "string"
          },
          "guid": {
            "description": "The GUID for the note.",
            "type": "string"
          },
          "desc": {
            "description": "The text for the note.",
            "type": "string"
          }
        }
      },
      "OcrInfoQueryLanguages": {
        "description": "This class describes a request for querying the supported languages of the OCR.",
        "type": "object",
        "properties": {
          "ctrl": {
            "format": "int32",
            "description": "Reserved.",
            "type": "integer"
          }
        }
      },
      "LockC": {
        "description": "<p>\nConstants to lock data against concurrent modification.\n <\/p>",
        "type": "object",
        "properties": {
          "NO": {
            "description": "Do not lock the requested record(s).",
            "$ref": "#/components/schemas/LockZ"
          },
          "bsetYES": {
            "type": "string"
          },
          "FORCE": {
            "description": "Lock or unlock regardless of whether the data is locked by another user.\nThis requires main\n administration privileges in most cases.",
            "$ref": "#/components/schemas/LockZ"
          },
          "bsetIF_FREE": {
            "type": "string"
          },
          "YES": {
            "description": "Lock or unlock. The lock is set, if the record is unlocked or locked by the current user.\nWith\n respect to locking the indexing information (LockC.SORD) and document versions (LockC.DOC),\n LockC.YES locks and unlocks both since ELO 10. In order to successfully complete an operation\n with this type of Lock, another user must not hold even one of them.",
            "$ref": "#/components/schemas/LockZ"
          },
          "SORD": {
            "description": "Lock or unlock the indexing information.\nWorks like {@link LockC#YES} but is only valid at\n check*Sord() and check*Doc() respectively.",
            "$ref": "#/components/schemas/LockZ"
          },
          "DOC": {
            "description": "Lock or unlock document versions.\nWorks like {@link LockC#YES} but is only valid at\n check*Sord() and check*Doc() respectively.",
            "$ref": "#/components/schemas/LockZ"
          },
          "bsetFORCE": {
            "type": "string"
          },
          "IF_FREE": {
            "description": "A lock is only set, if the record is unlocked.\nA lock request is refused too, if the record is\n already a lock by the current user.",
            "$ref": "#/components/schemas/LockZ"
          },
          "bsetSORD": {
            "type": "string"
          },
          "bsetDOC": {
            "type": "string"
          },
          "bsetNO": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_getArchiveStatistics": {
        "type": "object",
        "properties": {
          "opts": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ImportOptions": {
        "description": "Internal class.",
        "type": "object",
        "properties": {
          "uploadStream": {
            "$ref": "#/components/schemas/BStreamReference"
          },
          "packagesImported": {
            "description": "Import packages.",
            "type": "boolean"
          },
          "conflictHandling": {
            "$ref": "#/components/schemas/ConflictHandlingE"
          }
        }
      },
      "AggregationQuery": {
        "type": "object",
        "properties": {
          "aggregationQueryParams": {
            "description": "Contains type specific parameters (e.g. for type=TERMS parameters size, sub-aggregations, ...\n)",
            "$ref": "#/components/schemas/AggregationQueryParams"
          },
          "searchField": {
            "description": "Provides the constant of the field to be aggregated.\n<br>\n To aggregate an index field, set this to SearchFieldE.INDEXFIELD and provide its name in\n indexFieldKey.<br>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "indexFieldKey": {
            "description": "If searchfield equals to SearchFieldE.INDEXFIELD, provide the name of the index field here.\n<br>\n If searchField != SearchFieldE.INDEXFIELD, this value is ignored. If the associated docmask is\n of type DocMaskC.DATA_ORGANISATION_OBJKEYS or DATA_ORGANISATION_TABLE the value of this field\n should be the line key of the docMaskLine. If the associated docMask is of type\n DocMaskC.DATA_ORGANISATION_ASPECT the value of this field should be the name of the aspectAssoc\n followed by \"¶\" followed by the line key of the aspectLine, e.g. CUSTOMERADDRESS¶STREET.",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/AggregationTypeE"
          },
          "fieldType": {
            "description": "Defines the concrete ES field together with searchField.\n<br>\n Options are tokenized, not tokenized, numeric, date.<br>",
            "$ref": "#/components/schemas/FieldTypeE"
          }
        }
      },
      "BRequest_MyELOService_readContent": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "state": {
            "$ref": "#/components/schemas/MyELOState"
          },
          "info": {
            "$ref": "#/components/schemas/MyELOInfo"
          }
        }
      },
      "ProcessAcl": {
        "description": "This class is used to assign or remove ACLs to an object.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "andAclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "subAcl": {
            "description": "ACL to be added in raw database format. Ignored, if subAclItems is not null.",
            "type": "string"
          },
          "andAcl": {
            "description": "ACL to be added in raw database format. Ignored, if andAclItems is not null.",
            "type": "string"
          },
          "addAclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "setAcl": {
            "description": "ACL to be added in raw database format. Ignored, if setAclItems is not null.",
            "type": "string"
          },
          "setAclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "addAcl": {
            "description": "ACL to be added in raw database format. Ignored, if addAclItems is not null.",
            "type": "string"
          },
          "subAclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          }
        }
      },
      "FindOptions": {
        "description": "This class contains several options to control the search process of findFirstSords.",
        "type": "object",
        "properties": {
          "searchLifetimeSeconds": {
            "format": "int32",
            "description": "Lifetime of cached search results.\nThis value overrides the ELOix configuration option\n searchLifetimeSeconds. The value determines the time in seconds, how long the search results\n are cached. As long the results are valid, they can be read by findNext-functions of the API.",
            "type": "integer"
          },
          "escapeChar": {
            "description": "SQL escape character. Overwrites the character that can be specified by setSessionOptions.",
            "type": "string"
          },
          "objIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "evalCount": {
            "description": "Compute the number of results. The number of results are returned in FindResult.count.\nBe aware\n of the fact that this option needs to read all database result rows and check user access\n before findFirstSords returns.",
            "type": "boolean"
          },
          "searchMode": {
            "description": "The searchMode describes how search terms are concatinated with the boolean operators AND or\nOR.",
            "$ref": "#/components/schemas/SearchModeZ"
          },
          "wildcards": {
            "description": "This characters are used as wildcards in search terms.\nThe first wildcard is used for zero or\n more characters. The second wildcard is used for exactly one character. By default (if this\n member is null or empty), only the first wildcard is defined: *.",
            "type": "string"
          },
          "orderBy": {
            "description": "An SQL ORDER BY clause can be provided here, if required.",
            "type": "string"
          },
          "onlyDeleted": {
            "description": "Only logically deleted objects. If this member is true, inclDeleted is ignored.",
            "type": "boolean"
          },
          "lockZ": {
            "description": "Lock all result Sords.\nIf at least one of the sords cannot be locked, an exception is thrown\n from findFirstSords. Be aware of the fact that this option needs to read all database result\n rows and check user access. The objects are unlocked by a call to findClose.",
            "$ref": "#/components/schemas/LockZ"
          },
          "totalCount": {
            "format": "int32",
            "description": "The search is terminated if this number of objects are found.\nIf the number of results should\n not be constrained, set this value to 2^32-1 = 2147483647 (maximum value of a positive 32bit\n integer minus 1). If totalCount is not set, the Indexserver option totalCount is used, which is\n 10000 by default. If this value is set to 1, findFirstSords will not generate a report entry\n {@link ReportInfoC#ACT_CLIENT_SEARCH}.",
            "type": "integer"
          },
          "replSet": {
            "description": "Results are returned only for objects that reside in this replication set.",
            "$ref": "#/components/schemas/ReplSet"
          },
          "TStamp": {
            "description": "Return objects that were last modified at this time or in this time range.\nThe time stamp is an\n ISO formatted value in the UTC timezone. It might include dots to separate the date and time\n elements. A time range is separated by the <code>rangeDelimiter<\/code>. The selection includes\n the range limits. Because the FindOptions cannot be the only criteria in FindInfo, use\n FindByIndex.name=\"*\" to select over the entire archive.",
            "type": "string"
          },
          "searchId": {
            "description": "Restricts the results to objects returned by a previous search.",
            "type": "string"
          },
          "rangeDelimiter": {
            "description": "Range values can be used to search many index and date attribute values.\nThe delimiter between\n the lower limit and upper limit value is defined by rangeDelimiter. The default rangeDelimiter\n is \"...\".",
            "type": "string"
          },
          "reserved": {
            "description": "This value is reserved for internal testing purposes and must be set to 0 in all cases.",
            "type": "string"
          },
          "docMaskZ": {
            "$ref": "#/components/schemas/DocMaskZ"
          },
          "sortOrder": {
            "format": "int32",
            "description": "Defines the sort order of the results.\nIf sortOrder is 0 and the search process searches for\n child objects (FindInfo.findChildren!=null), the objects are sorted by the sort flags of the\n parent. If sortOrder is 0 and the search uses FindInfo.findByIndex, the objects are sorted\n alphabetically.",
            "type": "integer"
          },
          "excludeSummary": {
            "description": "Do not generate summary information.\nRetrieving summaries is very expensive for the iSearch\n module.",
            "type": "boolean"
          },
          "timeoutSeconds": {
            "format": "int32",
            "description": "Specifies the time limit for the search. If the limit is exceeded, the search is interruped.\nIf\n the search is not to have a time limit timeoutSeconds=0 must be used.",
            "type": "integer"
          },
          "findResultAccessMode": {
            "description": "Describes how the client application will access the results.",
            "$ref": "#/components/schemas/FindResultAccessMode"
          },
          "inclDeleted": {
            "description": "Include logically deleted objects.",
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_findFirstReportInfos": {
        "type": "object",
        "properties": {
          "opts": {
            "$ref": "#/components/schemas/FindReportInfo"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "UpDownloadEventInfo": {
        "description": "This class describes a document stream (version, attachment, preview, fulltext, signature) being\nuploaded or downloaded in an event of {@link DocumentEvents}.",
        "type": "object",
        "properties": {
          "offset": {
            "description": "Document related stream should be downloaded starting at this position.\nOnly valid for\n {@link DocumentEvents#beginDownload(de.elo.ix.client.IXServerEventsContext, UpDownloadEventInfo)}.\n If the entire stream should be read, {@link #offset} is 0 and {@link #length} is -1.",
            "type": "string"
          },
          "kind": {
            "description": "Kind of document related stream.",
            "$ref": "#/components/schemas/UpDownloadKind"
          },
          "docId": {
            "format": "int32",
            "description": "Document version ID.\nOnly valid for\n {@link DocumentEvents#beginDownload(de.elo.ix.client.IXServerEventsContext, UpDownloadEventInfo)}.",
            "type": "integer"
          },
          "usage": {
            "description": "From where an event is called.",
            "$ref": "#/components/schemas/UpDownloadUsage"
          },
          "length": {
            "description": "Number of bytes to download from a document related stream.\nOnly valid for\n {@link DocumentEvents#beginDownload(de.elo.ix.client.IXServerEventsContext, UpDownloadEventInfo)}.\n If this element is -1, read up to the end of the stream. If the entire stream should be read,\n {@link #offset} is 0 and {@link #length} is -1.",
            "type": "string"
          },
          "preliminaryTest": {
            "description": "A preliminary test for a later uploaded stream.\nWhile uploading a content stream for a new\n document via {@link de.elo.ix.client.IXConnectionIF#upload(String, java.io.File)} to the\n server, the related Sord object is unknown. So the information that usually controls, whether a\n document processor shall handle the stream is unavailable. To solve this situation, the\n uploaded stream is stored temporarily and the actual upload is deferred to the function\n {@link de.elo.ix.client.IXServicePortIF#checkinDocEnd}. In order to know whether a stream\n should be temporarily stored, function\n {@link de.elo.ix.client.IXServicePortIF#checkinDocBegin2} calls the event\n {@link DocumentEvents#beginUpload}. The returned document processor is only checked to be\n non-null but is never invoked. The document processor used to process the stream is requested\n in {@link IXServicePortIF#checkinDocEnd}.",
            "type": "boolean"
          },
          "sord": {
            "description": "Sord object.\nCheck {@link Sord#getChangedMembers()} to find out, which members of the Sord\n object are valid. Usually, only {@link Sord#getId()} is set. This member is null, if the client\n application uses\n {@link de.elo.ix.client.IXServicePortIF#checkinDocBegin(de.elo.ix.client.ClientInfo, de.elo.ix.client.Document)\n to prepare a document upload.",
            "$ref": "#/components/schemas/Sord"
          }
        }
      },
      "DocInfoDM": {
        "description": "<p>\nDocument information table of DM. For performance reason directly read by IX\n <\/p>\n <p>\n Copyright: Copyright (c) 2003\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "pathId2": {
            "format": "int32",
            "description": "reserved DB column: pathid2",
            "type": "integer"
          },
          "pathId": {
            "format": "int32",
            "description": "Storage path ID DB column: pathid",
            "type": "integer"
          },
          "relFilePath": {
            "description": "Relative file path",
            "type": "string"
          },
          "previewExtOrig": {
            "description": "Original preview file extension for encrypted previews.",
            "type": "string"
          },
          "sizeOrigL": {
            "description": "Original file extension for encrypted documents",
            "type": "string"
          },
          "encrSet": {
            "format": "int32",
            "description": "Encryption set.",
            "type": "integer"
          },
          "previewSizeL": {
            "description": "Size of preview file. Is 0, if there is no preview file assigned.\nIs -1, if preview creation\n has failed.",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "Document version ID.\nDB column: docid",
            "type": "integer"
          },
          "lastUpdateIso": {
            "description": "Last update date ISO.\nDB column: lastupdate",
            "type": "string"
          },
          "sizeOrig": {
            "format": "int32",
            "description": "Original file size for encrypted documents",
            "type": "integer"
          },
          "owner": {
            "format": "int32",
            "description": "User ID.\nDB column: owner",
            "type": "integer"
          },
          "ext": {
            "description": "File extension DB column: ext",
            "type": "string"
          },
          "previewSize": {
            "format": "int32",
            "description": "Size of preview file. Is 0, if there is no preview file assigned.\nIs -1, if preview creation\n has failed.",
            "type": "integer"
          },
          "ftExt": {
            "description": "Fulltext file extension.",
            "type": "string"
          },
          "extOrig": {
            "description": "Original file extension for encrypted documents",
            "type": "string"
          },
          "fulltextContentTStamp": {
            "description": "Fulltext content timestamp",
            "type": "string"
          },
          "sizeL": {
            "description": "Document file size.",
            "type": "string"
          },
          "fulltextContentSize": {
            "format": "int32",
            "description": "Fulltext content file size.\nSince the fulltext content file is usually stored in UTF-8\n encoding, the file size might be different from the number of characters.",
            "type": "integer"
          },
          "lastAccessIso": {
            "description": "Last access date ISO.\nDB column: lastaccess",
            "type": "string"
          },
          "size": {
            "format": "int32",
            "description": "File size.\nDB column: docsize",
            "type": "integer"
          },
          "createDateIso": {
            "description": "Create date ISO.\nDB column: createdate",
            "type": "string"
          },
          "guid": {
            "description": "Document GUID.\nDB column: docguid",
            "type": "string"
          },
          "fclip": {
            "description": "reserved DB column: fclip",
            "type": "string"
          },
          "previewExt": {
            "description": "Preview file extension.",
            "type": "string"
          },
          "md5": {
            "description": "MD5 hash.\nDB column: md5",
            "type": "string"
          }
        }
      },
      "DocMaskZ": {
        "description": "This class encapsulates the constants of the DocMaskC class.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants from the DocMaskC class.",
            "type": "string"
          }
        }
      },
      "TranslateTerm": {
        "description": "Objects of this class represent one term in different languages.",
        "type": "object",
        "properties": {
          "deleted": {
            "description": "True, if this entry is logically deleted.",
            "type": "boolean"
          },
          "tStampSync": {
            "description": "Timestamp of this object's last export by the replication.",
            "type": "string"
          },
          "translationKey": {
            "description": "Optional language independent translation key.\nThis value must match the regular expression\n {@link TranslateTermC#TRANSLATION_KEY_REGEX}.",
            "type": "string"
          },
          "termLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "level": {
            "format": "int32",
            "description": "Priority level of this entry.",
            "type": "integer"
          },
          "tStamp": {
            "description": "Last modified. ISO date with seaparator \".\" measured in UTC.",
            "type": "string"
          },
          "guid": {
            "description": "GUID",
            "type": "string"
          },
          "langs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "packageName": {
            "description": "Configuration package.",
            "type": "string"
          }
        }
      },
      "BRequest_FeedService_findNextHashTagRelation": {
        "type": "object",
        "properties": {
          "searchId": {
            "type": "string"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "hashTagZ": {
            "$ref": "#/components/schemas/HashTagZ"
          },
          "idx": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "ArrayOfDocument": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Document"
        }
      },
      "BRequest_IXServicePortIF_createActivityProject": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "projectName": {
            "type": "string"
          }
        }
      },
      "RepliHist": {
        "description": "Internal class",
        "type": "object",
        "properties": {
          "arcShort": {
            "description": "DB column: rharcshort",
            "type": "string"
          },
          "arcGuid": {
            "description": "DB column: rharcguid",
            "type": "string"
          },
          "arcPriorityLocal": {
            "format": "int32",
            "type": "integer"
          },
          "succ": {
            "format": "int32",
            "description": "DB column: rhsucc",
            "type": "integer"
          },
          "tSEnd": {
            "description": "DB column: rhtsend",
            "type": "string"
          },
          "imEx": {
            "format": "int32",
            "description": "DB column: rhimex",
            "type": "integer"
          },
          "arcPriorityRemote": {
            "format": "int32",
            "type": "integer"
          },
          "tSDate": {
            "description": "DB column: rhtsdate",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "DB column: rhrowid",
            "type": "integer"
          },
          "arcDesc": {
            "description": "DB column: rharcdesc",
            "type": "string"
          },
          "tSBegin": {
            "description": "DB column: rhtsbegin",
            "type": "string"
          }
        }
      },
      "CopyInfo": {
        "description": "Controls the options of de.elo.ix.IXServicePortIF.copySord().\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "adjustAclOverwrite": {
            "description": "Set the permissions of the moved object equal to the permissions of the new parent.",
            "type": "boolean"
          },
          "depth": {
            "format": "int32",
            "description": "Depth up to which the structure is to be copied.\nTHIS FUNCTION IS NOT CURRENTLY SUPPORTED!",
            "type": "integer"
          },
          "adjustAclIgnoreDocuments": {
            "description": "Recursivly adjust the permissions of the child-documents of the moved object too.",
            "type": "boolean"
          },
          "name": {
            "description": "COPY-Mode: Name of the destination archive entry.\nTHIS FUNCTION IS NOT CURRENTLY SUPPORTED!",
            "type": "string"
          },
          "manSortIdx": {
            "format": "int32",
            "description": "Manually determine the position. Use 0 to insert at the beginning of the child list.\nUse -1 to insert at the end of\n the child list ( this is the fastest mode). A value n greater then 0 inserts the object at the position n.",
            "type": "integer"
          },
          "oldParentId": {
            "description": "Parent ID for move operation.\nSet this element to the old parent ID when a reference has to be\n moved. If an original entry has to be moved, set the main parent ID or leave the value empty.",
            "type": "string"
          },
          "adjustAclInBackground": {
            "description": "Recursivly adjust the permissions of the child-elements in the background.",
            "type": "boolean"
          },
          "adjustAclDifference": {
            "description": "The permissions of the moved object are modified.\nThe permissions inherited from the old parent are substracted and\n the permissions of the new parent are added to the object.",
            "type": "boolean"
          },
          "adjustAclIgnoreFolders": {
            "description": "Recursivly adjust the permissions of the sub-folders of the moved object too.",
            "type": "boolean"
          },
          "checkRecursion": {
            "description": "Check for recursion.\nIf this member is set, the function\n {@link IXServicePortIF#copySord(ClientInfo, String, String, CopyInfo, CopySordZ)} checks\n whether the copy or move operation causes a recursion in the archive hierarchy. If so, the\n function throws an exception with {@link IXExceptionC#ACCESS_DENIED}.",
            "type": "boolean"
          }
        }
      },
      "ESSettingsObj": {
        "description": "<p>\n<b>checkoutEsSettings<\/b> returns the current IX instance name, a list of all available IX\n instances as well as one EsInstanceSettings object for every IX instance of the archive and one\n for the setting \"_ALL\". If there is no entry for a setting in the database, the default value is\n returned as value.\n <\/p>\n \n <p>\n <b>checkinEsSettings<\/b> writes entries for every EsInstanceSettings to the database:\n <\/p>\n <ul>\n <li>If a EsSettingsProperty member is null, nothing is written or deleted.\n <li>To delete a setting, the EsSettingsProperty member must be set, but its member 'value' must\n be set to 'null'\n <\/ul>",
        "type": "object",
        "properties": {
          "instanceName": {
            "description": "Name of this IX instance",
            "type": "string"
          },
          "allInstanceNames": {
            "description": "List of all instance names",
            "$ref": "#/components/schemas/ArrayListOfString"
          },
          "instanceSettings": {
            "description": "List of instance settings.\nContains settings (as in database) for instance _ALL and every IX\n instance.",
            "$ref": "#/components/schemas/ArrayListOfESInstanceSettings"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutColors2": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "options": {
            "format": "int32",
            "type": "integer"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BResult_323351719": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/Subscription"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "SearchFieldE": {
        "description": "<p>\nUse this class of constants to define in which field should be searched or aggregated.\n <\/p>\n <p>\n For every option, allowed {@link FieldTypeE} is given which is also the fallback type if provided\n type is incorrect.\n <\/p>",
        "type": "object",
        "properties": {
          "FEED_REFERENCE": {
            "description": "<p>\nGUID of referenced sord\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#notTokenized}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "I_DATE": {
            "description": "<p>\ninternal date\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#date}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "FEED_AUTHOR": {
            "description": "<p>\nID of author\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#numeric}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "FEED_TEXT": {
            "description": "<p>\nContains all feed text including hashtags, mentions and references\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#tokenized}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "SORD_HASH": {
            "description": "Hash value based on Sord's parameters indexed in iSearch <i>For internal use only<\/i>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "OWNER_ID": {
            "description": "<p>\nID of sord's creator\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#numeric}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "OBJ_ID": {
            "description": "<p>\nObject id\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#numeric}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "MASK_ID": {
            "description": "<p>\nmask id\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#numeric}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "FEED_HASHTAG": {
            "description": "<p>\nFeed's Hashtags\n <\/p>\n <p>\n Must be combined with either {@link FieldTypeE#tokenized} or {@link FieldTypeE#notTokenized}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "FEED_DATE_UPDATED": {
            "description": "<p>\nLast update dates of feed actions\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#date}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "OWNER_NAME": {
            "description": "<p>\nName of sord's creator\n <\/p>\n <p>\n Must be combined with either {@link FieldTypeE#tokenized} or {@link FieldTypeE#notTokenized}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "VERSION_NUMBER": {
            "description": "<p>\nall version numbers\n <\/p>\n <p>\n Must be combined with either {@link FieldTypeE#tokenized} or {@link FieldTypeE#notTokenized}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "TIMESTAMP": {
            "description": "<p>\nTime of sord's last change\n <\/p>\n <p>\n Value is not always synchronized with DB because {@link Sord#TStamp} is updated by changes not\n relevant for iSearch.\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#date}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "FEED_MENTION": {
            "description": "<p>\nMention of other users\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#notTokenized}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "FEED_TYPE": {
            "description": "<p>\nFeed type as String\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#notTokenized}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "EXTRA_TEXT": {
            "description": "<p>\nExtra text\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#tokenized}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "DELETED_DATE": {
            "description": "<p>\nExpiration date\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#date}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "VERSION_OWNER_ID": {
            "description": "<p>\nall version's creators\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#numeric}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "FILENAME": {
            "description": "<p>\nfile name\n <\/p>\n <p>\n Must be combined with either {@link FieldTypeE#tokenized} or {@link FieldTypeE#notTokenized}\n Important: This field is reserved for internal use. Do not use in queries and filters.\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "TYPE": {
            "description": "<p>\nsord's type\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#numeric}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "FEED_DATE_CREATED": {
            "description": "<p>\nCreate dates of feed actions\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#date}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "FILE_EXTENSION": {
            "description": "<p>\nfile extension\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#notTokenized}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "DOCUMENT_SIZE": {
            "description": "<p>\ndocument size\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#numeric}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "GUID": {
            "description": "<p>\nGUID\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#notTokenized}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "PARENT_GUID": {
            "description": "<p>\nparent guid\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#notTokenized}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "X_DATE": {
            "description": "<p>\nexternal date\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#date}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "VERSION_COMMENT": {
            "description": "<p>\nall version comments\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#tokenized}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "SPACE_GUIDS": {
            "description": "<p>\nGUID of workspaces.\n <\/p>\n <p>\n If the sord belongs to a workspace, this value contains the GUID of that workspace as well as\n the GUIDs of parent workspaces and workspaces of references.\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#notTokenized}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "FULLTEXT": {
            "description": "<p>\nfulltext content\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#tokenized}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "INDEXFIELD": {
            "description": "<p>\nUse this constant if a index field is searched/aggregated.\n <\/p>\n <p>\n Submit name of indexfield by {@link QueryFilter#indexFieldKey}\n <\/p>\n <p>\n Depending on type of the corresponding DocMaskLine/AspectLine (type field}, the corresponding\n {@link FieldTypeE} can be used.<br>\n DocMaskLines/AspectLines of type RELATION can be used with {@link FieldTypeE#tokenized} or\n {@link FieldTypeE#notTokenized} to search for the short name ({@link Sord#name} of the related\n Sord), or {@link FieldTypeE#guid} to search for the GUID of the related Sord.\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "TITLE": {
            "description": "<p>\nsord's short name\n <\/p>\n <p>\n Must be combined with {@link FieldTypeE#tokenized}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          },
          "MASK_NAME": {
            "description": "<p>\nmask name\n <\/p>\n <p>\n Must be combined with either {@link FieldTypeE#tokenized} or {@link FieldTypeE#notTokenized}\n <\/p>",
            "$ref": "#/components/schemas/SearchFieldE"
          }
        }
      },
      "ControlBackupInfoC": {
        "description": "Constants for class ControlBackupInfo (mode for the ELOdm backup and purge tasks)",
        "type": "object",
        "properties": {
          "MODE_STOP": {
            "format": "int32",
            "description": "Stop the backup and purge tasks",
            "type": "integer"
          },
          "MODE_START_BACKUP_PURGE": {
            "format": "int32",
            "description": "Start the backup and the purge task.\nIf the backup task is already running, only the purge task\n is started.",
            "type": "integer"
          },
          "MODE_STATUS": {
            "format": "int32",
            "description": "Query the status of the backup and purge tasks",
            "type": "integer"
          },
          "MODE_START_BACKUP": {
            "format": "int32",
            "description": "Start the backup task (if it is already running, nothing happens).\nIf the purge task is already\n running, it is stopped.",
            "type": "integer"
          }
        }
      },
      "WorkFlowActiveDocC": {
        "description": "<p>Bit constants for members of WorkFlowActiveDoc<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbOnActivate": {
            "description": "DB column: wf_ev_on_activate",
            "type": "string"
          },
          "lnProperties": {
            "format": "int32",
            "description": "Column length: Properties field of node.\nDB column: wf_properties",
            "type": "integer"
          },
          "mbRetVal": {
            "description": "Member bit: Return value of an end node.\nDB column: wf_retval",
            "type": "string"
          },
          "mbNameTranslationKey": {
            "description": "Member bit: Translation-keyword for {@link WFNode#name}.\nDB column: wf_nametrkey",
            "type": "string"
          },
          "mbLocked": {
            "description": "DB column: wf_locked",
            "type": "string"
          },
          "lnComment": {
            "format": "int32",
            "description": "DB column: wf_comment",
            "type": "integer"
          },
          "mbTerminate": {
            "description": "DB column: wf_terminate",
            "type": "string"
          },
          "mbActiveAcl": {
            "description": "Member bit: Contains the ACL of the workflow. Only valid for begin nodes.\nDB column: wf_active_acl",
            "type": "string"
          },
          "mbTemplateId": {
            "description": "DB column: wf_template",
            "type": "string"
          },
          "lnUserTerminate": {
            "format": "int32",
            "description": "DB column: wf_userterminate",
            "type": "integer"
          },
          "mbDesignDepartment": {
            "description": "DB column: wf_designdepartment",
            "type": "string"
          },
          "mbDelayDays": {
            "description": "DB column: wf_delaydays",
            "type": "string"
          },
          "mbYNCondition": {
            "description": "DB column: wf_yesnocondition",
            "type": "string"
          },
          "mbAlertWait": {
            "description": "DB column: wf_alert_wait",
            "type": "string"
          },
          "lnCondition": {
            "format": "int32",
            "description": "DB column: wf_condition",
            "type": "integer"
          },
          "mbUserTerminate": {
            "description": "DB column: wf_userterminate",
            "type": "string"
          },
          "mbVersionTag": {
            "description": "Member bit: Version number.\nDB column: wf_version_tag",
            "type": "string"
          },
          "mbCondition": {
            "description": "DB column: wf_condition",
            "type": "string"
          },
          "mbAlertFromBegin": {
            "description": "DB column: wf_alert_from_begin",
            "type": "string"
          },
          "lnLabel": {
            "format": "int32",
            "description": "Column length: Display name by forwarding.\nDB column: wf_label",
            "type": "integer"
          },
          "mbMoveCyclePosX": {
            "description": "DB column: wf_dx",
            "type": "string"
          },
          "mbDepartment2": {
            "description": "DB column: wf_department2",
            "type": "string"
          },
          "mbSubWorkflowTemplate": {
            "description": "Member bit: ID of the sub-workflow template.\nDB column: wf_sub_wf_templ",
            "type": "string"
          },
          "mbAlertWait3": {
            "description": "Member bit: Third Time-limit for a person node or begin node.\nDB column: wf_alert_wait3",
            "type": "string"
          },
          "mbAlertWait2": {
            "description": "Member bit: Second Time-limit for a person node or begin node.\nDB column: wf_alert_wait2",
            "type": "string"
          },
          "mbCompletionDate": {
            "description": "DB column: wf_completion_date",
            "type": "string"
          },
          "mbPosY": {
            "description": "DB column: pos_y",
            "type": "string"
          },
          "mbPosX": {
            "description": "DB column: pos_x",
            "type": "string"
          },
          "lnIconId": {
            "format": "int32",
            "description": "Column length: Object-GUID of an icon file that is displayed in the designer.\nDB column: wf_icon_guid",
            "type": "integer"
          },
          "mbUserDelayDate": {
            "description": "Member bit: The workflow node is deferred until this date. ELO date format.\nDB column: wf_user_delaydate\n DB column: wf_user_delaydate",
            "type": "string"
          },
          "lnVersionName": {
            "format": "int32",
            "description": "Column length: Version comment.\nDB column: wf_version_name",
            "type": "integer"
          },
          "mbActivate": {
            "description": "DB column: wf_activate",
            "type": "string"
          },
          "lnFormSpec": {
            "format": "int32",
            "description": "Column length: User defined data to be stored in the database.\nDB column: wf_form_spec",
            "type": "integer"
          },
          "mbIsNext": {
            "description": "DB column: wf_is_next",
            "type": "string"
          },
          "mbDeleted": {
            "description": "DB column: wf_deleted",
            "type": "string"
          },
          "mbOnExitHandleRollback": {
            "description": "Member bit: Name of script to be executed when the node encounters an error (exception).\nDB column:\n DB column: wf_ev_on_exit_handle_rollback",
            "type": "string"
          },
          "mbComment": {
            "description": "DB column: wf_comment",
            "type": "string"
          },
          "lnPackageName": {
            "format": "int32",
            "description": "Column length: PackageName of a Workflow, only used for workflow templates\nDB column: packagename",
            "type": "integer"
          },
          "mbLabel": {
            "description": "Member bit: Display name by forwarding.\nDB column: wf_label",
            "type": "string"
          },
          "mbFlowId": {
            "description": "DB column: wf_flowid",
            "type": "string"
          },
          "lnOnExitHandleRollback": {
            "format": "int32",
            "description": "Column length: Name of script to be executed when the node encounters an error (exception).\nDB column:\n DB column: wf_ev_on_exit_handle_rollback",
            "type": "integer"
          },
          "mbPackageName": {
            "description": "Member bit: PackageName of a Workflow, only used for workflow templates\nDB column: packagename",
            "type": "string"
          },
          "lnCommentTranslationKey": {
            "format": "int32",
            "description": "Column length: Translation-keyword for {@link WFNode#comment}.\nDB column: wf_commenttrkey",
            "type": "integer"
          },
          "lnNextServerId": {
            "format": "int32",
            "description": "Column length: Next server name.\nThis value is used in replication environments and defines the ID of the next\n DB column: nextserverid",
            "type": "integer"
          },
          "mbFlowName": {
            "description": "DB column: wf_flow_name",
            "type": "string"
          },
          "mbDepartment": {
            "description": "DB column: wf_department",
            "type": "string"
          },
          "lnFlowName": {
            "format": "int32",
            "description": "DB column: wf_flow_name",
            "type": "integer"
          },
          "mbName": {
            "description": "DB column: wf_name",
            "type": "string"
          },
          "mbAlertTo2": {
            "description": "Member bit: ID of user who should be informed, if the time-limit alertWait2 exceeds.\nDB column: wf_alert_to2",
            "type": "string"
          },
          "mbAlertTo3": {
            "description": "Member bit: ID of user who should be informed, if the time-limit alertWait2 exceeds.\nDB column: wf_alert_to3",
            "type": "string"
          },
          "mbDelayDate": {
            "description": "DB column: wf_duedate",
            "type": "string"
          },
          "mbFlowNameTranslationKey": {
            "description": "Member bit: Translation-keyword for {@link WFDiagram#name}.\nDB column: wf_flownametrkey",
            "type": "string"
          },
          "lnNameTranslationKey": {
            "format": "int32",
            "description": "Column length: Translation-keyword for {@link WFNode#name}.\nDB column: wf_nametrkey",
            "type": "integer"
          },
          "mbIconId": {
            "description": "Member bit: Object-GUID of an icon file that is displayed in the designer.\nDB column: wf_icon_guid",
            "type": "string"
          },
          "lnName": {
            "format": "int32",
            "description": "DB column: wf_name",
            "type": "integer"
          },
          "mbNodeType": {
            "description": "DB column: wf_node_type",
            "type": "string"
          },
          "mbOnTerminate": {
            "description": "DB column: wf_ev_on_terminate",
            "type": "string"
          },
          "lnFlowNameTranslationKey": {
            "format": "int32",
            "description": "Column length: Translation-keyword for {@link WFDiagram#name}.\nDB column: wf_flownametrkey",
            "type": "integer"
          },
          "mbDepartmentGroup": {
            "description": "Member bit: Grouping of nodes for function takeWorkFlowNode.\nDB column: wf_departmentgroup",
            "type": "string"
          },
          "mbNodeId": {
            "description": "DB column: wf_nodeid",
            "type": "string"
          },
          "lnVersionTag": {
            "format": "int32",
            "description": "Column length: Version number.\nDB column: wf_version_tag",
            "type": "integer"
          },
          "mbPrio": {
            "description": "DB column: wf_prio",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnReturnValue": {
            "format": "int32",
            "description": "Column length: Return value of an end node.\nDB column: wf_returnvalue",
            "type": "integer"
          },
          "mbFormSpec": {
            "description": "Member bit: User defined data to be stored in the database.\nDB column: wf_form_spec",
            "type": "string"
          },
          "mbReturnValue": {
            "description": "Member bit: Return value of an end node.\nDB column: wf_returnvalue",
            "type": "string"
          },
          "lnYNCondition": {
            "format": "int32",
            "description": "DB column: wf_yesnocondition",
            "type": "integer"
          },
          "mbVersionUserId": {
            "description": "Member bit: ID of the user who created the workflow version.\nDB column: wf_version_userid",
            "type": "string"
          },
          "mbNodeFlags": {
            "description": "DB column: wf_nodeflags",
            "type": "string"
          },
          "mbOnEnterHandleRollback": {
            "description": "Member bit: Name of script to be executed when the node encounters an error (exception).\nDB column:\n DB column: wf_ev_on_enter_handle_rollback",
            "type": "string"
          },
          "mbSubWorkflow": {
            "description": "Member bit: ID of the active sub-workflow.\nDB column: wf_sub_wf",
            "type": "string"
          },
          "lnOnEnterHandleRollback": {
            "format": "int32",
            "description": "Column length: Name of script to be executed when the node encounters an error (exception).\nDB column:\n DB column: wf_ev_on_enter_handle_rollback",
            "type": "integer"
          },
          "lnLabelTranslationKey": {
            "format": "int32",
            "description": "Column length: Translation-keyword for {@link WorkFlowActiveDoc#label}.\nDB column: wf_labeltrkey",
            "type": "integer"
          },
          "mbEloObjId": {
            "description": "DB column: wf_eloobjid",
            "type": "string"
          },
          "mbCommentTranslationKey": {
            "description": "Member bit: Translation-keyword for {@link WFNode#comment}.\nDB column: wf_commenttrkey",
            "type": "string"
          },
          "mbVersionCreateDate": {
            "description": "Member bit: ID of the user who created the workflow version.\nDB column: wf_version_createdate",
            "type": "string"
          },
          "mbLockId": {
            "description": "DB column: wf_locked_owner",
            "type": "string"
          },
          "mbProperties": {
            "description": "Member bit: Properties field of node.\nDB column: wf_properties",
            "type": "string"
          },
          "mbTag": {
            "description": "DB column: wf_tag",
            "type": "string"
          },
          "mbLabelTranslationKey": {
            "description": "Member bit: Translation-keyword for {@link WorkFlowActiveDoc#label}.\nDB column: wf_labeltrkey",
            "type": "string"
          },
          "mbNextServerId": {
            "description": "Member bit: Next server name.\nThis value is used in replication environments and defines the ID of the next\n DB column: nextserverid",
            "type": "string"
          },
          "lnOnTerminate": {
            "format": "int32",
            "description": "DB column: wf_ev_on_terminate",
            "type": "integer"
          },
          "mbVersionName": {
            "description": "Member bit: Version comment.\nDB column: wf_version_name",
            "type": "string"
          },
          "mbVersionId": {
            "description": "Member bit: Version ID.\nDB column: wf_version",
            "type": "string"
          },
          "lnActiveAcl": {
            "format": "int32",
            "description": "Column length: Contains the ACL of the workflow. Only valid for begin nodes.\nDB column: wf_active_acl",
            "type": "integer"
          },
          "mbAlertTo": {
            "description": "DB column: wf_alert_to",
            "type": "string"
          },
          "lnOnActivate": {
            "format": "int32",
            "description": "DB column: wf_ev_on_activate",
            "type": "integer"
          },
          "mbInUseDate": {
            "description": "DB column: wf_in_use_date",
            "type": "string"
          }
        }
      },
      "DateRelative": {
        "description": "<p>\nCan be used in three cases with different meanings:\n <\/p>\n <br>\n <p>\n (1) Provides relative time differences for DateNowValues in search queries.\n <\/p>\n <p>\n If a range query into the past or future is performed, is defined if the biggest delivered value\n is positive or negative.<br>\n e.g.: If <code>year=0, month=-2<\/code>, a range query from now to two months into the past is\n performed.<br>\n e.g.: If <code>year=0, month=-2, days=10<\/code>, a range query from now to one month, 20 days\n into the past is performed.<br>\n <\/p>\n <br>\n <p>\n (2) Provides optional time offset for date histogram aggregations.\n <\/p>\n <p>\n Here, the time unit must be smaller than the requested calendar interval unit and it is only one\n field allowed which not equals to zero. So, you cannot add values with different units like in\n search queries.<br>\n e.g.: If the requested interval is \"day\", the offset unit can only be smaller than day, e.g.\n \"hour\".\n <\/p>\n <br>\n <p>\n (3) Provides date math for optional \"extended boundary\" and \"hard boundary\" parameters for date\n histogram aggregations.\n <\/p>\n <p>\n Here, it is only one field allowed which not equals to zero. So, you cannot add values with\n different units like in search queries.<br>\n <\/p>",
        "type": "object",
        "properties": {
          "month": {
            "format": "int32",
            "description": "<p>\nTime shift for months.\n <\/p>\n \n example: -3 means three months to the past. 3 means three months to the future.",
            "type": "integer"
          },
          "hour": {
            "format": "int32",
            "description": "<p>\nTime shift for hours.\n <\/p>\n \n example: -3 means three hours to the past. 3 means three hours to the future.",
            "type": "integer"
          },
          "year": {
            "format": "int32",
            "description": "<p>\nTime shift for years.\n <\/p>\n \n example: -3 means three years to the past. 3 means three years to the future.",
            "type": "integer"
          },
          "day": {
            "format": "int32",
            "description": "<p>\nTime shift for days.\n <\/p>\n \n example: -3 means three days to the past. 3 means three days to the future.",
            "type": "integer"
          },
          "minute": {
            "format": "int32",
            "description": "<p>\nTime shift for minutes.\n <\/p>\n \n example: -3 means three minutes to the past. 3 means three minutes to the future.",
            "type": "integer"
          }
        }
      },
      "MapToInteger": {
        "additionalProperties": {
          "format": "int32",
          "type": "integer"
        },
        "type": "object"
      },
      "BRequest_IXServicePortIF_findFirstNotes": {
        "type": "object",
        "properties": {
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindInfo"
          },
          "noteZ": {
            "$ref": "#/components/schemas/NoteZ"
          }
        }
      },
      "BRequest_IXServicePortIF_getSearchTerms": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindInfo"
          },
          "termType": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "SearchModeC": {
        "description": "<p>\nThis class defines options used in <code>FindOptions.searchMode<\/code>.\n <\/p>\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "bsetAND": {
            "type": "string"
          },
          "OR": {
            "description": "The search terms are concatinated with the boolean OR operator.",
            "$ref": "#/components/schemas/SearchModeZ"
          },
          "ONE_TERM": {
            "description": "A blank separated list in <code>FindByIndex.name<\/code> or <code>FindByIndex.\ndesc<\/code> is\n used as a single term.",
            "$ref": "#/components/schemas/SearchModeZ"
          },
          "bsetEXPRESSION": {
            "type": "string"
          },
          "AND": {
            "description": "The search terms are concatinated with the boolean AND operator.",
            "$ref": "#/components/schemas/SearchModeZ"
          },
          "bsetONE_TERM": {
            "type": "string"
          },
          "bsetOR": {
            "type": "string"
          },
          "EXPRESSION": {
            "description": "The value of <code>FindByIndex.name<\/code> or <code>FindByIndex.\ndesc<\/code> contains the\n operators \"AND\" (&amp;), \"OR\" (|), \"NOT\" (!) for concatination.",
            "$ref": "#/components/schemas/SearchModeZ"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteWorkFlow": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "typeZ": {
            "$ref": "#/components/schemas/WFTypeZ"
          },
          "flowId": {
            "type": "string"
          }
        }
      },
      "BResult_736983867": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ESInfoObj"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "DocMaskC": {
        "description": "<p>\nConstants related to class <code>DocMask<\/code>. Some of the <code>MFG_<\/code> values are used in\n the member <code>Flags<\/code> of class <code>Sord<\/code> too. Each member of this class with\n prefix \"mb\" has a corresponding member in class <code>DocMask<\/code>\n <\/p>\n *\n <\/p>",
        "type": "object",
        "properties": {
          "mbTransitiveChildren": {
            "description": "Member bit for {@link DocMask#transitiveChildren}.",
            "type": "string"
          },
          "mbSortOrderNotArchivingMode": {
            "description": "Member bit: this bit should be set if the Mask is to be used for structure elements and not for\ndocuments. The effect is that the member DocMask.details.sortOrder is filled instead of\n DocMask.details.archivingMode.",
            "type": "string"
          },
          "GUID_EMAIL": {
            "description": "Predefined GUID for keywording form \"EMail\".",
            "type": "string"
          },
          "mbAspectAssocs": {
            "description": "Member bit for {@link DocMask#aspectAssocs}.",
            "type": "string"
          },
          "mbLines": {
            "type": "string"
          },
          "GUID_BASIC": {
            "description": "Predefined GUID for keywording form \"Freie Eingabe\".",
            "type": "string"
          },
          "mbDetails": {
            "type": "string"
          },
          "lnAcl": {
            "format": "int32",
            "description": "ACL length",
            "type": "integer"
          },
          "mbInheritFromMasks": {
            "description": "Member bit for {@link DocMask#inheritFromMasks}.",
            "type": "string"
          },
          "mbDocAclItems": {
            "type": "string"
          },
          "DATA_ORGANISATION_TABLE": {
            "format": "int32",
            "description": "Store index values in columns of a dedicated table.",
            "type": "integer"
          },
          "GUID_MS_SHAREPOINT_DOCUMENT": {
            "description": "Prefefined GUID for a keywording form for MS Sharepoint documents.",
            "type": "string"
          },
          "MAX_MASK_IDS_FOR_CHILD_ENTRIES": {
            "format": "int32",
            "description": "Maximum number of keywording form IDs for {@link DocMask#maskIdsForChildEntries}.",
            "type": "integer"
          },
          "GUID_USER_FOLDER": {
            "description": "Predefined GUID for the keywording form used by user folders.",
            "type": "string"
          },
          "mbMaskLines": {
            "description": "Member bit: read or write index lines.",
            "type": "string"
          },
          "mbOnlyLock": {
            "description": "Only lock or unlock",
            "$ref": "#/components/schemas/DocMaskZ"
          },
          "mbAllMembers": {
            "description": "Member bit: read or write all elements.",
            "type": "string"
          },
          "mbAcl": {
            "description": "Member bit: ACL",
            "type": "string"
          },
          "mbDeletionDeadline": {
            "description": "Member bit for {@link DocMask#deletionDeadline}.",
            "type": "string"
          },
          "mbAll": {
            "description": "Read or write all elements.",
            "$ref": "#/components/schemas/DocMaskZ"
          },
          "DATA_ORGANISATION_OBJKEYS": {
            "format": "int32",
            "description": "Store index values as key-value-pairs in the objkeys table.",
            "type": "integer"
          },
          "GUID_FOLDER": {
            "description": "Predefined GUID for the keywording form used for folders by default.",
            "type": "string"
          },
          "GUID_CONTACT": {
            "description": "Predefined GUID for keywording form \"Kontakt\".",
            "type": "string"
          },
          "GUID_ELOSCRIPTS": {
            "description": "Predefined GUID for the keywording form used for scripts.",
            "type": "string"
          },
          "mbAclItems": {
            "description": "Member bit: use the ACL items in the member DocMask.aclItems and DocMask.\ndocAclItems for\n reading and writing.",
            "type": "string"
          },
          "GUID_STRUCTURE_ELEMENT": {
            "description": "Predefined GUID for keywording form \"Strukturelement\".",
            "type": "string"
          },
          "DATA_ORGANISATION_ASPECT": {
            "format": "int32",
            "description": "Keywording form is based on aspects.",
            "type": "integer"
          },
          "mbDeleted": {
            "type": "string"
          },
          "GUID_SEARCH": {
            "description": "Predefined GUID for the keywording form used to search entries regardless of their storage\nmask.",
            "type": "string"
          }
        }
      },
      "BResult_42339713": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/MapDomain"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "TermsAggregationQueryParams": {
        "description": "Defines parameters to run an aggregation of type \"Terms\" (a multi-bucket-aggregation).\n<br>\n This aggregation query allows sub-aggregations.",
        "type": "object",
        "properties": {
          "useShardSizeMultiplier": {
            "description": "Each aggregation will run separately on each requested shard.\nThe terms aggregations shardSize\n parameter indicates the number of term buckets each shard will return to the coordinating node.\n The coordinating node will compute the result buckets with size = \"size\".<br>\n To get more accurate results, the terms aggregation fetches more than the top size terms from\n each shard. It fetches the top shard_size terms, which defaults to size * 1.5 + 10.<br>\n See also ES documentation:\n https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-terms-aggregation.html#search-aggregations-bucket-terms-aggregation-shard-size\n <br>\n This parameter enables providing an alternative multiplier than 1.5<br>\n Provide this multiplier in field shardSizeMultiplier.<br>",
            "type": "boolean"
          },
          "size": {
            "format": "int32",
            "description": "By default, the terms aggregation returns the top ten terms.\n<br>\n Use the size parameter to return more terms, up to the search.max_buckets limit.<br>\n This value must be greater than zero.",
            "type": "integer"
          },
          "shardSizeMultiplier": {
            "format": "int32",
            "description": "Each aggregation will run separately on each requested shard.\nThe shardSize parameter indicates\n the number of term buckets each shard will return to the coordinating node, which will compute\n the result buckets.<br>\n To get more accurate results, the terms aggregation fetches more than the top size terms from\n each shard. It fetches the top shard_size terms, which defaults to size * 1.5 + 10.<br>\n <br>\n If useShardSizeMultiplier equals to true, this parameter must contain the multiplier replacing\n the value 1.5 in above term. The provided value must be greater or equal 1.<br>\n The resulting term applied is: size * shardSizeMultiplier + 10",
            "type": "integer"
          },
          "missingValue": {
            "description": "The missing parameter defines how documents that are missing a value should be treated.\nBy\n default they will be ignored but it is also possible to treat them as if they had a value.\n Note: At ELO this is (regarding terms aggregations) currently only supported for string-based\n values.",
            "type": "string"
          },
          "subAggregations": {
            "description": "Inner aggregations of this aggregation.",
            "$ref": "#/components/schemas/MapToAggregationQuery"
          },
          "order": {
            "description": "The optional order buckets are retrieved.\n<br>\n By default, the terms aggregation orders terms by descending document count.<br>\n <br>\n If this value is omitted, the default will be used.",
            "$ref": "#/components/schemas/AggregationOrderE"
          }
        }
      },
      "IXExceptionData": {
        "description": "This class describes an exception that can occur during the execution of an Index server\nfunction.\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "callId": {
            "description": "String containing the ClientInfo.callId for the ClientInfo object.\nThis is given to the\n function which triggered/caused the error.",
            "type": "string"
          },
          "exceptionType": {
            "format": "int32",
            "description": "This is the type of exception. This is one of the constants from IXExceptionC.",
            "type": "integer"
          },
          "ticket": {
            "description": "Ticket given to the function.",
            "type": "string"
          },
          "details": {
            "description": "Detail text for the exception.",
            "type": "string"
          },
          "message": {
            "description": "The error message text for the exception.",
            "type": "string"
          }
        }
      },
      "WorkflowExchangeInfo": {
        "description": "This class represents a workflow export data.",
        "type": "object",
        "properties": {
          "subWorkflowVersionMap": {
            "description": "Map contains the workflow verions of the sub workflows.",
            "$ref": "#/components/schemas/MapToArrayListOfWFDiagram"
          },
          "workflow": {
            "description": "The exchanged workflow.",
            "$ref": "#/components/schemas/WFDiagram"
          },
          "workflowVersions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFDiagram"
            }
          },
          "userNames": {
            "description": "The users associated with the workflow",
            "$ref": "#/components/schemas/MapToUserName"
          },
          "subWorkflowMap": {
            "description": "Map contains the all direct und indirect subworkflows. The workflow ID is the key.",
            "$ref": "#/components/schemas/MapToWFDiagram"
          }
        }
      },
      "EsSettingsProperty": {
        "description": "Properties of ESInstanceSettings",
        "type": "object",
        "properties": {
          "possibleValues": {
            "description": "List of all possible values. If empty, there are no specified possible values.",
            "$ref": "#/components/schemas/ArrayListOfString"
          },
          "defaultValue": {
            "description": "Default value of property.",
            "type": "string"
          },
          "value": {
            "description": "Value of property as set in database. If empty, default value is used.",
            "type": "string"
          }
        }
      },
      "MapValue": {
        "description": "This class represents map values.\nA map value is either a string, stored in member\n {@link KeyValue#value} of the super class. Or a map value is a BLOB available in\n {@link #blobValue}.",
        "type": "object",
        "properties": {
          "blobValue": {
            "description": "BLOB value.",
            "$ref": "#/components/schemas/FileData"
          }
        }
      },
      "SearchModeZ": {
        "description": "<p>\nThis class encapsulates the constants of <code>SearchModeC<\/code>\n <\/p>\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants from SearchModeC class.",
            "type": "string"
          }
        }
      },
      "ResolveRightsResultC": {
        "description": "Constants for {@link ResolveRightsResult}.",
        "type": "object",
        "properties": {
          "SUBSTITUTION": {
            "format": "int32",
            "description": "Indicates that the user got the right by a substitution rule.",
            "type": "integer"
          },
          "DIRECT": {
            "format": "int32",
            "description": "Indicates that the user got the right directly.",
            "type": "integer"
          },
          "INHERITED": {
            "format": "int32",
            "description": "Indicates that the user got the right by inheritance of a group.",
            "type": "integer"
          }
        }
      },
      "ContextTermReturnTypeE": {
        "description": "Specifies the return type for context terms.",
        "type": "object",
        "properties": {
          "tokenized": {
            "description": "tokenized context terms. e.\ng: index field = \"Hello world\", resulting context terms = \"hello\",\n \"world\"",
            "$ref": "#/components/schemas/ContextTermReturnTypeE"
          },
          "numericSingleValues": {
            "description": "Use this to retrieve context term for numeric values and return every single value. e.g.\nuse\n for {@link SearchFieldE#MASK_ID} to get the amount of documents for each mask.",
            "$ref": "#/components/schemas/ContextTermReturnTypeE"
          },
          "numericBuckets": {
            "description": "Numeric values are separated into bins and returned with the following syntax:<br>\n<code>\"0 TO 10, \"11 TO 20\", \"21 TO *\"<\/code>",
            "$ref": "#/components/schemas/ContextTermReturnTypeE"
          },
          "dateYearBuckets": {
            "description": "Use this for date values. A bin for every available year is returned.",
            "$ref": "#/components/schemas/ContextTermReturnTypeE"
          },
          "notTokenized": {
            "description": "not tokenized context terms. e.\ng: index field = \"Hello world\", resulting context terms = \"Hello\n World\"",
            "$ref": "#/components/schemas/ContextTermReturnTypeE"
          }
        }
      },
      "EventFilter": {
        "description": "This class describes an event filter.",
        "type": "object",
        "properties": {
          "busId": {
            "description": "Event bus ID",
            "type": "string"
          },
          "type": {
            "description": "Event type.\nThis must be one of the predefined event types or an application defined type with\n a larger value than EventBusC.EVENT_TYPE_MAX_SYSTEM.",
            "type": "string"
          },
          "param1": {
            "description": "First event param. Optional. Depends on event type.",
            "type": "string"
          },
          "param2": {
            "description": "Second event param. Optional. Depends on event type.",
            "type": "string"
          }
        }
      },
      "MapToUserInfo": {
        "additionalProperties": {
          "$ref": "#/components/schemas/UserInfo"
        },
        "type": "object"
      },
      "WorkFlowHeadC": {
        "description": "<p>Bit constants for members of WorkFlowHead<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbFlowId": {
            "description": "Member bit: Workflow ID\nDB column: wfflowid",
            "type": "string"
          },
          "mbType": {
            "description": "Member bit: Workflow type.\nDB column: wftype",
            "type": "string"
          },
          "mbTStamp": {
            "description": "Member bit: Timestamp The format is JJJJ.MM.DD.hh.mm.\nss\n DB column: wftstamp",
            "type": "string"
          },
          "mbActServerId": {
            "description": "Member bit: The current sever ID (resp. replication branch) where the workflow can be condinued.\nDB column: actserverid",
            "type": "string"
          },
          "lnActServerId": {
            "format": "int32",
            "description": "Column length: The current sever ID (resp. replication branch) where the workflow can be condinued.\nDB column: actserverid",
            "type": "integer"
          },
          "mbCallNodeId": {
            "description": "Member bit: The call node id of the main workflow, which call this sub workflow.\nDB column: callnodeid",
            "type": "string"
          },
          "lnGuid": {
            "format": "int32",
            "description": "Column length: GUID\nDB column: wfguid",
            "type": "integer"
          },
          "mbTStampSync": {
            "description": "Member bit: Timestamp of this object's last export by the replication.\nDB column: wftstampsync",
            "type": "string"
          },
          "mbStatus": {
            "description": "Member bit: Status, != 0 means deleted\nDB column: wfstatus",
            "type": "string"
          },
          "mbParentWorkflow": {
            "description": "Member bit: Id of the main workflow.\nDB column: wfParent",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbGuid": {
            "description": "Member bit: GUID\nDB column: wfguid",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "Column length: Timestamp The format is JJJJ.MM.DD.hh.mm.\nss\n DB column: wftstamp",
            "type": "integer"
          },
          "lnTStampSync": {
            "format": "int32",
            "description": "Column length: Timestamp of this object's last export by the replication.\nDB column: wftstampsync",
            "type": "integer"
          }
        }
      },
      "ListOfMapToString": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MapToString"
        }
      },
      "ArchiveStatistics": {
        "description": "Characteristic properties of the archive.",
        "type": "object",
        "properties": {
          "maxObjId": {
            "format": "int32",
            "description": "Last object ID.",
            "type": "integer"
          },
          "maxDocId": {
            "format": "int32",
            "description": "Last document (version) ID.",
            "type": "integer"
          }
        }
      },
      "ArrayOfAny": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Any"
        }
      },
      "QueryJobProtocolResult": {
        "description": "<p>\nThis class contains the results from querying the protocol of a background thread.\n <\/p>",
        "type": "object",
        "properties": {
          "downloadUrl": {
            "description": "This String contains a URL where the whole protocol can be downloaded.\nEmpty, if no protocol\n file exists.",
            "type": "string"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueryJobProtocolEvent"
            }
          }
        }
      },
      "CounterInfo": {
        "description": "This class provides counters for use by the access manager.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the counter",
            "type": "string"
          },
          "value": {
            "format": "int32",
            "description": "The current value of the counter",
            "type": "integer"
          }
        }
      },
      "BRequest_FeedService_checkoutAction": {
        "type": "object",
        "properties": {
          "actionGuid": {
            "type": "string"
          },
          "actionZ": {
            "$ref": "#/components/schemas/ActionZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "WFDiagramZ": {
        "description": "This class encapsulates the constants of the WFDiagramC class.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants from the WFDiagramC class.",
            "type": "string"
          }
        }
      },
      "DocMaskDetails": {
        "description": "This class contains a member of a <code>DocMask<\/code> object.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "keywordingRelationAllowed": {
            "description": "Mask can be referenced from a DocMaskLine of type {@link DocMaskLineC#TYPE_RELATION}.\n<br>\n If this mask has a data organisation {@link DocMaskC#DATA_ORGANISATION_ASPECT} the value\n determines if it can be referenced by an AspectLine of type {@link AspectLineC#TYPE_RELATION}.",
            "type": "boolean"
          },
          "enabledByParent": {
            "description": "Usage depends on the keywording form of the parent entry.\nThis keywording form should only be\n used for a Sord, if the keywording form of the parent Sord explicitly allows that in it's\n member {@link DocMask#maskIdsForChildEntries}.",
            "type": "boolean"
          },
          "encryptionSet": {
            "format": "int32",
            "description": "Encryption set number.",
            "type": "integer"
          },
          "documentMask": {
            "description": "Mask can be used to edit indexing information of a document.",
            "type": "boolean"
          },
          "releaseDocument": {
            "description": "Documents using this mask may be used as release notes",
            "type": "boolean"
          },
          "createIndexPath": {
            "description": "If <code>DocMask.\nindex<\/code> is defined, this option effects that the resulting archieve path\n is created, if it does not exist.",
            "type": "boolean"
          },
          "archivingMode": {
            "format": "int32",
            "description": "Archiving mode. Sort order and archiving mode share the same database column.\nIf the mask is\n used for documents, set <code>sortOrder=SordOrderC.NONE<\/code>. ELO 7.0: This value is only\n valid for document masks, <code>documentMask=true<\/code>.",
            "type": "integer"
          },
          "inheritAclDisabled": {
            "description": "Do not inherit permissions from parent Sords.",
            "type": "boolean"
          },
          "documentContainer": {
            "description": "Folders indexed with this mask get the flag {@link SordDetails#documentContainer} set\naccordingly.",
            "type": "boolean"
          },
          "sortOrder": {
            "format": "int32",
            "description": "Sort order of child entries. Sort order and archiving mode share the same database column.\nIf\n the mask is used for folders, set <code>archivingMode=ArchivingModeC.NONE<\/code>. If both\n <code>sortOrder<\/code> and <code>archivingMode<\/code> are set, <code>sortOrder<\/code> has\n precedence and <code>archivingMode<\/code> is ignored. ELO 7.0: This value is only valid for\n folder masks, <code>folderMask=true<\/code>.",
            "type": "integer"
          },
          "searchMask": {
            "description": "Mask can be used to search for indexing information.",
            "type": "boolean"
          },
          "fulltext": {
            "description": "Document is or should be containted in the fultext database.",
            "type": "boolean"
          },
          "translateSordName": {
            "description": "If <tt>true<\/tt> translate the sord's short description into or from the user language.",
            "type": "boolean"
          },
          "folderMask": {
            "description": "Mask can be used to edit indexing information of a folder",
            "type": "boolean"
          },
          "createIndexReferencesPaths": {
            "description": "If <code>DocMask.\nindex<\/code> is defined including reference paths, this option effects that\n the resulting reference paths are created, if they do not exist.",
            "type": "boolean"
          },
          "region": {
            "description": "Sords of this mask, in case they are a folder, establish a region within the repository\ntree.<br>\n This flag is only valid for masks of data organisation.\n {@link DocMaskC#DATA_ORGANISATION_ASPECT}.",
            "type": "boolean"
          }
        }
      },
      "BRequest_HealthCheckService_updateMeanValue": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "name": {
            "type": "string"
          },
          "meanValue": {
            "format": "double",
            "type": "number"
          },
          "sampleSize": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteKeywordList": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "kwid": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "UserProfileC": {
        "description": "The constants in this class exist due to compatibility requirements with older Index Server\nversions, which gave back formatted data (Sord.xDataDispl).\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "SORD_DATE_FORMAT": {
            "type": "string"
          },
          "SORD_XDATE_FORMAT": {
            "type": "string"
          },
          "DATE_FORMAT": {
            "type": "string"
          },
          "DOC_VERSION_CREATE_FORMAT": {
            "type": "string"
          },
          "KEY_FEED_SUBSCRIBE_NEWVERSION": {
            "description": "Automatically subscribe Feed if the User creates a new Version of a Document",
            "type": "string"
          },
          "KEY_FEED_SUBSCRIBE_MYDOC": {
            "description": "Automatically subscribe Feed if the User creates a new Document",
            "type": "string"
          },
          "KEY_PREFIX_SYSTEM_ENCRYPTION_PASSWORD": {
            "description": "Prefix for system encryption password options.",
            "type": "string"
          },
          "KEY_PREFIX_FULLTEXT_SEARCH_OPTIONS": {
            "description": "Prefix for fulltext search options.",
            "type": "string"
          },
          "KEY_SERVER_ID": {
            "description": "Server-ID for WF-Replication",
            "type": "string"
          },
          "KEY_PASSWORD_VALID_DAYS": {
            "description": "The password has to be changed after this number of days.\nThe value corresponds to\n UserInfo.userProps[UserInfoC.PROP_ACTION].",
            "type": "string"
          },
          "KEY_DEFAULT_DOCMASK_DOC": {
            "description": "Default mask for new document.",
            "type": "string"
          },
          "SORD_DELDATE_FORMAT": {
            "type": "string"
          },
          "USERID_ALL": {
            "description": "Read/write user profile options for all users.",
            "type": "string"
          },
          "lnKey": {
            "format": "int32",
            "description": "Maximum length of key",
            "type": "integer"
          },
          "DOC_VERSION_ACCESS_FORMAT": {
            "type": "string"
          },
          "DOC_VERSION_UPDATE_FORMAT": {
            "type": "string"
          },
          "KEY_ARCHIVE_LANGUAGE": {
            "description": "Give the archive's language (set by a new installation since Server Setup 9.00.004).",
            "type": "string"
          },
          "KEY_FEED_SUBSCRIBE_MYFOLDER": {
            "description": "Automatically subscribe Feed if the User creates a new Folder",
            "type": "string"
          },
          "DOC_VERSION_DATE_FORMAT": {
            "type": "string"
          },
          "KEY_EXTEND_DOCUMENT_ACCESS_IN_WORKFLOW": {
            "description": "Extended access control for documents or folders used in workflows.\n<p>\n There are two concepts of extending access control for folders and documents routed though a\n workflow. The rules are only applied if (a) the current user has an active workflow task for\n the folder or document and (b) the right AccessC.FLAG2_EXTEND_WORKFLOW_RIGHTS is assigned to\n the current user.\n <\/p>\n <p>\n 1. Overlay additional access rights over the objects ACL: the lower 8 bits of the keys value\n specify a combination of AccessC.LUR_* constants that are added to the ACL access rights when\n access checking is performed. The objects ACL is not modified, this rule only changes the\n internal program logic.\n <\/p>\n <p>\n 2. Permanently add additional access to the ACL: the higher 8 bits of the keys value specify a\n combination of AccessC.LUR_* constants for a new ACL entry to be added for the current user.\n The ACL is only extended, if checkoutSord or checkoutDoc detects less access for the current\n user.",
            "type": "string"
          },
          "SORD_IDATE_FORMAT": {
            "type": "string"
          },
          "KEY_PASSWORD_RULES": {
            "description": "Password rules. The password rules are stored as a comma separated list of 5 Integers, e.g.\n\"7,1,1,0,0\". 1. Minimum password length 2. Is != 0, if password must contain at least one\n letter. 3. Is != 0, if password must contain at least one special character (not letter and not\n digit). 4. Is != 0, if password must contain at least one lower case and one upper case letter.\n 5. Is != 0, if password must contain at least one digit.",
            "type": "string"
          },
          "KEY_FEED_SUBSCRIBE_NEWCOMMENT": {
            "description": "Automatically subscribe Feed if the User adds a comment to a Feed",
            "type": "string"
          },
          "lnValue": {
            "format": "int32",
            "description": "Maximum length of value",
            "type": "integer"
          },
          "KEY_DEFAULT_DOCMASK_FOLDER": {
            "description": "Default mask for new structure element.",
            "type": "string"
          }
        }
      },
      "BResult_1788243283": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobState"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutWorkflowTemplate": {
        "type": "object",
        "properties": {
          "versionId": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "wfZ": {
            "$ref": "#/components/schemas/WFDiagramZ"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "flowId": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_findCompletion": {
        "type": "object",
        "properties": {
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindInfo"
          }
        }
      },
      "BResult_1426941339": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/MyELOState"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "KeywordsDynamicResult": {
        "description": "<p>\nThe class KeywordsDynamicResult defines the return value of the IX call\n {@link IXServicePortIF#checkoutKeywordsDynamic(ClientInfo, KeywordsDynamicInfo)} .\n <\/p>",
        "type": "object",
        "properties": {
          "header": {
            "description": "<p>\nThis list contains the column descriptions to be displayed as the header of the\n <code>table<\/code> at the client. The size of this list matches the amount of columns in\n <code>table<\/code>. The value at index <b>i<\/b> represents the column description of the column\n <b>i<\/b>. The first column index is 0. Columns without a header value must be represented by an\n empty or undefined string.\n <\/p>",
            "$ref": "#/components/schemas/ListOfString"
          },
          "message": {
            "description": "<p>\nThe executed script may provide additional informations to the client such as \"Please fill\n field XYZ\". Such informations are stored in the value <code>message<\/code>. The script has to\n provide the translation to the client's language.\n <\/p>",
            "type": "string"
          },
          "title": {
            "description": "<p>\nA brief and succinctly description about the represented data. The script developer must\n provide a title, otherwise an exception is thrown.\n <\/p>",
            "type": "string"
          },
          "moreResults": {
            "description": "<p>\nIs true if there are more results.\n <\/p>",
            "type": "boolean"
          },
          "table": {
            "description": "<p>\nThis value contains the result set as a table. Each entry of the outer list represents a row in\n the table. Thus, the entry <b>i<\/b> of an inner list represents the value of the <b>i<\/b>.\n column of the actual row. The length of each inner list is identical to the total amount of\n columns. Entries without a value are represented by an empty string.\n <\/p>",
            "$ref": "#/components/schemas/ListOfListOfString"
          },
          "keyNames": {
            "description": "<p>\nList of key names. The size of this list equals to <code>header<\/code>. In this list, columns\n without a key name are represented by null or an empty String.\n <\/p>",
            "$ref": "#/components/schemas/ListOfString"
          },
          "columnProperties": {
            "description": "<p>\nList of column properties. The size of this list equals to <code>header<\/code>. If the value at\n position <i>i<\/i> is null, the client will use a default value for the properties of column\n <i>i<\/i>.\n <\/p>",
            "$ref": "#/components/schemas/ListOfMapToString"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinKeywords": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "kws": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Keyword"
            }
          }
        }
      },
      "WFDelegateNodeInfo": {
        "description": "This class is used as a parameter in the function\n{@link IXServicePortIF#delegateWorkFlowNode(ClientInfo, WFDelegateNodeInfo, LockZ)}.",
        "type": "object",
        "properties": {
          "backNodeName": {
            "description": "Name of the back node.",
            "type": "string"
          },
          "copyMembersToDelegateNodeZ": {
            "description": "This selector defines which members of the node specified by nodeId are copied to the delegated\nnode. If this value is null, all node members are copied except the following: WFNodeC.mbId|\n WFNodeC.mbDelayDate|WFNodeC.mbDelayDateIso| WFNodeC.mbEnterDate|WFNodeC.mbEnterDateIso|\n WFNodeC.mbExitDate|WFNodeC.mbExitDateIso| WFNodeC.mbInUseDate|WFNodeC.mbInUseDateIso|\n WFNodeC.mbUserDelayDate|WFNodeC.mbUserDelayDateIso| WFNodeC.mbIsNext overwrite the members\n copied due copyMembersToDelegateNodeZ. The member WFNode.formSpec is always copied from the\n current node and need not to be included in copyMembersToDelegateNodeZ.",
            "$ref": "#/components/schemas/WFNodeZ"
          },
          "delegateNodeComment": {
            "description": "Description of the new node",
            "type": "string"
          },
          "delegateToUserIds": {
            "description": "Names or IDs of users or groups to whom the workflow is delegated.\nThe delegation nodes are\n organized serial or parallel as defined by member {@link #delegateParallel}.",
            "$ref": "#/components/schemas/ListOfString"
          },
          "delegateNodeName": {
            "description": "Name of the new node",
            "type": "string"
          },
          "backNodeMoveY": {
            "format": "int32",
            "description": "Vertical distance between the active node and the back node. Recommended value is 80.",
            "type": "integer"
          },
          "delegateParallel": {
            "description": "Delegate parallel or serial to the list of users.\nif {@link #delegateToUserIds} is not null or\n empty, this member describes how the nodes created for delegation are connected.\n <p>\n Set this member as true, if all delegation nodes should be activated directly. The delegation\n returns, if at least one of the users forwards her/his node.\n <\/p>\n <p>\n Set this member as false, if the delegation nodes should be lined up one after another. The\n delegation returns, if all users have forwarded their nodes.\n <\/p>\n Ignored, if {@link #delegateToUserIds} is null or empty.",
            "type": "boolean"
          },
          "backNodeMoveX": {
            "format": "int32",
            "description": "Horizontal distance between the active node and the back node. Recommended value is 0.",
            "type": "integer"
          },
          "copyMembersToBackNodeZ": {
            "description": "This selector defines which members of the current node are copied to the node that leads back\nto the current user. If this value is null, the following members are copied by default:\n <code>WFNodeC.mbFlags|WFNodeC.mbMoveCyclePosX|WFNodeC.mbObjKeyNames|WFNodeC.mbScriptNames|WFNodeC.mbTag|WFNodeC.mbTimeLimit|WFNodeC.mbTimeLimitEscalations<\/code>.\n The members given or evaluated by backNodeName, backNodeComment, backNodeMoveX and\n backNodeMoveY overwrite the members copied due copyMembersToBackNodeZ. The following members\n are always copied from the current node: WFNode.userId, WFNode.userName,\n WFNode.designDepartment, WFNode.department2, WFNode.formSpec and need not to be included in\n copyMembersToBackNodeZ.",
            "$ref": "#/components/schemas/WFNodeZ"
          },
          "delegateNodeMoveX": {
            "format": "int32",
            "description": "Horizontal distance between the active node and the delegation node. Recommended value is 240.",
            "type": "integer"
          },
          "delegateNodeMoveY": {
            "format": "int32",
            "description": "Vertical distance between the active node and the delegation node. Recommended value is 0.",
            "type": "integer"
          },
          "delegateToUserId": {
            "description": "Name or ID of user or group to whom the workflow is delegated.",
            "type": "string"
          },
          "backNodeComment": {
            "description": "Description of the back node.",
            "type": "string"
          },
          "flowId": {
            "description": "Workflow ID, GUID or name",
            "type": "string"
          },
          "nodeId": {
            "format": "int32",
            "description": "Node ID",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_invalidateCache2": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "info": {
            "$ref": "#/components/schemas/InvalidateCacheInfo"
          }
        }
      },
      "MyELOState": {
        "type": "object",
        "properties": {
          "newFeed": {
            "type": "boolean"
          },
          "newWorkflow": {
            "type": "boolean"
          },
          "userGuid": {
            "type": "string"
          },
          "newTask": {
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_beginEditWorkFlowNode": {
        "type": "object",
        "properties": {
          "nFlowId": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "nNodeId": {
            "format": "int32",
            "type": "integer"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ProcessFulltext": {
        "description": "Fulltext-Property to be added to/removed from an object.\n<p>\n Copyright: Copyright (c) 2008\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "addToFulltext": {
            "description": "Add to the fulltext-service",
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_findClose": {
        "type": "object",
        "properties": {
          "searchId": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "OcrInfo": {
        "description": "This class defines the properties of an OCR request.",
        "type": "object",
        "properties": {
          "busId": {
            "description": "Return OCR result over this event bus.\nIf the OCR request should be performed asynchronously,\n this value must contain the event bus ID on which the result event is sent. If this value is 0,\n the OCR request is performed synchronously.",
            "type": "string"
          },
          "eventId": {
            "description": "OCR result should be sent in an event with this event ID.\nThis member helps to map the OCR\n request to the OCR result. Optional.",
            "type": "string"
          },
          "messagesLanguage": {
            "format": "int32",
            "description": "Language of error messages produced by the OCR engine. One of the OcrInfoC.\nMESSAGES_LANGUAGE_\n constants. Optional.",
            "type": "integer"
          },
          "recognizeFile": {
            "description": "Recognize file information.\nSet this member in order to process OCR on a file or an archive\n document. Optional.",
            "$ref": "#/components/schemas/OcrInfoRecognizeFile"
          },
          "queryLanguages": {
            "description": "This member is set in order to query the languages supported by the OCR engine. Optional.",
            "$ref": "#/components/schemas/OcrInfoQueryLanguages"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteOrgUnits": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MapToWFDiagram": {
        "additionalProperties": {
          "$ref": "#/components/schemas/WFDiagram"
        },
        "type": "object"
      },
      "SordHistKey": {
        "description": "This class provides the version information for a keywording attribute that has been modified.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "histGuid": {
            "description": "GUID of the assigned SordHist object.",
            "type": "string"
          },
          "keyNo": {
            "format": "int32",
            "description": "ID of the attribute.",
            "type": "integer"
          },
          "keyData": {
            "description": "Value of dat of the attribute.",
            "type": "string"
          },
          "keyIndex": {
            "format": "int32",
            "description": "Index of the attribute within an array of attributes.",
            "type": "integer"
          },
          "keyName": {
            "description": "Name of the attribute.",
            "type": "string"
          },
          "keyId": {
            "format": "int32",
            "description": "External ID of the attribute, serves as an identifier for keyNames.",
            "type": "integer"
          }
        }
      },
      "ListOfUserName": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserName"
        }
      },
      "BResult_937420667": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/Note"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "CheckoutOrgUnitInfo": {
        "description": "Objects of this class specify the selection criteria for <code>checkoutOrgUnits<\/code>.\n<\/p>\n No criterias can be set yet. All OUs are returned.\n \n <p>\n Copyright: Copyright (c) 2013\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object"
      },
      "SubscriptionZ": {
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants from the SubscriptionC class.",
            "type": "string"
          }
        }
      },
      "ActivityZ": {
        "description": "Typed element selector for class Activity.",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteSubstitutions": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "deleteSubstitutionsInfo": {
            "$ref": "#/components/schemas/DeleteSubstitutionsInfo"
          }
        }
      },
      "SubscriptionC": {
        "type": "object",
        "properties": {
          "mbAll": {
            "$ref": "#/components/schemas/SubscriptionZ"
          }
        }
      },
      "ArrayOfCryptInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CryptInfo"
        }
      },
      "ExportOptionsC": {
        "description": "Constants class for the ExportOptions class.\nContains constants used when exporting objects from\n the ELO archive.\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "EXPORT_REFERENCED_DOCUMENTS": {
            "description": "Include refereced documents in the export.",
            "type": "string"
          },
          "EXPORT_ALL_VERSIONS": {
            "description": "Include other versions in the export.\nThe default is to only export the current active\n document.",
            "type": "string"
          },
          "EXPORT_KEYWORDS": {
            "description": "Include the used keyword-lists in the export.",
            "type": "string"
          },
          "EXPORT_DOCUMENTS": {
            "description": "Include the document-files in the export.",
            "type": "string"
          }
        }
      },
      "BResult_1005790586": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContextTerm"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "ServerStateC": {
        "description": "<p>Bit constants for members of ServerState<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbSubKey": {
            "description": "DB column: subkey",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnAction": {
            "format": "int32",
            "description": "DB column: action",
            "type": "integer"
          },
          "mbActionId": {
            "description": "DB column: actionid",
            "type": "string"
          },
          "mbAction": {
            "description": "DB column: action",
            "type": "string"
          }
        }
      },
      "ActionHistoryC": {
        "type": "object"
      },
      "BRequest_IXServicePortIF_checkinSordTypes": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "sordTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SordType"
            }
          }
        }
      },
      "BResult_1701204890": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ServerInfo"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinDocsEnd": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "sordZs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SordZ"
            }
          },
          "sords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sord"
            }
          }
        }
      },
      "PluginState": {
        "description": "State of OSGi plugin.",
        "type": "object",
        "properties": {
          "UNINSTALLED": {
            "description": "Plugin uninstalled.",
            "$ref": "#/components/schemas/PluginState"
          },
          "ACTIVE": {
            "description": "Plugin started.",
            "$ref": "#/components/schemas/PluginState"
          },
          "INSTALLED": {
            "description": "Plugin installed but not running.",
            "$ref": "#/components/schemas/PluginState"
          }
        }
      },
      "DocHistoryC": {
        "description": "<p>Bit constants for members of DocHistory<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnComment": {
            "format": "int32",
            "description": "DB column: histcomment",
            "type": "integer"
          },
          "mbTStamp": {
            "description": "DB column: doctstamp",
            "type": "string"
          },
          "mbVersion": {
            "description": "DB column: histversion",
            "type": "string"
          },
          "mbDeleteDate": {
            "description": "Member bit: The version is deleted at this date. The value is an ELO date format.\nThe value is zero, if\n DB column: deletedate",
            "type": "string"
          },
          "mbUser": {
            "description": "DB column: userid",
            "type": "string"
          },
          "lnGuid": {
            "format": "int32",
            "description": "DB column: docguid",
            "type": "integer"
          },
          "mbTStampSync": {
            "description": "Member bit: Timestamp of this object's last export by the replication.\nDB column: doctstampsync",
            "type": "string"
          },
          "mbStatus": {
            "description": "DB column: docstatus",
            "type": "string"
          },
          "mbObjId": {
            "description": "DB column: objectid",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "DB column: doctstamp",
            "type": "integer"
          },
          "lnTStampSync": {
            "format": "int32",
            "description": "Column length: Timestamp of this object's last export by the replication.\nDB column: doctstampsync",
            "type": "integer"
          },
          "mbType": {
            "description": "Member bit: The type of this DocHistory makes the difference between attachments and document versions.\nDB column: doctype",
            "type": "string"
          },
          "lnDocMD5": {
            "format": "int32",
            "description": "DB column: docmd5",
            "type": "integer"
          },
          "mbCreateDate": {
            "description": "DB column: createdate",
            "type": "string"
          },
          "mbLanguage": {
            "description": "Member bit: Language of the document content.\nDB column: language",
            "type": "string"
          },
          "mbDocId": {
            "description": "DB column: documentid",
            "type": "string"
          },
          "lnLanguage": {
            "format": "int32",
            "description": "Column length: Language of the document content.\nDB column: language",
            "type": "integer"
          },
          "mbDocMD5": {
            "description": "DB column: docmd5",
            "type": "string"
          },
          "mbSigId": {
            "description": "DB column: docsignature",
            "type": "string"
          },
          "mbNbOfValidSignatures": {
            "description": "Member bit: Number of valid signatures.\nDB column: nbofvalidsignatures",
            "type": "string"
          },
          "mbGuid": {
            "description": "DB column: docguid",
            "type": "string"
          },
          "lnVersion": {
            "format": "int32",
            "description": "DB column: histversion",
            "type": "integer"
          },
          "mbFlags": {
            "description": "DB column: docflags",
            "type": "string"
          },
          "mbComment": {
            "description": "DB column: histcomment",
            "type": "string"
          }
        }
      },
      "ReminderC": {
        "type": "object",
        "properties": {
          "mbAll": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbReceiverName": {
            "type": "string"
          },
          "mbSenderName": {
            "type": "string"
          },
          "mbNotifyOnDelete": {
            "type": "string"
          },
          "mbCreateDateIso": {
            "type": "string"
          },
          "mbPromptDateIso": {
            "type": "string"
          },
          "mbDueDateIso": {
            "type": "string"
          },
          "mbLockName": {
            "type": "string"
          },
          "mbNotifyOnView": {
            "type": "string"
          },
          "mbDeleted": {
            "type": "string"
          },
          "mbObjGuid": {
            "description": "Sord guid.",
            "type": "string"
          }
        }
      },
      "ActionHistory": {
        "type": "object",
        "properties": {
          "actionGuid": {
            "description": "Action GUID. Unique identifier.",
            "type": "string"
          },
          "createDateIso": {
            "description": "Create date.\nThis element is the ISO formatted create date of the action in the time zone of\n the client application. In order to convert this value into a date object, invoke function\n {@link de.elo.ix.client.IXConnection#isoToDate}.",
            "type": "string"
          },
          "text": {
            "description": "Comment text.\nThis element is only valid for {@link EActionType#UserComment}, and\n {@link EActionType#AutoComment}.",
            "type": "string"
          }
        }
      },
      "SordDetails": {
        "description": "Objects of this class are data elements and control the values assigned to certain boolean\nproperties(yes/no attributes).\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "replRoot": {
            "description": "True, if this object is a root folder for replication.",
            "type": "boolean"
          },
          "workspace": {
            "description": "If <tt>true<\/tt> the sord is a workspace folder.",
            "type": "boolean"
          },
          "limitedReleaseDocument": {
            "description": "Documents using this mask may be used as release notes",
            "type": "boolean"
          },
          "arcReplEnabled": {
            "description": "True, if replication is enabled for this archive.",
            "type": "boolean"
          },
          "encryptionSet": {
            "format": "int32",
            "description": "Encryption set number.",
            "type": "integer"
          },
          "fulltextDone": {
            "description": "Document is indexed in the fultext database.",
            "type": "boolean"
          },
          "incomplete": {
            "description": "True, if a document or attachment version has been deleted.",
            "type": "boolean"
          },
          "archivingMode": {
            "format": "int32",
            "description": "Archiving mode.\nThe possible values are:\n <table border=\"2\">\n <tr>\n <td>version controlled<\/td>\n <td>ArchivingModeC.VERSION<\/td>\n <\/tr>\n <tr>\n <td>read-only<\/td>\n <td>ArchivingModeC.READONLY<\/td>\n <\/tr>\n <tr>\n <td>read/write<\/td>\n <td>ArchivingModeC.READWRITE<\/td>\n <\/tr>\n <\/table>\n This value is only valid for document objects.",
            "type": "integer"
          },
          "inheritAclDisabled": {
            "description": "Do not inherit permissions from parent Sord.",
            "type": "boolean"
          },
          "documentContainer": {
            "description": "Folders can be marked as a document container by this flag.\nIf true, clients are advised to\n preview the first document in this folder on selection.",
            "type": "boolean"
          },
          "sortOrder": {
            "format": "int32",
            "description": "Sort order of child entries. This value is only valid for folder objects.",
            "type": "integer"
          },
          "fulltext": {
            "description": "Document is or should be containted in the fultext database.",
            "type": "boolean"
          },
          "translateSordName": {
            "description": "If <tt>true<\/tt> translate the sord's short description into or from the user language.",
            "type": "boolean"
          },
          "region": {
            "description": "If this sord is a folder, it establishes a region within the repository tree.\n<br>\n This flag is only valid for sords with a mask of data organisation\n {@link DocMaskC#DATA_ORGANISATION_ASPECT}.",
            "type": "boolean"
          },
          "linked": {
            "description": "True, if this object has links to other Sords.\nThis member is read-only and is ignored in\n checkinSord and checkinDocEnd.",
            "type": "boolean"
          },
          "linkedPermanent": {
            "description": "True, if this object has permanent links to other Sords.\nThis member is read-only and is\n ignored in checkinSord and checkinDocEnd.",
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_importWorkFlow": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "fileData": {
            "format": "byte",
            "type": "string"
          },
          "flowName": {
            "type": "string"
          }
        }
      },
      "GetWebDAVPathResult": {
        "description": "Class for the result of the IX function {@link IXServicePortIF#getWebDAVPathFromObjID2}",
        "type": "object",
        "properties": {
          "path": {
            "description": "The generated WEBDAV path.",
            "type": "string"
          }
        }
      },
      "Relation": {
        "description": "Internal class.",
        "type": "object",
        "properties": {
          "mainRelation": {
            "description": "This Relation represents the main relation of an object, if this value is <code>true<\/code>.",
            "type": "boolean"
          },
          "TStampSync": {
            "description": "Timestamp of this object's last export by the replication.",
            "type": "string"
          },
          "tStamp": {
            "description": "DB column: reltstamp",
            "type": "string"
          },
          "objGuid": {
            "description": "GUID of the child object.",
            "type": "string"
          },
          "parentGuid": {
            "description": "GUID of the parent object.",
            "type": "string"
          },
          "objId": {
            "format": "int32",
            "description": "DB column: objectid",
            "type": "integer"
          },
          "guid": {
            "description": "GUID",
            "type": "string"
          },
          "parentId": {
            "format": "int32",
            "description": "DB column: parentid",
            "type": "integer"
          },
          "deleteDateIso": {
            "description": "The Relation is deleted at this date. ClientInfo determines the Timezone.\n<p>\n Is undefined if status==0.\n <\/p>",
            "type": "string"
          },
          "ordinal": {
            "format": "int32",
            "description": "DB column: ordinal",
            "type": "integer"
          },
          "status": {
            "format": "int32",
            "description": "DB column: relstatus",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutUser": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "checkoutUsersZ": {
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "SortOrderSequenceE": {
        "description": "Possible sorting sequences of database searches for aspect data.",
        "type": "object",
        "properties": {
          "ASCENDING": {
            "description": "Ascending order, nulls last.",
            "$ref": "#/components/schemas/SortOrderSequenceE"
          },
          "DESCENDING": {
            "description": "Descending order, nulls first.",
            "$ref": "#/components/schemas/SortOrderSequenceE"
          },
          "DESCENDING_NULLS_LAST": {
            "description": "Descending order, nulls last.",
            "$ref": "#/components/schemas/SortOrderSequenceE"
          },
          "ASCENDING_NULLS_FIRST": {
            "description": "Ascending order, nulls first.",
            "$ref": "#/components/schemas/SortOrderSequenceE"
          }
        }
      },
      "BRequest_IXServicePortIF_collectWorkFlows": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "typeZ": {
            "$ref": "#/components/schemas/WFTypeZ"
          }
        }
      },
      "StringListValue": {
        "description": "A list of strings which is joined by AND or OR depending on <code>andOperator<\/code>.\n<br>\n Defaults to an OR-disjunction.",
        "type": "object",
        "properties": {
          "valueList": {
            "description": "A list of strings which is joined by AND or OR depending on <code>andOperator<\/code>.",
            "$ref": "#/components/schemas/ListOfStringValue"
          },
          "andOperator": {
            "description": "Connective of list elements (default is OR (=false) ).",
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutDoc": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "docId": {
            "type": "string"
          },
          "objId": {
            "type": "string"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "editInfoZ": {
            "$ref": "#/components/schemas/EditInfoZ"
          }
        }
      },
      "ListOfSordPath": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SordPath"
        }
      },
      "MapHistItemC": {
        "description": "<p>Bit constants for members of MapHistItem<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnValue": {
            "format": "int32",
            "description": "DB column: mapvalue",
            "type": "integer"
          },
          "lnContentType": {
            "format": "int32",
            "description": "DB column: mapcontenttype",
            "type": "integer"
          },
          "lnHistGuid": {
            "format": "int32",
            "description": "Column length: Serialisation version ID\nDB column: maphistguid",
            "type": "integer"
          },
          "mbKey": {
            "description": "DB column: mapkey",
            "type": "string"
          },
          "mbValue": {
            "description": "DB column: mapvalue",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnKey": {
            "format": "int32",
            "description": "DB column: mapkey",
            "type": "integer"
          },
          "lnBlobData": {
            "format": "int32",
            "description": "DB column: mapblob",
            "type": "integer"
          },
          "mbBlobData": {
            "description": "DB column: mapblob",
            "type": "string"
          },
          "mbHistGuid": {
            "description": "Member bit: Serialisation version ID\nDB column: maphistguid",
            "type": "string"
          },
          "mbContentType": {
            "description": "DB column: mapcontenttype",
            "type": "string"
          }
        }
      },
      "OrOperator": {
        "description": "This operator contains a list of QueryObjects and concatenates them with an \"OR\" operation.\nThis\n means, a document is returned if at least one of the QueryObjects is present in the document. For\n REST calls, use class QueryOperator and set the operator type in\n {@link QueryOperator#operatorType}.",
        "type": "object",
        "properties": {
          "queryObjectList": {
            "description": "List of QueryObjects which are or combined.",
            "$ref": "#/components/schemas/ListOfQueryObject"
          }
        }
      },
      "BResult_2062827124": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/PublicDownload"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "FindByFulltextCtrlResultItem": {
        "description": "A search using FindByFulltextCtrl returns this result items in addition to findResult.sords.",
        "type": "object",
        "properties": {
          "TStamp": {
            "description": "Timestamp of the last change of either indexing information, note data, fulltext content or\nattachment fulltext content.",
            "type": "string"
          },
          "note": {
            "description": "Note object. If this member is set, member <code>sord<\/code> can be ignored.",
            "$ref": "#/components/schemas/Note"
          },
          "selectType": {
            "format": "int32",
            "description": "Corresponds to the table from which the Sord/ Note was selected.\n<p>\n <i>Note: For internal use only.<\/i>\n <\/p>",
            "type": "integer"
          },
          "sord": {
            "description": "Sord object. Same as in <code>findResult.sords[.\n]<\/code>",
            "$ref": "#/components/schemas/Sord"
          }
        }
      },
      "CheckoutSordPathInfo": {
        "type": "object",
        "properties": {
          "inclRefPaths": {
            "type": "boolean"
          }
        }
      },
      "BResult_1376733713": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SessionInfo"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "DateListValue": {
        "description": "A list of date values which is joined by AND or OR depending on\n<code>andOpeDoubleListrator<\/code>.<br>\n Defaults to an OR-disjunction.",
        "type": "object",
        "properties": {
          "valueList": {
            "description": "A list of double values which is joined by AND or OR depending on <code>andOperator<\/code>.",
            "$ref": "#/components/schemas/ListOfDateValue"
          },
          "andOperator": {
            "description": "Connective of list elements (default is OR (=false) ).",
            "type": "boolean"
          }
        }
      },
      "InvalidateCacheC": {
        "description": "Constants for cache invalidation.\nThis constans can be used as bit combination in function\n invalidateCache.",
        "type": "object",
        "properties": {
          "ALL": {
            "format": "int32",
            "description": "Flag used to specify that all cached objects are invalid.",
            "type": "integer"
          },
          "WORKFLOWS": {
            "format": "int32",
            "description": "Flag used to specify that the workflow cache is invalid.",
            "type": "integer"
          },
          "SUBSCRIPTIONS": {
            "format": "int32",
            "description": "Flag used to specify that the subscription cache is invalid.",
            "type": "integer"
          },
          "ASPECTS": {
            "format": "int32",
            "description": "Flag used to specify that the cached Aspect objects are invalid.",
            "type": "integer"
          },
          "MARKERS": {
            "format": "int32",
            "description": "Flag used to specify that the cached ColorData objects are invalid.",
            "type": "integer"
          },
          "PATHS": {
            "format": "int32",
            "description": "Flag used to specify that the cached Path objects are invalid.",
            "type": "integer"
          },
          "HASHTAGCOUNT": {
            "format": "int32",
            "description": "Flag used to specify that the hashtag count cache is invalid.",
            "type": "integer"
          },
          "SESSION": {
            "format": "int32",
            "description": "Notify about modified session options or permissions. Reserved for internal usage.",
            "type": "integer"
          },
          "CRYPT_INFO": {
            "format": "int32",
            "description": "Flag used to specify that the cached crypt keys are invalid.",
            "type": "integer"
          },
          "NOTE_AND_COLD_IMAGES": {
            "format": "int32",
            "description": "Flag used to specify that the note and cold background images are invalid.",
            "type": "integer"
          },
          "REPL_NAMES": {
            "format": "int32",
            "description": "Flag used to specify that the cached ReplName objects are invalid.",
            "type": "integer"
          },
          "KEYWORD_LISTS": {
            "format": "int32",
            "description": "Notify about modified keyword lists.",
            "type": "integer"
          },
          "SORD_TYPES": {
            "format": "int32",
            "description": "Flag used to specify that the cached SordType objects are invalid.",
            "type": "integer"
          },
          "INDEXFIELD_DISPLAY_DATA": {
            "format": "int32",
            "description": "Flag used to specify that the display data of references in index fields of type relation have\nchanged.",
            "type": "integer"
          },
          "KEYS": {
            "format": "int32",
            "description": "Flag used to specify that the cached keys are invalid.",
            "type": "integer"
          },
          "OBJKEY_DISPLAY_DATA": {
            "format": "int32",
            "description": "Flag used to specify that the display data of references in ObjKeys have changed.\nNote: there\n is a newer name for this constant flag: INDEXFIELD_DISPLAY_DATA. Please use the newer version\n see below.",
            "type": "integer"
          },
          "TRANSLATE_TERMS": {
            "format": "int32",
            "description": "Flag used to specify that the translate terms are invalid.",
            "type": "integer"
          },
          "DOCUMENT": {
            "format": "int32",
            "description": "Flag used to specify that a cached document (script) has changed.",
            "type": "integer"
          },
          "MASKS": {
            "format": "int32",
            "description": "Flag used to specify that the cached DocMask objects are invalid.",
            "type": "integer"
          },
          "USERS": {
            "format": "int32",
            "description": "Flag used to specify that the cached users are invalid.",
            "type": "integer"
          },
          "WORKSPACE_ACLS": {
            "format": "int32",
            "description": "Invalidate cache of workspace/teamspace ACLs.",
            "type": "integer"
          },
          "NO_FORWARD_TO_OTHER_IXS": {
            "format": "int32",
            "description": "Do not invalidate the caches of the other servers.",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_importWorkFlow2": {
        "type": "object",
        "properties": {
          "importOptions": {
            "$ref": "#/components/schemas/WorkflowImportOptions"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "fileData": {
            "format": "byte",
            "type": "string"
          },
          "flowName": {
            "type": "string"
          }
        }
      },
      "BStreamReference": {
        "type": "object",
        "properties": {
          "streamId": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "ArrayOfWFVersion": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WFVersion"
        }
      },
      "WFDiagramC": {
        "description": "<p>\nConstants for workflows.\n <\/p>",
        "type": "object",
        "properties": {
          "mbNameTranslationKey": {
            "description": "Member bit: nameTranslationKey",
            "type": "string"
          },
          "ADHOC_WF_FINISH_SCRIPT_PREFIX": {
            "description": "Prefix of all scripts selectable as finish scripts for adhoc workflows",
            "type": "string"
          },
          "mbTStamp": {
            "description": "Member bit: TStamp",
            "type": "string"
          },
          "mbActiveAclItems": {
            "type": "string"
          },
          "mbVersion": {
            "description": "Member bit: access",
            "type": "string"
          },
          "mbStartDateIso": {
            "type": "string"
          },
          "mbActiveAcl": {
            "description": "Member bit: {@link WFDiagram#activeAcl}.",
            "type": "string"
          },
          "mbTemplateId": {
            "description": "Member bit: templateId",
            "type": "string"
          },
          "mbLean": {
            "$ref": "#/components/schemas/WFDiagramZ"
          },
          "mbObjId": {
            "description": "Object ID",
            "type": "string"
          },
          "mbTimeLimitUserId": {
            "description": "Member bit: Alert user.",
            "type": "string"
          },
          "mbAcl": {
            "description": "Member bit: acl and aclItems.",
            "type": "string"
          },
          "mbId": {
            "description": "ID",
            "type": "string"
          },
          "MAX_SUBNODES": {
            "format": "int32",
            "description": "Maximum number of subnodes.",
            "type": "integer"
          },
          "mbCompletionDate": {
            "description": "Completed at this date.",
            "type": "string"
          },
          "mbOwnerName": {
            "type": "string"
          },
          "mbCompletionDateIso": {
            "type": "string"
          },
          "mbAclItems": {
            "type": "string"
          },
          "mbGuid": {
            "description": "Member bit: Guid",
            "type": "string"
          },
          "mbDeleted": {
            "description": "Member bit: deleted",
            "type": "string"
          },
          "mbFlags": {
            "description": "Member bit: flags",
            "type": "string"
          },
          "mbMatrix": {
            "description": "Node matrix.",
            "type": "string"
          },
          "mbPackageName": {
            "description": "Member bit: {@link WFDiagram#packageName}.",
            "type": "string"
          },
          "mbProcessOnServerId": {
            "description": "Member bit: processOnServerId",
            "type": "string"
          },
          "mbName": {
            "description": "Name",
            "type": "string"
          },
          "mbSubWorkflows": {
            "description": "Member bit: {@link WFDiagram#subWorkflows}.",
            "type": "string"
          },
          "lnGuid": {
            "format": "int32",
            "description": "Maximum length of workflow GUID.",
            "type": "integer"
          },
          "mbTStampSync": {
            "description": "Member bit: TStampSync",
            "type": "string"
          },
          "lnNameTranslationKey": {
            "format": "int32",
            "description": "Maximum length of the name's translation key.",
            "type": "integer"
          },
          "lnName": {
            "format": "int32",
            "description": "Maximum length of workflow name.",
            "type": "integer"
          },
          "mbObjName": {
            "description": "Member bit: objName",
            "type": "string"
          },
          "mbTimeLimitIso": {
            "type": "string"
          },
          "mbPrio": {
            "description": "Member bit: prio",
            "type": "string"
          },
          "mbAccess": {
            "description": "Member bit: access",
            "type": "string"
          },
          "mbOnlyLock": {
            "$ref": "#/components/schemas/WFDiagramZ"
          },
          "mbTimeLimit": {
            "description": "Member bit: Time-limit.",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All elements.",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "Maximum length of workflow TStamp.",
            "type": "integer"
          },
          "mbNodes": {
            "description": "Nodes.",
            "type": "string"
          },
          "mbLeanMembers": {
            "type": "string"
          },
          "mbTimeLimitEscalations": {
            "description": "Member bit: timeLimitEscalation",
            "type": "string"
          },
          "TEMPLATE_ID_ADHOC": {
            "format": "int32",
            "description": "Compare this value to WFDiagram.\ntemplateId to check whether the workflow was started as an\n adhoc workflow. This member is for convenience. You can also check the flag FLAG_ROOT_ADHOC of\n the root node.",
            "type": "integer"
          },
          "mbAll": {
            "$ref": "#/components/schemas/WFDiagramZ"
          },
          "mbType": {
            "type": "string"
          },
          "mbStartDate": {
            "description": "Member bit: StartDate.",
            "type": "string"
          },
          "mbLockId": {
            "description": "Member bit: lockId and lockName",
            "type": "string"
          },
          "mbObjType": {
            "description": "Object type.",
            "type": "string"
          },
          "mbOwnerId": {
            "description": "Member bit: ownerId and ownerName",
            "type": "string"
          },
          "mbTemplateName": {
            "type": "string"
          },
          "mbCallNodeId": {
            "description": "Member bit: {@link WFDiagram#callNodeId}.",
            "type": "string"
          },
          "mbNodesOverview": {
            "description": "Nodes required for worfklow overview in ELO Java Client.\nIncludes begin node, active nodes,\n exceeded nodes.",
            "type": "string"
          },
          "mbTimeLimitUserName": {
            "type": "string"
          },
          "lnProcessOnServerId": {
            "format": "int32",
            "description": "Maximum length of processOnServerId.",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutAspects": {
        "type": "object",
        "properties": {
          "aspectIds": {
            "$ref": "#/components/schemas/ListOfString"
          },
          "aspectZ": {
            "$ref": "#/components/schemas/AspectZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutMap": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "domainName": {
            "type": "string"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "id": {
            "type": "string"
          },
          "keyNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ColorData": {
        "description": "<p>\nColours for marking entries in the archive.\n <\/p>\n <p>\n Copyright: Copyright (c) 2003\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "nameTranslationKey": {
            "description": "Translation key.\nOptional identifier in the localization property files or translations stored\n via {@link IXServicePortIF#checkinTranslateTerms(ClientInfo, TranslateTerm[], LockZ)}.",
            "type": "string"
          },
          "TStamp": {
            "description": "TStamp",
            "type": "string"
          },
          "deleted": {
            "description": "Logically deleted.",
            "type": "boolean"
          },
          "hidden": {
            "description": "This color should not be selectable in client applications.\nThis color is reserved as marker\n for technical purposes.",
            "type": "boolean"
          },
          "TStampSync": {
            "description": "Timestamp of this object's last export by the replication.",
            "type": "string"
          },
          "displayName": {
            "description": "Localized name. This read-only value is the localized {@link #nameTranslationKey}.\nIf\n {@link #nameTranslationKey} is empty, this value is set to {@link #name}.",
            "type": "string"
          },
          "name": {
            "description": "Colour name",
            "type": "string"
          },
          "guid": {
            "description": "GUID",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "Colour number (ID).",
            "type": "integer"
          },
          "packageName": {
            "description": "Package name of ColorData",
            "type": "string"
          },
          "RGB": {
            "format": "int32",
            "description": "RGB value.",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_combineAcl": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lhs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "options": {
            "$ref": "#/components/schemas/CombineAclOptions"
          },
          "rhs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          }
        }
      },
      "EloIxOptC": {
        "type": "object"
      },
      "Array2OfString": {
        "type": "array",
        "items": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteNotification": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objGuid": {
            "type": "string"
          },
          "userGuid": {
            "type": "string"
          }
        }
      },
      "NoteDataC": {
        "description": "<p>Bit constants for members of Note<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbHLock": {
            "description": "DB column: hlock",
            "type": "string"
          },
          "mbDesc": {
            "description": "DB column: pidesc",
            "type": "string"
          },
          "mbTStamp": {
            "description": "DB column: notetstamp",
            "type": "string"
          },
          "mbParentId": {
            "description": "DB column: parentid",
            "type": "string"
          },
          "mbDeleteDate": {
            "description": "Member bit: The Note is deleted at this date. ClientInfo determines the Timezone.\nDB column: deletedate",
            "type": "string"
          },
          "lnDesc": {
            "format": "int32",
            "description": "DB column: pidesc",
            "type": "integer"
          },
          "mbWidth": {
            "description": "DB column: width",
            "type": "string"
          },
          "lnAcl": {
            "format": "int32",
            "description": "DB column: noteacl",
            "type": "integer"
          },
          "lnGuid": {
            "format": "int32",
            "description": "DB column: noteguid",
            "type": "integer"
          },
          "mbTStampSync": {
            "description": "Member bit: Timestamp of this object's last export by the replication.\nDB column: notetstampsync",
            "type": "string"
          },
          "mbStatus": {
            "description": "DB column: notestatus",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbAcl": {
            "description": "DB column: noteacl",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "DB column: notetstamp",
            "type": "integer"
          },
          "lnTStampSync": {
            "format": "int32",
            "description": "Column length: Timestamp of this object's last export by the replication.\nDB column: notetstampsync",
            "type": "integer"
          },
          "mbYPos": {
            "description": "DB column: ypos",
            "type": "string"
          },
          "mbType": {
            "description": "DB column: notetype",
            "type": "string"
          },
          "mbId": {
            "description": "DB column: noteid",
            "type": "string"
          },
          "mbPageNo": {
            "description": "DB column: pageno",
            "type": "string"
          },
          "mbOwnerId": {
            "description": "DB column: userid",
            "type": "string"
          },
          "mbColor": {
            "description": "DB column: color",
            "type": "string"
          },
          "mbCreateDate": {
            "description": "DB column: createdate",
            "type": "string"
          },
          "mbGuid": {
            "description": "DB column: noteguid",
            "type": "string"
          },
          "mbHeight": {
            "description": "DB column: height",
            "type": "string"
          },
          "mbXPos": {
            "description": "DB column: xpos",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteUser": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "BResult_1191976387": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/Any"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "LicenseReport": {
        "description": "License report data evaluated by AdminConsole.",
        "type": "object",
        "properties": {
          "nbOfIgLicenses": {
            "format": "int32",
            "description": "Number of ELO Internet Gateway users. This field is not used anymore.",
            "type": "integer"
          },
          "licenseType": {
            "description": "License type.",
            "$ref": "#/components/schemas/LicenseType"
          },
          "counterList": {
            "description": "list of counter delegated from am",
            "$ref": "#/components/schemas/ListOfLicenseCounter"
          },
          "nbOfServerLicenses": {
            "format": "int32",
            "description": "Number of server licenses. This field is not used anymore.",
            "type": "integer"
          },
          "serno": {
            "description": "License key. This field is not used anymore.",
            "type": "string"
          },
          "freeUser": {
            "format": "int32",
            "type": "integer"
          },
          "ixUser": {
            "format": "int32",
            "type": "integer"
          },
          "reportMode": {
            "format": "int32",
            "description": "report period / access mode.",
            "type": "integer"
          },
          "fullUser": {
            "format": "int32",
            "type": "integer"
          },
          "deletedUser": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteEventBusListener": {
        "type": "object",
        "properties": {
          "lsnId": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "FindByFulltextResultItem": {
        "description": "Additional information for an item found by fulltext search.",
        "type": "object",
        "properties": {
          "resultFields": {
            "description": "List of fields where a query matched.\n<br>\n See {@link de.elo.ix.client.esearch.query.SearchFieldE SearchFieldC}",
            "$ref": "#/components/schemas/ArrayListOfSearchFieldE"
          },
          "fieldNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "summaryDesc": {
            "description": "Textpart from memo text.",
            "type": "string"
          },
          "sord": {
            "description": "Sord object.",
            "$ref": "#/components/schemas/Sord"
          },
          "summaryFulltext": {
            "description": "Textpart from document.",
            "type": "string"
          },
          "relevance": {
            "format": "int32",
            "description": "Relevance in per mill.",
            "type": "integer"
          }
        }
      },
      "SordPath": {
        "type": "object",
        "properties": {
          "sords": {
            "$ref": "#/components/schemas/ListOfSord"
          }
        }
      },
      "FindByFulltext": {
        "description": "<p>\nPerforms a fulltext search.\n <\/p>\n \n <p>\n The fulltext search is performed via iSearch. Therefore, use\n {@link de.elo.ix.client.esearch.FindByESearch} instead. The {@link #term} should be replaces by\n the actual query term and additional filters (e.g. DocMask) should be submitted by\n {@link de.elo.ix.client.esearch.ESearchParams#queryOperator}. The areas in which should be search\n should be set in {@link de.elo.ix.client.esearch.ESearchParams#searchIn}.<br>\n Searches using this class are still executed but internally mapped to\n {@link de.elo.ix.client.esearch.FindByESearch} objects and some values might be ignored.\n <\/p>",
        "type": "object",
        "properties": {
          "term": {
            "description": "Search term to be located in the fulltext database. Can be a single word or a number of words.\nWildcard * is allowed, it matches any number of characters. Term is interpreted based on the\n options given by FindOptions in FindInfo. Exception: FindOptionsC.ONE_TERM is not supported.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutSordHistory": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_findContextTerms": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindInfo"
          },
          "maxTermsPerField": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "BResult_1495731174": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/KeywordList"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "ArrayOfQueryJobProtocolEvent": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/QueryJobProtocolEvent"
        }
      },
      "BResult_1826370901": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BResult_222450704": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/QueryJobProtocolResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BResult_893011331": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/MapToOrgUnitInfo"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "WFNode": {
        "description": "<p>\nObjects of this class represent a workflow node.\n <\/p>\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "delayDateIso": {
            "description": "The node is displayed to the user at this date.\nThis date is computed by enterDateIso +\n delayDays. This member is only valid for person nodes. Read-only.",
            "type": "string"
          },
          "returnValue": {
            "description": "Return value of a sub-workflow.\nThe value defines the name of the successor node of the\n call-node {@link WFNodeC#TYPE_CALL_SUB_WORKFLOW} that will be activated when the sub-workflow\n returns. If the sub-workflow returns a node name that does not exist in the main workflow, a\n new person node is inserted between the call-node and its successors. This new node is named as\n the return value and is assigned to the workflow owner.",
            "type": "string"
          },
          "onExit": {
            "description": "A script or plugin name that is called, if a workflow node is exited.\n<p>\n In order to capture this workflow event in JavaScript, store a script file that defines a\n function named onExitNode in a sub-folder of \"Indexserver Scripting Base/_ALL\" or \"Indexserver\n Scripting Base/instancename\".\n \n <pre>\n <code class=\"example\">\n function onExitNode(ci, userId, workflow, nodeId) {\n   // ci       ... ClientInfo object of the user that forwards the workflow.\n   // userId   ... The calling user's ID (Integer)\n   // workflow ... WFDiagram object\n   // nodeId   ... The deactivated node ID (Integer)\n ...\n }\n <\/code>\n <\/pre>\n \n See Indexserver Programming Manual for more information.\n <\/p>\n <p>\n If onExit starts with a plugin's Bundle-SymbolicName, the event is delegated to function\n {@link de.elo.ix.client.plugin.WorkflowNodeEvents#onExitWorkflowNode} of a\n <code>WorkflowNodeEvents<\/code> object returned from a call to\n {@link de.elo.ix.client.plugin.WorkflowNodeEventsFactory#create}. Optionally, a path can be\n appended to the Bundle-SymbolicName which is passed to\n {@link de.elo.ix.client.plugin.WorkflowNodeEventsFactory#create}. This path has to start with a\n forward slash. E.g. onEnter=\"com.partner.wfevents/invoice-solution\".\n <\/p>\n This member is valid for all node types.",
            "type": "string"
          },
          "processOnServerId": {
            "description": "Server ID (resp. replication branch).\nIf the node is activated, the server ID is set to this\n value. This member is only valid for nodes of type WFNodeC.TYPE_SET_SERVER_ID.",
            "type": "string"
          },
          "yesNoCondition": {
            "description": "A value depending on the type of the node.\n<p> \n {@link WFNodeC#TYPE_IFNODE}: test condition. Numeric values must be formatted according to the servers locale. \n Date values of {@link AspectLineC#TYPE_ISO_DATE_ONLY} or {@link AspectLineC#TYPE_ISO_DATE_TIME} must be given as \n ISO date values in timezone UTC.\n <\/p><p>\n {@link WFNodeC#TYPE_SPLITNODE}: sets the workflow status to this value.\n <\/p><p>\n {@link WFNodeC#getTYPE_BEGINNODE()}: contains workflow status.\n <\/p><p>\n {@link WFNodeC#TYPE_CYCLE}: condition that evaluates true to leave the cycle.\n <\/p>",
            "type": "string"
          },
          "timeLimitEscalations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFTimeLimit"
            }
          },
          "flags": {
            "format": "int32",
            "description": "Control flags for the node, a combination of WFNodeC.FLAG_* constants.\nFor start nodes\n (TYPE_BEGINNODE), the flags should be specified in WFDiagram.flags. To ensure compatibility\n with older client programs, the WFNode.flags of the start node are or-ed with the\n WFDiagram.flags. This member is valid for all node types.",
            "type": "integer"
          },
          "onExitHandleRollback": {
            "description": "A script or plugin name that is called when an error occurs inside a workflow script.\nAll\n onExitHandleRollback scripts, from one person node to the next person node, are stored in a\n temporary queue and all will get executed if an error inside a script occurs. The\n onExitHandleRollback script is not meant for dealing with an error in the onExit Script, the\n script will only get stored in the temporary queue if the onExit script was executed without\n any issues.\n <p>\n In order to capture this workflow event in JavaScript, store a script file that defines a\n function named onExitHandleRollbackNode in a sub-folder of \"Indexserver Scripting Base/_ALL\" or\n \"Indexserver Scripting Base/instancename\".\n \n <pre>\n <code class=\"example\">\n function onExitHandleRollbackNode(ci, userId, workflow, nodeId) {\n   // ci       ... ClientInfo object of the user that forwards the workflow.\n   // userId   ... The calling user's ID (Integer)\n   // workflow ... WFDiagram object\n   // nodeId   ... The deactivated node ID (Integer)\n ...\n }\n <\/code>\n <\/pre>\n \n See Indexserver Programming Manual for more information.\n <\/p>\n <p>\n If onExitHandleRollback starts with a plugin's Bundle-SymbolicName, the event is delegated to\n function {@link de.elo.ix.client.plugin.WorkflowNodeEvents#onExitHandleRollbackWorkflowNode} of\n a <code>WorkflowNodeEvents<\/code> object returned from a call to\n {@link de.elo.ix.client.plugin.WorkflowNodeEventsFactory#create}. Optionally, a path can be\n appended to the Bundle-SymbolicName which is passed to\n {@link de.elo.ix.client.plugin.WorkflowNodeEventsFactory#create}. This path has to start with a\n forward slash. E.g. onExitHandleRollback=\"com.partner.wfevents/invoice-solution\".\n <\/p>\n This member is valid for all node types.",
            "type": "string"
          },
          "userDelayDateIso": {
            "description": "The workflow node is deferred until this date.\nThis member is only valid for person nodes in\n active or finished workflows. ISO date format.",
            "type": "string"
          },
          "overTimeLimit": {
            "description": "True, if the node exceeds the time limit.\nThis member is only valid for person nodes in active\n or finished workflows. Read-only.",
            "type": "boolean"
          },
          "type": {
            "format": "int32",
            "description": "The node type. This member is set to one of the TYPE_* constants in WFNodeC.",
            "type": "integer"
          },
          "retVal": {
            "format": "int32",
            "description": "Return value of an end node. Only valid for TYPE_END.",
            "type": "integer"
          },
          "enterDateIso": {
            "description": "The node was activated on this date. This member is valid for all node types.",
            "type": "string"
          },
          "department2": {
            "format": "int32",
            "description": "A group ID to constrain access to the node.\nOnly members of this group are allowed to see and\n process the node. Only valid for person nodes.",
            "type": "integer"
          },
          "id": {
            "format": "int32",
            "description": "Node ID. This member is valid for all node types.",
            "type": "integer"
          },
          "isNext": {
            "format": "int32",
            "description": "The activation state of the node. This member is valid for all node types.",
            "type": "integer"
          },
          "tag": {
            "format": "int32",
            "description": "reserved.\nDB column: wf_tag",
            "type": "integer"
          },
          "prio": {
            "format": "int32",
            "description": "Node priortiy: 0...high, 1...medium, 2...low.\nOnly valid for person nodes,\n type=={@link WFNodeC#TYPE_PERSONNODE}. The user assigned to the person node can change this\n value by conn.ix().forwardWorkflowNode():\n \n <pre>\n <code>\n  WFEditNode editNode = conn.ix().beginForwardWorkflowNode(flowId, nodeId, null, LockC.NO);\n  WFNode activeNode = editNode.getNode();\n  activeNode.setPrio(activeNode.getPrio()-1); // One level higher.\n  ForwardWorkflowNodeInfo fwdInfo = new ForwardWorkflowNodeInfo();\n  fwdInfo.setNode(activeNode);\n  conn.ix().forwardWorkflowNode(wfActive.getId(), activeNode.getId(), fwdInfo, LockC.NO);\n  \n <\/code>\n <\/pre>",
            "type": "integer"
          },
          "objKeyNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "iconId": {
            "description": "Object-GUID of an icon file that is displayed in the designer.",
            "type": "string"
          },
          "timeLimitIso": {
            "description": "After this date the node exceeds the time-limit for processing.\nThis member is only valid for\n person nodes. Read-only.",
            "type": "string"
          },
          "scriptNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "departmentGroup": {
            "format": "int32",
            "description": "Grouping of nodes for function takeWorkFlowNode.\nA non-zero value binds nodes with the same\n value to a group of nodes that is evaluated in\n {@link IXServicePortIF#takeWorkFlowNode(ClientInfo, int, int, String, int, LockZ)}. The\n function takeWorkFlowNodes takes - in addition to the given node - all nodes with the same\n group assignment specified by this member. This member is only used as a marker and is not\n interpreted as a group or user ID.",
            "type": "integer"
          },
          "nbOfDonesToExit": {
            "format": "int32",
            "description": "The number of predecessor nodes that must be processed to forward this collector node.\nA value\n of -1 means that all predecessor nodes must be processed. If set to 0, the collect node\n switches when it is activated regardless of the state of the predecessor nodes. This member is\n only valid for collect nodes.",
            "type": "integer"
          },
          "formSpec": {
            "description": "Multipurpose field.\n<p>\n If the node is a collect node (type={@link WFNodeC#TYPE_COLLECTNODE}), formSpec contains a\n comma separated list of node IDs. This nodes are deactivated when the collect node forwards the\n workflow. In addition to a list of IDs, the value of {@link WFNodeC#DEACTIVATE_ALL_PREDS}\n causes to deactivate all predecessor nodes.\n <\/p>\n <p>\n In case of a person node ({@link WFNodeC#TYPE_PERSONNODE}), formSpec can contain proprietary\n encoded information about a workflow form.\n <\/p>",
            "type": "string"
          },
          "commentTranslationKey": {
            "description": "Translation-keyword for {@link WFNode#comment}.",
            "type": "string"
          },
          "subFlowId": {
            "format": "int32",
            "description": "Id of the active sub-workflow. Only valid for TYPE_CALL_SUB_WORKFLOW.",
            "type": "integer"
          },
          "label": {
            "description": "Display name by forwarding.",
            "type": "string"
          },
          "moveCyclePosX": {
            "format": "int32",
            "description": "If a cycle is re-entered, the nodes in the cycle are duplicated.\nThe copied nodes will be\n placed in the designer moved by this value to the right. If this value is 0, the nodes are\n moved 60 points right and 20 points up. This member is valid for all node types.",
            "type": "integer"
          },
          "userName": {
            "description": "The name of the user that has the ID <code>userId<\/code> This member is only valid for person\nnodes.",
            "type": "string"
          },
          "inUseDateIso": {
            "description": "The date when the node was last used(activated or completed).\nThis member is valid for all node\n types.",
            "type": "string"
          },
          "userId": {
            "format": "int32",
            "description": "This user has to edit the node. This member is only valid for person nodes.",
            "type": "integer"
          },
          "posX": {
            "format": "int32",
            "description": "The X position in the designer view. This member is valid for all node types.",
            "type": "integer"
          },
          "timeLimit": {
            "format": "int32",
            "description": "The time-limit to process the node. Measured in minutes.\nThis member is only valid for person\n nodes.",
            "type": "integer"
          },
          "nameTranslationKey": {
            "description": "Translation-keyword for {@link WFNode#name}.",
            "type": "string"
          },
          "onEnter": {
            "description": "A script or plugin name that is called, if a workflow node is entered.\n<p>\n In order to capture this workflow event in JavaScript, store a script file that defines a\n function named onEnterNode in a sub-folder of \"Indexserver Scripting Base/_ALL\" or \"Indexserver\n Scripting Base/instancename\".\n \n <pre>\n <code class=\"example\">\n function onEnterNode(ci, userId, workflow, nodeId) {\n   // ci       ... ClientInfo object of the user that forwards the workflow.\n   // userId   ... The calling user's ID (Integer)\n   // workflow ... WFDiagram object\n   // nodeId   ... The activated node ID (Integer)\n ...\n }\n <\/code>\n <\/pre>\n \n See Indexserver Programming Manual for more information.\n <\/p>\n <p>\n If onEnter starts with a plugin's Bundle-SymbolicName, the event is delegated to function\n <code>onEnterWorkflowNode<\/code> of a <code>WorkflowNodeEvents<\/code> object. Such object is\n created by <code>WorkflowNodeEventsFactory.create<\/code> implemented in the plugin. Optionally,\n a path can be appended to the Bundle-SymbolicName which is passed to\n <code>WorkflowNodeEventsFactory.create<\/code>. This path has to start with a forward slash.\n E.g. onEnter=\"com.partner.wfevents/invoice-solution\".\n <\/p>\n This member is valid for all node types.",
            "type": "string"
          },
          "posY": {
            "format": "int32",
            "description": "The Y position in the designer view. This member is valid for all node types.",
            "type": "integer"
          },
          "subTemplateId": {
            "format": "int32",
            "description": "ID, GUID or name of the sub-workflow template.",
            "type": "integer"
          },
          "delayDays": {
            "format": "int32",
            "description": "An active person node (Activate is set) might be displayed to the user delayed by this number\nof days. Only valid for person nodes.",
            "type": "integer"
          },
          "name": {
            "description": "The node description (work instruction). This member is valid for all node types.",
            "type": "string"
          },
          "designDepartment": {
            "format": "int32",
            "description": "<p>\nA group ID or user ID that was originally assigned in the designer.\n <\/p>\n \n <ul>\n <li>Only valid for person nodes.<\/li>\n <li>If a template is checked in, designDepartment is always set to {@link #userName}\n respectively {@link #userId}.<\/li>\n <li>If a new active workflow is checked in, it it is always set to {@link #userName}\n respectively {@link #userId}.<\/li>\n <li>If an existing active workflow is checked in, the checked in value is saved<\/li>\n <\/ul>",
            "type": "integer"
          },
          "exitDateIso": {
            "description": "The node was exited/completed on this date. This member is valid for all node types.",
            "type": "string"
          },
          "comment": {
            "description": "Comment text for the node. This member is valid for all node types.",
            "type": "string"
          },
          "onEnterHandleRollback": {
            "description": "A script or plugin name that is called when an error occurs inside a workflow script.\nAll\n onEnterHandleRollback scripts, from one person node to the next person node, are stored in a\n temporary queue and all will get executed if an error inside a script occurs. The\n onEnterHandleRollBack script is not meant for dealing with an error in the onEnter Script, the\n script will only get stored in the temporary queue if the onEnter script was executed without\n any issues.\n <p>\n In order to capture this workflow event in JavaScript, store a script file that defines a\n function named onEnterHandleRollbackNode in a sub-folder of \"Indexserver Scripting Base/_ALL\"\n or \"Indexserver Scripting Base/instancename\".\n \n <pre>\n <code class=\"example\">\n function onEnterHandleRollbackNode(ci, userId, workflow, nodeId) {\n   // ci       ... ClientInfo object of the user that forwards the workflow.\n   // userId   ... The calling user's ID (Integer)\n   // workflow ... WFDiagram object\n   // nodeId   ... The deactivated node ID (Integer)\n ...\n }\n <\/code>\n <\/pre>\n \n See Indexserver Programming Manual for more information.\n <\/p>\n <p>\n If onEnterHandleRollback starts with a plugin's Bundle-SymbolicName, the event is delegated to\n function {@link de.elo.ix.client.plugin.WorkflowNodeEvents#onEnterHandleRollbackflowNode} of a\n <code>WorkflowNodeEvents<\/code> object returned from a call to\n {@link de.elo.ix.client.plugin.WorkflowNodeEventsFactory#create}. Optionally, a path can be\n appended to the Bundle-SymbolicName which is passed to\n {@link de.elo.ix.client.plugin.WorkflowNodeEventsFactory#create}. This path has to start with a\n forward slash. E.g. onEnterHandleRollback=\"com.partner.wfevents/invoice-solution\".\n <\/p>\n This member is valid for all node types.",
            "type": "string"
          },
          "allowActivate": {
            "description": "Can this node be activated? A script can set this value to prevent the activation of the node.\nThis member is valid for all node types.",
            "type": "boolean"
          },
          "userTerminate": {
            "description": "The ID of the user who has forwarded the node. Not valid for template workflows.\nThis member is\n only valid for person nodes.",
            "type": "string"
          },
          "properties": {
            "description": "Node properties.\nMaximum byte size of this string in UTF-8 encoding is constrained to\n {@link FileDataC#MAX_BLOB_LENGTH}.",
            "type": "string"
          },
          "labelTranslationKey": {
            "description": "Translation-keyword for {@link WFNode#label}.",
            "type": "string"
          }
        }
      },
      "AspectLineC": {
        "description": "<p>\nConstants for class <code>AspectLine<\/code>\n <\/p>\n <p>\n Copyright: Copyright (c) 2019\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "TYPE_USER": {
            "format": "int32",
            "description": "Aspect line contains user guid information.",
            "type": "integer"
          },
          "TYPE_STATUS": {
            "format": "int32",
            "description": "Aspect line contains a text which is defined by a mandatory keyword list with a localized\ndisplay value.",
            "type": "integer"
          },
          "mbType": {
            "description": "Member bit: The type of the line information.\nThis can be one of the\n <code>DocMaskLineC.LINETYPE_*<\/code> constants.",
            "type": "string"
          },
          "TYPE_RELATION": {
            "format": "int32",
            "description": "Aspect line contains a relation.\nA Relation consists of a {@link Sord#guid} which references a\n {@link Sord}. with a allowed DocMask {@link DocMaskDetails#keywordingRelationAllowed}.",
            "type": "integer"
          },
          "mbTranslate": {
            "type": "string"
          },
          "mbImportant": {
            "type": "string"
          },
          "mbAllowedMaskIdsForKeywordingRelation": {
            "description": "Member bit: allowedMaskIds",
            "type": "string"
          },
          "TYPE_OFFSET_TYPES_FOR_ASPECTS": {
            "format": "int32",
            "description": "Types above this value are supported only by newer docMasks with aspects.",
            "type": "integer"
          },
          "mbPostfixAsterix": {
            "type": "string"
          },
          "mbPrefixAsterix": {
            "type": "string"
          },
          "TYPE_DOUBLE": {
            "format": "int32",
            "description": "Aspect line contains a floating point number value with 15 significant digits.\nTo assign a\n value of this type to {@link IndexValue#doubleValue}, the String representation has to conform\n to the Double.toString() method of Java. Use dot to separate the fraction part and character\n 'E' to prefix the exponent.",
            "type": "integer"
          },
          "TYPE_INTEGER": {
            "format": "int32",
            "description": "Aspect line contains a number value without fraction in the range of (-2^31) to (2^31)-1.",
            "type": "integer"
          },
          "mbFlags": {
            "description": "Member bit: Line flags",
            "type": "string"
          },
          "TYPE_TEXT": {
            "format": "int32",
            "description": "Aspect line contains text information.",
            "type": "integer"
          },
          "TYPE_ISO_DATE_TIME": {
            "format": "int32",
            "description": "Aspect line contains a date in ISO format with time digits.",
            "type": "integer"
          },
          "TYPE_ISO_DATE_ONLY": {
            "format": "int32",
            "description": "Aspect line contains a date in ISO format without time digits.",
            "type": "integer"
          }
        }
      },
      "BResult_1698110251": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CounterInfo"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "Aspect": {
        "description": "This class defines a keywording aspect.",
        "type": "object",
        "properties": {
          "lockId": {
            "format": "int32",
            "description": "User ID that holds a lock on this object. If -1, the object is unlocked.",
            "type": "integer"
          },
          "TStamp": {
            "description": "Timestamp of last modification.",
            "type": "string"
          },
          "deleted": {
            "description": "Deleted status.",
            "type": "boolean"
          },
          "translationKey": {
            "description": "Translation key. Defines the {@link #displayName} as technical resource ID.",
            "type": "string"
          },
          "TStampSync": {
            "description": "Timestamp of this object's last export by the replication.",
            "type": "string"
          },
          "displayName": {
            "description": "Locale specific name. Readonly. This value is the resolved {@link #translationKey}.",
            "type": "string"
          },
          "name": {
            "description": "Aspect name.\n<br>\n This must be a String of alpha-numeric characters between 'A' and 'Z', 'a' and 'z', '0' and\n '9'.<br>\n Additionally, it can contain the underscore '_' and the dot '.'.<br>\n Underscore and dot are not allowed for the first character of the name.",
            "type": "string"
          },
          "guid": {
            "description": "Aspect GUID.",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "Aspect ID. For a new aspect, this value is -1.\nThis value cannot be changed for an existing\n aspect.",
            "type": "integer"
          },
          "packageName": {
            "description": "Package name of Aspect.",
            "type": "string"
          },
          "lines": {
            "description": "Map of aspect lines. Key is the lineKey of an aspect line (technical name).\nValue is the\n AspectLine object itself.",
            "$ref": "#/components/schemas/MapToAspectLine"
          },
          "lockName": {
            "description": "Name of the user that has locked the aspect. Read-only, ignored in checkinAspect.",
            "type": "string"
          }
        }
      },
      "IndexValue": {
        "description": "This class is a container for one value of a serializable type.\nIt represents the value of an\n index line in aspect objects.",
        "type": "object",
        "properties": {
          "stringValue": {
            "description": "String value.\n<br>\n This internal field is shared between several types.<br>",
            "type": "string"
          },
          "intValue": {
            "format": "int32",
            "description": "Integer value.",
            "type": "integer"
          },
          "doubleValue": {
            "format": "double",
            "description": "Double value.",
            "type": "number"
          },
          "displayData": {
            "description": "Human readable representation of value.\nThis member is read-only and might not be set in\n server-side events.<br>\n For index fields of type {@link DocMaskLineC#TYPE_RELATION}, this member contains the\n {@link Sord#name} of the referenced Sord.<br>\n For index fields of type {@link AspectLineC#TYPE_STATUS}, this member contains, if present, the\n translated value according to the client's locale.",
            "type": "string"
          },
          "type": {
            "format": "int32",
            "description": "Type. One of the type constants given in IndexValueC.",
            "type": "integer"
          }
        }
      },
      "FindConfigFileInfo": {
        "description": "This class describes the files to select from a postbox directory or from a configuration\ndirectory.",
        "type": "object",
        "properties": {
          "inclDeputy": {
            "description": "Find files in the in-tray folder of all deputized users.\nThis member is ignored, if\n <code>names<\/code> is set.",
            "type": "boolean"
          },
          "names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "postboxUserId": {
            "description": "Find files in the in-tray of the user specified by ID or name.\nThis member is ignored, if\n <code>names<\/code> is set. If neither <code>names<\/code> nor <code>postboxUserId<\/code> is set,\n the in-tray of the current user is listed.",
            "type": "string"
          }
        }
      },
      "BRequest_DocumentEvents_beginUpload": {
        "type": "object",
        "properties": {
          "rwInfo": {
            "$ref": "#/components/schemas/UpDownloadEventInfo"
          },
          "ec": {
            "$ref": "#/components/schemas/IXServerEventsContext"
          }
        }
      },
      "ContentStream": {
        "description": "This class contains information about a document related stream.\nSuch a stream might be a\n document version, attachment, preview content, fulltext content or signature.",
        "type": "object",
        "properties": {
          "headers": {
            "description": "Optional HTTP headers.\nThis headers can provide additional information for streams being\n downloaded. E.g. supply byte range headers for parts of video files.",
            "$ref": "#/components/schemas/MapToListOfString"
          },
          "stream": {
            "description": "Document related stream.",
            "$ref": "#/components/schemas/BStreamReference"
          },
          "fileExtension": {
            "description": "File extension without dot.\nEither set file extension or {@link #contentType} to describe the\n stream content.",
            "type": "string"
          },
          "contentLength": {
            "description": "Stream content length. This member is set to the number of bytes in the stream.\nIf the length\n is unknown set {@link ContentStreamC#CONTENT_LENGTH_UNKNOWN}. A wrong content length can client\n applications cause to hang.",
            "type": "string"
          },
          "contentType": {
            "description": "Content type (or MIME type).\nEither set content type or {@link #fileExtension} to describe the\n stream content.",
            "type": "string"
          },
          "responseCode": {
            "format": "int32",
            "description": "HTTP response code for streams being downloaded.\nThis status should be set as 200 (HTTP OK) if\n the entire document has been processed. If {@link DocumentProcessor#process(ContentStream)}\n receives an object that defines byte range headers in {@link ContentStream#headers}, return the\n appropriate byte range headers and set this member as 206 (HTTP Partial Content). Byte ranges\n are usually requested for video files. This element is ignored for streams being uploaded.",
            "type": "integer"
          }
        }
      },
      "ConfigRecordC": {
        "description": "Constants for configuration entries.",
        "type": "object",
        "properties": {
          "PACKAGE_TEAMSPACES": {
            "description": "Package name for teamspace entries as {@link ConfigRecord#packageName}.",
            "type": "string"
          },
          "COMPONENT_TEAMSPACES": {
            "description": "Used as {@link ConfigRecord#component} for teamspace entries.",
            "type": "string"
          },
          "COMPONENT_FLOWS": {
            "description": "Used as {@link ConfigRecord#component} for flows entries.",
            "type": "string"
          },
          "PACKAGE_WORKSPACES": {
            "description": "Package name for workspace entries used as {@link ConfigRecord#packageName}.",
            "type": "string"
          },
          "MAX_VALUE_LENGTH": {
            "format": "int32",
            "description": "Maximum length of {@link ConfigRecord#value}. The maximum length is 1 million characters.",
            "type": "integer"
          },
          "COMPONENT_WORKSPACES": {
            "description": "Used as {@link ConfigRecord#component} for workspace entries.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_resolveRights": {
        "type": "object",
        "properties": {
          "ui": {
            "$ref": "#/components/schemas/UserInfo"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "info": {
            "$ref": "#/components/schemas/ResolveRightsInfo"
          }
        }
      },
      "KeyInfo": {
        "description": "<p>\nContains information about a key object: ID and name.\n <\/p>\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "name": {
            "description": "Key name.",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "Key ID.",
            "type": "integer"
          }
        }
      },
      "UserTaskPriorityC": {
        "type": "object",
        "properties": {
          "LOWEST": {
            "format": "int32",
            "description": "Lowest priority.",
            "type": "integer"
          },
          "MIN": {
            "format": "int32",
            "description": "Minimum value = highest priority of reminder and activity",
            "type": "integer"
          },
          "MAX": {
            "format": "int32",
            "description": "Maximum value = lowest priority of reminder and activity",
            "type": "integer"
          },
          "HIGHEST": {
            "format": "int32",
            "description": "Highest priority.",
            "type": "integer"
          }
        }
      },
      "ArrayOfCounterInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CounterInfo"
        }
      },
      "ReportC": {
        "description": "<p>Bit constants for members of ReportInfo<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbId": {
            "description": "DB column: reportid",
            "type": "string"
          },
          "mbExtra1": {
            "description": "DB column: extra1",
            "type": "string"
          },
          "mbExtra2": {
            "description": "DB column: extra2",
            "type": "string"
          },
          "mbUserId": {
            "description": "DB column: userid",
            "type": "string"
          },
          "mbExtra3": {
            "description": "Member bit: Reserved.\nDB column: extra3",
            "type": "string"
          },
          "mbSessionNo": {
            "description": "DB column: sessionno",
            "type": "string"
          },
          "mbText": {
            "description": "DB column: addtext",
            "type": "string"
          },
          "lnText": {
            "format": "int32",
            "description": "DB column: addtext",
            "type": "integer"
          },
          "lnId": {
            "format": "int32",
            "description": "DB column: reportid",
            "type": "integer"
          },
          "mbActTime": {
            "description": "DB column: acttime",
            "type": "string"
          },
          "mbObjId": {
            "description": "DB column: docid",
            "type": "string"
          },
          "mbActionNo": {
            "description": "DB column: actionno",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnExtra3": {
            "format": "int32",
            "description": "Column length: Reserved.\nDB column: extra3",
            "type": "integer"
          }
        }
      },
      "BResult_276702696": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/SystemReport"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "HashTagRelationC": {
        "description": "Constants for class HashTag",
        "type": "object",
        "properties": {
          "mbAll": {
            "$ref": "#/components/schemas/HashTagRelationZ"
          }
        }
      },
      "PluginInfo": {
        "description": "OSGi plugin information.",
        "type": "object",
        "properties": {
          "symbolicName": {
            "description": "Plugin name. Symbolic name of OSGi plugin.",
            "type": "string"
          },
          "id": {
            "description": "Plugin ID.\nThis value is transient and might change after Indexserver has re-loaded or\n re-started.",
            "type": "string"
          },
          "state": {
            "description": "Plugin state.",
            "$ref": "#/components/schemas/PluginState"
          },
          "serviceNames": {
            "description": "List of service names provides by this plugin. A list of full qualified class names, e.g.\nIXServerEvents.class.getName(), WorkflowNodeEvents.class.getName(),\n DynamicKeywordEvents.class.getName()",
            "$ref": "#/components/schemas/ListOfString"
          }
        }
      },
      "ArrayOfWFNodeAssoc": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/WFNodeAssoc"
        }
      },
      "CleanUpInfo": {
        "description": "Settings Object for MyELOService.\ncleanUpNotifications()",
        "type": "object",
        "properties": {
          "userGuidOrID": {
            "description": "GUID or ID or Name of the User. If null, current user will be set.\nIf GUID/ID is not the\n current user, admin rights are required to perform the cleanup",
            "type": "string"
          },
          "deleteImportant": {
            "description": "Include Notifications marked as important.",
            "type": "boolean"
          },
          "lifetimeDays": {
            "format": "int32",
            "description": "Lifetime of notifications in days.",
            "type": "integer"
          }
        }
      },
      "DocMaskInherit": {
        "description": "This class describes how a keywording form inherits from another keywording form.",
        "type": "object",
        "properties": {
          "parentMaskId": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_getWebDAVPathFromObjID": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          }
        }
      },
      "SubstitutionDataC": {
        "description": "<p>\nBit constants which mirror the database classes.\n <\/p>\n <i>For internal use only. Use {@link SubstitutionC} instead.<\/i>",
        "type": "object",
        "properties": {
          "mbTstamp": {
            "description": "DB column referenced by {@link Substitution#tstamp}",
            "type": "string"
          },
          "mbForwardedBy": {
            "description": "DB column referenced by {@link Substitution#forwardedBy}",
            "type": "string"
          },
          "mbLockId": {
            "description": "DB column referenced by {@link Substitution#lockId} and {@link Substitution#lockName}",
            "type": "string"
          },
          "lnMessage": {
            "format": "int32",
            "description": "Max length of DB column {@link #mbMessage}",
            "type": "integer"
          },
          "mbMessage": {
            "description": "DB column referenced by {@link Substitution#message}",
            "type": "string"
          },
          "mbUserId": {
            "description": "DB column referenced by {@link Substitution#userId} and {@link Substitution#userName}",
            "type": "string"
          },
          "mbSubstituteId": {
            "description": "DB column referenced by {@link Substitution#substituteId} and\n{@link Substitution#substituteName}",
            "type": "string"
          },
          "lnForwardedTo": {
            "format": "int32",
            "description": "Max length of DB column {@link #mbForwardedTo}",
            "type": "integer"
          },
          "mbCreatorId": {
            "description": "DB column referenced by {@link Substitution#creatorId} and {@link Substitution#creatorName}",
            "type": "string"
          },
          "mbSettings": {
            "description": "DB column referenced by {@link Substitution#settings}",
            "type": "string"
          },
          "mbForwardedTo": {
            "description": "DB column referenced by {@link Substitution#forwardedTo}",
            "type": "string"
          },
          "lnGroupsToInheritRights": {
            "format": "int32",
            "description": "Max length of DB column {@link #mbGroupsToInheritRights}",
            "type": "integer"
          },
          "lnForwardedBy": {
            "format": "int32",
            "description": "Max length of DB column {@link #mbForwardedBy}",
            "type": "integer"
          },
          "lnGuid": {
            "format": "int32",
            "description": "Max length of DB column {@link #mbGuid}",
            "type": "integer"
          },
          "mbForwardedFrom": {
            "description": "DB column referenced by {@link Substitution#forwardedFrom}",
            "type": "string"
          },
          "mbGroupsToInheritRights": {
            "description": "DB column referenced by {@link Substitution#groupsToInheritRights}",
            "type": "string"
          },
          "mbTstampsync": {
            "description": "DB column referenced by {@link Substitution#tstampsync}",
            "type": "string"
          },
          "mbAllMembersDB": {
            "description": "For internal use only",
            "type": "string"
          },
          "mbGuid": {
            "description": "DB column referenced by {@link Substitution#guid}",
            "type": "string"
          },
          "lnForwardedFrom": {
            "format": "int32",
            "description": "Max length of DB column {@link #mbForwardedFrom}",
            "type": "integer"
          },
          "lnTstampsync": {
            "format": "int32",
            "description": "Max length of DB column {@link #mbTstampsync}",
            "type": "integer"
          },
          "lnTstamp": {
            "format": "int32",
            "description": "Max length of DB column {@link #mbTstamp}",
            "type": "integer"
          }
        }
      },
      "WorkflowNodeInfo": {
        "type": "object",
        "properties": {
          "nodeName": {
            "description": "The node name",
            "type": "string"
          },
          "workflow": {
            "description": "The template ID of the subworkflow to start.",
            "type": "string"
          },
          "flags": {
            "format": "int32",
            "description": "Control flags for the node, a combination of WFNode.C.FLAG_* constants.",
            "type": "integer"
          }
        }
      },
      "LinkSordInfo": {
        "description": "Additional parameters for function {@link IXServicePortIF#linkSords2}",
        "type": "object",
        "properties": {
          "linkPermanent": {
            "description": "If true, Sords will be linked permanently.\nThe new links between the provided Sords cannot be\n deleted.",
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_startAdHocWorkFlow": {
        "type": "object",
        "properties": {
          "nodeName": {
            "type": "string"
          },
          "cancelMessage": {
            "type": "string"
          },
          "finishedScript": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "finishedUserId": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "objId": {
            "type": "string"
          },
          "cancelUserId": {
            "type": "string"
          },
          "serialFlow": {
            "type": "boolean"
          },
          "arrUserIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "finishedMessage": {
            "type": "string"
          },
          "forValidation": {
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_configureLicense": {
        "type": "object",
        "properties": {
          "licenseFileContent": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_createNewEncryptionSet": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "cryptInfo": {
            "$ref": "#/components/schemas/CryptInfo"
          }
        }
      },
      "BResult_1153931872": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ValuesOfObjKey"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutSord": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "editInfoZ": {
            "$ref": "#/components/schemas/EditInfoZ"
          }
        }
      },
      "PluginMessageC": {
        "description": "Constants related to {@link PluginMessage}.",
        "type": "object",
        "properties": {
          "BODY": {
            "type": "string"
          }
        }
      },
      "BResult_1737266313": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigFile"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BResult_944564842": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/LdapConfig"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_HealthCheckService_updateAll": {
        "type": "object",
        "properties": {
          "hcis": {
            "$ref": "#/components/schemas/ListOfHealthCheckInfo"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinMap": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "domainName": {
            "type": "string"
          },
          "objId": {
            "format": "int32",
            "type": "integer"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "HashTagRelationZ": {
        "type": "object",
        "properties": {
          "bset": {
            "type": "string"
          }
        }
      },
      "ArrayOfUserInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserInfo"
        }
      },
      "InvalidateCacheResult": {
        "description": "This class contains the result of a invalidateCache2 call.",
        "type": "object"
      },
      "BResult_86336767": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ConfigResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "AggregationTypeE": {
        "description": "Types of Aggregations for ESearch AggregationQuery.",
        "type": "object",
        "properties": {
          "AVG": {
            "description": "Avg-Aggregation (Single-Value-Metrics).",
            "$ref": "#/components/schemas/AggregationTypeE"
          },
          "FILTER": {
            "description": "Filter-Aggregation (Single-Bucket).",
            "$ref": "#/components/schemas/AggregationTypeE"
          },
          "MIN": {
            "description": "Min-Aggregation (Single-Value-Metrics).",
            "$ref": "#/components/schemas/AggregationTypeE"
          },
          "MAX": {
            "description": "Max-Aggregation (Single-Value-Metrics).",
            "$ref": "#/components/schemas/AggregationTypeE"
          },
          "TERMS": {
            "description": "Terms-Aggregation (Multi-Bucket).",
            "$ref": "#/components/schemas/AggregationTypeE"
          },
          "HISTOGRAM": {
            "description": "Histogram-Aggregation (Multi-Bucket).",
            "$ref": "#/components/schemas/AggregationTypeE"
          },
          "SUM": {
            "description": "Sum-Aggregation (Single-Value-Metrics).",
            "$ref": "#/components/schemas/AggregationTypeE"
          },
          "DATE_HISTOGRAM": {
            "description": "Date_Histogram-Aggregation (Multi-Bucket).",
            "$ref": "#/components/schemas/AggregationTypeE"
          },
          "VALUE_COUNT": {
            "description": "Value_Count-Aggregation (Single-Value-Metrics).",
            "$ref": "#/components/schemas/AggregationTypeE"
          },
          "RANGE": {
            "description": "Range-Aggregation (Multi-Bucket).",
            "$ref": "#/components/schemas/AggregationTypeE"
          }
        }
      },
      "ActionZ": {
        "description": "Type safe element selector for class Action.",
        "type": "object",
        "properties": {
          "bset": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_collectJobStates": {
        "type": "object",
        "properties": {
          "activeJobs": {
            "type": "boolean"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "finishedJobs": {
            "type": "boolean"
          },
          "fullInfo": {
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinOrgUnits": {
        "type": "object",
        "properties": {
          "orgUnitInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrgUnitInfo"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "reserved": {
            "$ref": "#/components/schemas/CheckinOrgUnitInfo"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "IndexSearchOperator": {
        "description": "The constants in this class define the supported operations for conditions when searching for\naspect objects in the database.",
        "type": "object",
        "properties": {
          "LOWER_THAN": {
            "description": "The value in the database must be lower than the given value.\nThat implies that the given value\n itself is excluded.",
            "$ref": "#/components/schemas/IndexSearchOperator"
          },
          "EQUALS": {
            "description": "The value in the database must be equal to the given value.",
            "$ref": "#/components/schemas/IndexSearchOperator"
          },
          "LIKE": {
            "description": "The value in the database must be 'like' the given value.\n{@link IndexSearchOperator#LIKE}\n supports wildcards, see {@link FindOptions#wildcards}. <br>\n Please be advised that the usage of wildcards at any another position than the last one lead to\n slow search performance especially in large databases as the database system is not able to use\n any index.",
            "$ref": "#/components/schemas/IndexSearchOperator"
          },
          "LOWER": {
            "description": "The value in the database must be lower than or equal to including the given value.",
            "$ref": "#/components/schemas/IndexSearchOperator"
          },
          "GREATER_THAN": {
            "description": "The value in the database must be greater than the given value.\nThat implies that the given\n value itself is excluded.",
            "$ref": "#/components/schemas/IndexSearchOperator"
          },
          "GREATER": {
            "description": "The value in the database must be greater than or equal to including the given value.",
            "$ref": "#/components/schemas/IndexSearchOperator"
          },
          "ISNULL": {
            "description": "Checks if the value of the respective index line is <tt>null<\/tt>.\nThis is an unary operation\n and does not need an operand in e.g. {@link IndexSearchStringValue}.",
            "$ref": "#/components/schemas/IndexSearchOperator"
          },
          "ISEMPTY": {
            "description": "Checks if the value of the respective index line is <tt>null<\/tt> or empty.\nThis is an unary\n operation and does not need an operand in e.g. {@link IndexSearchStringValue}.",
            "$ref": "#/components/schemas/IndexSearchOperator"
          }
        }
      },
      "PackageImportEventInfo": {
        "description": "Describe event info for onAfterPackageImport.\nEIX-3085",
        "type": "object",
        "properties": {
          "packageData": {
            "$ref": "#/components/schemas/PackageData"
          }
        }
      },
      "PackageService": {
        "type": "object"
      },
      "IndexSearchDoubleValue": {
        "description": "This class represents a condition to filter aspect data of type {@link IndexValueC#TYPE_DOUBLE}\nin the database.",
        "type": "object",
        "properties": {
          "operator": {
            "description": "Operator for this search condition",
            "$ref": "#/components/schemas/IndexSearchOperator"
          },
          "operand": {
            "format": "double",
            "description": "Value on the right side of the operation.\nThe left side implicitly is the value in the\n database.",
            "type": "number"
          }
        }
      },
      "BRequest_IXServicePortIF_findActivityProjects": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindActivityProjectsInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_getDebuggerPort": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_loginKerberos": {
        "type": "object",
        "properties": {
          "clientComputer": {
            "type": "string"
          },
          "ticket": {
            "format": "byte",
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "StoreInfo": {
        "description": "<p>\nThis class represents a storage path.\n <\/p>\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "previewDir": {
            "description": "Physical directory where previews stored. Length of the field in database: 255byte.",
            "type": "string"
          },
          "secretKey": {
            "description": "SecretKey for Cloud Storage.",
            "type": "string"
          },
          "retentionMode": {
            "format": "int32",
            "description": "RetentionMode for S3 Storage",
            "type": "integer"
          },
          "flags": {
            "format": "int32",
            "description": "Bitset of options.",
            "type": "integer"
          },
          "encryptionKey": {
            "description": "Encryption key for Cloud Storage.",
            "type": "string"
          },
          "dir": {
            "description": "Physical directory where the documents of this path are stored.\nLength of the field in\n database: 255byte.",
            "type": "string"
          },
          "stdPath": {
            "description": "standard path? read-only",
            "type": "boolean"
          },
          "bucket": {
            "description": "Bucket name for Cloud Storage.\nBucket names must be unique across all existing bucket names in\n Amazon S3.",
            "type": "string"
          },
          "updateDateISO": {
            "description": "Update date (UTC).",
            "type": "string"
          },
          "endpoint": {
            "description": "Endpoint (URL/IP/PORT) for Cloud Storage.",
            "type": "string"
          },
          "createDateISO": {
            "description": "Create date (UTC).",
            "type": "string"
          },
          "accessKey": {
            "description": "AccessKey for Cloud Storage.",
            "type": "string"
          },
          "cloudType": {
            "format": "int32",
            "description": "Type of Cloud Storage.",
            "type": "integer"
          },
          "scatter": {
            "format": "int32",
            "description": "Granularity of subdirectories in the physical directory.",
            "type": "integer"
          },
          "name": {
            "description": "Path name. Length of the field in database: 16byte.",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "Path ID Set this value to -1 in order to create a new storage path.",
            "type": "integer"
          },
          "fulltextDir": {
            "description": "Physical directory where fulltext content is stored. Length of the field in database: 255byte.",
            "type": "string"
          },
          "region": {
            "description": "Region for Amazon S3 Cloud Storage.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinNoteTemplates": {
        "type": "object",
        "properties": {
          "ntemplZ": {
            "$ref": "#/components/schemas/NoteTemplateZ"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "noteTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NoteTemplate"
            }
          }
        }
      },
      "BRequest_PackageService_checkinPackage": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "data": {
            "$ref": "#/components/schemas/PackageData"
          },
          "packageZ": {
            "$ref": "#/components/schemas/PackageDataZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "SubsInfo": {
        "description": "This class contains information about a user that is being deputized by another user.",
        "type": "object",
        "properties": {
          "inheritRights": {
            "description": "The deputy inherits the rights of the user if this member is true.",
            "type": "boolean"
          },
          "subsId": {
            "format": "int32",
            "description": "Deputy: the user that deputizes <code>userId<\/code>.",
            "type": "integer"
          },
          "active": {
            "description": "The deputy relationship is applied if this member is true.\nIf false, the deputy does not\n currently act as the user but may activate the relationship by themself.",
            "type": "boolean"
          },
          "subsName": {
            "description": "Deputy name. If this member is set <code>subsId<\/code> is ignored.",
            "type": "string"
          },
          "userName": {
            "description": "User name. If this member is set <code>userId<\/code> is ignored.",
            "type": "string"
          },
          "userId": {
            "format": "int32",
            "description": "The user that is being deputized by <code>subsId<\/code>",
            "type": "integer"
          }
        }
      },
      "ActivityOptionC": {
        "description": "Constants for class ActivityOption",
        "type": "object",
        "properties": {
          "ID_STATUS": {
            "format": "int32",
            "description": "Option ID for receiving status.",
            "type": "integer"
          },
          "ID_RECEIVER": {
            "format": "int32",
            "description": "Option ID for receiver.",
            "type": "integer"
          },
          "ID_VALUE": {
            "format": "int32",
            "description": "Application defined IDs must be greater or equal to this value.\nUp to 10 application defined\n IDs can be defined. Their values have to be in the range from ID_VALUE+0 to ID_VALUE+9.",
            "type": "integer"
          },
          "ID_TRANS": {
            "format": "int32",
            "description": "Option ID for transmission number.",
            "type": "integer"
          },
          "ID_TYPE": {
            "format": "int32",
            "description": "Option ID for shipping type.",
            "type": "integer"
          }
        }
      },
      "ListOfSubstitution": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Substitution"
        }
      },
      "ActivityC": {
        "description": "Constants for class Activity.",
        "type": "object",
        "properties": {
          "mbAll": {
            "description": "Typesafe element selector for all members. Contains ActivityC.\nmbAllMembers",
            "$ref": "#/components/schemas/ActivityZ"
          },
          "mbOnlyGuid": {
            "description": "Typesafe element selector for members Activity.guid. Contains ActivityC.\nmbGuid",
            "$ref": "#/components/schemas/ActivityZ"
          },
          "mbActivityAndObjectGuid": {
            "description": "Typesafe element selector for members Activity.guid and Activity.objGuid.\nContains\n ActivityC.mbGuid | ActivityC.mbObjGuid",
            "$ref": "#/components/schemas/ActivityZ"
          }
        }
      },
      "BRequest_IXServicePortIF_getWorkflowTemplateVersions": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "onlyDeleted": {
            "type": "boolean"
          },
          "flowId": {
            "type": "string"
          }
        }
      },
      "TermsAggregationResult": {
        "description": "The result object of a terms aggregation.\n<br>\n It consists mainly of buckets and within its inner aggregations results (sub-aggregations).",
        "type": "object",
        "properties": {
          "sumOtherDocCount": {
            "description": "Number of documents that didn\u2019t make it into the the top size terms.\n<br>\n If this is greater than 0, you can be sure that the terms agg had to throw away some buckets,\n either because they didn\u2019t fit into size on the coordinating node or they didn\u2019t fit into\n shard_size on the data node.",
            "type": "string"
          },
          "docCountErrorUpperBound": {
            "description": "If you set the show_term_doc_count_error parameter to true, the terms aggregation will include\ndoc_count_error_upper_bound, which is an upper bound to the error on the doc_count returned by\n each shard. It\u2019s the sum of the size of the largest bucket on each shard that didn\u2019t fit into\n shard_size.",
            "type": "string"
          },
          "buckets": {
            "description": "The buckets (main part of a terms aggregation).",
            "$ref": "#/components/schemas/ListOfBucket"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteTranslateTerms": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "termIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ActionC": {
        "description": "Constants for class Action.",
        "type": "object",
        "properties": {
          "mbMin": {
            "description": "All Action members without text, docVersion and workflow.",
            "$ref": "#/components/schemas/ActionZ"
          },
          "mbHistory": {
            "type": "string"
          },
          "mbAll": {
            "description": "All Action members.",
            "$ref": "#/components/schemas/ActionZ"
          },
          "mbDocVersion": {
            "type": "string"
          },
          "mbAllMembers": {
            "type": "string"
          },
          "mbWorkflow": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_createReminder": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          }
        }
      },
      "BResult_736351635": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/Action"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "FindBySordHist": {
        "type": "object",
        "properties": {
          "histKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SordHistKey"
            }
          }
        }
      },
      "SordTypeDataC": {
        "description": "<p>Bit constants for members of SordType<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnGuid": {
            "format": "int32",
            "description": "Column length: GUID of SordType EIX-2032\nDB column: guid",
            "type": "integer"
          },
          "mbExtensions": {
            "description": "DB column: extensions",
            "type": "string"
          },
          "mbId": {
            "description": "DB column: id",
            "type": "string"
          },
          "lnName": {
            "format": "int32",
            "description": "DB column: name",
            "type": "integer"
          },
          "mbPackageName": {
            "description": "Member bit: Package name of SordType\nDB column: packagename",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnExtensions": {
            "format": "int32",
            "description": "DB column: extensions",
            "type": "integer"
          },
          "mbGuid": {
            "description": "Member bit: GUID of SordType EIX-2032\nDB column: guid",
            "type": "string"
          },
          "mbName": {
            "description": "DB column: name",
            "type": "string"
          },
          "lnPackageName": {
            "format": "int32",
            "description": "Column length: Package name of SordType\nDB column: packagename",
            "type": "integer"
          }
        }
      },
      "DocInfoDMC": {
        "description": "<p>Bit constants for members of DocInfoDM<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbRelFilePath": {
            "description": "Member bit: Relative file path\nDB column: relfilepath",
            "type": "string"
          },
          "lnFulltextContentTStamp": {
            "format": "int32",
            "description": "Column length: Fulltext content timestamp\nDB column: fttstamp",
            "type": "integer"
          },
          "mbMd5": {
            "description": "DB column: md5",
            "type": "string"
          },
          "mbPreviewSizeL": {
            "description": "Member bit: Size of preview file. Is 0, if there is no preview file assigned.\nIs -1, if preview creation\n DB column: previewsize",
            "type": "string"
          },
          "mbPathId": {
            "description": "DB column: pathid",
            "type": "string"
          },
          "lnFclip": {
            "format": "int32",
            "description": "DB column: fclip",
            "type": "integer"
          },
          "mbFtExt": {
            "description": "Member bit: Fulltext file extension.\nDB column: ftext",
            "type": "string"
          },
          "mbOwner": {
            "description": "DB column: owner",
            "type": "string"
          },
          "lnGuid": {
            "format": "int32",
            "description": "DB column: docguid",
            "type": "integer"
          },
          "lnSizeL": {
            "format": "int32",
            "description": "Column length: Document file size.\nDB column: docsize",
            "type": "integer"
          },
          "lnCreateDateIso": {
            "format": "int32",
            "description": "DB column: createdate",
            "type": "integer"
          },
          "mbSizeL": {
            "description": "Member bit: Document file size.\nDB column: docsize",
            "type": "string"
          },
          "mbEncrSet": {
            "description": "Member bit: Encryption set.\nDB column: cryptno",
            "type": "string"
          },
          "lnPreviewExt": {
            "format": "int32",
            "description": "Column length: Preview file extension.\nDB column: previewext",
            "type": "integer"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbLastAccessIso": {
            "description": "DB column: lastaccess",
            "type": "string"
          },
          "lnExt": {
            "format": "int32",
            "description": "DB column: ext",
            "type": "integer"
          },
          "lnExtOrig": {
            "format": "int32",
            "description": "Column length: Original file extension for encrypted documents\nDB column: extorig",
            "type": "integer"
          },
          "mbSizeOrig": {
            "description": "DB column: null",
            "type": "string"
          },
          "lnPreviewExtOrig": {
            "format": "int32",
            "description": "Column length: Original preview file extension for encrypted previews.\nDB column: previewextorig",
            "type": "integer"
          },
          "lnLastAccessIso": {
            "format": "int32",
            "description": "DB column: lastaccess",
            "type": "integer"
          },
          "mbPathId2": {
            "description": "DB column: pathid2",
            "type": "string"
          },
          "mbExtOrig": {
            "description": "Member bit: Original file extension for encrypted documents\nDB column: extorig",
            "type": "string"
          },
          "mbExt": {
            "description": "DB column: ext",
            "type": "string"
          },
          "mbFulltextContentTStamp": {
            "description": "Member bit: Fulltext content timestamp\nDB column: fttstamp",
            "type": "string"
          },
          "mbId": {
            "description": "DB column: docid",
            "type": "string"
          },
          "mbCreateDateIso": {
            "description": "DB column: createdate",
            "type": "string"
          },
          "mbPreviewExtOrig": {
            "description": "Member bit: Original preview file extension for encrypted previews.\nDB column: previewextorig",
            "type": "string"
          },
          "lnPreviewSizeL": {
            "format": "int32",
            "description": "Column length: Size of preview file. Is 0, if there is no preview file assigned.\nIs -1, if preview creation\n DB column: previewsize",
            "type": "integer"
          },
          "mbPreviewSize": {
            "description": "DB column: null",
            "type": "string"
          },
          "mbFclip": {
            "description": "DB column: fclip",
            "type": "string"
          },
          "mbPreviewExt": {
            "description": "Member bit: Preview file extension.\nDB column: previewext",
            "type": "string"
          },
          "lnRelFilePath": {
            "format": "int32",
            "description": "Column length: Relative file path\nDB column: relfilepath",
            "type": "integer"
          },
          "mbFulltextContentSize": {
            "description": "Member bit: Fulltext content file size.\nSince the fulltext content file is usually stored in UTF-8\n DB column: ftsize",
            "type": "string"
          },
          "lnFtExt": {
            "format": "int32",
            "description": "Column length: Fulltext file extension.\nDB column: ftext",
            "type": "integer"
          },
          "mbGuid": {
            "description": "DB column: docguid",
            "type": "string"
          },
          "lnMd5": {
            "format": "int32",
            "description": "DB column: md5",
            "type": "integer"
          },
          "mbSize": {
            "description": "DB column: null",
            "type": "string"
          },
          "mbSizeOrigL": {
            "description": "Member bit: Original file extension for encrypted documents\nDB column: docsizeorig",
            "type": "string"
          },
          "lnSizeOrigL": {
            "format": "int32",
            "description": "Column length: Original file extension for encrypted documents\nDB column: docsizeorig",
            "type": "integer"
          },
          "mbLastUpdateIso": {
            "description": "DB column: lastupdate",
            "type": "string"
          },
          "lnLastUpdateIso": {
            "format": "int32",
            "description": "DB column: lastupdate",
            "type": "integer"
          }
        }
      },
      "PhysDelDataC": {
        "description": "<p>Bit constants for members of PhysDel<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnGuid": {
            "format": "int32",
            "description": "DB column: pdguid",
            "type": "integer"
          },
          "mbTStampSync": {
            "description": "Member bit: Timestamp of this object's last export by the replication.\nDB column: tstampsync",
            "type": "string"
          },
          "mbType": {
            "description": "DB column: pdtype",
            "type": "string"
          },
          "mbTStamp": {
            "description": "DB column: pdtstamp",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbGuid": {
            "description": "DB column: pdguid",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "DB column: pdtstamp",
            "type": "integer"
          },
          "lnTStampSync": {
            "format": "int32",
            "description": "Column length: Timestamp of this object's last export by the replication.\nDB column: tstampsync",
            "type": "integer"
          }
        }
      },
      "BRequest_FioService_startExport": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "options": {
            "$ref": "#/components/schemas/ExportOptions"
          }
        }
      },
      "BResult_2013723887": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ListOfAction"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "FindLinks": {
        "description": "Finds the links of an object.",
        "type": "object",
        "properties": {
          "objectId": {
            "description": "The Object to search for its links.",
            "type": "string"
          }
        }
      },
      "LinkSordZ": {
        "description": "This class encapsulates the constants of LinkSordC.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants from the LinkSordC class.",
            "type": "string"
          }
        }
      },
      "CopySordC": {
        "description": "Constants to copy or move archive entries, or to create a logical link.\nThese constants are used as parameters in the\n copySord function.\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "bsetREFERENCE": {
            "description": "Create a logical link.",
            "type": "string"
          },
          "bsetCOPY_WITH_NOTES_TYPE_PERSONAL": {
            "description": "Copy archive entry with personal notes (CURRENTLY NOT SUPPORTED!).",
            "type": "string"
          },
          "bsetCOPY_WITH_NOTES_TYPE_STAMP": {
            "description": "Copy archive entry with stamps (CURRENTLY NOT SUPPORTED!).",
            "type": "string"
          },
          "bsetCOPY_WITH_DOCUMENT_VERSIONS": {
            "description": "Copy archive entry with document versions (CURRENTLY NOT SUPPORTED!).",
            "type": "string"
          },
          "bsetCOPY_WITH_NOTES_TYPE_NORMAL": {
            "description": "Copy archive entry with notes (CURRENTLY NOT SUPPORTED!).",
            "type": "string"
          },
          "bsetCOPY_WITH_DOCUMENTS": {
            "description": "Copy archive entry with documents (CURRENTLY NOT SUPPORTED!).",
            "type": "string"
          },
          "bsetCOPY_WITH_ATTACHMENTS": {
            "description": "Copy archive entry with attachments (CURRENTLY NOT SUPPORTED!).",
            "type": "string"
          },
          "COPY": {
            "description": "RESERVED. Use ProcessCopyElements and processTrees to copy an archive structure.",
            "$ref": "#/components/schemas/CopySordZ"
          },
          "bsetCOPY": {
            "description": "Reserved. Use ProcessCopyElements and processTrees to copy an archive structure.",
            "type": "string"
          },
          "bsetMOVE": {
            "description": "Move an archive entry.",
            "type": "string"
          },
          "MOVE": {
            "description": "Move the sord. Used in ix.copySord(...).",
            "$ref": "#/components/schemas/CopySordZ"
          },
          "REFERENCE": {
            "description": "Create a reference to the sord. Used in ix.copySord(...).",
            "$ref": "#/components/schemas/CopySordZ"
          },
          "bsetCOPY_WITH_ATTACHMENT_VERSIONS": {
            "description": "Copy archive entry with attachment versions (CURRENTLY NOT SUPPORTED!).",
            "type": "string"
          },
          "bsetCOPY_WITH_CHILDREN": {
            "description": "Copy archive entry with children (CURRENTLY NOT SUPPORTED!).",
            "type": "string"
          }
        }
      },
      "IXServicePortIF": {
        "type": "object"
      },
      "ArrayOfSord": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Sord"
        }
      },
      "ArrayOfBackupProfile": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/BackupProfile"
        }
      },
      "BRequest_IXServicePortIF_checkoutKeywordsDynamic": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "keywordsDynamicInfo": {
            "$ref": "#/components/schemas/KeywordsDynamicInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteReport": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "endDateISO": {
            "type": "string"
          }
        }
      },
      "BResult_1652390957": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/PluginMessage"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_createEventBusListener": {
        "type": "object",
        "properties": {
          "subsId": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "eventListener": {
            "$ref": "#/components/schemas/EventListener"
          }
        }
      },
      "FilterValue": {
        "description": "Deliver a value for QueryFilter.",
        "type": "object"
      },
      "ListOfPluginInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PluginInfo"
        }
      },
      "ArrayOfEventFilter": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/EventFilter"
        }
      },
      "ConfigRecord": {
        "description": "Objects of this class represent entries for configurations related to packages.",
        "type": "object",
        "properties": {
          "component": {
            "description": "ELO module name or ID.",
            "type": "string"
          },
          "instanceId": {
            "description": "Instance ID for workspace.\nFor workspace entries, this value is assigned to the related\n {@link Sord#getGuid()}.",
            "type": "string"
          },
          "level": {
            "format": "int32",
            "description": "Layer level. This value defines the priority for the entry.",
            "type": "integer"
          },
          "aclItems": {
            "description": "Access control list.",
            "$ref": "#/components/schemas/ListOfAclItem"
          },
          "groupId": {
            "description": "Groups related entries.",
            "type": "string"
          },
          "id": {
            "description": "Row ID. This ID is unique over all entries.",
            "type": "string"
          },
          "packageName": {
            "description": "Package name or GUID.",
            "type": "string"
          },
          "acl": {
            "description": "Access control in raw representation.",
            "type": "string"
          },
          "value": {
            "description": "Entry value. This value can hold up to {@link ConfigRecordC#MAX_VALUE_LENGTH} characters.",
            "type": "string"
          },
          "key": {
            "description": "Entry key.",
            "type": "string"
          }
        }
      },
      "ArrayOfFileData": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FileData"
        }
      },
      "CopySordZ": {
        "description": "This class encapsulates the constants of the CopySordsC class.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants from the CopySordC class.",
            "type": "string"
          }
        }
      },
      "DocMaskLine": {
        "description": "This class contains data for a line in the document mask.",
        "type": "object",
        "properties": {
          "access": {
            "format": "int32",
            "description": "Bitset of AccessC.LUR_* constants. It contains the access bits for the current user.\nOnly\n AccessC.LUR_READ and AccessC.LUR_WRITE are used.",
            "type": "integer"
          },
          "hidden": {
            "description": "This value should not be displayed to the user.",
            "type": "boolean"
          },
          "postfixAsterix": {
            "description": "Add \"*\" after index value in search operation.",
            "type": "boolean"
          },
          "notTokenized": {
            "description": "Defines whether a index value should be searchable as TOKENIZED or UN_TOKENIZED",
            "type": "boolean"
          },
          "defaultValue": {
            "description": "This value is assigned to the ObjKey.data element for a new Sord object.",
            "type": "string"
          },
          "canEdit": {
            "description": "Determines whether the index line can be modified. Read-only.",
            "type": "boolean"
          },
          "editRow": {
            "format": "int32",
            "description": "Row postion of edit control",
            "type": "integer"
          },
          "externalData": {
            "description": "External data. Can be used to store an arbitary string.",
            "type": "string"
          },
          "tabIndex": {
            "format": "int32",
            "description": "This value represents the number of the tab, this line has to appear on.\nThe first tab's index\n value is 0. It is on the client's hand to set valid values when checking in document masks.",
            "type": "integer"
          },
          "acl": {
            "description": "Access control for mask line.",
            "type": "string"
          },
          "valueArray": {
            "description": "Allows multiple values for keywording tables.\nFor keywording forms organized as tables, see\n {@link DocMaskC#DATA_ORGANISATION_TABLE}, index lines must be explicitly declared for storing\n multiple values. If this member is true, the index line is able to store an arbitrary number of\n values. For keywording forms organized as name-value pairs, see\n {@link DocMaskC#DATA_ORGANISATION_OBJKEYS}, index lines can store multiple values by default\n and this member has to be ignored.",
            "type": "boolean"
          },
          "type": {
            "format": "int32",
            "description": "The type of the line information. This can be one of the <code>DocMaskLineC.\nTYPE_*<\/code>\n constants.",
            "type": "integer"
          },
          "editWidth": {
            "format": "int32",
            "description": "With of edit control",
            "type": "integer"
          },
          "translate": {
            "description": "Translate index values into or from the users language.",
            "type": "boolean"
          },
          "required": {
            "description": "Entry is required.",
            "type": "boolean"
          },
          "min": {
            "format": "int32",
            "description": "The minimum value of this attribute.",
            "type": "integer"
          },
          "inheritFromParent": {
            "description": "Do not inherit the parent's value.",
            "type": "boolean"
          },
          "serverScriptName": {
            "description": "A script or plugin at the server can serve as the data source of a dynamic keyword list.\nThis\n value represents the name of that script or plugin. If the value is not empty, the client can\n request a list of available input values by calling the function\n {@link IXServicePortIF#checkoutKeywordsDynamic(ClientInfo, KeywordsDynamicInfo)}. In case of a\n plugin, this value starts with the Bundle-SymbolicName and can be optionally appended by a\n path. E.g. serverScriptName=\"com.partner.dkeywords/invoice-solution\". The path has to start\n with a forward slash and is passed to\n {@link de.elo.ix.client.plugin.DynamicKeywordEventsFactory#create}.",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "The ID of the line information.",
            "type": "integer"
          },
          "labelCol": {
            "format": "int32",
            "description": "Column position of label control",
            "type": "integer"
          },
          "key": {
            "description": "The attribute group name. This member corresponds to <code>ObjKey.name<\/code>.",
            "type": "string"
          },
          "editCol": {
            "format": "int32",
            "description": "Column position of edit control",
            "type": "integer"
          },
          "prefixAsterix": {
            "description": "Add \"*\" before index value in search operation.",
            "type": "boolean"
          },
          "max": {
            "format": "int32",
            "description": "The maximum value of this attribute.",
            "type": "integer"
          },
          "commentTranslationKey": {
            "description": "Translation-keyword for {@link DocMaskLine#comment}.",
            "type": "string"
          },
          "onlyBuzzwords": {
            "description": "The index line can only contain buzzwords.",
            "type": "boolean"
          },
          "disableWordWheel": {
            "description": "Disable word wheel.\nClients should not provide a function to list all existing values for this\n index vlaue. The Indexserver does not set or test this value.",
            "type": "boolean"
          },
          "maskId": {
            "format": "int32",
            "description": "This line information belongs to a storage mask with the ID MaskId.",
            "type": "integer"
          },
          "readOnly": {
            "description": "This value should not be edited in a user interface (convention).\nScripts are allowed to edit\n the value.",
            "type": "boolean"
          },
          "version": {
            "description": "Display index value in version information dialog when checking in a document.\nThis element has\n to be interpreted by the client application. Indexserver ignores this value.",
            "type": "boolean"
          },
          "allowedMaskIdsForKeywordingRelation": {
            "description": "Specifies the {@link DocMask#id} allowed in a {@link DocMaskLineC#TYPE_RELATION}.\nMandatory if DocMaskLine is of type {@link DocMaskLineC#TYPE_RELATION}. Only Sords with the\n specified {@link DocMask#id} can be referenced in this DocMaskLine.",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "important": {
            "description": "Display index value next to the objects short description.\nThis element has to be interpreted\n by the client application. Indexserver ignores this value.",
            "type": "boolean"
          },
          "nameTranslationKey": {
            "description": "Translation-keyword for {@link DocMaskLine#name}.",
            "type": "string"
          },
          "labelRow": {
            "format": "int32",
            "description": "Row position of label control",
            "type": "integer"
          },
          "excludeFromISearch": {
            "description": "If true a index value will not be searchable via iSearch. Does not affect the index search.",
            "type": "boolean"
          },
          "nextTab": {
            "description": "Creates a new tab in the keywording dialogue.",
            "type": "boolean"
          },
          "aclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "tabOrder": {
            "format": "int32",
            "description": "Tabulator order of edit control",
            "type": "integer"
          },
          "inherit": {
            "description": "Inherit this keywording field to subordinated entries.\n<p>\n This option is used to make sure, that all entries in an archive sub-tree have the same value\n for this keywording field. Thereby the field is identified by its group name\n ({@link DocMaskLine#key} and {@link ObjKey#name}).\n <\/p>\n <p>\n The option corresponds to {@link #inheritFromParent}. As far as {@link #inheritFromParent} is\n also true in the keywording forms definition of all sub-items, the option {@link #inherit}\n effects the following:\n <ul>\n <li>The value of the keywording field can only be changed in the parent entry of the sub-tree.\n This is the uppermost entry that has the field, which means that the parent's parent does not\n have this field.<\/li>\n <li>All sub-items of the parent inherit this value during a background process. The value is\n forwarded recursively to the entire sub-tree under the parent. The recursion stops at items\n that are assigned to a keywording form without this field.<\/li>\n <li>When a child entry under the parent is updated, this field is always corrected to the\n parent's value.<\/li>\n <li>For an object moved into a parent, the object and all sub-items inherit the keywording\n field.<\/li>\n <\/ul>\n <\/p>\n <p>\n If {@link #inheritFromParent} is false in the keywording form definition of a sub-item,\n inheritance stops for the sub-item. Thus, the index field is treated as a different field\n although it has the same group name.\n <\/p>",
            "type": "boolean"
          },
          "name": {
            "description": "The name of the attribute. This value is displayed in the lable before the edit field.\nIt can\n be translated into reps. from the users language: set\n <code>SessionOptionsC.TRANSLATE_TERM<\/code>.",
            "type": "string"
          },
          "comment": {
            "description": "Quickinfo text for the attribute.",
            "type": "string"
          },
          "validateExpression": {
            "description": "RegEx to validate user input for entry.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinStorage": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "storeInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreInfo"
            }
          }
        }
      },
      "ActionHistDataC": {
        "description": "<p>Bit constants for members of ActionHistory<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnActionGuid": {
            "format": "int32",
            "description": "Column length: Action GUID. Unique identifier.\nDB column: actionguid",
            "type": "integer"
          },
          "lnCreateDateIso": {
            "format": "int32",
            "description": "Column length: Create date.\nThis element is the ISO formatted create date of the action in the time zone of\n DB column: createdateiso",
            "type": "integer"
          },
          "mbCreateDateIso": {
            "description": "Member bit: Create date.\nThis element is the ISO formatted create date of the action in the time zone of\n DB column: createdateiso",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbActionGuid": {
            "description": "Member bit: Action GUID. Unique identifier.\nDB column: actionguid",
            "type": "string"
          },
          "mbText": {
            "description": "Member bit: Comment text.\nThis element is only valid for {@link EActionType#UserComment}, and\n DB column: actiontext",
            "type": "string"
          },
          "lnText": {
            "format": "int32",
            "description": "Column length: Comment text.\nThis element is only valid for {@link EActionType#UserComment}, and\n DB column: actiontext",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_createSubscription": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "watchGuid": {
            "type": "string"
          }
        }
      },
      "ArrayOfAction": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Action"
        }
      },
      "FindByPreviewCtrl": {
        "description": "This class can be used to find the documents for which preview files have to be created.\nThe main\n purpose is to control the automatic preview generation in a server process.",
        "type": "object",
        "properties": {
          "fileExtensions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "previewError": {
            "description": "Finds all documents for which the preview generation failed.",
            "type": "boolean"
          },
          "previewAvailable": {
            "description": "Finds all documents with previews.",
            "type": "boolean"
          }
        }
      },
      "BRequest_PluginService_configure": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "id": {
            "type": "string"
          },
          "config": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_getAclAccess": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "aai": {
            "$ref": "#/components/schemas/AclAccessInfo"
          }
        }
      },
      "FindInfo": {
        "description": "This class controls the search function findFirstSords.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "findByFulltext": {
            "description": "If not null the results are constrained to documents including this fulltext term (or terms).",
            "$ref": "#/components/schemas/FindByFulltext"
          },
          "findByNotes": {
            "description": "If not null the function searches through the notes.\n(NOT CURRENTLY IMPLEMENTED!)",
            "$ref": "#/components/schemas/FindByNotes"
          },
          "findByRegisteredFunction": {
            "$ref": "#/components/schemas/FindByRegisteredFunction"
          },
          "findDirect": {
            "description": "Terms for google-like search in Java-Client.",
            "$ref": "#/components/schemas/FindDirect"
          },
          "findByIndex": {
            "description": "If not null the function searches through the indexing information.",
            "$ref": "#/components/schemas/FindByIndex"
          },
          "findByVersion": {
            "description": "If not null the function searches using histversion and histcomment.",
            "$ref": "#/components/schemas/FindByVersion"
          },
          "findBySordHist": {
            "description": "If not null the function searches in versioning history of indexing information.",
            "$ref": "#/components/schemas/FindBySordHist"
          },
          "findByAcl": {
            "description": "Find sords by ACL.",
            "$ref": "#/components/schemas/FindByAcl"
          },
          "findLinks": {
            "description": "If not null, the results are constrained to entries linked to the specified object in\nfindLinks.",
            "$ref": "#/components/schemas/FindLinks"
          },
          "findByFulltextCtrl": {
            "description": "Find the sords that have to be indexed by the fulltext engine.",
            "$ref": "#/components/schemas/FindByFulltextCtrl"
          },
          "findByPreviewCtrl": {
            "description": "Find sords by preview control information.",
            "$ref": "#/components/schemas/FindByPreviewCtrl"
          },
          "findChildren": {
            "description": "If not null, the results are constrained to child entries of the specified parent in this\nobject. To retrieve child lists for an archive entry this member must be set with the related\n parent ID and all others members in this class must be null.",
            "$ref": "#/components/schemas/FindChildren"
          },
          "findByESearch": {
            "description": "If not null, the new ElasticSearch API (as of ELO 11) is used.",
            "$ref": "#/components/schemas/FindByESearch"
          },
          "findByType": {
            "description": "If not null the function searches using objtype.",
            "$ref": "#/components/schemas/FindByType"
          },
          "findOptions": {
            "description": "This member controls several options, e. g. sorting, time limitation.",
            "$ref": "#/components/schemas/FindOptions"
          },
          "findForKeywordingRelation": {
            "description": "Find Sord objects to be used in keywording relation.",
            "$ref": "#/components/schemas/FindForKeywordingRelation"
          }
        }
      },
      "PackageData": {
        "description": "This class defines a package.\nEIX-1895",
        "type": "object",
        "properties": {
          "lockId": {
            "format": "int32",
            "description": "The ID of the user that holds the lock or -1, if the note is not locked.",
            "type": "integer"
          },
          "tStamp": {
            "description": "Timestamp of last modification.",
            "type": "string"
          },
          "name": {
            "description": "Name of the package, which is displayed.",
            "type": "string"
          },
          "icon": {
            "description": "Icon of package.",
            "$ref": "#/components/schemas/FileData"
          },
          "namespace": {
            "description": "Name of the package, which can be used (as technical name).",
            "type": "string"
          },
          "guid": {
            "description": "Package GUID.",
            "type": "string"
          },
          "description": {
            "description": "Package description.",
            "type": "string"
          },
          "lockName": {
            "description": "The user name that holds the lock or an empty string if the note is not locked.",
            "type": "string"
          },
          "contentType": {
            "description": "Content type of the icon",
            "type": "string"
          },
          "maintainer": {
            "description": "Maintainer of package",
            "type": "string"
          },
          "levels": {
            "$ref": "#/components/schemas/ListOfPackageLevelData"
          }
        }
      },
      "BRequest_FeedService_findFirstHashTagRelation": {
        "type": "object",
        "properties": {
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindHashTagInfo"
          },
          "hashTagZ": {
            "$ref": "#/components/schemas/HashTagZ"
          }
        }
      },
      "BRequest_PluginService_start": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "DocMaskDataC": {
        "description": "<p>Bit constants for members of DocMask<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbNameTranslationKey": {
            "description": "Member bit: Translation-keyword for {@link DocMask#name}.\nDB column: masknametrkey",
            "type": "string"
          },
          "mbEncryptionSet": {
            "description": "Member bit: The number of the encryptionSet (the value 0 means not encrypted).\nDB column: encryptionset",
            "type": "string"
          },
          "mbTStamp": {
            "description": "DB column: masktstamp",
            "type": "string"
          },
          "mbBarcode": {
            "description": "DB column: maskbarcode",
            "type": "string"
          },
          "mbDataOrganisation": {
            "description": "Member bit: This member specifies how the index values are stored in database.\nDB column: dataorg",
            "type": "string"
          },
          "lnRawPosInfo3": {
            "format": "int32",
            "description": "Column length: This field extends <code>RawPosInfo<\/code> for more docMask lines (EIX-739).\nDB column: maskposinfo3",
            "type": "integer"
          },
          "lnRawPosInfo2": {
            "format": "int32",
            "description": "Column length: This field extends <code>RawPosInfo<\/code> for more docMask lines (EIX-739).\nDB column: maskposinfo2",
            "type": "integer"
          },
          "mbRawPosInfo3": {
            "description": "Member bit: This field extends <code>RawPosInfo<\/code> for more docMask lines (EIX-739).\nDB column: maskposinfo3",
            "type": "string"
          },
          "mbRawPosInfo2": {
            "description": "Member bit: This field extends <code>RawPosInfo<\/code> for more docMask lines (EIX-739).\nDB column: maskposinfo2",
            "type": "string"
          },
          "mbDKey": {
            "description": "DB column: maskdkey",
            "type": "string"
          },
          "lnLifetime": {
            "format": "int32",
            "description": "DB column: lifetime",
            "type": "integer"
          },
          "mbInternalAcl": {
            "description": "Member bit: Internal acl.\nDB column: maskacl",
            "type": "string"
          },
          "lnTStampSync": {
            "format": "int32",
            "description": "Column length: Timestamp of this object's last export by the replication.\nDB column: masktstampsync",
            "type": "integer"
          },
          "mbId": {
            "description": "DB column: maskno",
            "type": "string"
          },
          "mbKey": {
            "description": "DB column: maskkey",
            "type": "string"
          },
          "mbDKind": {
            "description": "DB column: maskdkind",
            "type": "string"
          },
          "lnRawMaskIdsForChildEntries": {
            "format": "int32",
            "description": "Column length: Child entries in the archive hierarchy should only use this keywording forms.\nIf this element\n DB column: maskidsforchildentries",
            "type": "integer"
          },
          "mbDPath": {
            "description": "DB column: maskdpath",
            "type": "string"
          },
          "mbGuid": {
            "description": "Member bit: GUID\nDB column: maskguid",
            "type": "string"
          },
          "mbRawMaskIdsForChildEntries": {
            "description": "Member bit: Child entries in the archive hierarchy should only use this keywording forms.\nIf this element\n DB column: maskidsforchildentries",
            "type": "string"
          },
          "mbFlags": {
            "description": "DB column: maskflags",
            "type": "string"
          },
          "mbDAcl": {
            "description": "DB column: maskdacl",
            "type": "string"
          },
          "lnPackageName": {
            "format": "int32",
            "description": "Column length: Package name of DocMask\nDB column: packagename",
            "type": "integer"
          },
          "lnTextTranslationKey": {
            "format": "int32",
            "description": "Column length: Translation-keyword for {@link DocMask#text}.\nDB column: masktexttrkey",
            "type": "integer"
          },
          "mbFlowId": {
            "description": "DB column: maskflowid",
            "type": "string"
          },
          "mbPackageName": {
            "description": "Member bit: Package name of DocMask\nDB column: packagename",
            "type": "string"
          },
          "mbIndex": {
            "description": "DB column: maskindex",
            "type": "string"
          },
          "mbName": {
            "description": "DB column: maskname",
            "type": "string"
          },
          "lnText": {
            "format": "int32",
            "description": "DB column: masktext",
            "type": "integer"
          },
          "lnGuid": {
            "format": "int32",
            "description": "Column length: GUID\nDB column: maskguid",
            "type": "integer"
          },
          "mbTStampSync": {
            "description": "Member bit: Timestamp of this object's last export by the replication.\nDB column: masktstampsync",
            "type": "string"
          },
          "lnDAcl": {
            "format": "int32",
            "description": "DB column: maskdacl",
            "type": "integer"
          },
          "lnNameTranslationKey": {
            "format": "int32",
            "description": "Column length: Translation-keyword for {@link DocMask#name}.\nDB column: masknametrkey",
            "type": "integer"
          },
          "mbStatus": {
            "description": "Member bit: Deleted status.\nDB column: maskstatus",
            "type": "string"
          },
          "lnName": {
            "format": "int32",
            "description": "DB column: maskname",
            "type": "integer"
          },
          "lnInternalAcl": {
            "format": "int32",
            "description": "Column length: Internal acl.\nDB column: maskacl",
            "type": "integer"
          },
          "lnRawPosInfo": {
            "format": "int32",
            "description": "DB column: maskposinfo",
            "type": "integer"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "DB column: masktstamp",
            "type": "integer"
          },
          "mbDeletionDeadline": {
            "description": "Member bit: Deletion deadline for new objects.\nDB column: deletiondeadline",
            "type": "string"
          },
          "mbSordType": {
            "description": "Member bit: Prepare this type for a new Sord object.\nDB column: sordType",
            "type": "string"
          },
          "mbLockId": {
            "description": "DB column: masklock",
            "type": "string"
          },
          "lnBarcode": {
            "format": "int32",
            "description": "DB column: maskbarcode",
            "type": "integer"
          },
          "mbRawPosInfo": {
            "description": "DB column: maskposinfo",
            "type": "string"
          },
          "mbLifetime": {
            "description": "DB column: lifetime",
            "type": "string"
          },
          "mbText": {
            "description": "DB column: masktext",
            "type": "string"
          },
          "lnDeletionDeadline": {
            "format": "int32",
            "description": "Column length: Deletion deadline for new objects.\nDB column: deletiondeadline",
            "type": "integer"
          },
          "mbTextTranslationKey": {
            "description": "Member bit: Translation-keyword for {@link DocMask#text}.\nDB column: masktexttrkey",
            "type": "string"
          },
          "mbFlowId2": {
            "description": "Member bit: The ID of a workflow that is to be started if a new version of an associated document is\nDB column: maskflowid2",
            "type": "string"
          },
          "lnIndex": {
            "format": "int32",
            "description": "DB column: maskindex",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_cookKeyword": {
        "type": "object",
        "properties": {
          "kwid": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BResult_785380175": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EditInfo"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "DateHistogramAggregationResult": {
        "description": "The result object of a date_histogram aggregation.\n<br>\n It consists mainly of buckets and within its inner aggregations results (sub-aggregations).",
        "type": "object",
        "properties": {
          "buckets": {
            "description": "The result buckets.",
            "$ref": "#/components/schemas/ListOfBucket"
          }
        }
      },
      "WFTakeNodeC": {
        "description": "Constant class for controlling the taking over(passing to another user) of a workflow object.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "RESET_DEPARTMENT2": {
            "format": "int32",
            "description": "WFNode.department2 is set when the node is taken over by another user.",
            "type": "integer"
          },
          "RESET_IN_USE_DATE": {
            "format": "int32",
            "description": "WFNode.inUseDateIso is set when the node is taken over by another user.",
            "type": "integer"
          },
          "DEFAULT": {
            "format": "int32",
            "description": "Standard action. Neither WFNode.department2 nor WFNode.inUseDateIso are returned.",
            "type": "integer"
          }
        }
      },
      "LinkSordC": {
        "description": "Constants for linkSord(...).\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "NOTHING": {
            "description": "Used as standard in linkSord(...).",
            "$ref": "#/components/schemas/LinkSordZ"
          },
          "PAIR": {
            "description": "Link Sord objects in PAIR.",
            "$ref": "#/components/schemas/LinkSordZ"
          },
          "CROSS_LINK": {
            "description": "Link each Sord to each other Sord.",
            "$ref": "#/components/schemas/LinkSordZ"
          }
        }
      },
      "BRequest_IXServicePortIF_unlinkSords": {
        "type": "object",
        "properties": {
          "linkZ": {
            "$ref": "#/components/schemas/LinkSordZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "toIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fromId": {
            "type": "string"
          }
        }
      },
      "ImportOptionsC": {
        "description": "Defines the Options of an Import. Each Option is represented by one bit.\nSeveral Options can be put together by a\n bit-logic and.\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "KEEP_FILING_DATE": {
            "description": "Use original filing-date (Sord.iDateIso saved in export) when filing during import.",
            "type": "string"
          },
          "USE_EXPORTED_PATH": {
            "description": "Use original filing-path for import (original path of exporting archive was saved during export)",
            "type": "string"
          },
          "GUIDS_NEW": {
            "description": "generate new guids during import.",
            "type": "string"
          },
          "IMPORT_KEYWORDS": {
            "description": "Import keywords",
            "type": "string"
          },
          "USE_PARENT_ACL": {
            "description": "Use parent's ACL in archive",
            "type": "string"
          },
          "GUIDS_KEEP_AND_SKIP": {
            "description": "import only guids that are not already used.",
            "type": "string"
          },
          "GUIDS_SCRIPT": {
            "description": "make a new version for document with this guid.",
            "type": "string"
          },
          "CREATE_SEPARATE_STRUCTURE": {
            "description": "Import all data in a new structure.",
            "type": "string"
          },
          "GUIDS_KEEP": {
            "description": "Keep guids on import, generate new guid if guid is already used.",
            "type": "string"
          }
        }
      },
      "ReplSetCombination": {
        "description": "Internal class.",
        "type": "object",
        "properties": {
          "guid": {
            "type": "string"
          },
          "combi": {
            "format": "byte",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_processFindResult": {
        "type": "object",
        "properties": {
          "searchId": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "procInfo": {
            "$ref": "#/components/schemas/ProcessInfo"
          }
        }
      },
      "ArrayListOfESInstanceSettings": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ESInstanceSettings"
        }
      },
      "BResult_2121298555": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ActivityProject"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "ReportModeZ": {
        "description": "<p>\nThis class encapsulates the constants of <code>ReportModeC<\/code>\n <\/p>\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants from ReportModeC class.",
            "type": "string"
          }
        }
      },
      "ExportOptions": {
        "description": "Options to import/export archive data for the replication.",
        "type": "object",
        "properties": {
          "timeStampStart": {
            "description": "This value applies to exports only.\nObjects modified before this timestamp will not be\n processed.",
            "type": "string"
          },
          "includeMasterData": {
            "description": "Specifies which master data to export.",
            "$ref": "#/components/schemas/SetOfMasterDataE"
          },
          "packageGuids": {
            "description": "EIX-2032: List of names or GUIDs of packages to export.",
            "$ref": "#/components/schemas/ListOfString"
          },
          "timeStampEnd": {
            "description": "This value applies to exports only.\nObjects modified after this timestamp will not be\n processed.",
            "type": "string"
          },
          "compressionLevel": {
            "format": "int32",
            "description": "Enables compression mode. -1=no compression, 0/1=low compression, 9=strong compression.",
            "type": "integer"
          }
        }
      },
      "StoreInfoC": {
        "description": "Definition of a document path.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "CLOUD_MINIO": {
            "format": "int32",
            "description": "Minio Cloud Storage.",
            "type": "integer"
          },
          "SP_ACTIVATOR": {
            "format": "int32",
            "description": "Store in KGS Activator.",
            "type": "integer"
          },
          "NO_FILE_ENCRYPTION": {
            "description": "Cloud storage encryption is set by default.\nIf this constant is set in field\n StoreInfo.encryptionKey there will be no encryption.",
            "type": "string"
          },
          "SP_4K": {
            "format": "int32",
            "description": "4k documents per sub directory",
            "type": "integer"
          },
          "CLOUD_S3": {
            "format": "int32",
            "description": "Amazon S3 Cloud Storage.",
            "type": "integer"
          },
          "CLOUD_GOOGLE": {
            "format": "int32",
            "description": "Google Cloud Storage. not yet implemented.",
            "type": "integer"
          },
          "SP_S3": {
            "format": "int32",
            "description": "Store on S3 Cloud Storage",
            "type": "integer"
          },
          "FLAG_WORM": {
            "format": "int32",
            "description": "Path can only be written once. DM does not use temporary files.",
            "type": "integer"
          },
          "FLAG_READONLY": {
            "format": "int32",
            "description": "Path is read-only.",
            "type": "integer"
          },
          "FLAG_BACKUP": {
            "format": "int32",
            "description": "Backup path.",
            "type": "integer"
          },
          "FLAG_ELO5_PATH_CHANGED": {
            "format": "int32",
            "description": "Only ELO 5.0: path has been changed.",
            "type": "integer"
          },
          "SP_S3_EXTERNAL": {
            "format": "int32",
            "description": "Use S3 Cloud Storage as Backup Device",
            "type": "integer"
          },
          "SP_64K": {
            "format": "int32",
            "description": "64k documents per sub directory",
            "type": "integer"
          },
          "SP_CENTERA": {
            "format": "int32",
            "description": "Store on CENTERA device.",
            "type": "integer"
          },
          "SP_FLAT": {
            "format": "int32",
            "description": "No sub directories.",
            "type": "integer"
          },
          "FLAG_NO_RESTORE": {
            "format": "int32",
            "description": "Used with FLAG_BACKUP, document files are not restored in a normal path.",
            "type": "integer"
          },
          "SP_1K": {
            "format": "int32",
            "description": "1k documents per sub directory",
            "type": "integer"
          },
          "FLAG_ELO5_PATH_PROTECTED": {
            "format": "int32",
            "description": "Only ELO 5.0: path is protected.",
            "type": "integer"
          },
          "SP_REL_FILE_PATH": {
            "format": "int32",
            "description": "External storage definition. A physical (relative) path is specified for each document.",
            "type": "integer"
          },
          "SP_16": {
            "format": "int32",
            "description": "16k documents per sub directory",
            "type": "integer"
          },
          "DMPATH_ELOSYS": {
            "description": "Reserved path name. Documents stored within DMPATH_ELOSYS will not be purged.",
            "type": "string"
          },
          "SP_FULL": {
            "format": "int32",
            "description": "256 folders with 256 documents",
            "type": "integer"
          },
          "FLAG_ELO5_NO_NT_SECURITY": {
            "format": "int32",
            "description": "Only ELO 5.0: no NT security.",
            "type": "integer"
          },
          "SP_TSM": {
            "format": "int32",
            "description": "Store on TSM device.",
            "type": "integer"
          },
          "SP_MD5_HASH": {
            "format": "int32",
            "description": "Store using MD5 hash.",
            "type": "integer"
          }
        }
      },
      "ProcessReleaseLock": {
        "description": "Releases the locks on archive elements.",
        "type": "object"
      },
      "MapToAspectLine": {
        "additionalProperties": {
          "$ref": "#/components/schemas/AspectLine"
        },
        "type": "object"
      },
      "PluginService": {
        "type": "object"
      },
      "BRequest_IXServicePortIF_startWorkFlow": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          },
          "templFlowId": {
            "type": "string"
          },
          "flowName": {
            "type": "string"
          }
        }
      },
      "ValueClass": {
        "type": "object"
      },
      "PhysDelDocsC": {
        "description": "<p>Bit constants for members of PhysDelDocs<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbObjId": {
            "description": "DB column: objid",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_findFirstUsers": {
        "type": "object",
        "properties": {
          "findUserInfo": {
            "$ref": "#/components/schemas/FindUserInfo"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ArrayOfDocVersion": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DocVersion"
        }
      },
      "MapDomainDataC": {
        "description": "<p>Bit constants for members of MapDomain<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnName": {
            "format": "int32",
            "description": "DB column: mapdname",
            "type": "integer"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbName": {
            "description": "DB column: mapdname",
            "type": "string"
          },
          "mbFlags": {
            "description": "DB column: mapdflags",
            "type": "string"
          }
        }
      },
      "OcrResultRecognizeFile": {
        "description": "This class contains the result of an OCR analysis.",
        "type": "object",
        "properties": {
          "skewAngle": {
            "format": "double",
            "description": "Skew angle. Only valid if a single page was analyzed, see {@link OcrInfoRecognizeFile#pageNo}.",
            "type": "number"
          },
          "textData": {
            "description": "Binary data.\nThis member is set, if {@link OcrInfoRecognizeFile#outputFormat} was set to\n {@link OcrInfoC#CHAR_AND_RECT}.",
            "$ref": "#/components/schemas/FileData"
          },
          "width": {
            "format": "int32",
            "description": "Page width. Only valid if a single page was analyzed, see {@link OcrInfoRecognizeFile#pageNo}.",
            "type": "integer"
          },
          "text": {
            "description": "Recognized text.\nThis member is set, if {@link OcrInfoRecognizeFile#outputFormat} was set to\n {@link OcrInfoC#TEXT}.",
            "type": "string"
          },
          "height": {
            "format": "int32",
            "description": "Page height. Only valid if a single page was analyzed, see {@link OcrInfoRecognizeFile#pageNo}.",
            "type": "integer"
          }
        }
      },
      "Throwable": {
        "type": "object"
      },
      "ReportModeC": {
        "type": "object",
        "properties": {
          "LIMITED": {
            "description": "Write limited report.",
            "$ref": "#/components/schemas/ReportModeZ"
          },
          "NO": {
            "description": "Do not write report.",
            "$ref": "#/components/schemas/ReportModeZ"
          },
          "bsetFULL": {
            "type": "string"
          },
          "bsetLIMITED": {
            "type": "string"
          },
          "bsetVERBOSE": {
            "type": "string"
          },
          "VERBOSE": {
            "description": "Write verbose report.",
            "$ref": "#/components/schemas/ReportModeZ"
          },
          "bsetNO": {
            "type": "string"
          },
          "FULL": {
            "description": "Write full report.",
            "$ref": "#/components/schemas/ReportModeZ"
          }
        }
      },
      "MapToOrgUnitInfo": {
        "additionalProperties": {
          "$ref": "#/components/schemas/OrgUnitInfo"
        },
        "type": "object"
      },
      "BResult_239574905": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/FulltextConfig"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "ListOfConfigRecord": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ConfigRecord"
        }
      },
      "ArrayOfMaskName": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MaskName"
        }
      },
      "CheckAccessOptions": {
        "description": "Options for function\n{@link IXServerEvents#onCheckSordAccess(IXServerEventsContext, Sord, SordZ, int, CheckAccessOptions)}",
        "type": "object"
      },
      "BRequest_IXServicePortIF_controlBackgroundThread": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "jobState": {
            "$ref": "#/components/schemas/JobState"
          }
        }
      },
      "BRequest_IXServicePortIF_encryptStringRsa": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "encryptNotDecrypt": {
            "type": "boolean"
          },
          "key": {
            "type": "string"
          }
        }
      },
      "AggregationOrderE": {
        "description": "Sort options for ElasticSearch.\n<br>\n <br>\n By default, the terms aggregation orders terms by descending document _count. The date_histogram\n aggregation, however, sorts buckets by default by their key ascending.<br>\n Use the order parameter to specify a different sort order.<br>\n <br>\n We do not offer some sort order types if it is not guaranteed to produce reasonable results. E.g.\n Due to the way the terms aggregation gets terms from shards, sorting by ascending doc count often\n produces inaccurate results.<br>",
        "type": "object",
        "properties": {
          "KEY_DESC": {
            "description": "Bucket key value descending.",
            "$ref": "#/components/schemas/AggregationOrderE"
          },
          "COUNT_DESC": {
            "description": "Document count descending. This is the default for terms aggregations.",
            "$ref": "#/components/schemas/AggregationOrderE"
          },
          "KEY_ASC": {
            "description": "Bucket key value ascending. This is the default for histogram and date_histogram aggregations.",
            "$ref": "#/components/schemas/AggregationOrderE"
          },
          "DEFAULT": {
            "description": "This value denotes that the default should be used which is different for each aggregation\ntype.",
            "$ref": "#/components/schemas/AggregationOrderE"
          }
        }
      },
      "DocMaskLineTemplateDataC": {
        "description": "<p>Bit constants for members of DocMaskLineTemplate<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbLKey": {
            "description": "DB column: linelkey",
            "type": "string"
          },
          "mbNameTranslationKey": {
            "description": "DB column: linebeztrkey",
            "type": "string"
          },
          "lnValidateExpression": {
            "format": "int32",
            "description": "Column length: RegEx to validate user input for entry.\nDB column: validateexpression",
            "type": "integer"
          },
          "lnComment": {
            "format": "int32",
            "description": "DB column: linecomment",
            "type": "integer"
          },
          "lnCommentTranslationKey": {
            "format": "int32",
            "description": "DB column: linecommenttrkey",
            "type": "integer"
          },
          "mbTStamp": {
            "description": "DB column: linetstamp",
            "type": "string"
          },
          "mbRawFlags": {
            "description": "DB column: lineflags",
            "type": "string"
          },
          "mbName": {
            "description": "DB column: linebez",
            "type": "string"
          },
          "lnDefaultValue": {
            "format": "int32",
            "description": "DB column: linedefault",
            "type": "integer"
          },
          "mbMin": {
            "description": "DB column: linemin",
            "type": "string"
          },
          "mbTStampSync": {
            "description": "DB column: linetstampsync",
            "type": "string"
          },
          "mbAllowedReferencedMaskIdsRaw": {
            "description": "Member bit: Specifies the {@link DocMask#id} allowed in a {@link DocMaskLineC#TYPE_RELATION}.\nDB column: allowedrefmaskids",
            "type": "string"
          },
          "lnNameTranslationKey": {
            "format": "int32",
            "description": "DB column: linebeztrkey",
            "type": "integer"
          },
          "lnName": {
            "format": "int32",
            "description": "DB column: linebez",
            "type": "integer"
          },
          "lnInternalAcl": {
            "format": "int32",
            "description": "DB column: lineacl",
            "type": "integer"
          },
          "mbInternalAcl": {
            "description": "DB column: lineacl",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnKey": {
            "format": "int32",
            "description": "DB column: linekey",
            "type": "integer"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "DB column: linetstamp",
            "type": "integer"
          },
          "lnTStampSync": {
            "format": "int32",
            "description": "DB column: linetstampsync",
            "type": "integer"
          },
          "mbValidateExpression": {
            "description": "Member bit: RegEx to validate user input for entry.\nDB column: validateexpression",
            "type": "string"
          },
          "mbMax": {
            "description": "DB column: linemax",
            "type": "string"
          },
          "mbId": {
            "description": "DB column: mlineno",
            "type": "string"
          },
          "mbCommentTranslationKey": {
            "description": "DB column: linecommenttrkey",
            "type": "string"
          },
          "mbLockId": {
            "description": "DB column: linelock",
            "type": "string"
          },
          "mbKey": {
            "description": "DB column: linekey",
            "type": "string"
          },
          "lnServerScriptName": {
            "format": "int32",
            "description": "DB column: linescript",
            "type": "integer"
          },
          "lnAllowedReferencedMaskIdsRaw": {
            "format": "int32",
            "description": "Column length: Specifies the {@link DocMask#id} allowed in a {@link DocMaskLineC#TYPE_RELATION}.\nDB column: allowedrefmaskids",
            "type": "integer"
          },
          "lnExternalData": {
            "format": "int32",
            "description": "DB column: lineext",
            "type": "integer"
          },
          "mbExternalData": {
            "description": "DB column: lineext",
            "type": "string"
          },
          "mbServerScriptName": {
            "description": "DB column: linescript",
            "type": "string"
          },
          "mbDefaultValue": {
            "description": "DB column: linedefault",
            "type": "string"
          },
          "mbRawType": {
            "description": "DB column: linetype",
            "type": "string"
          },
          "mbComment": {
            "description": "DB column: linecomment",
            "type": "string"
          }
        }
      },
      "UserProfile": {
        "description": "User profile options\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "excludeGroupValues": {
            "description": "Do not read values of option groups. Only valid for checkoutUserProfile.",
            "type": "boolean"
          },
          "includeAllGroupAndDefaultOptions": {
            "description": "Include all group and default options.\nSet this member as true, if all group and default\n options shall be returned. If the value is false, only those options are returned that are not\n particularly defined for the user.",
            "type": "boolean"
          },
          "defaultOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "groupId": {
            "format": "int32",
            "description": "The users option group ID. This value is -1, if the user is not member of an option group.\nRead-only.",
            "type": "integer"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "userOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "userId": {
            "description": "The user name or UserProfileC.\nUSERID_ALL, if the options for all users are represented by this\n object. The values null or empty are equal to UserProfileC.USERID_ALL.",
            "type": "string"
          },
          "groupOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          },
          "excludeDefaultValues": {
            "description": "Do not read values for all users. Only valid for checkoutUserProfile.",
            "type": "boolean"
          }
        }
      },
      "ForwardWorkflowNodeInfo": {
        "description": "This class controls workflow node forwarding in\n{@link IXServicePortIF#forwardWorkflowNode(ClientInfo, int, int, ForwardWorkflowNodeInfo, LockZ)}.",
        "type": "object",
        "properties": {
          "terminateWorkflow": {
            "description": "Terminate the workflow instead of forwarding.\nIf this member is true,\n {@link #successorNodesToActivate} and {@link #node} are ignored.",
            "type": "boolean"
          },
          "node": {
            "description": "Workflow node to forward.\nThe following members of this value are taken into account and update\n the related database values: {@link WFNode#name}, {@link WFNode#comment}, {@link WFNode#prio}.",
            "$ref": "#/components/schemas/WFNode"
          },
          "successorNodesToActivate": {
            "description": "List of successor nodes to be activated.\nSet this member as null, if only node data should be\n changed. In this case, the the workflow is not forwarded.",
            "$ref": "#/components/schemas/ListOfInteger"
          }
        }
      },
      "ArrayOfSordHist": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SordHist"
        }
      },
      "BRequest_IXServicePortIF_createWorkFlow": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "wfName": {
            "type": "string"
          },
          "typeZ": {
            "$ref": "#/components/schemas/WFTypeZ"
          }
        }
      },
      "OperatorType": {
        "description": "Operator type to combine search terms.",
        "type": "object",
        "properties": {
          "NOT": {
            "$ref": "#/components/schemas/OperatorType"
          },
          "OR": {
            "$ref": "#/components/schemas/OperatorType"
          },
          "AND": {
            "$ref": "#/components/schemas/OperatorType"
          }
        }
      },
      "PackageExportInfo": {
        "description": "Describe export criteria for\n{@link PackageService#exportPackageContent(ClientInfo ci, PackageExportInfo exportInfo)}.\n EIX-1895",
        "type": "object",
        "properties": {
          "nameOrGuids": {
            "description": "List of names or GUIDs of packages to export.",
            "$ref": "#/components/schemas/ListOfString"
          }
        }
      },
      "BRequest_IXServicePortIF_deferWorkFlowNode": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userDelayDateIso": {
            "type": "string"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "flowId": {
            "type": "string"
          },
          "nodeId": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "DocVersion": {
        "description": "<p>\nDescription: This class describes a document version, a document preview or a signature.\n <\/p>\n <p>\n Copyright: Copyright (c) 2002\n <\/p>\n <p>\n Organisation: ELO DIgital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "preview": {
            "description": "Document preview\n<p>\n Applies to document version. Is null for signature and preview and fulltextContent.\n <\/p>",
            "$ref": "#/components/schemas/DocVersion"
          },
          "pathId2": {
            "format": "int32",
            "description": "(to be defined)\n<p>\n Applies to document version and signature. Is undefined for preview and fulltextContent.\n <\/p>",
            "type": "integer"
          },
          "previewUrl": {
            "description": "<p>\nURL to up-/download a document preview.\n <\/p>\n <p>\n Applies to document version. Is empty for signature and preview and fulltextContent.\n <\/p>",
            "type": "string"
          },
          "encryptionSet": {
            "format": "int32",
            "description": "ID of the encryption set. It's password is used to encrypt or decrypt the document.\nIt a new\n document or version should be checked in, this member must be set to Sord.details.encryptionSet\n before checkinDocBegin is called. When this object is retrieved via IX it is always set to\n Sord.details.encryptionSet.\n <p>\n Applies to document version. Is undefined for signature.\n <\/p>",
            "type": "integer"
          },
          "language": {
            "description": "Language of the document content.\nThis value is estimated by ELO Textreader when the document is sent for fulltext extraction.\n See {@link TranslateTermC#DEFAULT_LANGUAGES} for a list of language-tags.",
            "type": "string"
          },
          "pathId": {
            "format": "int32",
            "description": "Storage path ID\n<p>\n Applies to document version and signature. Is undefined for preview and fulltextContent.\n <\/p>",
            "type": "integer"
          },
          "ownerId": {
            "format": "int32",
            "description": "The owners user ID.\n<p>\n Applies to document version. Is undefined for signature and preview and fulltextContent.\n <\/p>",
            "type": "integer"
          },
          "relativeFilePath": {
            "description": "Relative file path for external file.\nThis member specifies the location of the file relative\n to a custom path. If {@link #pathId} does not refer a custom path, this member is empty and\n ignored in {@link IXServicePortIF#checkinDocEnd(ClientInfo, Sord, SordZ, Document, LockZ)}.",
            "type": "string"
          },
          "sig": {
            "description": "Document signature\n<p>\n Applies to document version. Is null for signature and preview and fulltextContent.\n <\/p>",
            "$ref": "#/components/schemas/DocVersion"
          },
          "accessDateIso": {
            "description": "Last access date. ClientInfo determines the Timezone.\n<p>\n Applies to document version and signature. Is undefined for preview and fulltextContent.\n <\/p>",
            "type": "string"
          },
          "ownerName": {
            "description": "The owners user name. This value is read only (ignored in checkinDoc...).\n<p>\n Applies to document version. Is undefined for signature and preview and fulltextContent.\n <\/p>",
            "type": "string"
          },
          "tStamp": {
            "description": "Document timestamp\n<p>\n Applies to document version and signature. Is undefined for preview. (Is available for\n fulltextContent)\n <\/p>\n The format is JJJJ.MM.DD.hh.mm.ss",
            "type": "string"
          },
          "physPath": {
            "description": "Physical path\n<p>\n Applies to document version and signature. Is undefined for preview and fulltextContent.\n <\/p>\n Set SordC.mbPhysPath or EditInfoC.mbPhysPath in the member selector passed to checkoutSord or\n checkoutDoc to read the physical path.",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "Document ID\n<p>\n Applies to document version and signature. Is undefined for preview and fulltextContent.\n <\/p>",
            "type": "integer"
          },
          "contentType": {
            "description": "Content-Type (MIME-Type).",
            "type": "string"
          },
          "deleteDateIso": {
            "description": "Delete date. ClientInfo determines the Timezone.\n<p>\n Is undefined if isDeleted() returns false.\n <\/p>",
            "type": "string"
          },
          "ext": {
            "description": "Document file extension (without \".\n\")\n <p>\n Applies to document version, signature and preview. Is readonly for fulltextContent.\n <\/p>\n This value has precedence before <code>contentType<\/code>.",
            "type": "string"
          },
          "uploadResult": {
            "description": "Result from the ELODM if the document was uploaded.\n<p>\n Applies to document version, signature, preview and fulltextContent.\n <\/p>",
            "type": "string"
          },
          "tStampSync": {
            "description": "Timestamp of this object's ACLs last export by the replication.",
            "type": "string"
          },
          "fileData": {
            "description": "Document, preview or fulltextContent file content.\nIf <code>checkoutDoc<\/code> is called with\n option <code>mbSordDocSmallContent<\/code> and the requested document (version) is small (less\n than the configured value), this member contains the file data and content type. If\n <code>mbPreview<\/code> is additionally set, <code>fileData<\/code> contains the content of the\n preview - REGARDLESS of the size. In case there is no preview, <code>fileData<\/code> contains\n the data of the document (if it's a small file).\n <p>\n Applies to document version, signature and preview.\n <\/p>",
            "$ref": "#/components/schemas/FileData"
          },
          "workVersion": {
            "description": "Indicates whether the version is the current work version.\n<p>\n Applies to document version. Is undefined for signature, preview and fulltextContent.\n <\/p>",
            "type": "boolean"
          },
          "version": {
            "description": "Version number\n<p>\n Applies to document version. Is undefined for signature, preview and fulltextContent.\n <\/p>",
            "type": "string"
          },
          "url": {
            "description": "URL to up-/download\n<p>\n Applies to document version, signature,preview and fulltextContent.\n <\/p>",
            "type": "string"
          },
          "updateDateIso": {
            "description": "Last update date. ClientInfo determines the Timezone.\n<p>\n Applies to document version and signature. Is undefined for preview and fulltextContent.\n <\/p>",
            "type": "string"
          },
          "deleted": {
            "description": "Indicates whether the version is logically deleted.\n<p>\n Applies to document version. Is undefined for signature, preview and fulltextContent.\n <\/p>",
            "type": "boolean"
          },
          "milestone": {
            "description": "Indicates whether the version is marked as a milestone version.\n<p>\n Applies to document version. Is undefined for signature and preview and fulltextContent.\n <\/p>",
            "type": "boolean"
          },
          "size": {
            "description": "File size.",
            "type": "string"
          },
          "nbOfValidSignatures": {
            "format": "int32",
            "description": "Number of valid signatures.\nThis member holds the count of valid signatures in the signature\n file. It is only valid for a DocVersion object that represents a signature (member\n {@link #sig}). A value of zero means, that the signatures are unchecked. A number greater than\n zero means, that all signatures are valid. In this case the member value is equal to the number\n of signatures. If at least one signature is invalid, the value is less than zero. The number of\n invalid signatures is thereby unknown. Client applications are responsible to check signatures.\n The ELOix does not check signatures.",
            "type": "integer"
          },
          "createDateIso": {
            "description": "Create date. ClientInfo determines the Timezone.\n<p>\n Applies to document version and signature. Is undefined for preview and fulltextContent.\n <\/p>",
            "type": "string"
          },
          "fulltextContent": {
            "description": "This object provides the content of the fulltext database for the document version.\nThe\n information is read-only and only available for DocVersion objects that refer to a document\n version (and not an attachment, preview or signature). Currenly, only the members url, ext,\n contentType and encryptionSet are valid for a DocVersion object that belongs to fulltext\n content. Whereby ext is always txt and contentType is always text/plain. A Byte Order Mark\n preceedes the content data. If the related document version is encrypted, the appropriate\n encryption password has to be set, before the fulltext information can be downloaded. If the\n SessionOptionC.DECRYPT_DOCUMENTS is not set, the fulltext information is transmitted encrypted.\n <p>\n Applies to document version. Is undefined for signature and preview.\n <\/p>",
            "$ref": "#/components/schemas/DocVersion"
          },
          "guid": {
            "description": "Document GUID.\n<p>\n Applies to document version and signature. Is undefined for preview and fulltextContent.\n <\/p>",
            "type": "string"
          },
          "comment": {
            "description": "Version comment\n<p>\n Applies to document version. Is undefined for signature, preview and fulltextContent.\n <\/p>",
            "type": "string"
          },
          "md5": {
            "description": "MD5 hash of the documet file.\n<p>\n Applies to document version and signature. Is undefined for preview and fulltextContent.\n <\/p>",
            "type": "string"
          }
        }
      },
      "ListOfValueClass": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ValueClass"
        }
      },
      "MapHistHeadC": {
        "description": "<p>Bit constants for members of MapHist<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnUserName": {
            "format": "int32",
            "description": "DB column: mapusername",
            "type": "integer"
          },
          "mbTimeStampUTC": {
            "description": "DB column: maphistts",
            "type": "string"
          },
          "mbTimeStampLocal": {
            "description": "DB column: maphistlocts",
            "type": "string"
          },
          "lnHistGuid": {
            "format": "int32",
            "description": "Column length: Serialisation version ID\nDB column: maphistguid",
            "type": "integer"
          },
          "mbUserName": {
            "description": "DB column: mapusername",
            "type": "string"
          },
          "lnTimeStampLocal": {
            "format": "int32",
            "description": "DB column: maphistlocts",
            "type": "integer"
          },
          "mbUserId": {
            "description": "DB column: mapuser",
            "type": "string"
          },
          "lnWorkStation": {
            "format": "int32",
            "description": "DB column: maphistwks",
            "type": "integer"
          },
          "mbHistSource": {
            "description": "DB column: maphistsrc",
            "type": "string"
          },
          "lnMapGuid": {
            "format": "int32",
            "description": "DB column: mapguid",
            "type": "integer"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbMapGuid": {
            "description": "DB column: mapguid",
            "type": "string"
          },
          "lnTimeStampUTC": {
            "format": "int32",
            "description": "DB column: maphistts",
            "type": "integer"
          },
          "mbWorkStation": {
            "description": "DB column: maphistwks",
            "type": "string"
          },
          "mbHistGuid": {
            "description": "Member bit: Serialisation version ID\nDB column: maphistguid",
            "type": "string"
          }
        }
      },
      "ArrayOfSordType": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SordType"
        }
      },
      "HashMapToInteger": {
        "additionalProperties": {
          "format": "int32",
          "type": "integer"
        },
        "type": "object"
      },
      "PluginMessage": {
        "description": "A message that can be sent to or received from a plugin.",
        "type": "object",
        "properties": {
          "bytes": {
            "description": "Byte array parameters.\nIn case of a HTTP request or response, this element can contain the\n response data at map key {@link PluginMessageC#BODY}.",
            "$ref": "#/components/schemas/MapToArrayOfbyte"
          },
          "objects": {
            "description": "API object parameters. E.g. Sord objects.\nIn case of a HTTP request or response, this element\n is ignored.",
            "$ref": "#/components/schemas/MapToBValueClass"
          },
          "streams": {
            "description": "Stream parameters.\nIn case of a HTTP request or response, this element can contain the response\n data at map key {@link PluginMessageC#BODY}.",
            "$ref": "#/components/schemas/MapToBStreamReference"
          },
          "source": {
            "description": "Message source. Read only.",
            "$ref": "#/components/schemas/PluginMessageSource"
          },
          "id": {
            "description": "Message ID.",
            "type": "string"
          },
          "uri": {
            "description": "Message URI.",
            "type": "string"
          },
          "parameters": {
            "description": "String parameters.",
            "$ref": "#/components/schemas/MapToString"
          },
          "status": {
            "format": "int32",
            "description": "Message response status code.\nIn case of a HTTP request, this element specifies the response\n status code. A value of 0 is implicitly mapped to 200.",
            "type": "integer"
          }
        }
      },
      "ConfigBatchData": {
        "description": "Collects configuration data to be inserted, updated, or deleted.",
        "type": "object",
        "properties": {
          "deletes": {
            "description": "Records to be deleted.",
            "$ref": "#/components/schemas/ListOfLong"
          },
          "updates": {
            "description": "Records to be updated.",
            "$ref": "#/components/schemas/ListOfConfigRecord"
          },
          "inserts": {
            "description": "Records to be inserted.",
            "$ref": "#/components/schemas/ListOfConfigRecord"
          }
        }
      },
      "BRequest_IXServicePortIF_terminateWorkFlow": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "flowId": {
            "type": "string"
          }
        }
      },
      "ControlBackupInfo": {
        "description": "Mode for the ELOdm backup and purge tasks",
        "type": "object",
        "properties": {
          "mode": {
            "format": "int32",
            "description": "Start, stop and status of the ELOdm backup and purge tasks (constants in ControlBackupInfoC)",
            "type": "integer"
          }
        }
      },
      "ListOfAspect": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Aspect"
        }
      },
      "FindResult": {
        "description": "<p>\nThis class contains the search results of a call to <code>IXServicePortIF.findFirstSords<\/code>\n <\/p>\n or <code>IXServicePortIF.findNextSords<\/code>.\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "subscriptions": {
            "description": "Subscriptions. Subscription objects mapped to their Subscription.watchGuid.",
            "$ref": "#/components/schemas/MapToSubscription"
          },
          "notes": {
            "description": "Notes. This member returns the note objects found by findFirstNotes/findNextNotes.",
            "$ref": "#/components/schemas/ListOfNote"
          },
          "dynamicFolder": {
            "description": "String representation of FindInfo used to define a dynamic register.\nFunction\n {@link IXServicePortIF#findFirstSords(ClientInfo, FindInfo, int, SordZ)} returns a serialized\n FindInfo in this member. It can be used to define a dynamic register by setting\n <code>Sord.desc=FindResult.dynamicFolder<\/code>.",
            "type": "string"
          },
          "workflows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFDiagram"
            }
          },
          "moreResults": {
            "description": "Is true if there are more results.",
            "type": "boolean"
          },
          "fulltextCtrlResultItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FindByFulltextCtrlResultItem"
            }
          },
          "translateTerms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TranslateTerm"
            }
          },
          "fulltextResultItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FindByFulltextResultItem"
            }
          },
          "jobStates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobState"
            }
          },
          "hashTags": {
            "description": "HashTags.\nHashTag Objects mapped to their HashTagGuid",
            "$ref": "#/components/schemas/MapToHashTag"
          },
          "searchId": {
            "description": "Identifier to get more results.",
            "type": "string"
          },
          "hashTagRelations": {
            "description": "HashTag Relations.",
            "$ref": "#/components/schemas/ListOfHashTagRelation"
          },
          "feeds": {
            "description": "Document feeds. Feed objects mapped to their GUID.",
            "$ref": "#/components/schemas/MapToFeed"
          },
          "sortedResult": {
            "description": "List of result objects ordered by the given sort order.\nIf this member is not null, it repeats\n the list of result objects in sorted order. This member is only valid if returned from\n {@link IXServicePortIF#findFirstUsers(ClientInfo, FindUserInfo, int)} or\n {@link IXServicePortIF#findNextUsers(ClientInfo, String, int, int)}.",
            "$ref": "#/components/schemas/ListOfValueClass"
          },
          "breakTotalCount": {
            "description": "The search is breaked because the total number of results are reached.",
            "type": "boolean"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserTask"
            }
          },
          "breakTimeout": {
            "description": "The time limit for the search is exceeded.",
            "type": "boolean"
          },
          "reportInfos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportInfo"
            }
          },
          "synonyms": {
            "description": "Thesaurus Resluts.",
            "$ref": "#/components/schemas/ListOfString"
          },
          "count": {
            "format": "int32",
            "description": "Number of results. This member is only valid, if FindInfo.findOptions.evalCount is true.",
            "type": "integer"
          },
          "contextTerms": {
            "description": "Result for findContextTerms().",
            "$ref": "#/components/schemas/ListOfContextTermResults"
          },
          "completions": {
            "description": "Type-as-you-search Results.",
            "$ref": "#/components/schemas/ListOfString"
          },
          "masks": {
            "description": "Keywording forms related to {@link #getSords()}.\nThis member is set, if\n {@link FindOptions#docMaskZ} is not null and not empty.",
            "$ref": "#/components/schemas/MapToDocMask"
          },
          "sords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sord"
            }
          },
          "estimatedCount": {
            "format": "int32",
            "description": "Estimated number of hits that can be found by the query.\nThis number cannot be computed for any\n search and is usually -1. Only if the search engine supplies an estimated count, it is &gt;= 0.",
            "type": "integer"
          },
          "configFiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfigFile"
            }
          },
          "corrections": {
            "description": "Corrections suggestions.",
            "$ref": "#/components/schemas/ListOfString"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userInfos": {
            "description": "User objects. Map of user ID to user object.",
            "$ref": "#/components/schemas/MapToUserInfo"
          },
          "userNames": {
            "description": "Lean user objects. Map of user ID to user object.",
            "$ref": "#/components/schemas/MapToUserName"
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Action"
            }
          },
          "aggregations": {
            "description": "Result for findAggregations().",
            "$ref": "#/components/schemas/MapToAggregationResult"
          },
          "notifications": {
            "description": "Notifications. Notification objects mapped to their Notification.\nwatchGuid",
            "$ref": "#/components/schemas/MapToNotification"
          }
        }
      },
      "BResult_881442092": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ListOfPublicDownload"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "GetWebDAVPathOptions": {
        "description": "Parameter class for the function {@link IXServicePortIF#getWebDAVPathFromObjID2}",
        "type": "object",
        "properties": {
          "objId": {
            "description": "ObjectId or GUID of the sord to get the path.",
            "type": "string"
          },
          "tickketInPath": {
            "description": "If true, the ticket is inserted in the path.",
            "type": "boolean"
          },
          "useShortPath": {
            "description": "From now on the option is no longer considered and is implicitly evaluated as true.",
            "type": "boolean"
          }
        }
      },
      "AspectAssoc": {
        "description": "This class defines an aspect association.\nAn AspectAssoc defines a reference to a keywording\n {@link Aspect} in {@link DocMask#aspectAssocs}.",
        "type": "object",
        "properties": {
          "regionInherit": {
            "description": "Indicates if the Sord object passes the aspect object to all sub-entries if this AspectAssoc\nobject is contained in a region mask.",
            "type": "boolean"
          },
          "translationKey": {
            "description": "Translation-keyword for {@link AspectAssoc#displayName}.\nDefines the {@link #displayName} as\n technical resource ID. If this value is set, translations are only based on content of\n properties files and not on translation table.",
            "type": "string"
          },
          "displayName": {
            "description": "Locale specific name. Readonly. This value is the resolved {@link #translationKey}.",
            "type": "string"
          },
          "aclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "name": {
            "description": "Technical aspect association name. This member must start with a character between 'A' and 'Z'.\nThe following characters must be alpha-numeric including underscore.",
            "type": "string"
          },
          "aspectId": {
            "format": "int32",
            "description": "ID of the referenced aspect.",
            "type": "integer"
          },
          "acl": {
            "description": "Access control list.",
            "type": "string"
          },
          "cardinality": {
            "description": "Cardinality.",
            "$ref": "#/components/schemas/Cardinality"
          }
        }
      },
      "ReplSetNameC": {
        "description": "<p>Bit constants for members of ReplSetName<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbId": {
            "description": "DB column: rsid",
            "type": "string"
          },
          "mbDesc": {
            "description": "DB column: rsdesc",
            "type": "string"
          },
          "mbPriority": {
            "description": "Member bit: Priority of this replication set.\nDB column: rsprio",
            "type": "string"
          },
          "mbTStamp": {
            "description": "DB column: rststamp",
            "type": "string"
          },
          "mbMobile": {
            "description": "DB column: rsmobile",
            "type": "string"
          },
          "mbName": {
            "description": "DB column: rsname",
            "type": "string"
          },
          "lnDesc": {
            "format": "int32",
            "description": "DB column: rsdesc",
            "type": "integer"
          },
          "mbTStampSync": {
            "description": "Member bit: Timestamp of this object's last export by the replication.\nDB column: rststampsync",
            "type": "string"
          },
          "lnName": {
            "format": "int32",
            "description": "DB column: rsname",
            "type": "integer"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "DB column: rststamp",
            "type": "integer"
          },
          "lnTStampSync": {
            "format": "int32",
            "description": "Column length: Timestamp of this object's last export by the replication.\nDB column: rststampsync",
            "type": "integer"
          },
          "mbImage": {
            "description": "DB column: rsimage",
            "type": "string"
          }
        }
      },
      "ListOfIntValue": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/IntValue"
        }
      },
      "ArrayOfSordHistKey": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SordHistKey"
        }
      },
      "BRequest_IXServicePortIF_findFirstTranslateTerms": {
        "type": "object",
        "properties": {
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindTranslateTermInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinDocsBegin": {
        "type": "object",
        "properties": {
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ListOfFeedPost": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FeedPost"
        }
      },
      "NotifyServerResult": {
        "description": "This class is used as a return value of IXServicPortIF.notifyServer.",
        "type": "object"
      },
      "ReindexerConfig": {
        "description": "Configuration and status of Re-indexer process.",
        "type": "object",
        "properties": {
          "lastException": {
            "description": "Last exception occured during processing.",
            "type": "string"
          },
          "progressInPercent": {
            "format": "int32",
            "type": "integer"
          },
          "objIdRange": {
            "description": "Lower and upper limit of object IDs processed by re-indexing process.",
            "type": "string"
          },
          "startedAt": {
            "format": "date-time",
            "type": "string"
          },
          "ixid": {
            "description": "This Indexserver instance is processing the update.",
            "type": "string"
          },
          "lockName": {
            "description": "Process runs under this user account.",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/SearchIndexerStatus"
          }
        }
      },
      "WorkFlowNodeMatrixC": {
        "description": "<p>Bit constants for members of WorkFlowNodeMatrix<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbFlowId": {
            "description": "Member bit: Workflow ID\nDB column: wf_flowid",
            "type": "string"
          },
          "mbTerminate": {
            "description": "Member bit: ELO-date when the node was exited.\nDB column: wf_terminate\n DB column: wf_terminate",
            "type": "string"
          },
          "lnEdgesOrdinals": {
            "format": "int32",
            "description": "Column length: Sort order of edges.\nDB column: wf_edges_ordinals",
            "type": "integer"
          },
          "mbNodeId": {
            "description": "Member bit: Node ID\nDB column: wf_nodeid",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbSucc_10": {
            "description": "DB column: wf_succ_10",
            "type": "string"
          },
          "mbEdgesOrdinals": {
            "description": "Member bit: Sort order of edges.\nDB column: wf_edges_ordinals",
            "type": "string"
          },
          "mbSucc_4": {
            "description": "DB column: wf_succ_4",
            "type": "string"
          },
          "mbSucc_15": {
            "description": "DB column: wf_succ_15",
            "type": "string"
          },
          "mbSucc_5": {
            "description": "DB column: wf_succ_5",
            "type": "string"
          },
          "mbSucc_16": {
            "description": "DB column: wf_succ_16",
            "type": "string"
          },
          "mbSucc_6": {
            "description": "DB column: wf_succ_6",
            "type": "string"
          },
          "mbSucc_17": {
            "description": "DB column: wf_succ_17",
            "type": "string"
          },
          "mbSucc_7": {
            "description": "DB column: wf_succ_7",
            "type": "string"
          },
          "mbSucc_18": {
            "description": "DB column: wf_succ_18",
            "type": "string"
          },
          "mbSuccType": {
            "description": "Member bit: Type of successor node.\nDB column: wf_succ_type",
            "type": "string"
          },
          "mbSucc_0": {
            "description": "DB column: wf_succ_0",
            "type": "string"
          },
          "mbSucc_11": {
            "description": "DB column: wf_succ_11",
            "type": "string"
          },
          "mbSucc_1": {
            "description": "DB column: wf_succ_1",
            "type": "string"
          },
          "mbSucc_12": {
            "description": "DB column: wf_succ_12",
            "type": "string"
          },
          "mbSucc_2": {
            "description": "DB column: wf_succ_2",
            "type": "string"
          },
          "mbSucc_13": {
            "description": "DB column: wf_succ_13",
            "type": "string"
          },
          "mbVersionId": {
            "description": "Member bit: Version ID.\nDB column: wf_version",
            "type": "string"
          },
          "mbSucc_3": {
            "description": "DB column: wf_succ_3",
            "type": "string"
          },
          "mbSucc_14": {
            "description": "DB column: wf_succ_14",
            "type": "string"
          },
          "mbSucc_8": {
            "description": "DB column: wf_succ_8",
            "type": "string"
          },
          "mbSucc_19": {
            "description": "DB column: wf_succ_19",
            "type": "string"
          },
          "mbSucc_9": {
            "description": "DB column: wf_succ_9",
            "type": "string"
          },
          "mbIsNext": {
            "description": "Member bit: Contains 1, if this node is active.\nDB column: wf_is_next\n DB column: wf_is_next",
            "type": "string"
          },
          "mbSuccOvertime": {
            "description": "Member bit: Id of successor node, which should be activated by the escalation.\nDB column: wf_succ_overtime",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinReminder": {
        "type": "object",
        "properties": {
          "expandGroups": {
            "type": "boolean"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "receiverIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "remi": {
            "$ref": "#/components/schemas/Reminder"
          }
        }
      },
      "BRequest_IXServicePortIF_editPublicDownloadUrls": {
        "type": "object",
        "properties": {
          "opts": {
            "$ref": "#/components/schemas/PublicDownloadOptions"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BResult_148564345": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/GetWebDAVPathResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "SubstitutionPeriod": {
        "description": "A substitution period is used to define time periods for substitutions.\n<p>\n A substitution is automatically activated during a time period if\n {@link SubstitutionSettings#activatePeriodsAutomatically} is set to true.\n <\/p>\n <p>\n A time period always needs a start date, this date must not be in the past. The earliest start\n date is the current day to start a substitution immediately.<br>\n The end date can be set, then the last day of the substitution is the end date (inclusive). It\n can also be left empty to have an open end for a substitution.\n <\/p>\n <p>\n A active substitution based on a time period can only be disabled by deleting the corresponding\n SubstitutionPeriod.\n <\/p>",
        "type": "object",
        "properties": {
          "startIsodate": {
            "description": "<p>\nStart date of a substitution period (inclusive)\n <\/p>\n <p>\n A start date must always be set.\n <\/p>\n <p>\n Date format must be either 'yyyyMMdd' or 'yyyyMMddHHmmss'. If only a date ('yyyyMMdd') is\n provided, it is adjusted to 'yyyyMMdd000000' to match the beginning of a day.\n <p>\n <p>\n Dates are always committed and returned in the client's time zone.\n <\/p>",
            "type": "string"
          },
          "substitutionGuid": {
            "description": "GUID of the corresponding {@link Substitution}. Read-only.",
            "type": "string"
          },
          "endIsodate": {
            "description": "<p>\nEnd date of a substitution period (inclusive).\n <\/p>\n <p>\n If this value if empty, the substitution never ends.\n <\/p>\n <p>\n Date format must be either 'yyyyMMdd' or 'yyyyMMddHHmmss'. If only a date ('yyyyMMdd') is\n provided, it is adjusted to 'yyyyMMdd235959' to match the end of a day.\n <p>\n <p>\n Dates are always committed and returned in the client's time zone.\n <\/p>",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteSubscription": {
        "type": "object",
        "properties": {
          "subs": {
            "$ref": "#/components/schemas/Subscription"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinEsSettings": {
        "type": "object",
        "properties": {
          "settings": {
            "$ref": "#/components/schemas/ESSettingsObj"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ThesaurusC": {
        "description": "<p>Bit constants for members of Thesaurus<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnData": {
            "format": "int32",
            "description": "DB column: data",
            "type": "integer"
          },
          "mbPrio": {
            "description": "DB column: prio",
            "type": "string"
          },
          "mbCompare": {
            "description": "DB column: compare",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbGroupId": {
            "description": "DB column: groupid",
            "type": "string"
          },
          "mbData": {
            "description": "DB column: data",
            "type": "string"
          },
          "lnCompare": {
            "format": "int32",
            "description": "DB column: compare",
            "type": "integer"
          },
          "mbListId": {
            "description": "DB column: listid",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_setScriptsToDebug": {
        "type": "object",
        "properties": {
          "scriptsToDebug": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_ConfigService_checkoutConfigurations": {
        "type": "object",
        "properties": {
          "configResultOptions": {
            "$ref": "#/components/schemas/ConfigResultOptions"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "configInfo": {
            "$ref": "#/components/schemas/ConfigInfo"
          }
        }
      },
      "BResult_1301335819": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/FindResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutReminders": {
        "type": "object",
        "properties": {
          "reminderIds": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "CheckoutWorkflowHistoryParams": {
        "description": "Parameter class for the method checkoutWorkflowHistory.",
        "type": "object",
        "properties": {
          "flowId": {
            "description": "Workflow ID or workflow GUID.",
            "type": "string"
          },
          "nodeId": {
            "format": "int32",
            "description": "Node ID. If node ID is 0, histories of all node are return.",
            "type": "integer"
          }
        }
      },
      "Activity": {
        "description": "This class represents an activity.\n<p>\n An activity is a task delegated to an instance outside the ELO system. It is created when the\n task is sent to the instance and deleted, if it is received back. An activity defines a date for\n expecting the response, <code>dueDateIso<\/code>. At this date, the activity appears in the task\n list of the initiator. If the task is finished, the initiator sets the <code>backAt<\/code> member\n and the activity is closed.\n <\/p>\n <p>\n Activities can be used to observe a document or a folder. For each modification, a ELO_NOTIFY\n activity is created and displayed in the task list of the user that wants to observe the object.\n <\/p>\n <p>\n An activity object is an instance on an activity project. The project defines the properties the\n user can edit or select to provide more information to the task.\n <\/p>",
        "type": "object",
        "properties": {
          "ud0": {
            "description": "First application defined value.",
            "type": "string"
          },
          "fileName": {
            "description": "Application defined purpose.",
            "type": "string"
          },
          "ud2": {
            "description": "Third application defined value.",
            "type": "string"
          },
          "ud1": {
            "description": "Second application defined value.",
            "type": "string"
          },
          "ud4": {
            "description": "Fifth application defined value.",
            "type": "string"
          },
          "ud3": {
            "description": "Fourth application defined value.",
            "type": "string"
          },
          "ud6": {
            "description": "Seventh application defined value.",
            "type": "string"
          },
          "transId": {
            "description": "Application defined value.",
            "type": "string"
          },
          "ud5": {
            "description": "Sixth application defined value.",
            "type": "string"
          },
          "destination": {
            "description": "Application defined purpose.",
            "type": "string"
          },
          "ud8": {
            "description": "Ninth application defined value.",
            "type": "string"
          },
          "project": {
            "description": "Project name for the activity.",
            "type": "string"
          },
          "ud7": {
            "description": "Eighth application defined value.",
            "type": "string"
          },
          "ud9": {
            "description": "Tenth application defined value.",
            "type": "string"
          },
          "backMode": {
            "description": "Application defined purpose.",
            "type": "string"
          },
          "TStamp": {
            "description": "Date and time of the last update.\nReadonly",
            "type": "string"
          },
          "senderId": {
            "format": "int32",
            "description": "ID of the user who created the activity.",
            "type": "integer"
          },
          "senderName": {
            "description": "Activity was created by this user. Readonly.",
            "type": "string"
          },
          "receiverId": {
            "format": "int32",
            "description": "The ID of the recipient.",
            "type": "integer"
          },
          "TStampSync": {
            "description": "Timestamp of this object's last export by the replication.",
            "type": "string"
          },
          "prio": {
            "format": "int32",
            "description": "Priority for the activity. Priority A has value 0, UserTaskPriorityC.\nHIGHEST Priority B has\n value 1. Priority C has value 2, UserTaskPriorityC#LOWEST",
            "type": "integer"
          },
          "objType": {
            "format": "int32",
            "description": "Object type of the associated folder or document. Read-only.",
            "type": "integer"
          },
          "sentMode": {
            "description": "Application defined purpose.",
            "type": "string"
          },
          "sentAtIso": {
            "description": "Date the activity was sent in ISO format. This value does not contain a time portion.",
            "type": "string"
          },
          "objGuid": {
            "description": "GUID of the assigned archive entry.",
            "type": "string"
          },
          "receiverName": {
            "description": "Activity was created for this user. Readonly.",
            "type": "string"
          },
          "dueDateIso": {
            "description": "Date when activity object is expected to be returned.\nThis value does not contain a time\n portion.",
            "type": "string"
          },
          "revVers": {
            "description": "Revision version of the activity object.",
            "type": "string"
          },
          "name": {
            "description": "Short name/description of the activity object.",
            "type": "string"
          },
          "objId": {
            "format": "int32",
            "description": "Object ID of the associated folder or document. Read-only.",
            "type": "integer"
          },
          "guid": {
            "description": "GUID of the activity object.",
            "type": "string"
          },
          "backAt": {
            "description": "Date when activity object was returned, ISO format. This value does not contain a time portion.",
            "type": "string"
          },
          "comment": {
            "description": "Comment for the activity.",
            "type": "string"
          }
        }
      },
      "AggregationQueryParams": {
        "description": "Base class for aggregation type specific parameters given in an AggregationQuery.",
        "type": "object"
      },
      "NoteTemplate": {
        "description": "This class describes the template information for a stamp.",
        "type": "object",
        "properties": {
          "noteText": {
            "description": "Text information, if this is a textual stamp.\nThe text information can contain the placeholders\n defined in NoteTemplateC. Either noteText or noteImage can be set. class NoteTemplateC",
            "$ref": "#/components/schemas/NoteText"
          },
          "noteImage": {
            "description": "Image information, if this is stamp is an image. Either noteText or noteImage can be set.",
            "$ref": "#/components/schemas/NoteImage"
          },
          "aclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "name": {
            "description": "Stamp name.",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "Stamp ID.",
            "type": "integer"
          },
          "acl": {
            "description": "ACL. Member aclItems has preceedence on checkin.",
            "type": "string"
          },
          "userId": {
            "description": "User ID or name. NoteTemplate objects can be defined for all users and for a specific user.",
            "type": "string"
          }
        }
      },
      "ArrayOfReplSetName": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ReplSetName"
        }
      },
      "IntSingleValue": {
        "type": "object",
        "properties": {
          "value": {
            "format": "int32",
            "description": "integer value",
            "type": "integer"
          }
        }
      },
      "BResult_2015686193": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/WFNode"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BResult_1057373949": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ReportOptions"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_LdapService_configure": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "config": {
            "$ref": "#/components/schemas/LdapConfig"
          }
        }
      },
      "MapData": {
        "description": "This class represents a map which contains user defined key-value pairs.",
        "type": "object",
        "properties": {
          "lockId": {
            "format": "int32",
            "description": "User ID of the user that owns the lock on the map. If the map is not locked, this value is -1.",
            "type": "integer"
          },
          "TStamp": {
            "description": "Timestamp",
            "type": "string"
          },
          "mapItems": {
            "description": "Map items represented by class MapValue which gives access to BLOB values.",
            "$ref": "#/components/schemas/MapToMapValue"
          },
          "TStampSync": {
            "description": "EIX-3097 TimestampSync",
            "type": "string"
          },
          "domainName": {
            "description": "Map domain name. An arbitary name or one of the predefined names in MapDomainC.",
            "type": "string"
          },
          "objId": {
            "format": "int32",
            "description": "Object ID.\nThe ID of the associated Sord object or 0, if the map does not belong to a Sord\n object.",
            "type": "integer"
          },
          "guid": {
            "description": "GUID",
            "type": "string"
          },
          "id": {
            "description": "Map ID. If the map belongs to a Sord ID, this value is equal to the member objId.",
            "type": "string"
          },
          "lockName": {
            "description": "User name of the user that owns the lock no the map.\nIf the map is not locked, this value is an\n empty string.",
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          }
        }
      },
      "DocMaskLineTemplate": {
        "description": "This class contains data for a document mask line template.",
        "type": "object",
        "properties": {
          "hidden": {
            "description": "This value should not be displayed to the user.",
            "type": "boolean"
          },
          "postfixAsterix": {
            "description": "Add \"*\" after index value in search operation.",
            "type": "boolean"
          },
          "notTokenized": {
            "description": "Defines whether a index value should be searchable as TOKENIZED or UN_TOKENIZED",
            "type": "boolean"
          },
          "defaultValue": {
            "description": "This value is assigned to the ObjKey.data element for a new Sord object.",
            "type": "string"
          },
          "externalData": {
            "description": "External data. Can be used to store an arbitary string.",
            "type": "string"
          },
          "acl": {
            "description": "Access control for mask line.",
            "type": "string"
          },
          "type": {
            "format": "int32",
            "description": "The type of the line information. This can be one of the <code>DocMaskLineC.\nTYPE_*<\/code>\n constants.",
            "type": "integer"
          },
          "translate": {
            "description": "Translate index values into or from the users language.",
            "type": "boolean"
          },
          "required": {
            "description": "Entry is required.",
            "type": "boolean"
          },
          "TStamp": {
            "description": "Last update time of the storage template data.",
            "type": "string"
          },
          "min": {
            "format": "int32",
            "description": "The minimum value of this attribute.",
            "type": "integer"
          },
          "inheritFromParent": {
            "description": "Do not inherit the parent's value.",
            "type": "boolean"
          },
          "TStampSync": {
            "description": "Timestamp of this object's last export by the replication.",
            "type": "string"
          },
          "serverScriptName": {
            "description": "A script at the server can serve as the data source of a dynamic keyword list.\nThis value\n represents the name of that script. If the value is not empty, the client can request a list of\n available input values by calling the function\n {@link IXServicePortIF#checkoutKeywordsDynamic(ClientInfo, KeywordsDynamicInfo)}.",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "The ID of the line information.",
            "type": "integer"
          },
          "lockName": {
            "description": "Name of the user that has locked the mask line template.\nRead-only, ignored in\n checkinDocMaskLineTemplate.",
            "type": "string"
          },
          "key": {
            "description": "The attribute group name. This member corresponds to <code>ObjKey.name<\/code>.",
            "type": "string"
          },
          "prefixAsterix": {
            "description": "Add \"*\" before index value in search operation.",
            "type": "boolean"
          },
          "max": {
            "format": "int32",
            "description": "The maximum value of this attribute.",
            "type": "integer"
          },
          "commentTranslationKey": {
            "description": "Translation-keyword for {@link DocMaskLine#comment}.",
            "type": "string"
          },
          "onlyBuzzwords": {
            "description": "The index line can only contain buzzwords.",
            "type": "boolean"
          },
          "disableWordWheel": {
            "description": "Disable word wheel.\nClients should not provide a function to list all existing values for this\n index vlaue. The Indexserver does not set or test this value.",
            "type": "boolean"
          },
          "readOnly": {
            "description": "This value should not be edited in a user interface (convention).\nScripts are allowed to edit\n the value.",
            "type": "boolean"
          },
          "version": {
            "description": "Display index value in version information dialog when checking in a document.\nThis element has\n to be interpreted by the client application. Indexserver ignores this value.",
            "type": "boolean"
          },
          "allowedMaskIdsForKeywordingRelation": {
            "description": "Specifies the {@link DocMask#id} allowed in a {@link DocMaskLineC#TYPE_RELATION}.\nMandatory if DocMaskLine is of type {@link DocMaskLineC#TYPE_RELATION}. Only Sords with the\n specified {@link DocMask#id} can be referenced in this DocMaskLine.",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "lockId": {
            "format": "int32",
            "description": "User ID of the user that has locked the mask line template. If -1, no lock is held.",
            "type": "integer"
          },
          "important": {
            "description": "Display index value next to the objects short description.\nThis element has to be interpreted\n by the client application. Indexserver ignores this value.",
            "type": "boolean"
          },
          "nameTranslationKey": {
            "description": "Translation-keyword for {@link DocMaskLine#name}.",
            "type": "string"
          },
          "excludeFromISearch": {
            "description": "If true a index value will not be searchable via iSearch. Does not affect the index search.",
            "type": "boolean"
          },
          "aclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "inherit": {
            "description": "Inherit this keywording field to subordinated entries.\n<p>\n This option is used to make sure, that all entries in an archive sub-tree have the same value\n for this keywording field. Thereby the field is identified by its group name\n ({@link DocMaskLine#key} and {@link ObjKey#name}).\n <\/p>\n <p>\n The option corresponds to {@link #inheritFromParent}. As far as {@link #inheritFromParent} is\n also true in the keywording forms definition of all sub-items, the option {@link #inherit}\n effects the following:\n <ul>\n <li>The value of the keywording field can only be changed in the parent entry of the sub-tree.\n This is the uppermost entry that has the field, which means that the parent's parent does not\n have this field.<\/li>\n <li>All sub-items of the parent inherit this value during a background process. The value is\n forwarded recursively to the entire sub-tree under the parent. The recursion stops at items\n that are assigned to a keywording form without this field.<\/li>\n <li>When a child entry under the parent is updated, this field is always corrected to the\n parent's value.<\/li>\n <li>For an object moved into a parent, the object and all sub-items inherit the keywording\n field.<\/li>\n <\/ul>\n <\/p>\n <p>\n If {@link #inheritFromParent} is false in the keywording form definition of a sub-item,\n inheritance stops for the sub-item. Thus, the index field is treated as a different field\n although it has the same group name.\n <\/p>",
            "type": "boolean"
          },
          "name": {
            "description": "The name of the attribute. This value is displayed in the lable before the edit field.\nIt can\n be translated into reps. from the users language: set\n <code>SessionOptionsC.TRANSLATE_TERM<\/code>.",
            "type": "string"
          },
          "comment": {
            "description": "Quickinfo text for the attribute.",
            "type": "string"
          },
          "validateExpression": {
            "description": "RegEx to validate user input for entry.",
            "type": "string"
          }
        }
      },
      "BResult_1696936442": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/AspectAssoc"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "HealthCheckInfoType": {
        "description": "Defines the type of the HealthCheck values. Depending on the type the evaluation differs.\nEither\n MMA, CNT or MSG.",
        "type": "object",
        "properties": {
          "MMA": {
            "description": "Min-Max-Average value.\nValue: 0 Each entry represents minimum, maximum and average values in an\n hour. -> 3 * 24 Values a day.\n \n E.g.: 0, memory, 1.0,1.2,1.1, 2.0,2.2,2.1, 3.5,4.0,3.75, ...",
            "$ref": "#/components/schemas/HealthCheckInfoType"
          },
          "MSG": {
            "description": "Message values. Value: 2 -> One message a day... hmm..\nE.g.: 2, version, IX20.00.000.004, ES20.00.000.004, ...",
            "$ref": "#/components/schemas/HealthCheckInfoType"
          },
          "CNT": {
            "description": "Counter values. Value: 1 -> 24 Values a day.\nE.g.: 1, login, 12, 25, 32, 34, 48, 59, 62, 69, 80, 87, 90, 102, 106, 110, 112, 130, 142, etc.",
            "$ref": "#/components/schemas/HealthCheckInfoType"
          }
        }
      },
      "BResult_1443841819": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/NoteTemplate"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "HashTagRelationDataC": {
        "description": "<p>Bit constants for members of HashTagRelation<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnActionGuid": {
            "format": "int32",
            "description": "Column length: Guid of the Action in which the HashTag is used.\nDB column: actionguid",
            "type": "integer"
          },
          "mbStatus": {
            "description": "Member bit: Status.\nDB column: status",
            "type": "string"
          },
          "lnHashtagGuid": {
            "format": "int32",
            "description": "Column length: Guid of the HashTag.\nDB column: hashtagguid",
            "type": "integer"
          },
          "mbTStamp": {
            "description": "Member bit: Timestamp for replication.\nDB column: tstamp",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbActionGuid": {
            "description": "Member bit: Guid of the Action in which the HashTag is used.\nDB column: actionguid",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "Column length: Timestamp for replication.\nDB column: tstamp",
            "type": "integer"
          },
          "mbHashtagGuid": {
            "description": "Member bit: Guid of the HashTag.\nDB column: hashtagguid",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteSubs": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "deps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubsInfo"
            }
          }
        }
      },
      "IntValue": {
        "description": "Class to commit a numeric int value to iSearch via QueryFilter.",
        "type": "object"
      },
      "ArrayOfUserTask": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/UserTask"
        }
      },
      "PreviewImageResult": {
        "type": "object",
        "properties": {
          "urls": {
            "description": "List of URLs pointing to the requested preview images.\nThe URL at the first index in the list\n points to the lexicographic ordered first requested page.",
            "$ref": "#/components/schemas/ListOfString"
          },
          "dimensionHeight": {
            "format": "int32",
            "description": "Height of the first page.\nPlease consider the hints at\n {@link PreviewImageResult#dimensionWidth} with respect to multi-page documents.",
            "type": "integer"
          },
          "pages": {
            "format": "int32",
            "description": "Number of pages.",
            "type": "integer"
          },
          "progressMax": {
            "format": "int32",
            "description": "Estimated value about the workload at the server.\nThere is a chance that the server is finished\n with the processing of the request when progress reaches this estimated value. In repeated\n requests progresMax can increase in comparison to calls in earlier times.",
            "type": "integer"
          },
          "progress": {
            "format": "int32",
            "description": "Current progress of processing at the server.\nProcessing is finished at server side when this\n value equals {@link PreviewImageResult#progressMax}.",
            "type": "integer"
          },
          "dimensionWidth": {
            "format": "int32",
            "description": "Width of first page.\nUse this value to get an idea about the dimensions of the preview image in\n general. While this value is exact for the first page, following pages may have different\n dimension (e.g. different orientation, image as a whole page in a PDF document, ...)",
            "type": "integer"
          },
          "dpi": {
            "format": "int32",
            "description": "Dots per inch of the requested preview images.\nIf the document source is a multi-page file,\n this value holds for every requested pages.",
            "type": "integer"
          },
          "statusMessage": {
            "description": "Status message about the current processing of preview images at the server.",
            "type": "string"
          }
        }
      },
      "SystemReport": {
        "type": "object",
        "properties": {
          "doccount": {
            "type": "string"
          },
          "ftsize": {
            "type": "string"
          },
          "docsize": {
            "type": "string"
          },
          "previewsize": {
            "type": "string"
          }
        }
      },
      "HealthCheckService": {
        "type": "object"
      },
      "CalendarIntervalE": {
        "description": "Types of calendar intervals used for AggregationQuery of type DATE_HISTOGRAM.\n<br>\n Note: The value NONE exists only to check if this mandatory parameter is given, since API\n serialization may deliver always the first enum value.",
        "type": "object",
        "properties": {
          "MONTH": {
            "description": "1 month.",
            "$ref": "#/components/schemas/CalendarIntervalE"
          },
          "QUARTER": {
            "description": "1 quarter.",
            "$ref": "#/components/schemas/CalendarIntervalE"
          },
          "YEAR": {
            "description": "1 year",
            "$ref": "#/components/schemas/CalendarIntervalE"
          },
          "HOUR": {
            "description": "1 hour.",
            "$ref": "#/components/schemas/CalendarIntervalE"
          },
          "MINUTE": {
            "description": "1 minute.",
            "$ref": "#/components/schemas/CalendarIntervalE"
          },
          "NONE": {
            "description": "Meaning is \"not specified\" which will be checked.",
            "$ref": "#/components/schemas/CalendarIntervalE"
          },
          "WEEK": {
            "description": "1 week.",
            "$ref": "#/components/schemas/CalendarIntervalE"
          },
          "DAY": {
            "description": "1 day.",
            "$ref": "#/components/schemas/CalendarIntervalE"
          }
        }
      },
      "ResolveRightsInfo": {
        "description": "Parameter Class for\n{@link IXServicePortIF#resolveRights(ClientInfo, UserInfo, ResolveRightsInfo)} .",
        "type": "object"
      },
      "BRequest_IXServicePortIF_getScriptsToDebug": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "UserProfileDataC": {
        "description": "<p>Bit constants for members of UserProfileData<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnValue": {
            "format": "int32",
            "description": "DB column: optvalue",
            "type": "integer"
          },
          "mbKey": {
            "description": "DB column: optkey",
            "type": "string"
          },
          "mbValue": {
            "description": "DB column: optvalue",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnKey": {
            "format": "int32",
            "description": "DB column: optkey",
            "type": "integer"
          },
          "mbUser": {
            "description": "DB column: userid",
            "type": "string"
          }
        }
      },
      "CountResult": {
        "description": "Class for the results of one count process.",
        "type": "object",
        "properties": {
          "docBytesCount": {
            "description": "count of the bytes of the current document version",
            "type": "string"
          },
          "otherAttVersBytesCount": {
            "description": "count of the bytes of other attachment versions",
            "type": "string"
          },
          "docAttachCount": {
            "format": "int32",
            "description": "count of the found document attachments",
            "type": "integer"
          },
          "otherDocVersBytesCount": {
            "description": "count of the bytes of other document versions",
            "type": "string"
          },
          "docVersionsCount": {
            "format": "int32",
            "description": "count of the documents in the version history",
            "type": "integer"
          },
          "otherAttachVersionsCount": {
            "format": "int32",
            "description": "count of the other attachment versions",
            "type": "integer"
          },
          "attBytesCount": {
            "description": "count of the bytes of the current attachment version",
            "type": "string"
          },
          "docCount": {
            "format": "int32",
            "description": "count of the found documents",
            "type": "integer"
          },
          "structCount": {
            "format": "int32",
            "description": "count of the found structures",
            "type": "integer"
          }
        }
      },
      "ESearchParams": {
        "description": "Parameters for iSearch.",
        "type": "object",
        "properties": {
          "query": {
            "description": "<p>\nQueryString\n <\/p>\n <p>\n Note: Do not escaped any characters, this is done by IX.\n <p>\n <p>\n A PowerSearch is enabled if query starts with <i>=<\/i>. In this case, nothing is escaped by IX.",
            "type": "string"
          },
          "searchIn": {
            "description": "<p>\nSelect which Information should be searched.\n <p>\n \n <p>\n Example for multiple selection to search in title and fulltext:<br>\n <code>searchIn = SearchObjectC.TITLE | SearchObjectC.FULLTEXT<\/code>\n <p>",
            "type": "string"
          },
          "queryOperator": {
            "description": "The QueryOperator is a combination of various QueryFilters to specify in which fields (e.g.\nindex field, sord title, ...)",
            "$ref": "#/components/schemas/QueryOperator"
          },
          "inclDeleted": {
            "format": "int32",
            "description": "Define if deleted sords should be included:\n<ul>\n <li>0: exclude deleted sords (default).\n <li>1: include deleted sords.\n <li>2: only deleted sords.\n <\/ul>",
            "type": "integer"
          }
        }
      },
      "BRequest_LdapService_createConfig": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_createUser": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "rightsAsUserId": {
            "type": "string"
          }
        }
      },
      "PhysDelDocs": {
        "description": "Internal class.",
        "type": "object",
        "properties": {
          "objId": {
            "format": "int32",
            "description": "DB column: objid",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_createWFNode": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "nodeTypeC": {
            "format": "int32",
            "type": "integer"
          },
          "nodeId": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "BResult_1537059480": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/KeyInfo"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BResult_2006133032": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFCollectNode"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BackupStatus": {
        "description": "This class represents the status of the ELOdm backup task",
        "type": "object",
        "properties": {
          "secondsUntilNextCheck": {
            "format": "int32",
            "description": "waiting time in seconds until the next proccessing (when the backup profiles are traversed)",
            "type": "integer"
          },
          "isRunning": {
            "description": "if the ELOdm backup task is running (the purge task can only run in combination with the backup\ntask)",
            "type": "boolean"
          },
          "numberOfDocsCopied": {
            "format": "int32",
            "description": "number of copied documents since start of the backup task",
            "type": "integer"
          },
          "errorMessage": {
            "description": "an error message, if an error occured, else an empty String",
            "type": "string"
          }
        }
      },
      "AggregationOptions": {
        "description": "<p>\nUse this class if aggregations in general (i.e. not context terms) should be retrieved by\n {@link de.elo.ix.client.IXServicePortIF#findAggregations(de.elo.ix.client.ClientInfo, de.elo.ix.client.FindInfo, int)}.<br>\n The overall query is submitted by {@link de.elo.ix.client.esearch.ESearchParams}.\n <\/p>\n <p>\n Submit a map of AggregationQuerys to retrieve result aggregations for each of them.<br>\n <\/p>\n <p>\n The resulting list {@link ContextTermResults#contextTerms} is provided in the same order as the\n submitted list contextTermQueries\n <\/p>\n <\/p>",
        "type": "object",
        "properties": {
          "aggregationQueries": {
            "description": "Map of aggregation queries.",
            "$ref": "#/components/schemas/MapToAggregationQuery"
          }
        }
      },
      "AlertDataC": {
        "description": "<p>Bit constants for members of Alert<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbDest": {
            "description": "DB column: destination",
            "type": "string"
          },
          "mbType": {
            "description": "DB column: alerttype",
            "type": "string"
          },
          "lnMemo": {
            "format": "int32",
            "description": "DB column: alertmemo",
            "type": "integer"
          },
          "mbObjId": {
            "description": "DB column: objid",
            "type": "string"
          },
          "mbExtra1": {
            "description": "DB column: extra1",
            "type": "string"
          },
          "mbExtra2": {
            "description": "DB column: extra2",
            "type": "string"
          },
          "mbMemo": {
            "description": "DB column: alertmemo",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbSource": {
            "description": "DB column: source",
            "type": "string"
          },
          "mbTime": {
            "description": "DB column: alerttime",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutMapDomain": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "domainName": {
            "type": "string"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_createSuperiorSubstitution": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "createSuperiorSubstitutionInfo": {
            "$ref": "#/components/schemas/CreateSuperiorSubstitutionInfo"
          }
        }
      },
      "FindResultSortSpecification": {
        "description": "This class specifies the sorting criteria of a search for aspect data.",
        "type": "object",
        "properties": {
          "sortOrderSequence": {
            "description": "Specify the sequence of the results (e.q. ascending or descending).\nDefaults to\n {@link SortOrderSequenceE#ASCENDING}",
            "$ref": "#/components/schemas/SortOrderSequenceE"
          },
          "key": {
            "description": "This key specifies the {@link AspectLine} as sorting criteria.\nThe string must be in the same\n syntax as the key in {@link FindByIndex#aspects}:\n \n <pre>\n {@code AspectAssoc¶Aspect¶AspectLine}\n <\/pre>\n \n The server expects their corresponding technical identifiers - meaning\n {@link AspectAssoc#name}, {@link Aspect#name}, and {@link AspectLine#key} respectively. Similar\n to the key in {@link FindByIndex#aspects} you may leave the name of the {@link Aspect} and\n {@link AspectAssoc} empty, but not the key of the {@link AspectLine}.",
            "type": "string"
          }
        }
      },
      "NoteText": {
        "description": "This class conatins additional information for textual notes.\nNoteText objects can be used in\n NoteTemplate and Note objects.",
        "type": "object",
        "properties": {
          "fontInfo": {
            "description": "Font. This member is null for type NoteC.TYPE_ANNOTATION_NOTE.",
            "$ref": "#/components/schemas/FontInfo"
          },
          "text": {
            "description": "Stamp text. The maximum length is NoteDataC.\nlnDesc - 50, if the NoteText object is used in a\n Note object. The length for a text of a NoteTemplate object is defined by NoteTemplateC.lnText",
            "type": "string"
          }
        }
      },
      "WFNodeHistory": {
        "description": "Version history for a workflow node. A version history is created while leaving a workflow node.\n<p>\n Copyright: Copyright (c) 2015\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "succ_11": {
            "format": "int32",
            "description": "DB column: wf_succ_11",
            "type": "integer"
          },
          "succ_10": {
            "format": "int32",
            "description": "DB column: wf_succ_10",
            "type": "integer"
          },
          "succ_13": {
            "format": "int32",
            "description": "DB column: wf_succ_13",
            "type": "integer"
          },
          "succ_12": {
            "format": "int32",
            "description": "DB column: wf_succ_12",
            "type": "integer"
          },
          "enterDateIso": {
            "description": "The node was activated on this date. This member is valid for all node types.",
            "type": "string"
          },
          "succ_9": {
            "format": "int32",
            "description": "DB column: wf_succ_9",
            "type": "integer"
          },
          "histGuid": {
            "description": "GUID of the WorkflowHist object.\nDB column: wfhistguid",
            "type": "string"
          },
          "succ_5": {
            "format": "int32",
            "description": "DB column: wf_succ_5",
            "type": "integer"
          },
          "succ_6": {
            "format": "int32",
            "description": "DB column: wf_succ_6",
            "type": "integer"
          },
          "flowGuid": {
            "description": "GUID of the workflow.\nDB column: wfguid",
            "type": "string"
          },
          "succ_7": {
            "format": "int32",
            "description": "DB column: wf_succ_7",
            "type": "integer"
          },
          "succ_8": {
            "format": "int32",
            "description": "DB column: wf_succ_8",
            "type": "integer"
          },
          "succ_1": {
            "format": "int32",
            "description": "DB column: wf_succ_1",
            "type": "integer"
          },
          "succ_2": {
            "format": "int32",
            "description": "DB column: wf_succ_2",
            "type": "integer"
          },
          "succ_3": {
            "format": "int32",
            "description": "DB column: wf_succ_3",
            "type": "integer"
          },
          "succ_4": {
            "format": "int32",
            "description": "DB column: wf_succ_4",
            "type": "integer"
          },
          "userName": {
            "description": "Name of user who has to process the node. Might be a group name too.\nOnly valid for person\n nodes. DB column: wf_username",
            "type": "string"
          },
          "userId": {
            "format": "int32",
            "description": "ID of user who has to process the node. Might be a group ID too. Only valid for person nodes.\nDB column: wf_userid",
            "type": "integer"
          },
          "succ_0": {
            "format": "int32",
            "description": "Successor node(s) succ_0 ...\nSucc 19 DB column: wf_succ_0",
            "type": "integer"
          },
          "succ_19": {
            "format": "int32",
            "description": "DB column: wf_succ_19",
            "type": "integer"
          },
          "succ_18": {
            "format": "int32",
            "description": "DB column: wf_succ_18",
            "type": "integer"
          },
          "succ_15": {
            "format": "int32",
            "description": "DB column: wf_succ_15",
            "type": "integer"
          },
          "succ_14": {
            "format": "int32",
            "description": "DB column: wf_succ_14",
            "type": "integer"
          },
          "succ_17": {
            "format": "int32",
            "description": "DB column: wf_succ_17",
            "type": "integer"
          },
          "succ_16": {
            "format": "int32",
            "description": "DB column: wf_succ_16",
            "type": "integer"
          },
          "exitDateIso": {
            "description": "The node was exited/completed on this date. This member is valid for all node types.",
            "type": "string"
          },
          "nodeId": {
            "format": "int32",
            "description": "Node ID.\nDB column: wf_nodeid",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutSubs": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "userId": {
            "type": "string"
          }
        }
      },
      "FindSubscriptionInfo": {
        "description": "Find criteria for function findFirstSubscriptions.",
        "type": "object",
        "properties": {
          "feedZ": {
            "description": "Element selector for Feed objects. If this member is not null or empty, FindResult.\nfeeds\n contains the Feed objects associated to FindResult.subscriptions.",
            "$ref": "#/components/schemas/FeedZ"
          },
          "sordZ": {
            "description": "Element selector for Sord objects. If this member is not null or empty, FindResult.\nsords\n contains the Sord objects associated to FindResult.subscriptions.",
            "$ref": "#/components/schemas/SordZ"
          },
          "userId": {
            "description": "Find subscriptions of this user.\nIf this member is empty, the current users subscriptions are\n returned. This member is ignored for non-administrators. User ID, GUID or Name is accepted.",
            "type": "string"
          }
        }
      },
      "EditInfoC": {
        "description": "<p>\nConstants to read data for editing the indexing information of an archive entry\n <\/p>",
        "type": "object",
        "properties": {
          "mbNoteMembers": {
            "description": "Return notes in checkoutSord and checkoutDoc.",
            "type": "string"
          },
          "mbBasicData": {
            "description": "Arrays of mask, marker, repl, path names",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbSordNotes": {
            "description": "Return all Sord members and notes.",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbMaskNames": {
            "description": "Mask names.",
            "type": "string"
          },
          "mbOnlyId": {
            "description": "Read only Sord ID and GUID.",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbMarkerNames": {
            "description": "Marker names (colors).",
            "type": "string"
          },
          "mbSord": {
            "description": "Sord object with all members.",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbSordPreviewSmallContent": {
            "description": "Includes mbDocumentMembers|mbSignatureMembers, SordC.\nmbCheckoutPreview",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbAllMembersLazy": {
            "description": "As {@link #mbAllMembers} but provides {@link EditInfo#mask}, {@link EditInfo#sordTypes} and\n{@link EditInfo#keywords} for lazy loading.",
            "type": "string"
          },
          "mbOnlyLock": {
            "description": "Lock or unlock object, do not read or write any data.",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbAllMembers": {
            "description": "All members: indexing information + basic data + document + attachment + signature",
            "type": "string"
          },
          "mbSordDocAtt": {
            "description": "Sord object with SordC.mbAll, document versions, attachment versions, signatures.",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbAttachmentMembers": {
            "description": "Information to download the attachment of the archive entry.",
            "type": "string"
          },
          "mbPhysPath": {
            "description": "Return the physical path of the document in checkoutDoc.\nThis requires a request to Document\n Mangager.",
            "type": "string"
          },
          "mbAttachment": {
            "description": "Attachment version(s), no index information",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbAll": {
            "description": "All members without mbSmallDocumentContent",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbDocumentMembers": {
            "description": "Information to download the document of the archive entry.",
            "type": "string"
          },
          "mbMask": {
            "description": "Complete data of the mask of the specified object.",
            "type": "string"
          },
          "mbSordTypesJPG": {
            "description": "List of Sord types (labels, icons, extensions corresponding to Sord.type).\nIcon images are\n returned in JPEG format.",
            "type": "string"
          },
          "mbAspectInfos": {
            "description": "Aspect infos.",
            "type": "string"
          },
          "mbSordContentStream": {
            "description": "Sord object with all members, work version can be read from an InputStream.\nFile content is\n supplied in {@link Sord#docVersion}, {@link FileData#stream}.",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbSordDocSmallContent": {
            "description": "Includes mbDocumentMembers, mbSignatureMembers, SordC.\nmbCheckout",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbNotes": {
            "description": "Return only notes.",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbSordDocAttContentStream": {
            "description": "Sord object with SordC.mbAll, document versions, attachment versions, signatures.\nFile contents\n are supplied in {@link FileData#stream}.",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbSordDoc": {
            "description": "Sord object with SordC.mbAll, document versions, signatures.",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbPreviewMembers": {
            "description": "Return document preview in checkoutDoc",
            "type": "string"
          },
          "mbSordLean": {
            "description": "Sord object with lean members.",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbSignatureMembers": {
            "description": "Information to download the signature of the archive entry.",
            "type": "string"
          },
          "mbReplNames": {
            "description": "Names of all replication sets.",
            "type": "string"
          },
          "mbPathNames": {
            "description": "Path names.",
            "type": "string"
          },
          "mbDocTemplates": {
            "description": "RESERVED. Document templates.",
            "type": "string"
          },
          "mbDocument": {
            "description": "Document version(s) and signature, no index information",
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "mbKeywordMembers": {
            "description": "Return keywords in checkoutSord and checkoutDoc.",
            "type": "string"
          }
        }
      },
      "BResult_545905411": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/LicenseResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BResult_810727301": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/NotifyServerResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_FeedService_findFirstNotification": {
        "type": "object",
        "properties": {
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindNotificationInfo"
          }
        }
      },
      "ArrayOfActivityProject": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ActivityProject"
        }
      },
      "StartWorkflowInfo": {
        "description": "This class is used as a parameter in the function\n{@link IXServicePortIF#startWorkFlow2(ClientInfo, String, StartWorkflowInfo)}.",
        "type": "object",
        "properties": {
          "templFlowId": {
            "description": "Name or ID of the workflow template.",
            "type": "string"
          },
          "flowName": {
            "description": "Name of the new workflow.",
            "type": "string"
          },
          "flowOwner": {
            "description": "The flow owner ID.",
            "type": "string"
          }
        }
      },
      "DateValue": {
        "type": "object"
      },
      "ExportExtOptions": {
        "description": "Options for extended export.",
        "type": "object",
        "properties": {
          "exportDocsVersions": {
            "type": "boolean"
          },
          "exportEncrytedDocs": {
            "description": "Export encrypted documents too?",
            "type": "boolean"
          },
          "ignoreEmptyFolders": {
            "description": "Do not export empty branches (without any document).",
            "type": "boolean"
          },
          "srcType": {
            "format": "int32",
            "description": "Type of the export's source (archive or search results)",
            "type": "integer"
          },
          "srcList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateEndIso": {
            "description": "Ending date for filter in ISO format (null for no date)",
            "type": "string"
          },
          "exportStructure": {
            "description": "Export documents to filesystem structure.\nIf this member is false, only documents are exported\n and they are all located at the root export folder.",
            "type": "boolean"
          },
          "replaceRefWithOriginal": {
            "type": "boolean"
          },
          "exportKeywords": {
            "type": "boolean"
          },
          "dateType": {
            "format": "int32",
            "description": "Which type of date must be considered?",
            "type": "integer"
          },
          "searchId": {
            "description": "If the source is the search and if all results have to be exported, then this option must be\nset with the search's ID.",
            "type": "string"
          },
          "masksList": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "dateStartIso": {
            "description": "Beginning date for filter in ISO format (null for no date)",
            "type": "string"
          },
          "exportAttachments": {
            "type": "boolean"
          },
          "exportReminders": {
            "type": "boolean"
          },
          "exportDocs": {
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_getContextTerms": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindInfo"
          }
        }
      },
      "EloIxOptDataC": {
        "description": "<p>Bit constants for members of EloIxOpt<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnIxId": {
            "format": "int32",
            "description": "DB column: ixid",
            "type": "integer"
          },
          "lnValue": {
            "format": "int32",
            "description": "DB column: optval",
            "type": "integer"
          },
          "lnName": {
            "format": "int32",
            "description": "DB column: optname",
            "type": "integer"
          },
          "mbIxId": {
            "description": "DB column: ixid",
            "type": "string"
          },
          "mbValue": {
            "description": "DB column: optval",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbName": {
            "description": "DB column: optname",
            "type": "string"
          }
        }
      },
      "SearchTermsC": {
        "type": "object",
        "properties": {
          "CORRECTION": {
            "format": "int32",
            "type": "integer"
          },
          "TERMS": {
            "format": "int32",
            "type": "integer"
          },
          "SYNONYMS": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "UserInfoC": {
        "description": "<p>\nConstants related to user information.\n <\/p>\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "mbSuperiorId": {
            "description": "Member bit {@link UserInfo#superiorId}",
            "type": "string"
          },
          "LDAP_PROP_OBJECT_CLASS": {
            "description": "Object class",
            "type": "string"
          },
          "LDAP_KEY_ONLINE_MAILBOX_ENABLED": {
            "description": "IsMailboxEnabled. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "LDAP_PROP_EXCH_RECIPIENT_TYPE_DETAILS": {
            "description": "msExchRecipientTypeDetails",
            "type": "string"
          },
          "LDAP_KEY_SAM_ACCOUNT_TYPE": {
            "description": "Contains information about every account type object.\nKey to access the map\n UserInfo.ldapProperties",
            "type": "string"
          },
          "LDAP_KEY_MAIL_NICK_NAME": {
            "description": "Mail nick name. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "mbUserProps": {
            "description": "Member bit {@link UserInfo#userProps}",
            "type": "string"
          },
          "LDAP_KEY_EXCH_RECIPIENT_TYPE_DETAILS": {
            "description": "msExchRecipientTypeDetails. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "LDAP_PROP_EXCH_OWNING_SERVER": {
            "description": "msExchOwningServer",
            "type": "string"
          },
          "GUID_ELOSERVICE": {
            "description": "GUID of the default service user.",
            "type": "string"
          },
          "LDAP_KEY_LEGACY_EXCHANGE_DN": {
            "description": "LegacyExchangeDN. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "mbFlags2": {
            "description": "Member bit {@link UserInfo#flags2}",
            "type": "string"
          },
          "lnLdapPropKey": {
            "format": "int32",
            "description": "Maximum length of LDAP property key.",
            "type": "integer"
          },
          "MAX_NAME": {
            "format": "int32",
            "description": "Maximum user name length.",
            "type": "integer"
          },
          "TYPE_USERID_OWNER": {
            "format": "int32",
            "description": "Type value for the current user",
            "type": "integer"
          },
          "mbLastLoginIso": {
            "description": "Member bit {@link UserInfo#lastLoginIso}",
            "type": "string"
          },
          "LDAP_PROP_OBJECT_GUID": {
            "description": "The unique identifier for an object",
            "type": "string"
          },
          "LDAP_PROP_EXCH_RECIPIENT_DISPLAY_TYPE": {
            "description": "msExchRecipientDisplayType",
            "type": "string"
          },
          "PROP_NAME_EMAIL": {
            "format": "int32",
            "type": "integer"
          },
          "lnUserProp": {
            "format": "int32",
            "description": "Maximum user property length",
            "type": "integer"
          },
          "ID_EVERYONE_GROUP": {
            "format": "int32",
            "description": "Every user is in the group \"Everyone\". This is the internal ID for this group.",
            "type": "integer"
          },
          "mbGroupList": {
            "description": "Member bit {@link UserInfo#groupList}",
            "type": "string"
          },
          "MAX_GROUPS": {
            "format": "int32",
            "description": "Maximum number of groups per user.",
            "type": "integer"
          },
          "LDAP_KEY_GROUP_TYPE": {
            "description": "Group type. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "LDAP_KEY_USER_PRINCIPAL_NAME": {
            "description": "User principal name. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "LDAP_KEY_OBJECT_CLASS": {
            "description": "Object class. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "mbLdapProperties": {
            "description": "Member bit {@link UserInfo#ldapProperties}",
            "type": "string"
          },
          "LDAP_PROP_SAM_ACCOUNT_NAME": {
            "description": "NT account name",
            "type": "string"
          },
          "mbGuid": {
            "description": "Member bit {@link UserInfo#guid}",
            "type": "string"
          },
          "LDAP_PROP_MEMBER_OF": {
            "description": "Member of",
            "type": "string"
          },
          "LDAP_PROP_LEGACY_EXCHANGE_DN": {
            "description": "LegacyExchangeDN",
            "type": "string"
          },
          "PROP_ACTION": {
            "format": "int32",
            "description": "This user property is used to trigger actions in the client application.\nThe value of the\n property is found at UserInfo.userProps[UserInfoC.PROP_ACTION]. If the value contains the\n String {@link #PROP_ACTION_USER_SHOULD_CHANGE_PASSWORD} the user should change the password .\n If the value contains the String {@link #PROP_ACTION_USER_MUST_CHANGE_PASSWORD}, the user must\n change the password. If the value contains the String {@link #PROP_ACTION_END_PASSWORD_DATE},\n the password expires at the ISO date defined by the next 10 characters. E.g. \"EX20120405\" means\n that the password expires at April 5, 2012.",
            "type": "integer"
          },
          "LDAP_KEY_DISTINGUISHED_NAME": {
            "description": "Distinguished name. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "mbDesc": {
            "description": "Member bit {@link UserInfo#desc}",
            "type": "string"
          },
          "mbSessions": {
            "description": "Member bit {@link UserInfo#sessions}",
            "type": "string"
          },
          "mbPackageName": {
            "description": "Member bit {@link UserInfo#packageName}",
            "type": "string"
          },
          "mbPwd": {
            "description": "Member bit {@link UserInfo#pwd}",
            "type": "string"
          },
          "lnDesc": {
            "format": "int32",
            "description": "Maximum user desc length",
            "type": "integer"
          },
          "mbName": {
            "description": "Member bit {@link UserInfo#name}",
            "type": "string"
          },
          "LDAP_KEY_ONLINE": {
            "description": "Online. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "LDAP_PROP_EXCH_DELEGATE_LIST_LINK": {
            "description": "msExchDelegateListLink",
            "type": "string"
          },
          "UNLOCK_ARCHIVE": {
            "description": "Pass this value to unlock the archive.",
            "type": "string"
          },
          "LDAP_PROP_ONLINE_MAILBOX_ENABLED": {
            "description": "IsMailboxEnabled",
            "type": "string"
          },
          "mbTStampSync": {
            "description": "Member bit {@link UserInfo#tStampSync}",
            "type": "string"
          },
          "lnName": {
            "format": "int32",
            "description": "Maximum user name length",
            "type": "integer"
          },
          "LDAP_PROP_OBJECT_CATEGORY": {
            "description": "Object category",
            "type": "string"
          },
          "LDAP_KEY_EXCH_DELEGATE_LIST_LINK": {
            "description": "msExchDelegateListLink. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "LDAP_PROP_CN": {
            "description": "Common name",
            "type": "string"
          },
          "LDAP_KEY_ONLINE_MAIL": {
            "description": "PrimarySmtpAddress. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "TYPE_USER": {
            "format": "int32",
            "description": "Type value for an user.",
            "type": "integer"
          },
          "TYPE_GROUP": {
            "format": "int32",
            "description": "Type value for a group.",
            "type": "integer"
          },
          "LDAP_PROP_ADMIN_DISPLAY_NAME": {
            "description": "adminDisplayName",
            "type": "string"
          },
          "LDAP_KEY_USER_ACCOUNT_CONTROL": {
            "description": "Flags that control the behavior of the user account.\nKey to access the map\n UserInfo.ldapProperties",
            "type": "string"
          },
          "MAX_PERSISTENT_GROUPS": {
            "format": "int32",
            "description": "Maximum number of persistent groups per user.",
            "type": "integer"
          },
          "PROP_ACTION_USER_MUST_CHANGE_PASSWORD": {
            "description": "The user must change the password.",
            "type": "string"
          },
          "LDAP_PROP_MAIL_NICK_NAME": {
            "description": "Mail nick name",
            "type": "string"
          },
          "LDAP_KEY_EXCH_JOURNAL_RCPT": {
            "description": "msExchMessageJournalRecipient. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "LDAP_KEY_MEMBER_OF": {
            "description": "Member of. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "LDAP_PROP_ONLINE_RECIPIENT_TYPE_DETAILS": {
            "description": "RecipientTypeDetails",
            "type": "string"
          },
          "LDAP_KEY_ADMIN_DISPLAY_NAME": {
            "description": "adminDisplayName. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "lnPwd": {
            "format": "int32",
            "description": "Maximum user password length",
            "type": "integer"
          },
          "LDAP_PROP_ONLINE_GUID": {
            "description": "Guid",
            "type": "string"
          },
          "ID_ADMINISTRATOR": {
            "format": "int32",
            "description": "User ID of main administrator.",
            "type": "integer"
          },
          "LDAP_KEY_CN": {
            "description": "Common name. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "mbTStamp": {
            "description": "Member bit {@link UserInfo#tStamp}",
            "type": "string"
          },
          "LDAP_PROP_DISTINGUISHED_NAME": {
            "description": "Distinguished name",
            "type": "string"
          },
          "PROP_GUID": {
            "format": "int32",
            "description": "User property GUID.",
            "type": "integer"
          },
          "LDAP_KEY_MANAGER": {
            "description": "Manager.",
            "type": "string"
          },
          "LDAP_PROP_SAM_ACCOUNT_TYPE": {
            "description": "Contains information about every account type object",
            "type": "string"
          },
          "LDAP_KEY_MAIL": {
            "description": "Mail. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "mbParent": {
            "description": "Member bit {@link UserInfo#parent}",
            "type": "string"
          },
          "LDAP_KEY_ONLINE_GUID": {
            "description": "Guid. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "LDAP_PROP_MAIL": {
            "description": "Mail",
            "type": "string"
          },
          "mbOrgUnitIds": {
            "description": "Member bit {@link UserInfo#orgUnitIds}",
            "type": "string"
          },
          "LDAP_KEY_EXCH_HIDE_FROM_ADDRESS_LISTS": {
            "description": "msExchHideFromAddressLists. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "GUID_ADMINISTRATOR": {
            "description": "GUID of main administrator",
            "type": "string"
          },
          "mbId": {
            "description": "Member bit {@link UserInfo#id}",
            "type": "string"
          },
          "LDAP_PROP_NAME": {
            "description": "Name",
            "type": "string"
          },
          "LDAP_PROP_EXCH_JOURNAL_RCPT": {
            "description": "msExchMessageJournalRecipient",
            "type": "string"
          },
          "LDAP_KEY_DISPLAY_NAME": {
            "description": "Display name. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "LDAP_PROP_DISPLAY_NAME": {
            "description": "Display name",
            "type": "string"
          },
          "LDAP_KEY_MS_EXCHANGE_MAILBOX_GUID": {
            "description": "Mailbox globally unique identifier. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "LDAP_PROP_MS_EXCHANGE_MAILBOX_GUID": {
            "description": "Mailbox globally unique identifier",
            "type": "string"
          },
          "LDAP_PROP_FQDN": {
            "description": "Full Qualified Domain Name",
            "type": "string"
          },
          "LDAP_KEY_DOMAIN": {
            "description": "Domain.",
            "type": "string"
          },
          "GUID_EVERYONE_GROUP": {
            "description": "GUID of group \"Everybody\"",
            "type": "string"
          },
          "LDAP_KEY_EXCH_OWNING_SERVER": {
            "description": "msExchOwningServer. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "LDAP_KEY_ONLINE_RECIPIENT_TYPE_DETAILS": {
            "description": "RecipientTypeDetails. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "PROP_ACTION_END_PASSWORD_DATE": {
            "description": "The password expires.",
            "type": "string"
          },
          "MAX_USERPROP": {
            "format": "int32",
            "description": "Maximum number of user properties.",
            "type": "integer"
          },
          "mbFlags": {
            "description": "Member bit {@link UserInfo#flags}",
            "type": "string"
          },
          "LDAP_KEY_OBJECT_SID": {
            "description": "A binary value that specifies the security identifier (SID) of the user.\nKey to access the map\n UserInfo.ldapProperties",
            "type": "string"
          },
          "mbInternalUser": {
            "description": "Member bit {@link UserInfo#internalUser}",
            "type": "string"
          },
          "LDAP_KEY_EXCH_PUBFOLDER_MAILBOX": {
            "description": "msExchPublicFolderMailbox. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "LDAP_PROP_EXCH_HIDE_FROM_ADDRESS_LISTS": {
            "description": "msExchHideFromAddressLists",
            "type": "string"
          },
          "mbWorkspaceInfo": {
            "description": "Member bit {@link UserInfo#workspaceInfo}.",
            "type": "string"
          },
          "LDAP_PROP_GROUP_TYPE": {
            "description": "Group type",
            "type": "string"
          },
          "LDAP_KEY_PROXY_ADDRESSES": {
            "description": "Proxy addresses. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "LDAP_PROP_PROXY_ADDRESSES": {
            "description": "Proxy addresses",
            "type": "string"
          },
          "LDAP_PROP_USER_ACCOUNT_CONTROL": {
            "description": "Flags that control the behavior of the user account",
            "type": "string"
          },
          "LDAP_KEY_SAM_ACCOUNT_NAME": {
            "description": "NT account name. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "PWD_VALUE_IGNORE": {
            "description": "This value can be set for UserInfo.\npwd to",
            "type": "string"
          },
          "mbKeylist": {
            "description": "Member bit {@link UserInfo#keylist}",
            "type": "string"
          },
          "PROP_USERDEFINED_3": {
            "format": "int32",
            "description": "<p>\nUser property defined by user\n <\/p>\n <p>\n Constant to access array {@link UserInfo#userProps}.\n <\/p>",
            "type": "integer"
          },
          "PROP_USERDEFINED_4": {
            "format": "int32",
            "description": "<p>\nUser property defined by user\n <\/p>\n <p>\n Constant to access array {@link UserInfo#userProps}.\n <\/p>",
            "type": "integer"
          },
          "PROP_USERDEFINED_1": {
            "format": "int32",
            "description": "<p>\nUser property defined by user\n <\/p>\n <p>\n Constant to access array {@link UserInfo#userProps}.\n <\/p>",
            "type": "integer"
          },
          "mbType": {
            "description": "Member bit {@link UserInfo#type}",
            "type": "string"
          },
          "PROP_USERDEFINED_2": {
            "format": "int32",
            "description": "<p>\nUser property defined by user\n <\/p>\n <p>\n Constant to access array {@link UserInfo#userProps}.\n <\/p>",
            "type": "integer"
          },
          "LDAP_KEY_OBJECT_CATEGORY": {
            "description": "Object category. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "LDAP_KEY_NAME": {
            "description": "Name. Key to access the map UserInfo.ldapProperties.",
            "type": "string"
          },
          "ID_ADMINISTRATORS_GROUP": {
            "format": "int32",
            "description": "Group ID of administrators.",
            "type": "integer"
          },
          "MAX_KEY": {
            "format": "int32",
            "description": "Maximum number of keys.",
            "type": "integer"
          },
          "PROP_ACTION_USER_SHOULD_CHANGE_PASSWORD": {
            "description": "The user should change the password.",
            "type": "string"
          },
          "PROP_NAME_OS": {
            "format": "int32",
            "type": "integer"
          },
          "LDAP_PROP_ONLINE_MAIL": {
            "description": "PrimarySmtpAddress",
            "type": "string"
          },
          "LDAP_PROP_EXCH_PUBFOLDER_MAILBOX": {
            "description": "msExchPublicFolderMailbox",
            "type": "string"
          },
          "LDAP_KEY_FQDN": {
            "description": "Full Qualified Domain Name. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "PROP_USERDEFINED_5": {
            "format": "int32",
            "description": "<p>\nUser property defined by user\n <\/p>\n <p>\n Constant to access array {@link UserInfo#userProps}.\n <\/p>",
            "type": "integer"
          },
          "lnLdapPropValue": {
            "format": "int32",
            "description": "Maximum length of LDAP property value.",
            "type": "integer"
          },
          "LDAP_KEY_EXCH_RECIPIENT_DISPLAY_TYPE": {
            "description": "msExchRecipientDisplayType. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "UPDATE_USER_DATA_BACKGROUND_JOB_NAME": {
            "description": "Background job name that updates a large number of user objects.",
            "type": "string"
          },
          "LDAP_KEY_OBJECT_GUID": {
            "description": "The unique identifier for an object. Key to access the map UserInfo.\nldapProperties",
            "type": "string"
          },
          "MAX_USERS": {
            "format": "int32",
            "description": "Maximale number of users and groups.",
            "type": "integer"
          },
          "LDAP_PROP_ONLINE": {
            "description": "Online",
            "type": "string"
          },
          "LDAP_PROP_OBJECT_SID": {
            "description": "A binary value that specifies the security identifier (SID) of the user.",
            "type": "string"
          },
          "LDAP_PROP_USER_PRINCIPAL_NAME": {
            "description": "User principal name",
            "type": "string"
          }
        }
      },
      "EActionType": {
        "description": "Types of document feed entries.",
        "type": "object",
        "properties": {
          "Undefined": {
            "description": "Reserved.",
            "$ref": "#/components/schemas/EActionType"
          },
          "Survey": {
            "description": "Feed Survey. An action of this type represents a survey.",
            "$ref": "#/components/schemas/EActionType"
          },
          "Released": {
            "description": "Document work version switched.\nAn action of this type is automatically created by the system,\n if the work version of a release document is set.",
            "$ref": "#/components/schemas/EActionType"
          },
          "FeedCreated": {
            "description": "Reserved.",
            "$ref": "#/components/schemas/EActionType"
          },
          "UserComment": {
            "description": "Comment created by a user.",
            "$ref": "#/components/schemas/EActionType"
          },
          "AutoComment": {
            "description": "Comment created by a program or script.",
            "$ref": "#/components/schemas/EActionType"
          },
          "WorkVersionCreated": {
            "description": "Document work version created.\nAn action of this type is automatically created by the system,\n if a new version of a non-release document is checked in and this version is set as the work\n version.",
            "$ref": "#/components/schemas/EActionType"
          },
          "WorkVersionSwitched": {
            "description": "Document work version switched.\nAn action of this type is automatically created by the system,\n if the work version of a non-release document is set and no content is uploaded.",
            "$ref": "#/components/schemas/EActionType"
          },
          "SordCreated": {
            "description": "Sord created.\nAn action of this type is automatically created by the system when the feed is\n initialized. The create date is set to the archiving date. For documents, member\n {@link Action#docVersion} represents the first version.",
            "$ref": "#/components/schemas/EActionType"
          },
          "VersionCreated": {
            "description": "Document version created.\nAn action of this type is automatically created by the system, if a\n new document version is checked in and this version is not set as the work version.",
            "$ref": "#/components/schemas/EActionType"
          }
        }
      },
      "EditInfoZ": {
        "description": "This class encapsulates the constants of the EditInfoC class.\nEditInfo also returns a Sord object\n and a SordZ member is included to control the Sord data returned.\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "sordZ": {
            "description": "SordZ object to control the SordC elements returned.",
            "$ref": "#/components/schemas/SordZ"
          },
          "bset": {
            "description": "Bitset field for constants from the EditInfoC class.",
            "type": "string"
          }
        }
      },
      "FindByAspectValue": {
        "description": "This class contains disjunct conditions to search for aspect data in the database.\nUsed as value\n in {@link FindByIndex#aspects}.",
        "type": "object",
        "properties": {
          "condition": {
            "description": "A single {@link IndexSearchValue} condition.\nThis field is for convenience in case you only\n have a single disjunct condition for the same aspect index line. In case you have more than one\n conditions, use the field {@link #disjunctConditions}. Server-side, this field will be merged\n into {@link #disjunctConditions}, so you can set both. Then, all the conditions will get\n evaluated.",
            "$ref": "#/components/schemas/IndexSearchValue"
          },
          "disjunctConditions": {
            "description": "{@link List} of disjunct conditions to filter aspect data in the database.\nThe server will\n evaluate all conditions in this list in a \"<tt>∨<\/tt>\" manner.",
            "$ref": "#/components/schemas/ListOfIndexSearchValue"
          }
        }
      },
      "BRequest_SystemInformation_licenseReport": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "si": {
            "$ref": "#/components/schemas/SystemInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_moveDocuments": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "moveDocumentsInfo": {
            "$ref": "#/components/schemas/MoveDocumentsInfo"
          }
        }
      },
      "FindTasksInfo": {
        "description": "This class contains the search criteria that are required for locating a task (reminders,\nworkflow tasks or activity).",
        "type": "object",
        "properties": {
          "inclReminders": {
            "description": "Collect reminders.",
            "type": "boolean"
          },
          "inclActivities": {
            "description": "Collect activities.",
            "type": "boolean"
          },
          "lowestPriority": {
            "format": "int32",
            "description": "Collect tasks of this or higher priority.",
            "type": "integer"
          },
          "sordZ": {
            "description": "Return the associated Sord objects to the selected Tasks.\nIf this member is not null, the Sord\n objects to the selected Tasks are read from the database. The Sord objects can be found in\n {@link FindResult#sords} and in each {@link UserTask#sord} of the array\n {@link FindResult#tasks}. The Sord objects contain the elements defined in this element\n selector as valid members.",
            "$ref": "#/components/schemas/SordZ"
          },
          "allUsers": {
            "description": "Collect tasks from all users.\nThis member is ignored, if the current user does not have\n administrator privileges {@link AccessC#FLAG_ADMIN}. If set to true, element {@link #userIds}\n is ignored and the tasks of all users are selected.",
            "type": "boolean"
          },
          "endDateIso": {
            "description": "Collect tasks up to this date.",
            "type": "string"
          },
          "overTimeLimit": {
            "description": "Collect nodes that exceeded the time limit.\nWorkflow only",
            "type": "boolean"
          },
          "updateInUseDate": {
            "description": "Update WFNode.inUseDateIso for selected tasks.",
            "type": "boolean"
          },
          "inclDeputy": {
            "description": "<p>\nCollect tasks received from users for which the current user is a substitute.\n <\/p>\n <p>\n ELO 12+: {@link #inclGroup} must be set to <code>true<\/code> to enable this option.\n <\/p>",
            "type": "boolean"
          },
          "highestPriority": {
            "format": "int32",
            "description": "Collect tasks of this or lower priority.",
            "type": "integer"
          },
          "inclGroup": {
            "description": "Collect tasks of the users groups.",
            "type": "boolean"
          },
          "inclActivityTypes": {
            "description": "Only select activities of the given types",
            "$ref": "#/components/schemas/ListOfString"
          },
          "inclWorkflows": {
            "description": "Collect workflows.",
            "type": "boolean"
          },
          "startDateIso": {
            "description": "Collect tasks beginning at this date.",
            "type": "string"
          },
          "sortOrder": {
            "description": "Controls the sort order or returned arrays. If null, PRIORITY_DATE_NAME is used.",
            "$ref": "#/components/schemas/UserTaskSortOrderZ"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "inclHidden": {
            "description": "Inlcude hidden tasks. Currently this only affects workflows.",
            "type": "boolean"
          },
          "objId": {
            "description": "Collect tasks for this Sord (ID or GUID).",
            "type": "string"
          },
          "findResultAccessMode": {
            "description": "Describes how the client application will access the results.",
            "$ref": "#/components/schemas/FindResultAccessMode"
          },
          "taskName": {
            "description": "Select tasks with this name. The task name of a Reminder is Reminder.name.\nThe task name of an\n Activity is Activity.name. The task name of a workflow node is WFNode.name and\n WFCollectNode.nodeName. This element can contain wildcard characters. The underlying database\n column is by default not indexed. Thus, selecting only by taskName will result in a full table\n scan.",
            "type": "string"
          },
          "inclOverTimeForSuperior": {
            "description": "Collect tasks for a superior as defined in the escalation options.\nWhen a workflow task exceeds\n its time limit, and the current user is assigned in the time limit options of this task, then\n the user receives this task from findFirstTasks/findNextTasks although she or he is not the\n owner of the task. If an entire workflow is over time, the user receives the start node of the\n workflow. This option applies to workflow tasks only.",
            "type": "boolean"
          },
          "inclDeleted": {
            "description": "Select tasks for deleted folders and documents too.",
            "type": "boolean"
          },
          "timeLimitBias": {
            "format": "int32",
            "description": "Time limit bias.\nThis value added to each {@link WFNode#timeLimit} before evaluating whether\n the node is over time. It is measured in minutes. Indexserver uses a timeLimitBias of 1min when\n looking for over-timed nodes to be forwarded automatically through a\n {@link WFNodeMatrixC#IF_OVERTIME} edge.",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_findNextTranslateTerms": {
        "type": "object",
        "properties": {
          "searchId": {
            "type": "string"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "idx": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_testAdapter": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "fn": {
            "type": "string"
          },
          "params": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OcrRect": {
        "description": "This class contains the coordinates of a rectangle and is used by the\n{@link OcrInfoRecognizeFile} class.",
        "type": "object",
        "properties": {
          "top": {
            "format": "int32",
            "type": "integer"
          },
          "left": {
            "format": "int32",
            "type": "integer"
          },
          "bottom": {
            "format": "int32",
            "type": "integer"
          },
          "right": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinKeywordList": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "kwList": {
            "$ref": "#/components/schemas/KeywordList"
          }
        }
      },
      "CompletionOptions": {
        "description": "Use this class if a completion should be retrieved by\n{@link de.elo.ix.client.IXServicePortIF#findCompletion(de.elo.ix.client.ClientInfo, de.elo.ix.client.FindInfo, int)}.<br>\n Deliver text to complete in {@link de.elo.ix.client.esearch.ESearchParams#query}.",
        "type": "object",
        "properties": {
          "completionField": {
            "description": "<p>\nDefines field to retrieve completion.\n <\/p>\n <p>\n Submit text to get completion for by <code>completionField.value<\/code>\n <\/p>\n <p>\n Additionally, a query and queryOperator can be added via ESearchParams.\n <\/p>\n <p>\n <i>Note: Currently, it's only possible to return completion suggestions for title and\n indexfields<\/i>\n <\/p>",
            "$ref": "#/components/schemas/QueryFilter"
          },
          "returnType": {
            "description": "<p>\nDefines type (tokenized/ not tokenized) of returned values.\n <\/p>\n <note>If null, <code>FieldTypeC.tokenized<\/code> is used as default value.",
            "$ref": "#/components/schemas/FieldTypeE"
          }
        }
      },
      "ObjHistKeyC": {
        "description": "<p>Bit constants for members of SordHistKey<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnKeyData": {
            "format": "int32",
            "description": "DB column: okeydata",
            "type": "integer"
          },
          "lnKeyName": {
            "format": "int32",
            "description": "DB column: okeyname",
            "type": "integer"
          },
          "mbKeyName": {
            "description": "DB column: okeyname",
            "type": "string"
          },
          "lnHistGuid": {
            "format": "int32",
            "description": "Column length: Serialisation version ID\nDB column: objhistguid",
            "type": "integer"
          },
          "mbKeyDataDesc": {
            "description": "Member bit: Internal helper column for memo text.\nDB column: objdesc",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbKeyData": {
            "description": "DB column: okeydata",
            "type": "string"
          },
          "mbKeyNo": {
            "description": "DB column: okeyno",
            "type": "string"
          },
          "mbHistGuid": {
            "description": "Member bit: Serialisation version ID\nDB column: objhistguid",
            "type": "string"
          },
          "lnKeyDataDesc": {
            "format": "int32",
            "description": "Column length: Internal helper column for memo text.\nDB column: objdesc",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutSordTypes": {
        "type": "object",
        "properties": {
          "sordTypeZ": {
            "$ref": "#/components/schemas/SordTypeZ"
          },
          "sordTypeIds": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_executeRegisteredFunction": {
        "type": "object",
        "properties": {
          "functionName": {
            "type": "string"
          },
          "param": {
            "$ref": "#/components/schemas/Any"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BResult_1585309177": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/MyELOContent"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "Event": {
        "description": "This class represents an event used by the event bus API functions.",
        "type": "object",
        "properties": {
          "busId": {
            "description": "Bus-ID",
            "type": "string"
          },
          "senderId": {
            "description": "User ID of event sender. Might be used for other IDs in future too. Read-only.",
            "type": "string"
          },
          "data": {
            "format": "byte",
            "description": "Event payload data as byte array.",
            "type": "string"
          },
          "id": {
            "description": "Event ID.\nIf the sender awaits a response to this event, it should set a random number in\n <code>id<\/code>. The receiver should use the same number in the response.",
            "type": "string"
          },
          "acl": {
            "description": "Access control list. An empty ACL means here, that the event is dispatched to everyone.",
            "type": "string"
          },
          "type": {
            "description": "Event type. Event filters check this value.\nThis must be one of the predefined event types or\n an application defined type with a larger value than EventBusC.EVENT_TYPE_MAX_SYSTEM.",
            "type": "string"
          },
          "any": {
            "description": "Event payload data as Any object.",
            "$ref": "#/components/schemas/Any"
          },
          "param1": {
            "description": "Value depends on event type. Event filters check this value.",
            "type": "string"
          },
          "param2": {
            "description": "Value depends on event type. Event filters check this value.",
            "type": "string"
          }
        }
      },
      "SubscriptionDataC": {
        "description": "<p>Bit constants for members of Subscription<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbUserGuid": {
            "description": "Member bit: GUID of user who registered the subscription.\nDB column: userguid",
            "type": "string"
          },
          "lnUserGuid": {
            "format": "int32",
            "description": "Column length: GUID of user who registered the subscription.\nDB column: userguid",
            "type": "integer"
          },
          "lnCreateDateIso": {
            "format": "int32",
            "description": "Column length: Create date of the subscription.\nDB column: createdateiso",
            "type": "integer"
          },
          "mbCreateDateIso": {
            "description": "Member bit: Create date of the subscription.\nDB column: createdateiso",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbWatchGuid": {
            "description": "Member bit: GUID of Object to be watched.\nDB column: watchguid",
            "type": "string"
          },
          "lnWatchGuid": {
            "format": "int32",
            "description": "Column length: GUID of Object to be watched.\nDB column: watchguid",
            "type": "integer"
          }
        }
      },
      "BRequest_PluginService_stop": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "PluginHistory": {
        "description": "OSGi plugin history.",
        "type": "object",
        "properties": {
          "plainText": {
            "description": "The raw text contained in the version file (e.g. version.txt).",
            "type": "string"
          },
          "jsonText": {
            "description": "The text in form of a json object.",
            "type": "string"
          }
        }
      },
      "BResult_1159353819": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/PluginHistory"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_FeedService_unregisterNotify": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "feedGuid": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinConfigFilesBegin": {
        "type": "object",
        "properties": {
          "names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BResult_19": {
        "type": "object",
        "properties": {
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "OrgUnitInfoC": {
        "description": "<p>\nConstants related to organizational unit information.\n <\/p>\n <p>\n Copyright: Copyright (c) 2013\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "MAX_ORG_UNITS": {
            "format": "int32",
            "description": "Maximum number of OUs.",
            "type": "integer"
          },
          "lnName": {
            "format": "int32",
            "description": "Maximum OU name length",
            "type": "integer"
          },
          "mbId": {
            "description": "Member bit {@link OrgUnitInfo#id}",
            "type": "string"
          },
          "mbDesc": {
            "description": "Member bit {@link OrgUnitInfo#desc}",
            "type": "string"
          },
          "mbOuProps": {
            "description": "Member bit {@link OrgUnitInfo#ouProps}",
            "type": "string"
          },
          "mbTStamp": {
            "description": "Member bit {@link OrgUnitInfo#tStamp}",
            "type": "string"
          },
          "lnOuProp": {
            "format": "int32",
            "description": "Maximum OU property length",
            "type": "integer"
          },
          "mbGuid": {
            "description": "Member bit {@link OrgUnitInfo#guid}",
            "type": "string"
          },
          "lnDesc": {
            "format": "int32",
            "description": "Maximum OU desc length",
            "type": "integer"
          },
          "mbName": {
            "description": "Member bit {@link OrgUnitInfo#name}",
            "type": "string"
          },
          "MAX_OU_PROP": {
            "format": "int32",
            "description": "Maximum number of OU properties.",
            "type": "integer"
          }
        }
      },
      "ProcessScript": {
        "description": "NOT CURRENTLY SUPPORTED\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "name": {
            "description": "Script name.",
            "type": "string"
          },
          "processPostfix": {
            "description": "execution position in tree walks.",
            "type": "boolean"
          },
          "tag": {
            "description": "user defined tag.",
            "type": "string"
          }
        }
      },
      "QueryJobProtocolEvent": {
        "description": "<p>\nA {@link QueryJobProtocolEvent} represents a event\n <\/p>",
        "type": "object",
        "properties": {
          "date": {
            "description": "The time of generating this event.",
            "type": "string"
          },
          "eventId": {
            "format": "int32",
            "description": "The id of this QueryJobProtocolEvent. The eventId's value is unique for one background thread.\nThe value of a background thread's first eventId is 0. The second one is 1 and so on.",
            "type": "integer"
          },
          "level": {
            "format": "int32",
            "description": "The level of log messages to query. Use the | operator to select multiple levels.",
            "type": "integer"
          },
          "objId": {
            "format": "int32",
            "description": "The id of the object currently being processed at the time of this events creation.\nIf the\n objId is not known/available, its value is set to {@link QueryJobProtocolC#OBJID_NOT_SET}.",
            "type": "integer"
          },
          "message": {
            "description": "Message of this LogRow.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_internalReceiveEvents": {
        "type": "object",
        "properties": {
          "subsId": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "timeoutMillis": {
            "type": "string"
          }
        }
      },
      "BResult_15": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/BStreamReference"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_findFirstWorkflows": {
        "type": "object",
        "properties": {
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindWorkflowInfo"
          },
          "wfDiagramZ": {
            "$ref": "#/components/schemas/WFDiagramZ"
          }
        }
      },
      "MyELOContent": {
        "type": "object",
        "properties": {
          "subscriptions": {
            "description": "Subscriptions. Subscription objects mapped to their Subscription.watchGuid.",
            "$ref": "#/components/schemas/MapToSubscription"
          },
          "hashTags": {
            "description": "HashTags.\nHashTag Objects mapped to their HashTagGuid",
            "$ref": "#/components/schemas/MapToHashTag"
          },
          "hashTagRelations": {
            "description": "HashTag Relations.",
            "$ref": "#/components/schemas/ListOfHashTagRelation"
          },
          "feeds": {
            "description": "Document feeds. Feed objects mapped to their GUID.",
            "$ref": "#/components/schemas/MapToFeed"
          },
          "workflows": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFDiagram"
            }
          },
          "sords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Sord"
            }
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Action"
            }
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserTask"
            }
          },
          "notifications": {
            "description": "Notifications. Notification objects mapped to their Notification.\nwatchGuid",
            "$ref": "#/components/schemas/MapToNotification"
          }
        }
      },
      "FindUserInfo": {
        "description": "This class describes the search criteria for {@link IXServicePortIF#findFirstUsers}.\nThe wildcards defined by {@link SessionOptionsC#DB_WILDCARDS} can be used for {@link #name},\n {@link #desc}, {@link #property}, and {@link #ldapProperty}.\n \n Members {@link #name}, {@link #desc}, {@link #property}, and {@link #ldapProperty} are combined\n by OR. Other members are combinded by AND.",
        "type": "object",
        "properties": {
          "hasNotFlags": {
            "format": "int32",
            "description": "Select only users that have non this {@link UserInfo#flags} set.\nThe selected users are found\n by testing (UserInfo#flags &amp; hasNotFlags) == 0.",
            "type": "integer"
          },
          "ldapProperty": {
            "description": "Find by a LDAP property. Search over all {@link UserInfo#ldapProperties}.\nThe key element in\n property is the key in the map {@link UserInfo#ldapProperties}.",
            "$ref": "#/components/schemas/KeyValue"
          },
          "checkoutUsersZ": {
            "description": "Filter users as in\n{@link IXServicePortIF#checkoutUsers(ClientInfo, String[], CheckoutUsersZ, LockZ)}.",
            "$ref": "#/components/schemas/CheckoutUsersZ"
          },
          "hasFlags": {
            "format": "int32",
            "description": "Select only users that have all of this {@link UserInfo#flags} set. A value of 0 is ignored.\nThe selected users are found by testing (UserInfo#flags &amp; hasFlags) == hasFlags.",
            "type": "integer"
          },
          "onlyUsers": {
            "description": "<p>\nSearch for users only.\n <\/p>\n \n <p>\n If this member is set to <code>true<\/code>, flags provided by {@link #checkoutUsersZ} are\n ignored.\n <\/p>",
            "type": "boolean"
          },
          "onlyGroups": {
            "description": "<p>\nSearch for groups only.\n <\/p>\n \n <p>\n If this member is set to <code>true<\/code>, flags provided by {@link #checkoutUsersZ} are\n ignored.\n <\/p>",
            "type": "boolean"
          },
          "hasNotFlags2": {
            "format": "int32",
            "description": "Select only users that have none this {@link UserInfo#flags2} set.\nThe selected users are found\n by testing (UserInfo#flags2 &amp; hasNotFlags2) == 0.",
            "type": "integer"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sortOrder": {
            "format": "int32",
            "description": "Specify how the results should be ordered.\nValid values are {@link SortOrderC#USERNAME} and\n {@link SortOrderC#IUSERNAME}. Sorted results are returned in FindResult#sortedResult.",
            "type": "integer"
          },
          "name": {
            "description": "Find by user name. Search over {@link UserInfo#name}.",
            "type": "string"
          },
          "property": {
            "description": "Find by an user property. Search over all {@link UserInfo#userProps}.\nThe key element in\n property is the index in the array {@link UserInfo#userProps}.\n <p>\n Example:\n \n <pre>\n <code class=\"example\"> \n FindUserInfo findInfo = new FindUserInfo();\n KeyValue property = new KeyValue();\n property.setKey(Integer.toString(UserInfoC.PROP_NAME_EMAIL));\n property.setValue(\"maria.fritz@alpha.com\");\n <\/code>\n <\/pre>\n <\/p>",
            "$ref": "#/components/schemas/KeyValue"
          },
          "findResultAccessMode": {
            "description": "Describes how the client application will access the results.",
            "$ref": "#/components/schemas/FindResultAccessMode"
          },
          "returnUserInfoMap": {
            "description": "Return entire information about each user.\nIf true, {@link UserInfo} objects are returned in\n {@link FindResult#userInfos}. If false, {@link UserName} objects are returned in\n {@link FindResult#userNames}. Additionally, FindResult#sortedResult returns a sorted list of\n either UserInfo or UserName objects.",
            "type": "boolean"
          },
          "hasFlags2": {
            "format": "int32",
            "description": "Select only users that have all of this {@link UserInfo#flags2} set. A value of 0 is ignored.\nThe selected users are found by testing (UserInfo#flags2 &amp; hasFlags2) == hasFlags2.",
            "type": "integer"
          },
          "workspaceInfo": {
            "description": "Workspace related data.",
            "type": "string"
          },
          "desc": {
            "description": "Find by user description. Search over {@link UserInfo#desc}.",
            "type": "string"
          }
        }
      },
      "BResult_21": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "InvalidateCacheInfoParam": {
        "description": "ParamObject for InvalidateCacheInfo.",
        "type": "object",
        "properties": {
          "flag": {
            "format": "int32",
            "description": "Parameter, depends on the purpose of this object. Set flag to InvalidateCacheC.\nHASHTAGCOUNT to\n use for HashtagCountCache. In case of InvalidateCacheC.WORKFLOW: WFDiagram.id",
            "type": "integer"
          },
          "count": {
            "format": "int32",
            "description": "Parameter, depends on the purpose of this object.\n<p>\n In case of InvalidateCacheC.HASHTAGCOUNT:\n <ul>\n <li>Case 1: Increases count of corresponding Hashtag\n <li>Case -1: Decreases count of corresponding Hashtag\n <li>Any other number: Sets count of corresponding Hashtag this number\n <\/ul>\n <\/p>\n <p>\n In case of InvalidateCacheC.WORKFLOW: Hash code computed over WFDiagram members.\n <\/p>",
            "type": "integer"
          },
          "guid": {
            "description": "Parameter, depends on the purpose of this object.\n<p>\n In case of InvalidateCacheC.HASHTAGCOUNT:\n <ul>\n <li>Related to HashtagGuid which is set according to count.\n <li>If guid is null or empty, the complete HashtagCountCache is rebuild from DB.\n <\/ul>\n <\/p>\n <p>\n In case of InvalidateCacheC.WORKFLOW: WFDiagram.tstamp\n <\/p>\n <p>\n In case of InvalidateCacheC.TRANSLATE_TERM: TranslateTerm.guid\n <\/p>",
            "type": "string"
          },
          "objectValue": {
            "description": "Modified object.",
            "$ref": "#/components/schemas/ValueClass"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutOrgUnits": {
        "type": "object",
        "properties": {
          "reserved": {
            "$ref": "#/components/schemas/CheckoutOrgUnitInfo"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinDocBegin2": {
        "type": "object",
        "properties": {
          "opts": {
            "$ref": "#/components/schemas/CheckinDocOptions"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "sord": {
            "$ref": "#/components/schemas/Sord"
          }
        }
      },
      "ReportOptions": {
        "description": "This class contains the codes for the activities/processes that are to be protocolled in a\nreport.\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "mode": {
            "description": "A ReportOptionsZ constant",
            "$ref": "#/components/schemas/ReportModeZ"
          },
          "erpCodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReportErpCode"
            }
          }
        }
      },
      "OptimizerConfig": {
        "description": "Configuration and status of optimizer process.",
        "type": "object",
        "properties": {
          "lastException": {
            "description": "Last exception occured during processing.",
            "type": "string"
          },
          "ixid": {
            "description": "This Indexserver instance is processing the optimization.",
            "type": "string"
          },
          "nextRunAt": {
            "format": "date-time",
            "type": "string"
          },
          "lockName": {
            "description": "Process runs under this user account.",
            "type": "string"
          },
          "intervalHours": {
            "format": "int32",
            "type": "integer"
          },
          "status": {
            "$ref": "#/components/schemas/SearchIndexerStatus"
          }
        }
      },
      "BRequest_HealthCheckService_updateDoubleValue": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "name": {
            "type": "string"
          },
          "doubleValue": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "ListOfDocMaskInherit": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DocMaskInherit"
        }
      },
      "BRequest_IXServicePortIF_checkinColors": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "colors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ColorData"
            }
          }
        }
      },
      "EditInfo": {
        "description": "Contains data to edit the indexing information.\nTherfore it provides storage mask names, storage\n path names, marker names, document template names, replication set names, document version\n information, etc.\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Note"
            }
          },
          "docTemplates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          },
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Keyword"
            }
          },
          "pathNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          },
          "document": {
            "description": "Document or attachment information.",
            "$ref": "#/components/schemas/Document"
          },
          "replNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          },
          "sordTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SordType"
            }
          },
          "sord": {
            "description": "Indexing information.",
            "$ref": "#/components/schemas/Sord"
          },
          "maskNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MaskName"
            }
          },
          "aspectInfos": {
            "description": "Aspect infos containing id, name, guid, translationKey of aspects.",
            "$ref": "#/components/schemas/ListOfAspectInfo"
          },
          "markerNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          },
          "mask": {
            "description": "Document mask data of the mask selected in <code>sord<\/code>.",
            "$ref": "#/components/schemas/DocMask"
          }
        }
      },
      "ArrayOfReportErpCode": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ReportErpCode"
        }
      },
      "BResult_1699606509": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ForwardWorkflowNodeResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BResult_2054753789": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/DocMask"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "ListOfPublicDownload": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PublicDownload"
        }
      },
      "BResult_10": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "AspectAssocC": {
        "description": "<p>Bit constants for members of AspectAssoc<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnTranslationKey": {
            "format": "int32",
            "description": "Column length: Translation-keyword for {@link AspectAssoc#displayName}.\nDefines the {@link #displayName} as\n DB column: translationkey",
            "type": "integer"
          },
          "lnName": {
            "format": "int32",
            "description": "Column length: Technical aspect association name. This member must start with a character between 'A' and 'Z'.\nDB column: name",
            "type": "integer"
          },
          "mbRawCardinality": {
            "description": "Member bit: Cardinality.\nDB column: cardinality",
            "type": "string"
          },
          "mbAspectId": {
            "description": "Member bit: ID of the referenced aspect.\nDB column: aspectid",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbMaskId": {
            "description": "DB column: maskid",
            "type": "string"
          },
          "mbTranslationKey": {
            "description": "Member bit: Translation-keyword for {@link AspectAssoc#displayName}.\nDefines the {@link #displayName} as\n DB column: translationkey",
            "type": "string"
          },
          "mbAcl": {
            "description": "Member bit: Access control list.\nDB column: acl",
            "type": "string"
          },
          "mbName": {
            "description": "Member bit: Technical aspect association name. This member must start with a character between 'A' and 'Z'.\nDB column: name",
            "type": "string"
          },
          "lnAcl": {
            "format": "int32",
            "description": "Column length: Access control list.\nDB column: acl",
            "type": "integer"
          }
        }
      },
      "BRequest_PackageService_exportPackageContent": {
        "type": "object",
        "properties": {
          "exportInfo": {
            "$ref": "#/components/schemas/PackageExportInfo"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ListOfMapToIndexValue": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/MapToIndexValue"
        }
      },
      "LanguageConfig": {
        "type": "object",
        "properties": {
          "languages": {
            "type": "string"
          },
          "allowedLangs": {
            "type": "string"
          },
          "nbOfLangs": {
            "format": "int32",
            "type": "integer"
          },
          "archiveLang": {
            "type": "string"
          },
          "mapLanguageNames": {
            "$ref": "#/components/schemas/MapToString"
          }
        }
      },
      "ActivityProjectDataC": {
        "description": "<p>Bit constants for members of ActivityProject<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbMinor": {
            "description": "DB column: minor",
            "type": "string"
          },
          "lnOptValue": {
            "format": "int32",
            "description": "DB column: optvalue",
            "type": "integer"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbMajor": {
            "description": "DB column: major",
            "type": "string"
          },
          "mbOptValue": {
            "description": "DB column: optvalue",
            "type": "string"
          },
          "mbProject": {
            "description": "DB column: project",
            "type": "string"
          },
          "lnProject": {
            "format": "int32",
            "description": "DB column: project",
            "type": "integer"
          }
        }
      },
      "DocMaskInheritC": {
        "description": "<p>Bit constants for members of DocMaskInherit<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbChildMaskId": {
            "description": "DB column: childmaskid",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbParentMaskId": {
            "description": "DB column: parentmaskid",
            "type": "string"
          }
        }
      },
      "Action": {
        "description": "This class describes an entry in a document feed.\nThere are three kinds of entries/actions in\n general. First, an action can be a comment added manually by a user. Second, scripts or programs\n can insert actions e.g. to notify about a particular state. Third, actions are generated by the\n system e.g. when a new document version is created. In order to add an action to a feed, call\n {@link FeedService#checkinAction(de.elo.ix.client.ClientInfo, Action, ActionZ)}. User comments\n can have a parent action to support a two level hierarchy of entries.",
        "type": "object",
        "properties": {
          "workflow": {
            "description": "Workflow object. This element is only valid for generated actions that belong to a workflow.\nRead-only.",
            "$ref": "#/components/schemas/WFDiagram"
          },
          "history": {
            "description": "Change history of text member. This list does not contain the current text.\nThis member is\n null, if the text has not been changed.",
            "$ref": "#/components/schemas/ListOfActionHistory"
          },
          "acl": {
            "description": "Raw ACL representation.\nOnly valid for Actions of type {@link EActionType#UserComment} or\n {@link EActionType#AutoComment}. This member is ignored if {@link Action#aclItems} is not null.",
            "type": "string"
          },
          "type": {
            "description": "Action type.",
            "$ref": "#/components/schemas/EActionType"
          },
          "userGuid": {
            "description": "User GUID. The GUID of the user who has created this action.\nFor actions of type\n {@link EActionType#SordCreated}, this member holds the GUID of Sord.ownerId. For actions of\n type {@link EActionType#VersionCreated}, this member holds the GUID of DocVersion.ownerId.",
            "type": "string"
          },
          "userName": {
            "description": "User name. It is set to the name of the user given by {@link #userGuid}.\nThis element is\n read-only.",
            "type": "string"
          },
          "userId": {
            "format": "int32",
            "description": "User ID. It is set to the numerical ID of the user given by {@link #userGuid}.\nThis element is\n read-only.",
            "type": "integer"
          },
          "feedGuid": {
            "description": "Feed GUID. This action belongs to the feed identified by this GUID.",
            "type": "string"
          },
          "changeCounter": {
            "format": "int32",
            "description": "Counts the number of updates. This element is only valid for {@link EActionType#UserComment}.\nIt counts the number of updates made to the comment.",
            "type": "integer"
          },
          "TStamp": {
            "description": "Time stamp. Time stamp of creation or modification.",
            "type": "string"
          },
          "updateDateIso": {
            "description": "Update date. This element is only valid for {@link EActionType#UserComment}.\nIt holds the ISO\n formatted update date. When this object is received from\n {@link FeedService#checkoutAction(de.elo.ix.client.ClientInfo, String, ActionZ)} or\n {@link FeedService#findFirstActions(de.elo.ix.client.ClientInfo, FindActionsInfo, int, ActionZ)}\n the value is supplied in the time zone of the client application - which is UTC by default. In\n case of the object is received by a notify message in\n {@link FeedNotification#updateAction(Action)} the value is relative to the UTC timezone. In\n order to convert this value into a date object, invoke function\n {@link de.elo.ix.client.IXConnection#isoToDate}.",
            "type": "string"
          },
          "createDateIso": {
            "description": "Create date. This element is the ISO formatted create date of the action.\nWhen this object is\n received from {@link FeedService#checkoutAction(de.elo.ix.client.ClientInfo, String, ActionZ)}\n or\n {@link FeedService#findFirstActions(de.elo.ix.client.ClientInfo, FindActionsInfo, int, ActionZ)}\n the value is supplied in the time zone of the client application - which is UTC by default. In\n case of the object is received by a notify message in\n {@link FeedNotification#updateAction(Action)} the value is relative to the UTC timezone. In\n order to convert this value into a date object, invoke function\n {@link de.elo.ix.client.IXConnection#isoToDate}.",
            "type": "string"
          },
          "docVersionGuid": {
            "description": "GUID of the associated document version.\nThis element is only valid for generated actions that\n belong to a document version, e.g. {@link EActionType#VersionCreated}. Read-only.",
            "type": "string"
          },
          "workflowGuid": {
            "description": "GUID of the associated workflow.\nThis element is valid for action types that belong to a\n workflow.",
            "type": "string"
          },
          "TStampSync": {
            "description": "Timestamp of this object's last export by the replication.",
            "type": "string"
          },
          "parentGuid": {
            "description": "Parent action GUID.\nThis element is only valid for user comments,\n {@link EActionType#UserComment}. If not empty, this action is subordinated under the action\n given by this GUID.",
            "type": "string"
          },
          "aclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "guid": {
            "description": "Action GUID. Unique identifier.",
            "type": "string"
          },
          "text": {
            "description": "Comment text.\nThis element is only valid for {@link EActionType#UserComment}, and\n {@link EActionType#AutoComment}.",
            "type": "string"
          },
          "docVersion": {
            "description": "Document version object.\nThis element is only valid for generated actions that belong to a\n document version, e.g. {@link EActionType#VersionCreated}. Read-only.",
            "$ref": "#/components/schemas/DocVersion"
          }
        }
      },
      "WFNodeC": {
        "description": "<p>\nConstants for <code>WorkFlowNode<\/code>.\n <\/p>",
        "type": "object",
        "properties": {
          "mbRetVal": {
            "description": "Member bit: retVal",
            "type": "string"
          },
          "DEACTIVATE_ALL_PREDS": {
            "description": "Indicates that all predecessor of the collect node should be terminated.",
            "type": "string"
          },
          "TYPE_COLLECTNODE": {
            "format": "int32",
            "description": "Node type: Collects many workflow paths.",
            "type": "integer"
          },
          "lnComment": {
            "format": "int32",
            "description": "Maximum length of comment.",
            "type": "integer"
          },
          "mbInUseDateIso": {
            "type": "string"
          },
          "FLAG_NOT_VALID": {
            "format": "int32",
            "description": "Node flag: Not released.\nA personal node of an Adhoc workflow has this flag set, if the user\n has not released the node. The Indexserver does not use this flag anywhere.",
            "type": "integer"
          },
          "mbExitDateIso": {
            "type": "string"
          },
          "TYPE_CALL_SUB_WORKFLOW": {
            "format": "int32",
            "description": "Note type: Call sub workflow.",
            "type": "integer"
          },
          "mbSubTemplateId": {
            "description": "Member bit: subTemplateId",
            "type": "string"
          },
          "lnYesNoCondition": {
            "format": "int32",
            "type": "integer"
          },
          "mbUserTerminate": {
            "description": "Member bit: The ID of the user who has forwarded the node. Not valid for template workflows.\nOnly valid for person nodes. DB column: wf_userterminate",
            "type": "string"
          },
          "FLAG_DELEGATED": {
            "format": "int32",
            "description": "Node flag: This flag indicates whether the person node was delegated.\nThis flag is only used\n for the person node.",
            "type": "integer"
          },
          "mbDepartment2": {
            "description": "Member bit: A group ID to constrain access to the node.\nOnly members of this group are allowed\n to see and process the node. Only valid for person nodes. DB column: wf_department2",
            "type": "string"
          },
          "FLAG_ERROR": {
            "format": "int32",
            "description": "Node flag: This flag indicates that this node is an error node, which is generated after an\nerror occurred while executing the plugin node.",
            "type": "integer"
          },
          "mbPosY": {
            "description": "Member bit: y position in designer view.",
            "type": "string"
          },
          "mbPosX": {
            "description": "Member bit: x position in designer view.",
            "type": "string"
          },
          "mbNbOfDonesToExit": {
            "description": "Member bit: number of predecessor nodes that must be processed to forward this node.",
            "type": "string"
          },
          "lnOnEnter": {
            "format": "int32",
            "type": "integer"
          },
          "lnFormSpec": {
            "format": "int32",
            "description": "Maximum length of form spec.",
            "type": "integer"
          },
          "mbScriptNames": {
            "description": "Member bit: scriptNames",
            "type": "string"
          },
          "mbIsNext": {
            "description": "Member bit: (to be defined)",
            "type": "string"
          },
          "FLAG_WORKINGDAYS": {
            "format": "int32",
            "description": "Node flag: This flag indicates that weekend days should be skipped when evaluating time limits.",
            "type": "integer"
          },
          "mbComment": {
            "description": "Member bit: Node comment.",
            "type": "string"
          },
          "lnOnExitHandleRollback": {
            "format": "int32",
            "type": "integer"
          },
          "FLAG_HIDDEN": {
            "format": "int32",
            "description": "Node flag: Hide this workflow from default searches and listings.",
            "type": "integer"
          },
          "mbName": {
            "description": "Member bit: Name",
            "type": "string"
          },
          "mbDelayDate": {
            "description": "Member bit: DelayDaye. Not valid for template workflows. Only valid for person nodes.\nDB\n column: wf_duedate",
            "type": "string"
          },
          "mbEnterDate": {
            "description": "Member bit: Activated at this date.",
            "type": "string"
          },
          "mbIconId": {
            "description": "Member bit: Icon GUID.",
            "type": "string"
          },
          "FLAG_RESETADHOCNODE": {
            "format": "int32",
            "description": "Node flag: Reset all person nodes. This flag is only used for parallel for validation workflow.",
            "type": "integer"
          },
          "lnName": {
            "format": "int32",
            "description": "Maximum length of node name.",
            "type": "integer"
          },
          "mbDepartmentGroup": {
            "description": "Member bit: departmentGroup",
            "type": "string"
          },
          "lnOnExit": {
            "format": "int32",
            "type": "integer"
          },
          "mbPrio": {
            "description": "Member bit: returnValue",
            "type": "string"
          },
          "mbReturnValue": {
            "description": "Member bit: returnValue",
            "type": "string"
          },
          "mbSubTemplateName": {
            "description": "reserved.",
            "type": "string"
          },
          "lnOnEnterHandleRollback": {
            "format": "int32",
            "type": "integer"
          },
          "FLAG_COPY_CHILDREN": {
            "format": "int32",
            "description": "Node flag: This flag indicates that all nodes in the cycle should be copied when entering the\nbegin cycle node. This flag is only used for the begin cycle node.",
            "type": "integer"
          },
          "mbCommentTranslationKey": {
            "description": "Member bit: CommentTranslationKey",
            "type": "string"
          },
          "mbExitDate": {
            "description": "Member bit: Leaved at this date.",
            "type": "string"
          },
          "mbLockId": {
            "description": "Member bit: locked from user.",
            "type": "string"
          },
          "mbSubFlowId": {
            "description": "Member bit: subFlowId",
            "type": "string"
          },
          "mbProperties": {
            "description": "Member bit: properties",
            "type": "string"
          },
          "TYPE_PLUGINNODE": {
            "format": "int32",
            "description": "Note type: Plugin node.\nThis node is intended to trigger external events or to address external\n systems. OnEnter is handled synchronously. It waits for a result of the event. OnExit is\n handled asynchronously. The WF continues without waiting for the event. DB transaction is\n terminated before OnEnter is executed.",
            "type": "integer"
          },
          "FLAG_TERMINATE_USER": {
            "format": "int32",
            "description": "Node flag: End of workflow. This flag is set to the end node of an Adhoc workflow.\nThe\n Indexserver does not need this flag but maybe the ELO Windows Client.",
            "type": "integer"
          },
          "TYPE_SET_SERVER_ID": {
            "format": "int32",
            "description": "Note type: Set the server ID where the WF can be continued.\nThis node is used in replicated\n workflows.",
            "type": "integer"
          },
          "lnProperties": {
            "format": "int32",
            "description": "Maximum length of the properties.",
            "type": "integer"
          },
          "mbNameTranslationKey": {
            "description": "Member bit: NameTranslationKey",
            "type": "string"
          },
          "FLAG_DO_NOT_START_MANUALLY": {
            "format": "int32",
            "description": "Node flag: This flag indicates whether the sub workflow can be started manually.\nThe sub\n workflow of. This flag is used for sub workflows.",
            "type": "integer"
          },
          "mbOnExit": {
            "description": "Member bit: script to execute when node is leaved.",
            "type": "string"
          },
          "mbDesignDepartment": {
            "description": "Member bit: A group ID or user ID that was originally assigned in the designer.\nDB column:\n wf_designdepartment",
            "type": "string"
          },
          "FLAG_ROOT_ADHOC": {
            "format": "int32",
            "description": "Node flag: The start node of an Adhoc workflow has this flag.",
            "type": "integer"
          },
          "mbDelayDays": {
            "description": "Member bit: An active person node (Activate is set) might be displayed to the user delayed by\nthis number of days. Only valid for person nodes. DB column: wf_deldays",
            "type": "string"
          },
          "lnCondition": {
            "format": "int32",
            "type": "integer"
          },
          "mbCondition": {
            "description": "Member bit: condition, is only internally used",
            "type": "string"
          },
          "lnLabel": {
            "format": "int32",
            "description": "Maximum length of the label.",
            "type": "integer"
          },
          "mbId": {
            "description": "Member bit: Node ID",
            "type": "string"
          },
          "mbMoveCyclePosX": {
            "description": "Member bit: If a cycle is re-entered, the nodes in the cycle are duplicated.\nThe copied nodes\n will be placed in the designer moved by this value to the right. If this value is 0, the nodes\n are moved 60 points right and 20 points up. DB column: wf_dx",
            "type": "string"
          },
          "mbResult": {
            "description": "Member bit: Condition result.",
            "type": "string"
          },
          "USERID_SUPERIOR": {
            "format": "int32",
            "description": "This ID is a placeholder for the superior of the workflow owner.",
            "type": "integer"
          },
          "mbUserId": {
            "description": "Member bit: User ID",
            "type": "string"
          },
          "TYPE_BEGINNODE": {
            "format": "int32",
            "description": "Node type: Start of workflow.",
            "type": "integer"
          },
          "USERID_IGNORE": {
            "format": "int32",
            "description": "This value can be used in Node.department2 to make clear, that Node.\ndepartment2 has to be\n ignored.",
            "type": "integer"
          },
          "mbDelayDateIso": {
            "type": "string"
          },
          "mbUserDelayDate": {
            "description": "Member bit: UserDelayDate. Not valid for template workflows. Only valid for person nodes.\nDB\n column: wf_duedate",
            "type": "string"
          },
          "mbFlags": {
            "description": "Member bit: control flags.",
            "type": "string"
          },
          "mbOnExitHandleRollback": {
            "description": "Member bit: script to execute when node encounters an error.",
            "type": "string"
          },
          "mbYesNoCondition": {
            "description": "Member bit: yes/no condition",
            "type": "string"
          },
          "mbEnterDateIso": {
            "type": "string"
          },
          "mbLabel": {
            "description": "Member bit: label",
            "type": "string"
          },
          "lnCommentTranslationKey": {
            "format": "int32",
            "description": "Maximum length of the comment's translation key.",
            "type": "integer"
          },
          "TYPE_CYCLE": {
            "format": "int32",
            "description": "Node type: Cycle Cycle nodes are contained in pairs in a workflow.\nOne cycle node denotes the\n beginning of a cycle and an associated cycle node marks the end. Both cycle nodes must have the\n same name (WFNode.name). The begin node must be flagged with FLAG_CYCLE_END.",
            "type": "integer"
          },
          "mbProcessOnServerId": {
            "description": "Member bit: processOnServerId;",
            "type": "string"
          },
          "mbUserName": {
            "type": "string"
          },
          "TYPE_PERSONNODE": {
            "format": "int32",
            "description": "Node type: Personal node. A user must edit the node to continue the workflow.",
            "type": "integer"
          },
          "FLAG_RESET_CHILDREN": {
            "format": "int32",
            "description": "Node flag: Reset the ExitDate of the following nodes, if this node is activated.",
            "type": "integer"
          },
          "TYPE_SPLITNODE": {
            "format": "int32",
            "description": "Node type: Distribute to many following nodes.",
            "type": "integer"
          },
          "FLAG_ONE_SUCCESSOR": {
            "format": "int32",
            "description": "Node flag: Only one user can receive this node.",
            "type": "integer"
          },
          "lnNameTranslationKey": {
            "format": "int32",
            "description": "Maximum length of the name's translation key.",
            "type": "integer"
          },
          "FLAG_CYCLE_X": {
            "format": "int32",
            "description": "Node flag: This is a copied start node of a cylce. Do not use this flag in workflow templates.\nThe workflow engine will mark copied cycle. nodes with this flag.",
            "type": "integer"
          },
          "mbTimeLimitIso": {
            "type": "string"
          },
          "mbTimeLimit": {
            "description": "Member bit: (to be defined)",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All members.",
            "type": "string"
          },
          "mbFormSpec": {
            "description": "Member bit: FormSpec.",
            "type": "string"
          },
          "mbTimeLimitEscalations": {
            "description": "Member bit: timeLimitEscalation",
            "type": "string"
          },
          "mbOnEnterHandleRollback": {
            "description": "Member bit: script to execute when node encounters an error.",
            "type": "string"
          },
          "FLAG_CYCLE_END": {
            "format": "int32",
            "description": "Node flag: This flag denotes, whether a cycle node (TYPE_CYCLE) is the end of a cycle.",
            "type": "integer"
          },
          "TYPE_NOTHING": {
            "format": "int32",
            "description": "Node type: undefined or deleted",
            "type": "integer"
          },
          "mbAll": {
            "description": "All members.",
            "$ref": "#/components/schemas/WFNodeZ"
          },
          "mbType": {
            "description": "Member bit: Type",
            "type": "string"
          },
          "lnLabelTranslationKey": {
            "format": "int32",
            "description": "Maximum length of the labelTranslationKey.",
            "type": "integer"
          },
          "TYPE_IFNODE": {
            "format": "int32",
            "description": "Node type: Decision node.",
            "type": "integer"
          },
          "mbTag": {
            "description": "Member bit: reserved.\nDB column: wf_tag",
            "type": "string"
          },
          "mbLabelTranslationKey": {
            "description": "Member bit: labelTranslationKey",
            "type": "string"
          },
          "mbUserDelayDateIso": {
            "type": "string"
          },
          "USERID_OWNER": {
            "format": "int32",
            "description": "Set WFNode.\nuserId to this value, if a workflow node should belong to the user who starts the\n workflow.",
            "type": "integer"
          },
          "mbOnEnter": {
            "description": "Member bit: script to execute when node is activated.",
            "type": "string"
          },
          "TYPE_ENDNODE": {
            "format": "int32",
            "description": "Node type: End of workflow.",
            "type": "integer"
          },
          "lnProcessOnServerId": {
            "format": "int32",
            "description": "Maximum length of processOnServerId.",
            "type": "integer"
          },
          "mbObjKeyNames": {
            "description": "Member bit: objKeyNames",
            "type": "string"
          },
          "mbInUseDate": {
            "description": "Member bit: In use at this date.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_findNextActivities": {
        "type": "object",
        "properties": {
          "searchId": {
            "type": "string"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "activityZ": {
            "$ref": "#/components/schemas/ActivityZ"
          },
          "idx": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "BResult_1436376940": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/JobState"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BResult_1233469422": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupProfile"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BResult_1822579866": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/WFEditNode"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_startAdHocWorkFlow2": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "name": {
            "type": "string"
          },
          "objId": {
            "type": "string"
          },
          "userNodeInfo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserNodeInfo"
            }
          },
          "startWfInfo": {
            "$ref": "#/components/schemas/StartAdHocWorkflowInfo"
          }
        }
      },
      "DoubleSingleValue": {
        "type": "object",
        "properties": {
          "value": {
            "format": "double",
            "description": "double value",
            "type": "number"
          }
        }
      },
      "DateIsoValue": {
        "description": "<p>\nClass to commit a date value to iSearch via QueryFilter.\n <\/p>\n <p>\n Date format: YYYYMMddHHmmss<br>\n If less than 14 digits are commited, it is converted to a 14 digit numer, e.g.: \"2017\" ->\n \"20170101000000\"\n <\/p>\n <p>\n If roundTo is null, a search for an exact date is executed.\n <\/p>\n <p>\n If roundTo is != null, DateIsoValue is converted to a Range query. From is dateIso rounded down,\n To is dateIso rounded up.\n <\/p>\n <p>\n <b>Example<\/b> <code>dateIso=2017, roundTo=DateRoundC.YEAR<\/code> results in From=01.01.2017\n 00:00:00, To=31.12.2017 23:59:59\n <\/p>\n <p>\n The delivered date is converted to the time zone submitted in ClientInfo\n <\/p>",
        "type": "object",
        "properties": {
          "dateIso": {
            "description": "<p>\nISO-Date.\n <\/p>\n \n Number of digits defines kind of timeunit:\n <ul>\n <li>4 digits for year.\n <li>6 digits for year with month.\n <li>8 digits for date with days.\n <li>10 digits for date with hours.\n <li>12 digits for date with minutes.\n <li>14 digits for date with seconds\n <\/ul>",
            "type": "string"
          },
          "roundTo": {
            "description": "Define to which time unit this date should be rounded.\n<br>\n If it is != null, a range query is performed.",
            "$ref": "#/components/schemas/DateRoundE"
          }
        }
      },
      "BRequest_IXServicePortIF_loginEloProf": {
        "type": "object",
        "properties": {
          "clientComputer": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "certificate": {
            "type": "string"
          },
          "userId": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_invalidateCache": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "flags": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_startAdHocWorkFlow3": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "name": {
            "type": "string"
          },
          "objId": {
            "type": "string"
          },
          "startWfInfo": {
            "$ref": "#/components/schemas/StartAdHocWorkflowInfo"
          }
        }
      },
      "BResult_661820173": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/PreviewImageResult"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "FindByFulltextCtrl": {
        "description": "This class is used to search for objects that have to be indexed by the fulltext database engine.\n<p>\n The selected objects are ordered by their timestamp. If the search process is interrupted because\n of a timeout or because the FindOptions.totalCount limit is reached, all the Objects of the lates\n timestamp second are discarded.\n <\/p>\n <p>\n If the search process is terminated due to breakTotalCount and the array of results is empty, the\n search should be repeated with a greater value for totalCount.\n <\/p>\n <p>\n Access checking is performed as in all other searches.\n <\/p>\n <p>\n A search of this type can only be combined with FindOptions.totalCount and\n FindOptions.timeoutSeconds.\n <\/p>\n <p>\n The results are returned in the member FindInfo.fulltextCtrlResultItems. The Sord objects are\n available in the member FindInfo.sords too.\n <\/p>",
        "type": "object",
        "properties": {
          "onlyDocs": {
            "description": "Find next documents for textreader.",
            "type": "boolean"
          },
          "reindex": {
            "description": "Re-index processing.\nIf this member is true, a search returns objects from the largest object\n ID to 2. If this member is false, a search returns the next objects in a timestamp interval.",
            "type": "boolean"
          },
          "endTStamp": {
            "description": "Find objects from this date or older.\nIf the value is null or empty, the time range has no\n upper limit.",
            "type": "string"
          },
          "startTStamp": {
            "description": "Find objects from this date or newer.\nThis value can be null or empty in which case the time\n range has no lower limit.",
            "type": "string"
          },
          "profileKeyPrefix": {
            "description": "Key prefix for loop state.",
            "type": "string"
          }
        }
      },
      "BRequest_HealthCheckService_read": {
        "type": "object",
        "properties": {
          "names": {
            "$ref": "#/components/schemas/ListOfString"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_startExport": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "options": {
            "type": "string"
          },
          "topLevelIDs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RawStreamService": {
        "type": "object"
      },
      "BRequest_IXServicePortIF_deleteSordTypes": {
        "type": "object",
        "properties": {
          "sordTypeIds": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "AspectLineDataC": {
        "description": "<p>Bit constants for members of AspectLine<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbNameTranslationKey": {
            "description": "Member bit: Translation-keyword for {@link AspectLine#displayName}.\nDB column: linenametrkey",
            "type": "string"
          },
          "lnSubType": {
            "format": "int32",
            "description": "Column length: This field can be used by clients to determine a subtype of the given type.\nFor the purpose of\n DB column: subtype",
            "type": "integer"
          },
          "lnComment": {
            "format": "int32",
            "description": "Column length: Quickinfo text for the attribute.\nDB column: linecomment",
            "type": "integer"
          },
          "lnCommentTranslationKey": {
            "format": "int32",
            "description": "Column length: Translation-keyword for {@link AspectLine#comment}.\nDB column: linecommenttrkey",
            "type": "integer"
          },
          "mbRawFlags": {
            "description": "Member bit: Internal flags representation.\nDB column: lineflags",
            "type": "string"
          },
          "lnDefaultValue": {
            "format": "int32",
            "description": "Column length: This value is assigned to the element for a new Sord object.\nDB column: linedefault",
            "type": "integer"
          },
          "mbAllowedReferencedMaskIdsRaw": {
            "description": "Member bit: Specifies the {@link DocMask#id} allowed in a {@link AspectLineC#TYPE_RELATION}.\nDB column: allowedrefmaskids",
            "type": "string"
          },
          "lnNameTranslationKey": {
            "format": "int32",
            "description": "Column length: Translation-keyword for {@link AspectLine#displayName}.\nDB column: linenametrkey",
            "type": "integer"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnKey": {
            "format": "int32",
            "description": "Column length: The attribute identifier.\nDB column: linekey",
            "type": "integer"
          },
          "mbKeywordListId": {
            "description": "Member bit: Keyword List ID.\nDB column: swlgroupid",
            "type": "string"
          },
          "lnKeywordListId": {
            "format": "int32",
            "description": "Column length: Keyword List ID.\nDB column: swlgroupid",
            "type": "integer"
          },
          "mbDynamicKeywordReference": {
            "description": "Member bit: A script or plugin at the server can serve as the data source of a dynamic keyword list.\nThis\n DB column: dynkeywordreference",
            "type": "string"
          },
          "mbCommentTranslationKey": {
            "description": "Member bit: Translation-keyword for {@link AspectLine#comment}.\nDB column: linecommenttrkey",
            "type": "string"
          },
          "mbAspectId": {
            "description": "Member bit: This line information belongs to an aspect with the ID AspectId.\nDB column: aspectid",
            "type": "string"
          },
          "mbKey": {
            "description": "Member bit: The attribute identifier.\nDB column: linekey",
            "type": "string"
          },
          "mbSubType": {
            "description": "Member bit: This field can be used by clients to determine a subtype of the given type.\nFor the purpose of\n DB column: subtype",
            "type": "string"
          },
          "lnAllowedReferencedMaskIdsRaw": {
            "format": "int32",
            "description": "Column length: Specifies the {@link DocMask#id} allowed in a {@link AspectLineC#TYPE_RELATION}.\nDB column: allowedrefmaskids",
            "type": "integer"
          },
          "lnDynamicKeywordReference": {
            "format": "int32",
            "description": "Column length: A script or plugin at the server can serve as the data source of a dynamic keyword list.\nThis\n DB column: dynkeywordreference",
            "type": "integer"
          },
          "lnExternalData": {
            "format": "int32",
            "description": "Column length: External data. Can be used to store an arbitary string.\nDB column: lineext",
            "type": "integer"
          },
          "mbExternalData": {
            "description": "Member bit: External data. Can be used to store an arbitary string.\nDB column: lineext",
            "type": "string"
          },
          "mbDisplayName": {
            "description": "Member bit: The display name of the attribute. This value is displayed in the lable before the edit field.\nDB column: linedisplayName",
            "type": "string"
          },
          "lnDisplayName": {
            "format": "int32",
            "description": "Column length: The display name of the attribute. This value is displayed in the lable before the edit field.\nDB column: linedisplayName",
            "type": "integer"
          },
          "mbDefaultValue": {
            "description": "Member bit: This value is assigned to the element for a new Sord object.\nDB column: linedefault",
            "type": "string"
          },
          "mbRawType": {
            "description": "Member bit: The type of the line information.\n<br>\n DB column: linetype",
            "type": "string"
          },
          "mbComment": {
            "description": "Member bit: Quickinfo text for the attribute.\nDB column: linecomment",
            "type": "string"
          }
        }
      },
      "ArrayOfString": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "ArrayOfObjKey": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ObjKey"
        }
      },
      "BRequest_PluginService_send": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "id": {
            "type": "string"
          },
          "message": {
            "$ref": "#/components/schemas/PluginMessage"
          }
        }
      },
      "DocMaskLineC": {
        "description": "<p>\nConstants for class <code>DocMaskLine<\/code>\n <\/p>\n <p>\n Copyright: Copyright (c) 2003\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "NAME_MAINSCALE": {
            "description": "Internally used by JavaClient.",
            "type": "string"
          },
          "mbVersion": {
            "type": "string"
          },
          "mbTranslate": {
            "type": "string"
          },
          "lnAcl": {
            "format": "int32",
            "description": "ACL length",
            "type": "integer"
          },
          "mbImportant": {
            "type": "string"
          },
          "TYPE_NUMBER_F6": {
            "format": "int32",
            "description": "Index line contains a number value with six digits after the decimal point.",
            "type": "integer"
          },
          "mbReadOnly": {
            "type": "string"
          },
          "ID_PERSONALDATA_UID": {
            "format": "int32",
            "description": "Index line used to mark a folder or document as personal data record.",
            "type": "integer"
          },
          "mbTabOrder": {
            "type": "string"
          },
          "ID_LINK": {
            "format": "int32",
            "description": "Index line ID of links. Sord.linksGoOut and Sord.\nlinksComeIn provide a more convinient way to\n access links. Links can be added and removed with the functions linkSords resp. unlinkSords.",
            "type": "integer"
          },
          "TYPE_DUMMY": {
            "format": "int32",
            "description": "Index line contains a dummy entry which should not be displayed.",
            "type": "integer"
          },
          "KEY_EMAIL_ENTRYID": {
            "description": "Index line key for an internal mail ID. Use this constant as value for {@link DocMaskLine#key}.",
            "type": "string"
          },
          "MIN_ID_HIDDEN_VALUE": {
            "format": "int32",
            "type": "integer"
          },
          "mbPostfixAsterix": {
            "type": "string"
          },
          "mbAcl": {
            "description": "Member bit: ACL",
            "type": "string"
          },
          "TYPE_FLOAT": {
            "format": "int32",
            "description": "Index line contains a floating point number value with 7 significant digits.\nThis type can only\n be used for keywording forms with {@link DocMaskC#DATA_ORGANISATION_TABLE}. To assign a value\n of this type to {@link ObjKey#data}, the String representation has to conform to the\n Float.toString() method of Java. Use dot to separate the fraction part and character 'E' to\n prefix the exponent.",
            "type": "integer"
          },
          "KEY_EMAIL_CC": {
            "description": "Index line key for mail CC addresses. Use this constant as value for {@link DocMaskLine#key}.",
            "type": "string"
          },
          "KEY_EMAIL_FROM": {
            "description": "Index line key for mail sender address. Use this constant as value for {@link DocMaskLine#key}.",
            "type": "string"
          },
          "TYPE_AZ": {
            "format": "int32",
            "description": "Index line contains a reference number (\"Aktenzeichen\").",
            "type": "integer"
          },
          "TYPE_LONG": {
            "format": "int32",
            "description": "Index line contains a number value without fraction in the range of (-2^63) to (2^63)-1.\nThis\n type can only be used for keywording forms with {@link DocMaskC#DATA_ORGANISATION_TABLE}.",
            "type": "integer"
          },
          "TYPE_NUMBER_F1": {
            "format": "int32",
            "description": "Index line contains a number value with one digit after the decimal point.",
            "type": "integer"
          },
          "TYPE_NUMBER_F2": {
            "format": "int32",
            "description": "Index line contains a number value with one digit after the decimal point.",
            "type": "integer"
          },
          "ID_MAINSCALE": {
            "format": "int32",
            "description": "Internally used by JavaClient.",
            "type": "integer"
          },
          "MAX_ID_HIDDEN_VALUE": {
            "format": "int32",
            "type": "integer"
          },
          "TYPE_NUMBER_F4": {
            "format": "int32",
            "description": "Index line contains a number value of with four digits after the decimal point.",
            "type": "integer"
          },
          "TYPE_NUMBER_F0": {
            "format": "int32",
            "description": "Index line contains a number value with an arbitrary number of fraction digits.\nThe value is\n internally stored with a padding of &amp; (positive numbers) or @ (negative numbers). This\n gives the possibility to search over an interval of numeric values, e. b. search for \"1 ... 12\"\n finds objects with index values 1,2,3,4,...12. The number must be formatted according to the\n locale information given in the ClientInfo object. With this type, the user is responsible to\n enter always the same number of fraction digits. Otherwise, a search over a number range will\n not return the correct results. The meaning of this field was changed in 8.00.032. The meaning\n before was a field without any fraction digits.",
            "type": "integer"
          },
          "NAME_PERSONALDATA_DELETEAT": {
            "description": "Index line used to specify a delete date for personal data.\nThe Value has to be in ISO 8601\n format without separators and time section. Example value 20180223 specifies 23-Feb-2018.",
            "type": "string"
          },
          "mbAclItems": {
            "type": "string"
          },
          "mbFlags": {
            "description": "Member bit: Line flags",
            "type": "string"
          },
          "KEY_EMAIL_TO": {
            "description": "Index line key for mail receiver addresses.\nUse this constant as value for\n {@link DocMaskLine#key}.",
            "type": "string"
          },
          "TYPE_ISO_DATE": {
            "format": "int32",
            "description": "Index line contains a date in ISO format.",
            "type": "integer"
          },
          "DOCKEY_VSL": {
            "format": "int32",
            "description": "Index line ID to store informations used by \"Versendemappe\".",
            "type": "integer"
          },
          "KEY_EMAIL_CONVERSATIONID": {
            "description": "Index line key for a mail's internal conversation ID.\nUse this constant as value for\n {@link DocMaskLine#key}.",
            "type": "string"
          },
          "TYPE_THES": {
            "format": "int32",
            "description": "Thesaurus",
            "type": "integer"
          },
          "MIN_ID_RESERVED": {
            "format": "int32",
            "description": "Minimum ID for reserved keywording field",
            "type": "integer"
          },
          "_TYPE_TYPE_ID": {
            "format": "int32",
            "description": "Used to check wether a correct constant is used.",
            "type": "integer"
          },
          "mbHidden": {
            "type": "string"
          },
          "KEY_EMAIL_BCC": {
            "description": "Index line key for mail BCC addresses. Use this constant as value for {@link DocMaskLine#key}.",
            "type": "string"
          },
          "NAME_LINK": {
            "description": "Index line name of links.",
            "type": "string"
          },
          "mbAllowedMaskIdsForKeywordingRelation": {
            "description": "Member bit: allowedMaskIds",
            "type": "string"
          },
          "TYPE_LIST": {
            "format": "int32",
            "description": "Index line contains a list entry.",
            "type": "integer"
          },
          "NAME_PERSONALDATA_UID": {
            "description": "Index line used to mark a folder or document as personal data record.\nValues should uniquely\n identify the person that belongs to the object. This index line can be added to any Sord and is\n not available in a keywording form (DocMask).",
            "type": "string"
          },
          "DOCNAME_VSL": {
            "description": "Index line name to store informations used by \"Versendemappe\".",
            "type": "string"
          },
          "ID_FILENAME": {
            "format": "int32",
            "description": "Index line ID of original file name",
            "type": "integer"
          },
          "mbOnlyBuzzwords": {
            "type": "string"
          },
          "mbPrefixAsterix": {
            "type": "string"
          },
          "TYPE_DOUBLE": {
            "format": "int32",
            "description": "Index line contains a floating point number value with 15 significant digits.\nThis type can\n only be used for keywording forms with {@link DocMaskC#DATA_ORGANISATION_TABLE}. To assign a\n value of this type to {@link ObjKey#data}, the String representation has to conform to the\n Double.toString() method of Java. Use dot to separate the fraction part and character 'E' to\n prefix the exponent.",
            "type": "integer"
          },
          "TYPE_DATE": {
            "format": "int32",
            "description": "Index line contains a date.",
            "type": "integer"
          },
          "TYPE_INTEGER": {
            "format": "int32",
            "description": "Index line contains a number value without fraction in the range of (-2^31) to (2^31)-1.\nThis\n type can only be used for keywording forms with {@link DocMaskC#DATA_ORGANISATION_TABLE}.",
            "type": "integer"
          },
          "ID_PERSONALDATA_DELETEAT": {
            "format": "int32",
            "description": "Index line used to specify a delete date for personal data.",
            "type": "integer"
          },
          "TYPE_TEXT": {
            "format": "int32",
            "description": "Index line contains text information.",
            "type": "integer"
          },
          "MAX_ID_DOCMASK_LINE": {
            "format": "int32",
            "description": "This constant defines a limit for ObjKey.id values. The following table defines which ObjKey.\nid\n values are allowed.\n <p>\n <table border=\"2\" summary=\"\">\n <tr>\n <td>ObjKey.id<\/td>\n <td>Comment<\/td>\n <\/tr>\n <tr>\n <td>0 ... MAX_ID_DOCMASK_LINE<\/td>\n <td>ObjKeys with ObjKey.data.length &gt; 1 allowed.<\/td>\n <\/tr>\n <tr>\n <td>MIN_ID_RESERVED ... MAX_ID_RESERVED<\/td>\n <td>ObjKeys for Special purposes, e.g. ID_FILE_NAME<\/td>\n <\/tr>\n <\/table>\n <\/p>\n <p>\n <table border=\"2\">\n <tr>\n <td>Symbol<\/td>\n <td>Value<\/td>\n <\/tr>\n <tr>\n <td>MAX_ID_DOCMASK_LINE<\/td>\n <td>199<\/td>\n <\/tr>\n <tr>\n <td>MAX_ID_VALUE_ARRAY<\/td>\n <td>199<\/td>\n <\/tr>\n <tr>\n <td>MIN_ID_RESERVED<\/td>\n <td>50<\/td>\n <\/tr>\n <tr>\n <td>MAX_ID_RESERVED<\/td>\n <td>59<\/td>\n <\/tr>\n <\/table>\n <\/p>",
            "type": "integer"
          },
          "TYPE_USER": {
            "format": "int32",
            "description": "Index line contains a user name.",
            "type": "integer"
          },
          "NAME_FILENAME": {
            "description": "Index line name of original file name",
            "type": "string"
          },
          "mbType": {
            "description": "Member bit: The type of the line information.\nThis can be one of the\n <code>DocMaskLineC.LINETYPE_*<\/code> constants.",
            "type": "string"
          },
          "TYPE_RELATION": {
            "format": "int32",
            "description": "Index line contains a relation.\nA Relation consists of a {@link Sord#guid} which references a\n {@link Sord}. with a allowed DocMask {@link DocMaskDetails#keywordingRelationAllowed}.",
            "type": "integer"
          },
          "SECONDARYTYPES": {
            "format": "int32",
            "description": "EIX-2820: This constant defines secondary-types for CMIS.",
            "type": "integer"
          },
          "mbNextTab": {
            "type": "string"
          },
          "TYPE_NUMBER": {
            "format": "int32",
            "description": "Index line contains a number.\nThe number is internally stored as a string value without any\n padding. Thus it is not possible to search over an interval. Use one of the TYPE_NUMBER_F*\n types to be able to search over intervals. The number must be formatted according to the locale\n information of the server.",
            "type": "integer"
          },
          "KEY_EMAIL_POSTBOXPATH": {
            "description": "Index line key for mailbox path. Use this constant as value for {@link DocMaskLine#key}.",
            "type": "string"
          },
          "MAX_ID_RESERVED": {
            "format": "int32",
            "description": "Maximum ID for reserved keywording field",
            "type": "integer"
          },
          "MAX_ID_VALUE_ARRAY": {
            "format": "int32",
            "description": "This constant defines a limit for ObjKey.id values.",
            "type": "integer"
          },
          "DEFAULT": {
            "format": "int32",
            "description": "Default ist text",
            "type": "integer"
          }
        }
      },
      "WorkflowImportOptions": {
        "description": "Options for the workflow import.",
        "type": "object",
        "properties": {
          "replaceMissingUserByUserId": {
            "description": "If this variable is set, the missing user is replaced by this user.\nOtherwise the missing user\n will be created using a random password.",
            "type": "string"
          }
        }
      },
      "WFNodeHistoryC": {
        "description": "<p>Bit constants for members of WFNodeHistory<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnUserName": {
            "format": "int32",
            "description": "DB column: wf_username",
            "type": "integer"
          },
          "lnHistGuid": {
            "format": "int32",
            "description": "DB column: wfhistguid",
            "type": "integer"
          },
          "mbTerminate": {
            "description": "DB column: wf_terminate",
            "type": "string"
          },
          "mbUserName": {
            "description": "DB column: wf_username",
            "type": "string"
          },
          "mbFlowGuid": {
            "description": "DB column: wfguid",
            "type": "string"
          },
          "mbNodeId": {
            "description": "DB column: wf_nodeid",
            "type": "string"
          },
          "lnFlowGuid": {
            "format": "int32",
            "description": "DB column: wfguid",
            "type": "integer"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbSucc_10": {
            "description": "DB column: wf_succ_10",
            "type": "string"
          },
          "mbSucc_4": {
            "description": "DB column: wf_succ_4",
            "type": "string"
          },
          "mbSucc_15": {
            "description": "DB column: wf_succ_15",
            "type": "string"
          },
          "mbUserId": {
            "description": "DB column: wf_user",
            "type": "string"
          },
          "mbSucc_5": {
            "description": "DB column: wf_succ_5",
            "type": "string"
          },
          "mbSucc_16": {
            "description": "DB column: wf_succ_16",
            "type": "string"
          },
          "mbSucc_6": {
            "description": "DB column: wf_succ_6",
            "type": "string"
          },
          "mbSucc_17": {
            "description": "DB column: wf_succ_17",
            "type": "string"
          },
          "mbSucc_7": {
            "description": "DB column: wf_succ_7",
            "type": "string"
          },
          "mbSucc_18": {
            "description": "DB column: wf_succ_18",
            "type": "string"
          },
          "mbSucc_0": {
            "description": "DB column: wf_succ_0",
            "type": "string"
          },
          "mbSucc_11": {
            "description": "DB column: wf_succ_11",
            "type": "string"
          },
          "mbSucc_1": {
            "description": "DB column: wf_succ_1",
            "type": "string"
          },
          "mbSucc_12": {
            "description": "DB column: wf_succ_12",
            "type": "string"
          },
          "mbSucc_2": {
            "description": "DB column: wf_succ_2",
            "type": "string"
          },
          "mbSucc_13": {
            "description": "DB column: wf_succ_13",
            "type": "string"
          },
          "mbSucc_3": {
            "description": "DB column: wf_succ_3",
            "type": "string"
          },
          "mbSucc_14": {
            "description": "DB column: wf_succ_14",
            "type": "string"
          },
          "mbSucc_8": {
            "description": "DB column: wf_succ_8",
            "type": "string"
          },
          "mbSucc_19": {
            "description": "DB column: wf_succ_19",
            "type": "string"
          },
          "mbActivate": {
            "description": "DB column: wf_activate",
            "type": "string"
          },
          "mbSucc_9": {
            "description": "DB column: wf_succ_9",
            "type": "string"
          },
          "mbHistGuid": {
            "description": "DB column: wfhistguid",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_takeWorkFlowNode": {
        "type": "object",
        "properties": {
          "nFlowId": {
            "format": "int32",
            "type": "integer"
          },
          "sUserId": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "nNodeId": {
            "format": "int32",
            "type": "integer"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "nFlags": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "FieldTypeE": {
        "description": "<p>\nThis enum defines how should be searched for query terms.\n <\/p>\n \n <p>\n It can, for example, be used with {@link QueryFilter#fieldType}\n <\/p>\n <p>\n For every {@link SearchFieldE} it is defined, which {@link FieldTypeE} can be used and,\n therefore, which data classes (e.g. {@link StringSingleValue}) can be used.\n <\/p>",
        "type": "object",
        "properties": {
          "date": {
            "description": "Iso date values.\n<p>\n Corresponds to {@link DocMaskLineC#TYPE_ISO_DATE}.\n <\/p>",
            "$ref": "#/components/schemas/FieldTypeE"
          },
          "tokenized": {
            "description": "String values which are splitted into single tokens.\n<p>\n e.g.:\"My Sord\" is splitted into \"my\" and \"sord\".\n <\/p>",
            "$ref": "#/components/schemas/FieldTypeE"
          },
          "notTokenized": {
            "description": "String values which are not splitted into single tokens.",
            "$ref": "#/components/schemas/FieldTypeE"
          },
          "numeric": {
            "description": "Numeric values.",
            "$ref": "#/components/schemas/FieldTypeE"
          },
          "guid": {
            "description": "GUIDs of related Sords.\n<p>\n Corresponts to {@link DocMaskLineC#TYPE_RELATION}.\n <\/p>",
            "$ref": "#/components/schemas/FieldTypeE"
          }
        }
      },
      "UserTaskSortOrderC": {
        "type": "object",
        "properties": {
          "PRIORITY_DATE_NAME_INV": {
            "description": "Inverse order collected tasks by priority, date and NAME.",
            "$ref": "#/components/schemas/UserTaskSortOrderZ"
          },
          "DATE_PRIORITY_NAME": {
            "description": "Order collected tasks by date, priority and NAME.",
            "$ref": "#/components/schemas/UserTaskSortOrderZ"
          },
          "PRIORITY_DATE_NAME": {
            "description": "Order collected tasks by priority, date and NAME.",
            "$ref": "#/components/schemas/UserTaskSortOrderZ"
          },
          "NAME_PRIORITY_DATE_INV": {
            "description": "Inverse order collected tasks by NAME, priority, date.",
            "$ref": "#/components/schemas/UserTaskSortOrderZ"
          },
          "bsetNAME_PRIORITY_DATE_INV": {
            "type": "string"
          },
          "bsetNAME_PRIORITY_DATE": {
            "type": "string"
          },
          "NAME_PRIORITY_DATE": {
            "description": "Order collected tasks by NAME, priority, date.",
            "$ref": "#/components/schemas/UserTaskSortOrderZ"
          },
          "bsetFLAG_SORT_ORDER_INV": {
            "type": "string"
          },
          "bsetPRIORITY_DATE_NAME": {
            "type": "string"
          },
          "DATE_PRIORITY_NAME_INV": {
            "description": "Inverse order collected tasks by date, priority and NAME.",
            "$ref": "#/components/schemas/UserTaskSortOrderZ"
          },
          "bsetPRIORITY_DATE_NAME_INV": {
            "type": "string"
          },
          "bsetDATE_PRIORITY_NAME": {
            "type": "string"
          },
          "bsetDATE_PRIORITY_NAME_INV": {
            "type": "string"
          }
        }
      },
      "SingleValueMetricsAggregationResult": {
        "description": "The result object of a single-value-metrics aggregation.\n<br>\n It consists mainly of a result value.<br>",
        "type": "object",
        "properties": {
          "value": {
            "format": "double",
            "description": "The result of the metrics aggregation.",
            "type": "number"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutConfigFiles": {
        "type": "object",
        "properties": {
          "names": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "configFileZ": {
            "$ref": "#/components/schemas/ConfigFileZ"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BRequest_IXServicePortIF_parseException": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "exceptionString": {
            "type": "string"
          }
        }
      },
      "ObjLinkC": {
        "description": "<p>Bit constants for members of SordLink<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "lnLinkId": {
            "format": "int32",
            "description": "DB column: linkguid",
            "type": "integer"
          },
          "mbId": {
            "description": "DB column: objguidtarget",
            "type": "string"
          },
          "mbLinkId": {
            "description": "DB column: linkguid",
            "type": "string"
          },
          "mbTStamp": {
            "description": "DB column: linktstamp",
            "type": "string"
          },
          "mbParentId": {
            "description": "DB column: objguidparent",
            "type": "string"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnTStamp": {
            "format": "int32",
            "description": "DB column: linktstamp",
            "type": "integer"
          },
          "mbFlags": {
            "description": "DB column: linkflags",
            "type": "string"
          },
          "lnParentId": {
            "format": "int32",
            "description": "DB column: objguidparent",
            "type": "integer"
          },
          "lnId": {
            "format": "int32",
            "description": "DB column: objguidtarget",
            "type": "integer"
          }
        }
      },
      "UserTaskSortOrderZ": {
        "description": "This class encapsulates the constants of the UserTaskSortOrderC class.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants from the UserTaskSortOrderC class.",
            "type": "string"
          }
        }
      },
      "MapToDocMask": {
        "additionalProperties": {
          "$ref": "#/components/schemas/DocMask"
        },
        "type": "object"
      },
      "FeedPost": {
        "description": "A FeedPost contains a parent action (an action where action.\nparentGuid is empty) and all\n subactions (actions where action.parentGuid = parent action's guid).\n \n From all actions their information (e.g. hashtags, mentions) are accumulated into lists.",
        "type": "object",
        "properties": {
          "textList": {
            "description": "List of all texts of all actions",
            "$ref": "#/components/schemas/ListOfString"
          },
          "lastChanged": {
            "description": "Date of last change of any action",
            "type": "string"
          },
          "linkedGuids": {
            "description": "List of GUIDs which are linked in any action if action.type == EActionType.\nUserComment",
            "$ref": "#/components/schemas/HashSetOfString"
          },
          "versionComment": {
            "description": "Version comment of corresponding DocVersion if parentAction.getDocVersionGuid() is set.",
            "type": "string"
          },
          "versionName": {
            "description": "Name of corresponding DocVersion if parentAction.getDocVersionGuid() is set.",
            "type": "string"
          },
          "subActions": {
            "description": "List of all subActions (action.parentGuid = parentAction.\nguid)",
            "$ref": "#/components/schemas/ListOfAction"
          },
          "feedGuid": {
            "description": "GUID of corresponding feed (read from parentAction.\nfeedGuid)",
            "type": "string"
          },
          "sordGuid": {
            "description": "GUID of corresponsing Sord",
            "type": "string"
          },
          "hashTags": {
            "description": "List of all hashtags of actions if action.type == EActionType.\nUserComment",
            "$ref": "#/components/schemas/HashSetOfString"
          },
          "mentions": {
            "description": "List of all mentions (UserNames) of actions if action.type == EActionType.\nUserComment",
            "$ref": "#/components/schemas/HashSetOfString"
          },
          "creatorIds": {
            "description": "List of all user IDs which created any action",
            "$ref": "#/components/schemas/HashSetOfInteger"
          },
          "text": {
            "description": "Text of all actions, separated by a whitespace",
            "type": "string"
          },
          "parentAction": {
            "description": "an action where action.\nparentGuid is empty",
            "$ref": "#/components/schemas/Action"
          }
        }
      },
      "FindByESearch": {
        "description": "Use this class to search by iSearch with API functionality starting with ELO 11.",
        "type": "object",
        "properties": {
          "searchOptions": {
            "description": "This options must match the called function.",
            "$ref": "#/components/schemas/ESearchOptions"
          },
          "searchParams": {
            "description": "Deliver the query and where to search with this parameters.",
            "$ref": "#/components/schemas/ESearchParams"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutNotification": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "watchGuid": {
            "type": "string"
          },
          "userGuid": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_startImport": {
        "type": "object",
        "properties": {
          "guidMethod": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "filingPath": {
            "type": "string"
          },
          "options": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutAspect": {
        "type": "object",
        "properties": {
          "aspectZ": {
            "$ref": "#/components/schemas/AspectZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "aspectId": {
            "type": "string"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "BResult_231031238": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StoreInfo"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutWorkflowHistory": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "checkoutWorkflowHistoryParams": {
            "$ref": "#/components/schemas/CheckoutWorkflowHistoryParams"
          }
        }
      },
      "BResult_190251704": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/ContentStream"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "ReportInfoC": {
        "description": "Report information.\n<p>\n Indexserver writes the following report entries\n <\/p>\n <table border=\"2\">\n <tr>\n <td>ReportInfo.action<\/td>\n <td>ReportInfo.objId<\/td>\n <td>ReportInfo.extra1<\/td>\n <td>ReportInfo.extra2<\/td>\n <td>ReportInfo.comment<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_LOGIN<\/td>\n <td>0<\/td>\n <td>SSO User ID<\/td>\n <td>[EXTRA2_SSO_LOGIN]<\/td>\n <td>Computer name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_LOGOUT<\/td>\n <td>0<\/td>\n <td>0<\/td>\n <td>0<\/td>\n <td>&nbsp;<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_LOCK_ARCHIVE<\/td>\n <td>0<\/td>\n <td>Key ID<\/td>\n <td>0<\/td>\n <td>Key name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CREATE_USER<\/td>\n <td>0<\/td>\n <td>User ID<\/td>\n <td>User Flags<\/td>\n <td>User name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_USER<\/td>\n <td>0<\/td>\n <td>User ID<\/td>\n <td>User Flags<\/td>\n <td>User name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_USER<\/td>\n <td>0<\/td>\n <td>User ID<\/td>\n <td>User Flags<\/td>\n <td>User name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CREATE_KEY<\/td>\n <td>0<\/td>\n <td>Key ID<\/td>\n <td>0<\/td>\n <td>Key name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_KEY<\/td>\n <td>0<\/td>\n <td>Key ID<\/td>\n <td>0<\/td>\n <td>Key name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_KEY<\/td>\n <td>0<\/td>\n <td>Key ID<\/td>\n <td>0<\/td>\n <td>Key name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CREATE_SORD<\/td>\n <td>Object ID<\/td>\n <td>Object type<\/td>\n <td>Storage mask ID<\/td>\n <td>Sord name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKOUT_SORD<\/td>\n <td>Object ID<\/td>\n <td>0<\/td>\n <td>combination of EXTRA2_*<\/td>\n <td>Sord name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_SORD<\/td>\n <td>Object ID<\/td>\n <td>0<\/td>\n <td>combination of EXTRA2_*<\/td>\n <td>Sord name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_SORD<\/td>\n <td>Object ID<\/td>\n <td>Object type<\/td>\n <td>combination of EXTRA2_*<\/td>\n <td>Sord name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_REFERENCE<\/td>\n <td>Object ID<\/td>\n <td>Parent ID<\/td>\n <td>combination of EXTRA2_*<\/td>\n <td>Sord name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_COPY_SORD<\/td>\n <td>unsupported<\/td>\n <td><\/td>\n <td><\/td>\n <td>&nbsp;<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_REFERENCE_SORD<\/td>\n <td>Parent ID<\/td>\n <td>Object ID<\/td>\n <td><\/td>\n <td>Parent name, Object name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_MOVE_SORD<\/td>\n <td>New parent ID<\/td>\n <td>Object ID<\/td>\n <td>Old parent ID<\/td>\n <td>New parent name, old parent name, Sord name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_LINK_SORD<\/td>\n <td>From object ID<\/td>\n <td>To object ID<\/td>\n <td><\/td>\n <td>From Sord name, To Sord name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_UNLINK_SORD<\/td>\n <td>From object ID<\/td>\n <td>To object ID<\/td>\n <td><\/td>\n <td>From Sord name, To Sord name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKOUT_DOCVERSION<\/td>\n <td>Object ID<\/td>\n <td>Document version ID<\/td>\n <td>combination of EXTRA2_*<\/td>\n <td>Objektname, Versionsnummer<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_DOCVERSION<\/td>\n <td>Objekt-ID<\/td>\n <td>Doc-ID<\/td>\n <td>combination of EXTRA2_*<\/td>\n <td>Objektname, Versionsnummer<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CREATE_DOC_MASK<\/td>\n <td>0<\/td>\n <td>Mask-ID<\/td>\n <td>0<\/td>\n <td>Maskname<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_DOC_MASK<\/td>\n <td>0<\/td>\n <td>Mask-ID<\/td>\n <td>0<\/td>\n <td>Maskname<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_DOC_MASK<\/td>\n <td>0<\/td>\n <td>Mask-ID<\/td>\n <td>replace with Mask-ID<\/td>\n <td>Maskname<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_REPL_NAME<\/td>\n <td>0<\/td>\n <td>Repl-ID<\/td>\n <td>0<\/td>\n <td>ReplSet-Name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_REPORT_OPTIONS<\/td>\n <td>0<\/td>\n <td>0<\/td>\n <td>0<\/td>\n <td>&nbsp;<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_REPORT<\/td>\n <td>0<\/td>\n <td>endDate<\/td>\n <td>0<\/td>\n <td>TS-End-Date<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_COLOR<\/td>\n <td>0<\/td>\n <td>Color-ID<\/td>\n <td>rgb<\/td>\n <td>Color-Name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_USER_PROFILE<\/td>\n <td>0<\/td>\n <td>For User-ID<\/td>\n <td>0<\/td>\n <td>User-Name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_USER_PROFILE<\/td>\n <td>0<\/td>\n <td>For User-ID<\/td>\n <td>0<\/td>\n <td>User-Name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CREATE_WORKFLOW<\/td>\n <td>0<\/td>\n <td>Workflow-ID<\/td>\n <td>combination of EXTRA2_*<\/td>\n <td>Workflow-Name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_WORKFLOW<\/td>\n <td>0<\/td>\n <td>Workflow-ID<\/td>\n <td>combination of EXTRA2_*<\/td>\n <td>Workflow-Name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_WORKFLOW<\/td>\n <td>0<\/td>\n <td>Workflow-ID<\/td>\n <td>combination of EXTRA2_*<\/td>\n <td>Workflow name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_EDIT_WORKFLOW_NODE<\/td>\n <td>Object-ID<\/td>\n <td>Workflow-ID<\/td>\n <td>Node-ID<\/td>\n <td>Node name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_START_WORKFLOW<\/td>\n <td>Object-ID<\/td>\n <td>Workflow-ID<\/td>\n <td>Template-WF-ID<\/td>\n <td>Workflow name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_START_ADHOC_WORKFLOW<\/td>\n <td>Object-ID<\/td>\n <td>Workflow-ID<\/td>\n <td>0<\/td>\n <td>Workflow name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_TERMINATE_WORKFLOW<\/td>\n <td>Object-ID<\/td>\n <td>Workflow-ID<\/td>\n <td>0<\/td>\n <td>Workflow-Name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_CONFIG_FILE<\/td>\n <td>0<\/td>\n <td>0<\/td>\n <td>0<\/td>\n <td>Config file name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_CONFIG_FILE<\/td>\n <td>0<\/td>\n <td>0<\/td>\n <td>0<\/td>\n <td>Config file name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_COUNTER<\/td>\n <td>0<\/td>\n <td>Value<\/td>\n <td>0<\/td>\n <td>Counter-Name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_COUNTER<\/td>\n <td>0<\/td>\n <td>0<\/td>\n <td>0<\/td>\n <td>Counter-Name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_INCREMENT_COUNTER<\/td>\n <td>0<\/td>\n <td>Value<\/td>\n <td>0<\/td>\n <td>Counter name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_SORD_TYPE<\/td>\n <td>0<\/td>\n <td>ID (Sord.type)<\/td>\n <td>0<\/td>\n <td>Type name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_SORD_TYPE<\/td>\n <td>0<\/td>\n <td>ID (Sord.type)<\/td>\n <td>0<\/td>\n <td>Type name<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CREATE_NOTE<\/td>\n <td>Objekt-ID<\/td>\n <td>Note-ID (internal)<\/td>\n <td>combination of EXTRA2_*<\/td>\n <td>Note-Guid<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_NOTE<\/td>\n <td>Objekt-ID<\/td>\n <td>Note-ID (internal)<\/td>\n <td>combination of EXTRA2_*<\/td>\n <td>Note-Guid<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_NOTE<\/td>\n <td>Objekt-ID<\/td>\n <td>Note-ID (internal)<\/td>\n <td>combination of EXTRA2_*<\/td>\n <td>Note-Guid<\/td>\n <\/tr>\n <tr>\n <td>ACT_DM_READDOC<\/td>\n <td>Objekt-ID<\/td>\n <td>Doc-ID<\/td>\n <td>0<\/td>\n <td>&nbsp;<\/td>\n <\/tr>\n \n <tr>\n <td>ACT_IX_SUBSTITUTION_NEW<\/td>\n <td>0<\/td>\n <td>{@link Substitution#userId}<\/td>\n <td>{@link Substitution#substituteId}<\/td>\n <td>&nbsp;<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_SUBSTITUTION_CHANGE<\/td>\n <td>0<\/td>\n <td>{@link Substitution#userId}<\/td>\n <td>{@link Substitution#substituteId}<\/td>\n <td>&nbsp;<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_SUBSTITUTION_DELETE<\/td>\n <td>0<\/td>\n <td>{@link Substitution#userId}<\/td>\n <td>{@link Substitution#substituteId}<\/td>\n <td>&nbsp;<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_SUBSTITUTION_ACTIVATE<\/td>\n <td>0<\/td>\n <td>{@link Substitution#userId}<\/td>\n <td>{@link Substitution#substituteId}<\/td>\n <td>&nbsp;<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_SUBSTITUTION_DEACTIVATE<\/td>\n <td>0<\/td>\n <td>{@link Substitution#userId}<\/td>\n <td>{@link Substitution#substituteId}<\/td>\n <td>&nbsp;<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_SUBSTITUTION_TRANSFER<\/td>\n <td>0<\/td>\n <td>{@link Substitution#userId}<\/td>\n <td>{@link Substitution#substituteId}<\/td>\n <td>previous substituteId<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_SUBSTITUTION_FORWARD<\/td>\n <td>0<\/td>\n <td>{@link Substitution#userId}<\/td>\n <td>{@link Substitution#substituteId}<\/td>\n <td>previous substituteId<\/td>\n <\/tr>\n \n <\/table>\n\n <p>\n To enable or disable reporting of actions, action codes have to be transformed into ERP codes\n first. One ERP code can subsume serverel action codes. The ERP codes can be used in\n checkinReportOptions to manipulate reporting. Furthermore they can be used in\n findFirstReportInfos, FindReportInfo, to search for reported actions. The following table shows\n how actions codes are mapped to report options.\n <\/p>\n \n <table border=\"2\">\n <tr>\n <td>Action code, ReportInfoC<\/td>\n <td>ERP code, ReportOptionsC<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_ELOSTART<\/td>\n <td>ERP_LOGOPENARC<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_ELOEND<\/td>\n <td>ERP_LOGCLOSEARC<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_COMPLAIN<\/td>\n <td>ERP_LOGCOMPLAIN<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_DELETEDOCS<\/td>\n <td>ERP_LOGERADOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_KEYCHANGED<\/td>\n <td>ERP_LOGCHANGEKEY<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_USERCHANGED<\/td>\n <td>ERP_LOGUSERDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_COLORCHANGED<\/td>\n <td>ERP_LOGCHANGEKIND<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_PATHCHANGED<\/td>\n <td>ERP_LOGPATHDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_MASKCHANGED<\/td>\n <td>ERP_LOGMASKDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_PWDCHANGED<\/td>\n <td>ERP_LOGCHANGEPWD<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_CREATEDOC<\/td>\n <td>ERP_LOGCREATEDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_EDITDOC<\/td>\n <td>ERP_LOGEDITDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_CHANGEDOC<\/td>\n <td>ERP_LOGEDITDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_CHANGEATTACH<\/td>\n <td>ERP_LOGEDITDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_VIEWDOC<\/td>\n <td>ERP_LOGVIEWDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_ERASEDOC<\/td>\n <td>ERP_LOGERADOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_MOVEDOC<\/td>\n <td>ERP_LOGMOVEDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_REFDOC<\/td>\n <td>ERP_LOGREFDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_CHANGEKEY<\/td>\n <td>ERP_LOGCHANGEKEY<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_CHANGEKIND<\/td>\n <td>ERP_LOGCHANGEKIND<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_CONVERT_FORMAT<\/td>\n <td>ERP_CONVERT_FORMAT<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_CHECKOUT<\/td>\n <td>ERP_CHECKOUT<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_CHECKIN<\/td>\n <td>ERP_CHECKIN<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_CREATESOR<\/td>\n <td>ERP_LOGCREATESOR<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_CHANGESOR<\/td>\n <td>ERP_LOGEDITDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_EDITSOR<\/td>\n <td>ERP_LOGEDITDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_ERASESOR<\/td>\n <td>ERP_LOGERASOR<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_MOVESOR<\/td>\n <td>ERP_LOGMOVESOR<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_REFSOR<\/td>\n <td>ERP_LOGREFSOR<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_ADDREF<\/td>\n <td>ERP_LOGREFDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_ERASEREF<\/td>\n <td>ERP_LOGERAREF<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_MOVEREF<\/td>\n <td>ERP_LOGMOVEDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_WVNEW<\/td>\n <td>ERP_WV<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_WVCHANGE<\/td>\n <td>ERP_WV<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_WVDELETE<\/td>\n <td>ERP_WV<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_WVSEND<\/td>\n <td>ERP_WV<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_WVRECEIVE<\/td>\n <td>ERP_WV<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_WVNEWSEND<\/td>\n <td>ERP_WV<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_WVCHANGESEND<\/td>\n <td>ERP_WV<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_POSTFIRST<\/td>\n <td>ERP_POSTBOX<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_POSTDELETE<\/td>\n <td>ERP_POSTBOX<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_POSTDOCBUILD<\/td>\n <td>ERP_POSTBOX<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_POSTEDIT<\/td>\n <td>ERP_POSTBOX<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_POSTSCHLAGWORT<\/td>\n <td>ERP_POSTBOX<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_POSTCOPYTO<\/td>\n <td>ERP_POSTBOX<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_POSTMOVETO<\/td>\n <td>ERP_POSTBOX<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_POSTMOVE<\/td>\n <td>ERP_POSTBOX<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_POSTCOLLECT<\/td>\n <td>ERP_POSTBOX<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_POSTNEWOLE<\/td>\n <td>ERP_POSTBOX<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_POSTEXPAND<\/td>\n <td>ERP_POSTBOX<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_POSTIMPORT<\/td>\n <td>ERP_POSTBOX<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_POSTLAST<\/td>\n <td>ERP_POSTBOX<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_CREATEFLOWTEMPL<\/td>\n <td>ERP_CREATEFLOWTEMPL<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_EDITFLOWTEMPL<\/td>\n <td>ERP_EDITFLOWTEMPL<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_DELFLOWTEMPL<\/td>\n <td>ERP_DELFLOWTEMPL<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_STARTFLOW<\/td>\n <td>ERP_STARTFLOW<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_RECEIVEFLOW<\/td>\n <td>ERP_RECEIVEFLOW<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_FORWARDFLOW<\/td>\n <td>ERP_FORWARDFLOW<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_EDITFLOWACTIVE<\/td>\n <td>ERP_EDITFLOWACTIVE<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_DELFLOWACTIVE<\/td>\n <td>ERP_DELFLOWACTIVE<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_FLOWTIMELIMIT<\/td>\n <td>ERP_FLOWTIMELIMT<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_FLOWERRORYESNO<\/td>\n <td>ERP_FLOWERRORYESNO<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_REPORTCHANGED<\/td>\n <td>ERP_VERSCHIEDEN<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_MASKTEXTTOOLONG<\/td>\n <td>ERP_VERSCHIEDEN<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_NEWVERT<\/td>\n <td>ERP_NEWVERT<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_DELVERT<\/td>\n <td>ERP_DELVERT<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_FREEVERT<\/td>\n <td>ERP_FREEVERT<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_REMOVEVERT<\/td>\n <td>ERP_REMOVEVERT<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_SETVERT<\/td>\n <td>ERP_SETVERT<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_RESETVERT<\/td>\n <td>ERP_RESETVERT<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_SHOWDOC<\/td>\n <td>ERP_SHOWDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_SHOWSOR<\/td>\n <td>ERP_SHOWSOR<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_DELVERSION<\/td>\n <td>ERP_DELVERSION<\/td>\n <\/tr>\n <tr>\n <td>ACT_CLIENT_PICKPOST<\/td>\n <td>ERP_PICKPOST<\/td>\n <\/tr>\n <tr>\n <td>ACT_DM_READDOC<\/td>\n <td>ERP_LOGVIEWDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_LOGIN<\/td>\n <td>ERP_LOGOPENARC<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_LOGOUT<\/td>\n <td>ERP_LOGCLOSEARC<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_LOCK_ARCHIVE<\/td>\n <td>ERP_LOGCHANGEKEY<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CREATE_USER<\/td>\n <td>ERP_LOGUSERDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_USER<\/td>\n <td>ERP_LOGUSERDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_USER<\/td>\n <td>ERP_LOGUSERDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CREATE_KEY<\/td>\n <td>ERP_LOGCHANGEKEY<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_KEY<\/td>\n <td>ERP_LOGCHANGEKEY<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_KEY<\/td>\n <td>ERP_LOGCHANGEKEY<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CREATE_SORD<\/td>\n <td>ERP_LOGCREATEDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKOUT_SORD<\/td>\n <td>ERP_LOGVIEWDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_SORD<\/td>\n <td>ERP_LOGEDITDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_SORD<\/td>\n <td>ERP_LOGERADOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_REFERENCE<\/td>\n <td>ERP_LOGERAREF<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_COPY_SORD<\/td>\n <td>ERP_LOGCREATEDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_REFERENCE_SORD<\/td>\n <td>ERP_LOGREFDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_MOVE_SORD<\/td>\n <td>ERP_LOGMOVEDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_LINK_SORD<\/td>\n <td>ERP_LOGREFDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_UNLINK_SORD<\/td>\n <td>ERP_LOGREFDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKOUT_DOCVERSION<\/td>\n <td>ERP_LOGVIEWDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_DOCVERSION<\/td>\n <td>ERP_CHECKIN<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CREATE_DOC_MASK<\/td>\n <td>ERP_LOGMASKDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_DOC_MASK<\/td>\n <td>ERP_LOGMASKDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_DOC_MASK<\/td>\n <td>ERP_LOGMASKDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_REPL_NAME<\/td>\n <td>ERP_LOGKEYDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_REPORT_OPTIONS<\/td>\n <td>ERP_LOGKEYDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_REPORT<\/td>\n <td>ERP_LOGKEYDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_COLOR<\/td>\n <td>ERP_LOGCOLORDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_USER_PROFILE<\/td>\n <td>ERP_LOGKEYDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_USER_PROFILE<\/td>\n <td>ERP_LOGKEYDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CREATE_WORKFLOW<\/td>\n <td>ERP_CREATEFLOWTEMPL<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_WORKFLOW<\/td>\n <td>ERP_EDITFLOWTEMPL<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_WORKFLOW<\/td>\n <td>ERP_DELFLOWTEMPL<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_EDIT_WORKFLOW_NODE<\/td>\n <td>ERP_FORWARDFLOW<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_START_WORKFLOW<\/td>\n <td>ERP_STARTFLOW<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_START_ADHOC_WORKFLOW<\/td>\n <td>ERP_STARTFLOW<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_TERMINATE_WORKFLOW<\/td>\n <td>ERP_FORWARDFLOW<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_TAKE_WORKFLOW_NODE<\/td>\n <td>ERP_FORWARDFLOW<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_CONFIG_FILE<\/td>\n <td>ERP_LOGKEYDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_CONFIG_FILE<\/td>\n <td>ERP_LOGKEYDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_COUNTER<\/td>\n <td>ERP_LOGKEYDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_COUNTER<\/td>\n <td>ERP_LOGKEYDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_INCREMENT_COUNTER<\/td>\n <td>ERP_LOGKEYDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_SORD_TYPE<\/td>\n <td>ERP_LOGKEYDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_SORD_TYPE<\/td>\n <td>ERP_LOGKEYDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CREATE_NOTE<\/td>\n <td>ERP_LOGKEYDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_NOTE<\/td>\n <td>ERP_LOGEDITDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKOUT_NOTE<\/td>\n <td>ERP_LOGEDITDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_NOTE<\/td>\n <td>ERP_LOGEDITDOC<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_NEWVERT<\/td>\n <td>ERP_NEWVERT<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELVERT<\/td>\n <td>ERP_DELVERT<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_FREEVERT<\/td>\n <td>ERP_FREEVERT<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_REMOVEVERT<\/td>\n <td>ERP_REMOVEVERT<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_SETVERT<\/td>\n <td>ERP_SETVERT<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_RESETVERT<\/td>\n <td>ERP_RESETVERT<\/td>\n <\/tr>\n <tr>\n <td>ACT_DM_READDOC<\/td>\n <td>ERP_DM_READDOC<\/td>\n <\/tr>\n \n <tr>\n <td>ACT_IX_SUBSTITUTION_NEW<\/td>\n <td>ERP_SUBSTITUTIONS<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_SUBSTITUTION_CHANGE<\/td>\n <td>ERP_SUBSTITUTIONS<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_SUBSTITUTION_DELETE<\/td>\n <td>ERP_SUBSTITUTIONS<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_SUBSTITUTION_ACTIVATE<\/td>\n <td>ERP_SUBSTITUTIONS<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_SUBSTITUTION_DEACTIVATE<\/td>\n <td>ERP_SUBSTITUTIONS<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_SUBSTITUTION_TRANSFER<\/td>\n <td>ERP_SUBSTITUTIONS<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_SUBSTITUTION_FORWARD<\/td>\n <td>ERP_SUBSTITUTIONS<\/td>\n <\/tr>\n \n <tr>\n <td>ACT_IX_CREATE_ASPECT<\/td>\n <td>ERP_LOGASPECTDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_CHECKIN_ASPECT<\/td>\n <td>ERP_LOGASPECTDATA<\/td>\n <\/tr>\n <tr>\n <td>ACT_IX_DELETE_ASPECT<\/td>\n <td>ERP_LOGASPECTDATA<\/td>\n <\/tr>\n *\n <\/table>",
        "type": "object",
        "properties": {
          "ACT_CLIENT_REFDOC": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "EXTRA2_NOTE_PERSONAL": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_TAKE_WORKFLOW_NODE": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_VIEWDOC": {
            "format": "int32",
            "description": "Read the indexing information of a document.",
            "type": "integer"
          },
          "ACT_CLIENT_MASKTEXTTOOLONG": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "EXTRA2_WF_FINISHED": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_SUBSTITUTION_ACTIVATE": {
            "format": "int32",
            "description": "A substitution is activated with {@link IXServicePortIF#activateSubstitution(ClientInfo, String, LockZ)}.\n<p>\n The following values in {@link ReportInfo} are set:<br>\n {@link ReportInfo#extra1} = {@link Substitution#userId}<br>\n {@link ReportInfo#extra2} = {@link Substitution#substituteId}<br>\n {@link ReportInfo#extraInfo} = {@link Substitution}\n <\/p>\n \n <p>\n Overrides {@link #ACT_IX_SETVERT}\n <\/p>",
            "type": "integer"
          },
          "ACT_IX_DELETE_ASPECT": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_DELETENOTE": {
            "format": "int32",
            "description": "Delete note.",
            "type": "integer"
          },
          "ACT_IX_DELETE_USER": {
            "format": "int32",
            "type": "integer"
          },
          "EXTRA2_SSO_LOGIN": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_EDITNOTE": {
            "format": "int32",
            "description": "Overwrite note.",
            "type": "integer"
          },
          "ACT_CLIENT_CONVERT_FORMAT": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_POSTFIRST": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_CREATEFLOWTEMPL": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_CREATE_NOTE": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_CHECKIN_CONFIG_FILE": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_CREATESOR": {
            "format": "int32",
            "description": "Create new Sord object",
            "type": "integer"
          },
          "ACT_IX_SUBSTITUTION_DELETE": {
            "format": "int32",
            "description": "A substitution is deleted with\n{@link IXServicePortIF#deleteSubstitutions(ClientInfo, de.elo.ix.client.subs.DeleteSubstitutionsInfo, LockZ)}\n \n <p>\n The following values in {@link ReportInfo} are set:<br>\n {@link ReportInfo#extra1} = {@link Substitution#userId}<br>\n {@link ReportInfo#extra2} = {@link Substitution#substituteId}<br>\n {@link ReportInfo#extraInfo} = {@link Substitution}\n <\/p>\n \n <p>\n Overrides {@link #ACT_IX_DELVERT}\n <\/p>",
            "type": "integer"
          },
          "ACT_CLIENT_POSTEDIT": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_DELETE_COUNTER": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_CREATE_USER": {
            "format": "int32",
            "type": "integer"
          },
          "EXTRA2_NOTE_STAMP": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_WVCHANGESEND": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_COLORCHANGED": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_CHECKOUT": {
            "format": "int32",
            "description": "Get document file for editing.\nThis report information is written, if\n IXServicePortIF.checkoutDoc is called with lock.",
            "type": "integer"
          },
          "ACT_IX_SUBSTITUTION_TRANSFER": {
            "format": "int32",
            "description": "A substitution is transfered with\n{@link IXServicePortIF#forwardSubstitution(ClientInfo, de.elo.ix.client.subs.ForwardSubstitutionInfo, LockZ)}.\n \n <p>\n The following values in {@link ReportInfo} are set (of the new Substitution object):<br>\n {@link ReportInfo#extra1} = {@link Substitution#userId}<br>\n {@link ReportInfo#extra2} = {@link Substitution#substituteId}<br>\n {@link ReportInfo#text} = former substitute id<br>\n {@link ReportInfo#extraInfo} = {@link Substitution}\n <\/p>",
            "type": "integer"
          },
          "ACT_CLIENT_DELVERSION": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_CHECKIN_WORKFLOW": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_MINI_APP_LOGIN": {
            "format": "int32",
            "description": "Reporteintrag für Mini-App-Login.\nRID11587",
            "type": "integer"
          },
          "ACT_IX_CREATE_WORKFLOW": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_NEWVERT": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_WVCHANGE": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_STARTFLOW": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "EXTRA2_WF_ACTIVE": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_RESETVERT": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_MASKCHANGED": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_POSTRECEIVE": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_MOVE_SORD": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_CHECKIN_KEY": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_ISWRITESESSION": {
            "format": "int32",
            "description": "Used to report a write access session.",
            "type": "integer"
          },
          "ACT_IX_LINK_SORD": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_SHOWSOR": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_DELVERT": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "mbComment": {
            "type": "string"
          },
          "ACT_IX_CHECKIN_DOC_MASK": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_EDITFLOWTEMPL": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "EXTRA2_SIGNATURE": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_DELETEDOCS": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_POSTSCHLAGWORT": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_FIRST": {
            "format": "int32",
            "description": "Indexserver specific report codes are higher than ACT_IX_FIRST",
            "type": "integer"
          },
          "ACT_IX_CREATE_DOCUMENT": {
            "format": "int32",
            "type": "integer"
          },
          "EXTRA2_FORCE": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_COPY_SORD": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_POSTIMPORT": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_POSTMOVE": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_DELETE_NOTE": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_RESETVERT": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_ERASEREF": {
            "format": "int32",
            "description": "Delete/undelete document.\n<table border=\"2\">\n <tr>\n <td>ReportInfo.extra1<\/td>\n <td>parent ID.<\/td>\n <\/tr>\n <tr>\n <td>ReportInfo.extra2<\/td>\n <td>0 if deleted, 1 if undeleted.<\/td>\n <\/tr>\n <\/table>",
            "type": "integer"
          },
          "ACT_IX_LOGIN": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_CHECKIN_USER_PROFILE": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_ERASESOR": {
            "format": "int32",
            "description": "Delete/undelete document.\n<table border=\"2\">\n <tr>\n <td>ReportInfo.extra1<\/td>\n <td>parent ID.<\/td>\n <\/tr>\n <tr>\n <td>ReportInfo.extra2<\/td>\n <td>0 if deleted, 1 if undeleted.<\/td>\n <\/tr>\n <tr>\n <td>ReportInfo.text<\/td>\n <td>sord name.<\/td>\n <\/tr>\n <\/table>",
            "type": "integer"
          },
          "ACT_IX_CHECKOUT_DOCVERSION": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_POSTCOLLECT": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_CHECKIN_USER": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_KEYCHANGED": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_START_WORKFLOW": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_REFERENCE_SORD": {
            "format": "int32",
            "type": "integer"
          },
          "EXTRA2_NOTE_NORMAL": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_DM_READDOC": {
            "format": "int32",
            "description": "Read document file from DM.",
            "type": "integer"
          },
          "EXTRA2_WF_TERMINATE": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_CHECKIN_REPL_NAME": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_POSTEXPAND": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_EDITDOC": {
            "format": "int32",
            "description": "Write the indexing information of a document.",
            "type": "integer"
          },
          "ACT_CLIENT_POSTDOCBUILD": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_POSTCOPYTO": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_INCREMENT_COUNTER": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_CHECKIN_SORD_TYPE": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_WVFIRST": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_CREATE_DOC_MASK": {
            "format": "int32",
            "type": "integer"
          },
          "EXTRA2_PREVIEW": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_ELOSTART": {
            "format": "int32",
            "description": "Login.",
            "type": "integer"
          },
          "ACT_IX_CHECKIN_DOCVERSION": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_CHECKIN": {
            "format": "int32",
            "description": "Checkin a new document file. ReportInfo.\nextra1 ist set to the new document ID",
            "type": "integer"
          },
          "ACT_CLIENT_PWDCHANGED": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_DELETE_USER_PROFILE": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_CHECKIN_NOTE": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_DELEGATE_WORKFLOW": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_DELVERT": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_SUBSTITUTION_CHANGE": {
            "format": "int32",
            "description": "An existing substitution is changed with\n{@link IXServicePortIF#checkinSubstitutions(ClientInfo, de.elo.ix.client.subs.CheckinSubstitutionsInfo, de.elo.ix.client.subs.SubstitutionZ, LockZ)}\n \n <p>\n The following values in {@link ReportInfo} are set:<br>\n {@link ReportInfo#extra1} = {@link Substitution#userId}<br>\n {@link ReportInfo#extra2} = {@link Substitution#substituteId}<br>\n {@link ReportInfo#extraInfo} = {@link Substitution}\n <\/p>",
            "type": "integer"
          },
          "ACT_IX_CREATE_ASPECT": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_EDITSOR": {
            "format": "int32",
            "description": "Edited new Sord object",
            "type": "integer"
          },
          "EXTRA2_ANNOTATION_NOTE": {
            "format": "int32",
            "type": "integer"
          },
          "EXTRA2_INDEXSEARCH": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_CHANGE_ACL": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_CHANGE_DELDATE": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_SUBSTITUTION_NEW": {
            "format": "int32",
            "description": "A new substitution is checked in with\n{@link IXServicePortIF#checkinSubstitutions(ClientInfo, de.elo.ix.client.subs.CheckinSubstitutionsInfo, de.elo.ix.client.subs.SubstitutionZ, LockZ)}\n \n <p>\n The following values in {@link ReportInfo} are set:<br>\n {@link ReportInfo#extra1} = {@link Substitution#userId}<br>\n {@link ReportInfo#extra2} = {@link Substitution#substituteId}<br>\n {@link ReportInfo#extraInfo} = {@link Substitution}\n <\/p>\n \n <p>\n Overrides {@link #ACT_IX_NEWVERT}\n <\/p>",
            "type": "integer"
          },
          "ACT_CUSTOM_FIRST": {
            "format": "int32",
            "description": "Custom client specific report codes are higher than ACT_CUSTOM_FIRST",
            "type": "integer"
          },
          "ACT_IX_SUBSTITUTION_FORWARD": {
            "format": "int32",
            "description": "A substitution is forwarded with\n{@link IXServicePortIF#forwardSubstitution(ClientInfo, de.elo.ix.client.subs.ForwardSubstitutionInfo, LockZ)}.\n \n <p>\n The following values in {@link ReportInfo} are set (of the new Substitution object):<br>\n {@link ReportInfo#extra1} = {@link Substitution#userId}<br>\n {@link ReportInfo#extra2} = {@link Substitution#substituteId}<br>\n {@link ReportInfo#text} = former substitute id<br>\n {@link ReportInfo#extraInfo} = {@link Substitution}\n <\/p>",
            "type": "integer"
          },
          "ACT_CLIENT_FLOWTIMELIMIT": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_POSTLAST": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_DELETE_REFERENCE": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_DELFLOWTEMPL": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_POSTNEWOLE": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_DELFLOWACTIVE": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "EXTRA2_LOCK": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_CHANGEDOC": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_LOGOUT": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_SHOWDOC": {
            "format": "int32",
            "description": "Get document file to display (not to edit).\nThis report information is written, if\n IXServicePortIF.checkoutDoc is called without lock.",
            "type": "integer"
          },
          "ACT_CUSTOM_LAST": {
            "format": "int32",
            "description": "Custom client specific report codes are lower than ACT_CUSTOM_LAST",
            "type": "integer"
          },
          "EXTRA2_ANNOTATION_MARKER": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_WVNEWSEND": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_CHECKIN_SORD": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_ADDREF": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_LAST": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_REFSOR": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_SETVERT": {
            "format": "int32",
            "type": "integer"
          },
          "EXTRA2_DOCVERSION": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_WVDELETE": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_MOVESOR": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_WVRECEIVE": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_CREATENOTE": {
            "format": "int32",
            "description": "Create note.",
            "type": "integer"
          },
          "ACT_CLIENT_PATHCHANGED": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_USERCHANGED": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_MOVEREF": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_WVNEW": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_TERMINATE_WORKFLOW": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_REPORTCHANGED": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "EXTRA2_WF_TEMPLATE": {
            "format": "int32",
            "type": "integer"
          },
          "EXTRA2_ALL_NOTES_OF_SORD": {
            "format": "int32",
            "description": "Extra2 value used when all notes of a Sord are read.",
            "type": "integer"
          },
          "ACT_CLIENT_POSTDELETE": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_DELETE_DOC_MASK": {
            "format": "int32",
            "type": "integer"
          },
          "EXTRA2_FINALLY": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_NONE": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_DELETE_KEY": {
            "format": "int32",
            "type": "integer"
          },
          "mbAction": {
            "type": "string"
          },
          "ACT_IX_CHECKOUT_SORD": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_UNLINK_SORD": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_FORWARDFLOW": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "mbUserName": {
            "type": "string"
          },
          "ACT_CLIENT_CHANGESOR": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_FREEVERT": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_LOCK_ARCHIVE": {
            "format": "int32",
            "type": "integer"
          },
          "mbActTimeISO": {
            "type": "string"
          },
          "ACT_CLIENT_RECEIVEFLOW": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_DELETE_SORD": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_CHECKIN_COUNTER": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_CHECKIN_COLOR": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_SEARCH": {
            "format": "int32",
            "description": "Used to report search completed",
            "type": "integer"
          },
          "ACT_IX_CHECKOUT_NOTE": {
            "format": "int32",
            "type": "integer"
          },
          "EXTRA2_REPORT_AS_LOGIN": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_DELETE_SORD_TYPE": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_DELETE_REPORT": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_CHECKIN_ASPECT": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_CHANGEATTACH": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_VIEWSOR": {
            "format": "int32",
            "description": "Checkout Sord object without lock",
            "type": "integer"
          },
          "ACT_CLIENT_EDITFLOWACTIVE": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_CHECKIN_REPORT_OPTIONS": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_EDIT_WORKFLOW_NODE": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_POSTMOVETO": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_START_ADHOC_WORKFLOW": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_REMOVEVERT": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_WVSEND": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_CHANGEKIND": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_CREATE_SORD": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_SUBSTITUTION_DEACTIVATE": {
            "format": "int32",
            "description": "A substitution is deactivated with {@link IXServicePortIF#deactivateSubstitution(ClientInfo, String, LockZ)}\n<p>\n The following values in {@link ReportInfo} are set:<br>\n {@link ReportInfo#extra1} = {@link Substitution#userId}<br>\n {@link ReportInfo#extra2} = {@link Substitution#substituteId}<br>\n {@link ReportInfo#extraInfo} = {@link Substitution}\n <\/p>\n \n <p>\n Overrides {@link #ACT_IX_REMOVEVERT}\n <\/p>",
            "type": "integer"
          },
          "ACT_CLIENT_NEWVERT": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_FREEVERT": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_IX_DELETE_CONFIG_FILE": {
            "format": "int32",
            "type": "integer"
          },
          "EXTRA2_ATTACHMENT": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_CHANGEKEY": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_CREATEDOC": {
            "format": "int32",
            "description": "Create a new document entry (for indexing information) in the archive database. ReportInfo.\ntext\n contains the document name (short description).",
            "type": "integer"
          },
          "ACT_CLIENT_FLOWERRORYESNO": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_IX_DELETE_WORKFLOW": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_ERASEDOC": {
            "format": "int32",
            "description": "Delete/undelete document.\n<table border=\"2\">\n <tr>\n <td>ReportInfo.extra1<\/td>\n <td>parent ID.<\/td>\n <\/tr>\n <tr>\n <td>ReportInfo.extra2<\/td>\n <td>0 if deleted, 1 if undeleted.<\/td>\n <\/tr>\n <tr>\n <td>ReportInfo.text<\/td>\n <td>sord name.<\/td>\n <\/tr>\n <\/table>",
            "type": "integer"
          },
          "ACT_IX_CHANGE_RS": {
            "format": "int32",
            "type": "integer"
          },
          "ACT_CLIENT_MOVEDOC": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_PICKPOST": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_COMPLAIN": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_WVLAST": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_SETVERT": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_REMOVEVERT": {
            "format": "int32",
            "description": "unused",
            "type": "integer"
          },
          "ACT_CLIENT_ELOEND": {
            "format": "int32",
            "description": "Logout.",
            "type": "integer"
          },
          "ACT_IX_CREATE_KEY": {
            "format": "int32",
            "type": "integer"
          },
          "EXTRA2_WF_CANCEL": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "WFNodeMatrix": {
        "description": "<p>\nStores the relationship between workflow nodes\n <\/p>\n <p>\n Administers the bridges(connections) in a workflow diagram. These are objects of type\n WorkFlowNodeAssoc.\n <\/p>\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office\n <\/p>",
        "type": "object",
        "properties": {
          "assocs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFNodeAssoc"
            }
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutDocMask": {
        "type": "object",
        "properties": {
          "docMaskZ": {
            "$ref": "#/components/schemas/DocMaskZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "maskId": {
            "type": "string"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "SessionInfoParams": {
        "type": "object"
      },
      "BRequest_FeedService_findPostActions": {
        "type": "object",
        "properties": {
          "actionGuid": {
            "type": "string"
          },
          "actionZ": {
            "$ref": "#/components/schemas/ActionZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_createRsaKeys": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "UpdaterConfig": {
        "description": "Configuration and status of updater process.",
        "type": "object",
        "properties": {
          "lastException": {
            "description": "Last exception occured during processing.",
            "type": "string"
          },
          "updateNewerThan": {
            "format": "date-time",
            "type": "string"
          },
          "progressInPercent": {
            "format": "int32",
            "type": "integer"
          },
          "intervalMinutes": {
            "format": "int32",
            "type": "integer"
          },
          "ixid": {
            "description": "This Indexserver instance is processing the update.",
            "type": "string"
          },
          "nextRunAt": {
            "format": "date-time",
            "type": "string"
          },
          "lockName": {
            "description": "Process runs under this user account.",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/SearchIndexerStatus"
          }
        }
      },
      "AggregationResult": {
        "description": "Return object for AggregationQueries.\n<br>\n Consists of name and type and a type specific part. This type specific part contains actual\n results according to its AggregationType.<br>\n Hence, in each instance of AggregationResult is only one type specific part valid. All other\n parts are not valid and equal to null.",
        "type": "object",
        "properties": {
          "histogramResult": {
            "description": "Type specific part: Result of an aggregation of type HISTOGRAM.",
            "$ref": "#/components/schemas/HistogramAggregationResult"
          },
          "singleValueMetricsResult": {
            "description": "Type specific part: Result of an aggregation of a single-value-metrics type (MIN, MAX, SUM,\nAVG).",
            "$ref": "#/components/schemas/SingleValueMetricsAggregationResult"
          },
          "valueCountResult": {
            "description": "Type specific part: Result of an aggregation of type VALUE_COUNT.",
            "$ref": "#/components/schemas/ValueCountAggregationResult"
          },
          "filterResult": {
            "description": "Type specific part: Result of an aggregation of type FILTER.",
            "$ref": "#/components/schemas/FilterAggregationResult"
          },
          "termsResult": {
            "description": "Type specific part: Result of an aggregation of type TERMS.",
            "$ref": "#/components/schemas/TermsAggregationResult"
          },
          "name": {
            "description": "Name of the aggregation.",
            "type": "string"
          },
          "type": {
            "description": "Type of aggregation.",
            "$ref": "#/components/schemas/AggregationTypeE"
          },
          "rangeResult": {
            "description": "Type specific part: Result of an aggregation of type RANGE.",
            "$ref": "#/components/schemas/RangeAggregationResult"
          },
          "dateHistogramResult": {
            "description": "Type specific part: Result of an aggregation of type DATE_HISTOGRAM.",
            "$ref": "#/components/schemas/DateHistogramAggregationResult"
          }
        }
      },
      "MoveDocumentsInfo": {
        "description": "Parameter class of the function\n{@link IXServicePortIF#moveDocuments(ClientInfo, MoveDocumentsInfo)}.",
        "type": "object",
        "properties": {
          "sourcePathId": {
            "description": "ID of the source storage path.",
            "type": "string"
          },
          "endDate": {
            "description": "End date.",
            "type": "string"
          },
          "startDate": {
            "description": "Start date.",
            "type": "string"
          },
          "targetPathId": {
            "description": "ID of the target storage path.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_queryJobState": {
        "type": "object",
        "properties": {
          "jobGuid": {
            "type": "string"
          },
          "activeJobs": {
            "type": "boolean"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "finishedJobs": {
            "type": "boolean"
          },
          "fullInfo": {
            "type": "boolean"
          }
        }
      },
      "WFNodeZ": {
        "description": "This class encapsulates the constants of the WFNodeC class.\n<p>\n Copyright: Copyright (c) 2011\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants from the WFNodeC class.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_delegateWorkFlowNode": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "delegateNodeInfo": {
            "$ref": "#/components/schemas/WFDelegateNodeInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "ListOfQueryObject": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/QueryObject"
        }
      },
      "ConfigResultOptionsC": {
        "description": "Predefined objects to be used as parameter in\n{@link ConfigService#checkoutConfigurations(de.elo.ix.client.ClientInfo, ConfigInfo, ConfigResultOptions)}.",
        "type": "object",
        "properties": {
          "DEFAULT_EXPLODED": {
            "$ref": "#/components/schemas/ConfigResultOptions"
          },
          "DEFAULT": {
            "description": "Default options.",
            "$ref": "#/components/schemas/ConfigResultOptions"
          }
        }
      },
      "ForwardWorkflowNodeResult": {
        "type": "object"
      },
      "ListOfDomain": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Domain"
        }
      },
      "BRequest_RawStreamService_upload": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "is": {
            "$ref": "#/components/schemas/BStreamReference"
          },
          "params": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "LoginScriptOptions": {
        "description": "Options for function {@link IXServerEvents#onBeforeLogin(IXServerEventsContext, String, LoginScriptOptions)}",
        "type": "object",
        "properties": {
          "clientName": {
            "description": "Unified Name for the client application.\nThe value of this field must be one value of\n {{@link LoginScriptOptionsC}.CLIENT_NAME_*}.",
            "type": "string"
          },
          "techUser": {
            "description": "User name used for authentication. This member is only valid for run-as logins.\nIt contains the\n name of the technical user used for authentication.",
            "type": "string"
          }
        }
      },
      "MyELOService": {
        "type": "object"
      },
      "HashTag": {
        "description": "This class represents a HashTag",
        "type": "object",
        "properties": {
          "hstgName": {
            "description": "HashTag Name.",
            "type": "string"
          },
          "lastUsedIso": {
            "description": "Last used.\nIt holds the ISO formatted date of the last use of this HashTag In order to convert\n this value into a date object, invoke function {@link de.elo.ix.client.IXConnection#isoToDate}.",
            "type": "string"
          },
          "hstgGuid": {
            "description": "HashTag GUID. Unique identifier.",
            "type": "string"
          },
          "createDateIso": {
            "description": "Create date. It holds the ISO formatted create date in the time zone of the client application.\nIn order to convert this value into a date object, invoke function\n {@link de.elo.ix.client.IXConnection#isoToDate}.",
            "type": "string"
          },
          "tStamp": {
            "description": "Timestamp for replication.",
            "type": "string"
          },
          "counter": {
            "format": "int32",
            "description": "Counter. Counts how often this HashTag is used.",
            "type": "integer"
          },
          "status": {
            "format": "int32",
            "description": "Status.",
            "type": "integer"
          }
        }
      },
      "GroupingType": {
        "description": "{@link ConfigService#checkoutConfigurations(de.elo.ix.client.\nClientInfo, ConfigInfo, ConfigResultOptions)}\n maps the returned configuration entries on this value types.",
        "type": "object",
        "properties": {
          "LEGACY": {
            "description": "The {@link ConfigRecord#groupId} values or {@link ConfigRecord#key} values are used as map keys\nin {@link ConfigResult#configRecords}. Value groupId is preferred.",
            "$ref": "#/components/schemas/GroupingType"
          },
          "BY_GROUP": {
            "description": "The {@link ConfigRecord#groupId} values are used as map keys in\n{@link ConfigResult#configRecords}.",
            "$ref": "#/components/schemas/GroupingType"
          },
          "BY_KEY": {
            "description": "The {@link ConfigRecord#key} values are used as map keys in {@link ConfigResult#configRecords}.",
            "$ref": "#/components/schemas/GroupingType"
          }
        }
      },
      "BRequest_IXServicePortIF_collectWorkFlowNodes": {
        "type": "object",
        "properties": {
          "nodeName": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "onlyStartNodes": {
            "type": "boolean"
          },
          "userIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "onlyActive": {
            "type": "boolean"
          },
          "objId": {
            "type": "string"
          },
          "enterDateIso": {
            "type": "string"
          },
          "exitDateIso": {
            "type": "string"
          },
          "nodeType": {
            "format": "int32",
            "type": "integer"
          },
          "flowName": {
            "type": "string"
          },
          "wfTypeZ": {
            "$ref": "#/components/schemas/WFTypeZ"
          }
        }
      },
      "ListOfAspectInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AspectInfo"
        }
      },
      "SortOrderC": {
        "description": "This class contains constants for sorting of archive entries and search results.",
        "type": "object",
        "properties": {
          "dummy": {
            "format": "int32",
            "type": "integer"
          },
          "XDATE": {
            "format": "int32",
            "description": "Subitems are sorted by external date.",
            "type": "integer"
          },
          "IDATE": {
            "format": "int32",
            "description": "Subitems are sorted by internal date.",
            "type": "integer"
          },
          "IXDATE": {
            "format": "int32",
            "description": "Subitems are sorted by external date descending.",
            "type": "integer"
          },
          "IIDATE": {
            "format": "int32",
            "description": "Subitems are sorted by internal date descending.",
            "type": "integer"
          },
          "ALPHA": {
            "format": "int32",
            "description": "Subitems are sorted by name.",
            "type": "integer"
          },
          "USERNAME": {
            "format": "int32",
            "description": "Used for the ascending ordering of threads by username.\nThis value can be used for\n {@link FindBackgroundThreadOptions#sortOrder}.",
            "type": "integer"
          },
          "MANUAL": {
            "format": "int32",
            "description": "Subitems are sorted manually.",
            "type": "integer"
          },
          "IALPHA": {
            "format": "int32",
            "description": "Subitems are sorted by name descending.",
            "type": "integer"
          },
          "NONE": {
            "format": "int32",
            "type": "integer"
          },
          "IUSERNAME": {
            "format": "int32",
            "description": "Used for the descending ordering of threads by username.\nThis value can be used for\n {@link FindBackgroundThreadOptions#sortOrder}.",
            "type": "integer"
          },
          "DEFAULT": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "IntListValue": {
        "description": "A list of integer values which is joined by AND or OR depending on <code>andOperator<\/code>.\n<br>\n Defaults to an OR-disjunction.",
        "type": "object",
        "properties": {
          "valueList": {
            "description": "A list of integer values which is joined by AND or OR depending on <code>andOperator<\/code>.",
            "$ref": "#/components/schemas/ListOfIntValue"
          },
          "andOperator": {
            "description": "Connective of list elements (default is OR (=false) ).",
            "type": "boolean"
          }
        }
      },
      "BRequest_IXServicePortIF_startExportExt": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "options": {
            "$ref": "#/components/schemas/ExportExtOptions"
          }
        }
      },
      "BResult_809229049": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CryptInfo"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_forwardSubstitution": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "forwardSubstitutionInfo": {
            "$ref": "#/components/schemas/ForwardSubstitutionInfo"
          }
        }
      },
      "IndexServerForArchive": {
        "description": "<p>\nAssociation between Indexserver URL and archive name.\n <\/p>\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "arcName": {
            "description": "Archive name.",
            "type": "string"
          },
          "url": {
            "description": "Index Server URL.",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_adminMode": {
        "type": "object",
        "properties": {
          "mode": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "FindForKeywordingRelation": {
        "description": "Criteria for searching sords for keywording relation.",
        "type": "object",
        "properties": {
          "filter": {
            "description": "Filter string applied to short description of Sords.\nThis filter has to match {@link Sord#name}\n to append the Sord to the result. The filter can have one wildcard character at the end that\n matches any character, see {@link SessionOptionsC#DB_WILDCARDS}, wildcard for any character\n (asterix by default).",
            "type": "string"
          },
          "docMaskLine": {
            "description": "Keywording field definition for which Sord relations should be found.\nThis object must contain\n {@link DocMaskLine#allowedMaskIdsForKeywordingRelation}. A sord object must be assigned to one\n of this keywording forms to be added to the result list. This field is relevant if the mask of\n the referencing Sord has data organisation {@link DocMaskC#DATA_ORGANISATION_OBJKEYS} or\n {@link DocMaskC#DATA_ORGANISATION_TABLE}.",
            "$ref": "#/components/schemas/DocMaskLine"
          },
          "aspectLine": {
            "description": "Keywording field definition for which Sord relations should be found.\nThis object must contain\n {@link AspectLine#allowedMaskIdsForKeywordingRelation}. A sord object must be assigned to one\n of this keywording forms to be added to the result list. This field is relevant if the mask of\n the referencing Sord has data organisation {@link DocMaskC#DATA_ORGANISATION_ASPECT}.",
            "$ref": "#/components/schemas/AspectLine"
          }
        }
      },
      "ListOfDoubleValue": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DoubleValue"
        }
      },
      "BRequest_MyELOService_checkState": {
        "type": "object",
        "properties": {
          "userGuidOrID": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "sinceDateIso": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_getConstants": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "EventListener": {
        "description": "This class describes an event bus listener.",
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventFilter"
            }
          }
        }
      },
      "SearchIndexerStatus": {
        "type": "object",
        "properties": {
          "Sleeping": {
            "$ref": "#/components/schemas/SearchIndexerStatus"
          },
          "Running": {
            "$ref": "#/components/schemas/SearchIndexerStatus"
          },
          "Inactive": {
            "$ref": "#/components/schemas/SearchIndexerStatus"
          }
        }
      },
      "WFNodeMatrixC": {
        "description": "These constants describe the type of connection between two nodes.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "IF_TRUE": {
            "format": "int32",
            "description": "This connection is the TRUE connection following a decision node.\nThis connection will be\n utilised when the IF requirement is fulfilled.",
            "type": "integer"
          },
          "IF_OVERTIME": {
            "format": "int32",
            "description": "This connection is only for the case of overtime.",
            "type": "integer"
          },
          "ALWAYS": {
            "format": "int32",
            "description": "Connection type for non-decision nodes.\nThe connection will always be utilised to reach the\n next node. No conditions have to be fulfilled.",
            "type": "integer"
          },
          "IF_FALSE": {
            "format": "int32",
            "description": "This connection is the FALSE connection following a decision node.\nThis connection will be\n utilised when the IF requirement is not fulfilled.",
            "type": "integer"
          }
        }
      },
      "ContentStreamC": {
        "description": "Constants related to {@link ContentStream}.",
        "type": "object",
        "properties": {
          "CONTENT_LENGTH_UNKNOWN": {
            "description": "Pseudo content length for streams of unknown size.",
            "type": "string"
          }
        }
      },
      "Keyword": {
        "type": "object",
        "properties": {
          "add": {
            "description": "<p>\nPrefix the text of a child keyword with the text of this keyword. This member is interpreted in\n <code>cookKeywords<\/code>. The following relationship exists between the members\n <code>enabled, add, raw<\/code>\n <\/p>\n <table border=\"2\">\n <tr>\n <td>condition<\/td>\n <td>conclusion<\/td>\n <\/tr>\n <tr>\n <td><code>add=true<\/code><\/td>\n <td><code>enabled=false, raw=true<\/code><\/td>\n <\/tr>\n <tr>\n <td><code>enabled=true<\/code><\/td>\n <td><code>add=false, raw=any<\/code><\/td>\n <\/tr>\n <\/table>",
            "type": "boolean"
          },
          "displayValue": {
            "description": "Only used in keywords for aspect lines with type = {@link AspectLineC#TYPE_STATUS}.\nThis field\n contains the translated text of the status value (field {@link text}) into user's language.",
            "type": "string"
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Keyword"
            }
          },
          "textTranslationKey": {
            "description": "Translation key for text.",
            "type": "string"
          },
          "raw": {
            "description": "The function <code>cookKeyword()<\/code> must be called for this keyword in order to use it for\nan index property. This is because it contains placeholders that must be substituted or one of\n the parent keywords should be added.",
            "type": "boolean"
          },
          "id": {
            "description": "Keyword ID. Consists of: groupid + orderid, orderid begins with a \".\".",
            "type": "string"
          },
          "text": {
            "description": "Keyword text. This term is assigned to an index property.\nThe member <code>raw<\/code> should be\n checked before this term is used. This text can be translated into reps. from the users\n language: set <code>SessionOptionsC.TRANSLATE_TERM<\/code>.",
            "type": "string"
          },
          "enabled": {
            "description": "If true, this keyword can be used as a value for an index property.\nOtherwise its only purpose\n is to structure the keyword hierachy.",
            "type": "boolean"
          }
        }
      },
      "ArrayOfFindByFulltextCtrlResultItem": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FindByFulltextCtrlResultItem"
        }
      },
      "ConfigInfo": {
        "description": "This class defines select criteria for reading configuration data.",
        "type": "object",
        "properties": {
          "component": {
            "description": "Component name. Filters {@link ConfigRecord#component} values.",
            "type": "string"
          },
          "instanceId": {
            "description": "Instance ID. Filters {@link ConfigRecord#instanceId} values.",
            "type": "string"
          },
          "level": {
            "format": "int32",
            "description": "Priority level. Select entries with the highest priority that is lower or equal to this value.",
            "type": "integer"
          },
          "groupId": {
            "description": "Group ID. Filters {@link ConfigRecord#groupId} values.",
            "type": "string"
          },
          "packageName": {
            "description": "Package name or GUID. Filters {@link ConfigRecord#packageName} values.",
            "type": "string"
          },
          "key": {
            "description": "Entry key. Filters {@link ConfigRecord#key} values. This value supports wildcards at its end.",
            "type": "string"
          }
        }
      },
      "MapHist": {
        "description": "Version history for maps.",
        "type": "object",
        "properties": {
          "histGuid": {
            "description": "GUID of the SordHist object.",
            "type": "string"
          },
          "timeStampUTC": {
            "description": "Timestamp of the change in the timezone of the client, in UTC form.\nThe format is\n JJJJ.MM.DD.hh.mm.ss",
            "type": "string"
          },
          "workStation": {
            "description": "The name of the computer from which the change was carried out.\nThis is the parameter\n clientComputer which is provided by the ix.login function.",
            "type": "string"
          },
          "timeStampLocal": {
            "description": "Timestamp of the change in the timezone of the client. The format is JJJJ.MM.DD.hh.mm.\nss",
            "type": "string"
          },
          "mapId": {
            "description": "ID of the map object.",
            "type": "string"
          },
          "histSource": {
            "format": "int32",
            "description": "Identifies the application with which changes were made to the keywording.",
            "type": "integer"
          },
          "mapGuid": {
            "description": "GUID of the map object.",
            "type": "string"
          },
          "userName": {
            "description": "The name of the user who carried out the changes.",
            "type": "string"
          },
          "histItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MapHistItem"
            }
          },
          "userId": {
            "format": "int32",
            "description": "The user who carried out the changes.",
            "type": "integer"
          }
        }
      },
      "AspectInfo": {
        "description": "Aspect info object.\n<p>\n Copyright: Copyright (c) 2020\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "translationKey": {
            "description": "Translation-keyword for {@link AspectInfo#name}.",
            "type": "string"
          },
          "displayName": {
            "description": "Translated name of this aspect.\nThis value is read-only and therefore ignored when changed and\n checked-in. Furthermore, the Indexserver always translates this value into the client language\n regardless whether the translation settings is enabled or not.",
            "type": "string"
          },
          "name": {
            "description": "Aspect name.",
            "type": "string"
          },
          "guid": {
            "description": "GUID",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "Aspect ID.",
            "type": "integer"
          },
          "packageName": {
            "description": "Package name.",
            "type": "string"
          }
        }
      },
      "BResult_1663767661": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/WFDiagram"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_createActivity": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "objId": {
            "type": "string"
          },
          "projectName": {
            "type": "string"
          }
        }
      },
      "ObjKeyData": {
        "description": "<p>\nInternal use.\n <\/p>",
        "type": "object",
        "properties": {
          "udata": {
            "description": "DB column: okeyudata",
            "type": "string"
          },
          "data": {
            "description": "DB column: okeydata",
            "type": "string"
          },
          "objId": {
            "format": "int32",
            "description": "DB column: parentid",
            "type": "integer"
          },
          "name": {
            "description": "DB column: okeyname",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "DB column: okeyno",
            "type": "integer"
          },
          "odouble": {
            "format": "double",
            "description": "DB column: odouble",
            "type": "number"
          },
          "sdata": {
            "description": "DB column: okeysdata",
            "type": "string"
          }
        }
      },
      "SessionOptionsC": {
        "description": "Constants of SessionOptions.",
        "type": "object",
        "properties": {
          "ISO_DATE_WITH_DELIMS": {
            "description": "Format ISO date values with delimiter characters defined in ISO 8601.",
            "type": "string"
          },
          "TICKET_FROM_COOKIE": {
            "description": "This value can be used as {@link ClientInfo#ticket} or in IXConnFactory#createFromTicket() if\nthe server should use the session cookie as authentication token. EIX-393",
            "type": "string"
          },
          "CLIENT_APP_VERSION": {
            "description": "Client application version. Optional.",
            "type": "string"
          },
          "CLIENT_APP_NAME": {
            "description": "Client application name. Optional.",
            "type": "string"
          },
          "DIRECT_DM_ACCESS": {
            "description": "This option specifies which application is addressed in URLs to upload and download documents.\nIf direct access is true, the URLs address the DM directly. Otherwise the documents are routed\n though the IX.",
            "type": "string"
          },
          "DOWNLOAD_URL_TYPE": {
            "description": "Define the download URL type. IX can generate several types of URLs to download documents.\nPossible values are the constants DOWNLOAD_URL_TYPE_*. The default value is\n DOWNLOAD_URL_TYPE_TEMPORARY.",
            "type": "string"
          },
          "APPLY_ALL_BLACKENINGS": {
            "description": "Apply all blackenings on documents regardless of their ACL.\nELOtr sets this option as \"true\" to\n receive documents with all blackenings. This ensures that blackened parts cannot be retrieved\n by a fulltext search. TTS003793",
            "type": "string"
          },
          "PUBLIC_DOWNLOAD_EXPIREDTIME": {
            "description": "Define the expired time of public downloads.",
            "type": "string"
          },
          "HANDLE_IX_SERVER_EVENTS": {
            "description": "This session option declares that the IXConnection handles server events declared in\n{@link IXServerEvents}.",
            "type": "string"
          },
          "COPY_OBJKEYS_IN_BACKGROUND": {
            "description": "Control the synchronicity of copying objkeys to child entries.",
            "type": "string"
          },
          "CLIENT_APP_TYPE": {
            "description": "Client application type. Mandatory.\nThe appropriate value for partner applications is\n TYPE_PARTNER_APPLICATION unless a special type is arranged.",
            "type": "string"
          },
          "TRANSLATE_TERMS": {
            "description": "Translate keywording forms names, index names, index values and keyword lists into resp.\nfrom\n the language given in <code>ClientInfo.language<\/code>.",
            "type": "string"
          },
          "DOWNLOAD_URL_TYPE_PUBLIC_VERSION": {
            "description": "Generate public download URLs for the document version, that expire after a given time..\nOnly a\n given number of downloads is allowed. IX generates URLs that can be used by non ELO users. The\n URL includes a strongly encrypted ID of the document or attachment version. AES is used to\n encrypt the URL parameters. The AES key is read from the IX option AESEncryptionKey.\n \n <br/>\n <b>ATTENTION: If the key AESEncryptionKey is changed, all URLs generated before become\n invalid!<\/b>\n \n <br/>\n <b>ATTENTION: No access checking is performed, when the document is downloaded from the URL!\n Everyone who knows the URL and has access to ELOix can download the document. This option\n cannot not be used for documents with blackening. No URL is generated for those documents.<\/b>\n \n <br/>\n Authentication is not required or performed.",
            "type": "string"
          },
          "HTTP_SESSION_TICKET": {
            "description": "Attribute name to which Indexserver maps a Ticket in the HTTP Session",
            "type": "string"
          },
          "HTTP_SESSION_IX_CONNECTION": {
            "description": "Attribute name to which Indexserver maps an IXConnection in the HTTP Session",
            "type": "string"
          },
          "DISABLE_LOGGING_API_CALLS": {
            "description": "Disable logging of API calls for this session.\nEIX-3303",
            "type": "string"
          },
          "DECRYPT_DOCUMENTS": {
            "description": "Set this option to decrypt documents on checkout.\nA secure connection (HTTPS) is required to\n use this option.",
            "type": "string"
          },
          "DB_ESCAPE_CHAR": {
            "description": "This character is used in the SQL statement, if the search criterias contain one of the SQL\nwildcard characters: &quot;%&quot;, &quot;_&quot;. It defaults to &quot;¶&quot; which is a\n reserved character in ELO and a valid escape character for the most SQL servers and\n configurations. Unless a search kritera contains &quot;¶&quot; or the SQL server does not allow\n the use of this character (e. g. ORACLE, UTF-8) the value has to be changed. Hint:\n Indexserver-API uses &quot;*&quot; as the only valid wildcard. The escape character must not be\n used in the search criterias.",
            "type": "string"
          },
          "DOC_URL_BASE": {
            "description": "Define the first part of the document URLs generated from Indexserver.\nSee configuration option\n documentUrlBase on the Indexserver option page.",
            "type": "string"
          },
          "DB_WILDCARDS": {
            "description": "This characters are used as wildcards in search terms.\nThe first wildcard is used for zero or\n more characters. The second wildcard is used for exactly one character. By default (if this\n member is null or empty), only the first wildcard is defined: *",
            "type": "string"
          },
          "SESSION_ADD": {
            "format": "int32",
            "description": "Function getSessionFromTicket: used in combination with SESSION_FROM_AM.\nAdd the session into\n the internal session management.",
            "type": "integer"
          },
          "PUBLIC_DOWNLOAD_COUNT": {
            "description": "Define the allowed number of public downloads.",
            "type": "string"
          },
          "DOWNLOAD_URL_TYPE_PUBLIC": {
            "description": "Generate public download URLs for the actual working version, that expire after a given time.\nOnly a given number of downloads is allowed. IX generates URLs that can be used by non ELO\n users. The URL includes a strongly encrypted ID of the document or attachment version. AES is\n used to encrypt the URL parameters. The AES key is read from the IX option AESEncryptionKey.\n \n <br/>\n <b>ATTENTION: If the key AESEncryptionKey is changed, all URLs generated before become\n invalid!<\/b>\n \n <br/>\n <b>ATTENTION: No access checking is performed, when the document is downloaded from the URL!\n Everyone who knows the URL and has access to ELOix can download the document. This option\n cannot not be used for documents with blackening. No URL is generated for those documents.<\/b>\n \n <br/>\n Authentication is not required or performed.",
            "type": "string"
          },
          "APP_TYPE_MINI_CLIENT": {
            "description": "Reserved. This value is reserved for ELO applications.\nUnauthorized usage violates the ELO\n licensing terms.",
            "type": "string"
          },
          "ACTIVE_ROLES": {
            "description": "Comma separated list of active role IDs.",
            "type": "string"
          },
          "SESSION_FROM_AM_ADD": {
            "format": "int32",
            "description": "Function getSessionFromTicket: any active session can be requested and is inserted into the\nsession management of this Indexserver instance. If the session is not known by this\n Indexserver instance, it is assumed to be a Windows CLIENT session (relevant to license model).\n The ticket lifetime is extended. This value is the same as SESSION_FROM_AM | SESSION_ADD.",
            "type": "integer"
          },
          "DISABLE_CHANGE_INFO_PROTECTION": {
            "description": "If set, this option disables the protection of change information.\n<p>\n Disabling the writing of changes information causes the Indexserver to not update the *tstamp*\n database columns. Then, the client has to ensure that the time stamps of objects are set\n correctly. Setting this option without reason causes the loss of traceability of objects in the\n archive! Only the replication module should use this option.\n <\/p>\n <p>\n The replication searches the database for changes since the last replication run. The gathered\n changes will be transported to other sites and imported into the database there. Such an import\n must not trigger the writing of change informations as further this would trigger the export of\n these changes again, claiming the changes would have been made at the site importing the\n changes.\n <\/p>",
            "type": "string"
          },
          "SESSION_FROM_AM": {
            "format": "int32",
            "description": "Function getSessionFromTicket: any active session known by the AccessManager can be requested.\nThe session is not inserted into the session management of this Indexserver instance. Thus the\n session cannot be used to make Indexserver function calls. The ticket lifetime is not extended.",
            "type": "integer"
          },
          "SESSION_FROM_IX": {
            "format": "int32",
            "description": "Function getSessionFromTicket: session must be known by this Indexserver instance.\nAn exception\n is thrown, if the session is not known by this Indexserver instance. The ticket lifetime is\n extended.",
            "type": "integer"
          },
          "DOWNLOAD_URL_TYPE_TEMPORARY": {
            "description": "Generate URLs that expire after a given time.\nThe lifetime can be specified with the option\n \"documentUrlLifetimeSeconds\". By default, all URLs are created with a constrained lifetime.",
            "type": "string"
          },
          "TYPE_PARTNER_APPLICATION": {
            "description": "This option value has to be used for option CLIENT_APP_TYPE if a partner application connects\nto IX.",
            "type": "string"
          },
          "START_DOCMASK_WORKFLOWS": {
            "description": "If this option is set to \"true\", the Indexserver starts the workflow defined in DocMask.\nflowId\n and DocMask.flowId2 when an associated document is created or checked in.",
            "type": "string"
          },
          "IX_URL_BASE": {
            "description": "Define the first part of the URLs generated from Indexserver.\nSee configuration option\n ixUrlBase on the Indexserver option page.",
            "type": "string"
          },
          "DOWNLOAD_URL_TYPE_PERSISTENT": {
            "description": "Generate URLs that do not expire. IX generates URLs that can be used without time limitation.\nThe URL includes a strongly encrypted ID of the document or attachment version. AES is used to\n encrypt the URL parameters. The AES key is read from the IX option AESEncryptionKey.\n \n <br/>\n <b>ATTENTION: If the key AESEncryptionKey is changed, all URLs generated before become\n invalid!<\/b>\n \n <br/>\n <b>ATTENTION: No access checking is performed, when the document is downloaded from the URL!\n Everyone who knows the URL and has access to ELOix can download the document. This option\n cannot not be used for documents with blackening. No URL is generated for those documents.<\/b>\n \n <br/>\n Only main administrators can use this option. The document is accessed by the IX account.\n Authentication is not required or performed.",
            "type": "string"
          },
          "ENCRYPT_DOCUMENTS": {
            "description": "Set this option to encrypt documents on checkin.\nA secure connection (HTTPS) is required to use\n this option.",
            "type": "string"
          }
        }
      },
      "LoginResult": {
        "description": "<p>\nObject returned when logging in to the IX. This class contains the information required after the\n login has been carried out.\n <\/p>\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "clientInfo": {
            "description": "<p>\nClientInfo object returned by the IX when the login is carried out. Contains information about\n the client settings.\n <\/p>",
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ticketLifetime": {
            "format": "int32",
            "description": "<p>\nContains the lifetime of the ticket in seconds. The connection is terminated once this lifetime\n has expired.\n <\/p>",
            "type": "integer"
          },
          "activeSubstitutions": {
            "description": "The current user's active substitution rules.\nThis list contains substitution rules where the\n user substitutes someone as well as those where the user is substituted by someone.",
            "$ref": "#/components/schemas/ListOfSubstitution"
          },
          "user": {
            "description": "<p>\nContains the data detailling the user used to login to the IX.\n <\/p>",
            "$ref": "#/components/schemas/UserInfo"
          }
        }
      },
      "MaskName": {
        "description": "Mask name object.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "keywordingRelationAllowed": {
            "description": "Mask can be referenced from a DocMaskLine of type {@link DocMaskLineC#TYPE_RELATION}.\n<br>\n If this mask has a data organisation {@link DocMaskC#DATA_ORGANISATION_ASPECT} the value\n determines if it can be referenced by an AspectLine of type {@link AspectLineC#TYPE_RELATION}.",
            "type": "boolean"
          },
          "access": {
            "format": "int32",
            "description": "Access mode for the current user. A combination of AccessC.LUR_* constants.",
            "type": "integer"
          },
          "dataOrganisation": {
            "format": "int32",
            "description": "This member specifies how the index values are stored in database.",
            "type": "integer"
          },
          "displayName": {
            "description": "Translated name of this mask.\nThis value is read-only and therefore ignored when changed and\n checked-in. Furthermore, the Indexserver always translates this value into the client language\n regardless whether the translation settings is enabled or not.",
            "type": "string"
          },
          "documentMask": {
            "description": "Mask can be used as storage mask for indexing.",
            "type": "boolean"
          },
          "nameTranslationKey": {
            "description": "Translation-keyword for {@link MaskName#name}.",
            "type": "string"
          },
          "barcodeMask": {
            "description": "Mask has a barcode definition.",
            "type": "boolean"
          },
          "searchMask": {
            "description": "Mask can be used for searching.",
            "type": "boolean"
          },
          "name": {
            "description": "Mask name.",
            "type": "string"
          },
          "guid": {
            "description": "GUID",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "Mask ID.",
            "type": "integer"
          },
          "folderMask": {
            "description": "Mask can be used as storage mask for folders.",
            "type": "boolean"
          },
          "packageName": {
            "description": "Package name.",
            "type": "string"
          },
          "region": {
            "description": "Sords of this mask establish a region within the repository tree.\n<br>\n This flag is only valid for masks of data organisation\n {@link DocMaskC#DATA_ORGANISATION_ASPECT}.",
            "type": "boolean"
          }
        }
      },
      "ObjKeyDataC": {
        "description": "<p>Bit constants for members of ObjKeyData<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbId": {
            "description": "DB column: okeyno",
            "type": "string"
          },
          "mbName": {
            "description": "DB column: okeyname",
            "type": "string"
          },
          "mbSdata": {
            "description": "DB column: okeysdata_off",
            "type": "string"
          },
          "lnSdata": {
            "format": "int32",
            "description": "DB column: okeysdata_off",
            "type": "integer"
          },
          "lnUdata": {
            "format": "int32",
            "description": "DB column: okeyudata",
            "type": "integer"
          },
          "mbOdouble": {
            "description": "Member bit: DB column: odouble\nDB column: okeydouble",
            "type": "string"
          },
          "lnName": {
            "format": "int32",
            "description": "DB column: okeyname",
            "type": "integer"
          },
          "mbObjId": {
            "description": "DB column: parentid",
            "type": "string"
          },
          "mbUdata": {
            "description": "DB column: okeyudata",
            "type": "string"
          },
          "lnData": {
            "format": "int32",
            "description": "DB column: okeydata",
            "type": "integer"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbData": {
            "description": "DB column: okeydata",
            "type": "string"
          },
          "lnOdouble": {
            "format": "int32",
            "description": "Column length: DB column: odouble\nDB column: okeydouble",
            "type": "integer"
          }
        }
      },
      "BRequest_FeedService_findFirstActions": {
        "type": "object",
        "properties": {
          "actionZ": {
            "$ref": "#/components/schemas/ActionZ"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "findInfo": {
            "$ref": "#/components/schemas/FindActionsInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinUserProfile": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "userProfile": {
            "$ref": "#/components/schemas/UserProfile"
          }
        }
      },
      "BRequest_IXServicePortIF_exportWorkflow": {
        "type": "object",
        "properties": {
          "wfExportOptions": {
            "$ref": "#/components/schemas/WorkflowExportOptions"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "BRequest_IXServicePortIF_computeDocumentHash": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "computeInfo": {
            "$ref": "#/components/schemas/ComputeDocumentHashInfo"
          }
        }
      },
      "FindActionsInfoC": {
        "description": "Constants for FindActionInfo and findFirstActions.",
        "type": "object"
      },
      "FindChildren": {
        "description": "This class controls the search for child objects of an archive entry.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "parentId": {
            "description": "Search child objects of the parent entry with this object ID or GUID.",
            "type": "string"
          },
          "endLevel": {
            "format": "int32",
            "description": "Search child objects up to this level below parentId.\nA value of 0 or 1 means, that only the\n sub entries directly under the parent are included. Set this value to -1, to search over all\n levels. In this case the level is internally constrained to 32 to avoid an endless loop, if the\n tree under the parent contains recursive references.",
            "type": "integer"
          },
          "mainParent": {
            "description": "Include only main parent relations.",
            "type": "boolean"
          }
        }
      },
      "PackageResult": {
        "description": "Result of the function\n{@link PackageService#checkoutPackages(ClientInfo ci, PackageCheckoutInfo checkoutInfo, PackageDataZ packageZ, LockZ lockZ)}\n \n EIX-1895",
        "type": "object",
        "properties": {
          "packageDataList": {
            "description": "List of PackageData objects.",
            "$ref": "#/components/schemas/ListOfPackageData"
          }
        }
      },
      "ArrayOfReminder": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Reminder"
        }
      },
      "HealthCheckValueOperation": {
        "description": "Defines the operation to process when updating a value.",
        "type": "object",
        "properties": {
          "COMPUTE_ADD": {
            "description": "Add the value.",
            "$ref": "#/components/schemas/HealthCheckValueOperation"
          },
          "COMPUTE_MAXIMUM": {
            "description": "Select the maximum value.",
            "$ref": "#/components/schemas/HealthCheckValueOperation"
          },
          "COMPUTE_MINIMUM": {
            "description": "Select the minimum value.",
            "$ref": "#/components/schemas/HealthCheckValueOperation"
          },
          "UPDATE_VALUE": {
            "description": "Overwrite the value.",
            "$ref": "#/components/schemas/HealthCheckValueOperation"
          },
          "COMPUTE_MEAN": {
            "description": "Compute an arithmetic mean.",
            "$ref": "#/components/schemas/HealthCheckValueOperation"
          }
        }
      },
      "TaskNotifyType": {
        "type": "object",
        "properties": {
          "UpdateTask": {
            "$ref": "#/components/schemas/TaskNotifyType"
          },
          "RemoveTask": {
            "$ref": "#/components/schemas/TaskNotifyType"
          },
          "InsertTask": {
            "$ref": "#/components/schemas/TaskNotifyType"
          }
        }
      },
      "UrlParams": {
        "description": "This class describes additional params for an upload or download URL.",
        "type": "object",
        "properties": {
          "offset": {
            "description": "Download bytes beginning from this offset.",
            "type": "string"
          },
          "length": {
            "description": "Download only length bytes from the resource. Set this value to 0, if all bytes should be read.",
            "type": "string"
          },
          "highlightTerms": {
            "description": "Highlight this terms. This value is only valid for fulltext URLs.\nMany terms have to be\n separated by space character. Each term is enclosed in the HTML tags &lt;b&gt; term &lt;/b&gt;",
            "type": "string"
          }
        }
      },
      "ArrayOfSordZ": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SordZ"
        }
      },
      "BRequest_IXServicePortIF_deleteCounters": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "counterNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ProcessSpaceGuid": {
        "description": "This class specifies the options for setting a sord's spaceGuid (i.e.\nGUID of the workspace it\n belongs to). It is used as member in <code>ProcessInfo<\/code> and is interpreted in the functions\n <code>processFindResult<\/code> and <code>processTrees<\/code>.",
        "type": "object",
        "properties": {
          "spaceGuid": {
            "description": "New spaceGuid",
            "type": "string"
          },
          "spaceGuids": {
            "description": "New spaceGuids",
            "$ref": "#/components/schemas/ListOfString"
          }
        }
      },
      "ConfigFile": {
        "description": "Used for accessing directories or files on the server.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "size": {
            "description": "File size.",
            "type": "string"
          },
          "uploadResult": {
            "description": "HTTP-Response returned when file is uploaded.",
            "type": "string"
          },
          "lastModifiedISO": {
            "description": "The last-modified date of the script file. This value is related to the UTC time-zone.",
            "type": "string"
          },
          "fileData": {
            "description": "The content of the file.",
            "$ref": "#/components/schemas/FileData"
          },
          "name": {
            "description": "The name of the file or the extension.",
            "type": "string"
          },
          "dir": {
            "description": "The path to the file.",
            "type": "string"
          },
          "isDirectory": {
            "description": "Returns true if the object is a directory, false if it is a file.",
            "type": "boolean"
          },
          "url": {
            "description": "Download or upload URL.",
            "type": "string"
          }
        }
      },
      "MapToBStreamReference": {
        "additionalProperties": {
          "$ref": "#/components/schemas/BStreamReference"
        },
        "type": "object"
      },
      "ProcessCopyElements": {
        "description": "Copy archive elements in other position in the archive.\n<p>\n Copyright: Copyright (c) 2009\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "createMapping": {
            "description": "If createMapping is true, at the copyResult, the maps source-id to copy-id will be filled.\nDefaults to false.",
            "type": "boolean"
          },
          "copyResult": {
            "description": "Result of copy process.",
            "$ref": "#/components/schemas/CopyResult"
          },
          "copyOptions": {
            "description": "Options for the copy-process",
            "$ref": "#/components/schemas/CopyOptions"
          }
        }
      },
      "EditInfoEswOptions": {
        "description": "Options for reading or writing of esw-files.",
        "type": "object",
        "properties": {
          "reserved": {
            "format": "int32",
            "description": "Reserved",
            "type": "integer"
          }
        }
      },
      "WFDiagram": {
        "description": "This class represents an active or finished workflow or a workflow template",
        "type": "object",
        "properties": {
          "access": {
            "format": "int32",
            "description": "Access rights to the workflow template for the current user. A combination of LUR_* constants.\nRead-only.",
            "type": "integer"
          },
          "processOnServerId": {
            "description": "If not empty, the workflow can only be continued on this server (resp. replication branch).\nThe\n current server ID can be read by getServerInfo(). This member is only valid for ACTIVE or\n FINISHED workflows.",
            "type": "string"
          },
          "hidden": {
            "description": "Indicates whether this workflow is hidden.",
            "type": "boolean"
          },
          "timeLimitEscalations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFTimeLimit"
            }
          },
          "flags": {
            "format": "int32",
            "description": "Flags of the begin node.\nThis value is a combination of the node flags suitable to begin nodes,\n e. g. WFNodeC.FLAG_WORKINGDAYS. To ensure compatibility with older client programs, the\n WFNode.flags of the start node are or-ed with the WFDiagram.flags.",
            "type": "integer"
          },
          "acl": {
            "description": "Access control list in the internal format. It defines who is able to edit the workflow.\nThis\n member is only valid for workflow templates.",
            "type": "string"
          },
          "activeAcl": {
            "description": "Access control list in the internal format. It defines who is able to edit the workflow.\nThis\n member is only valid for active workflows.",
            "type": "string"
          },
          "overTimeLimit": {
            "description": "True, if the workflow exceeds the time limit. Read-only.",
            "type": "boolean"
          },
          "matrix": {
            "description": "Node matrix.",
            "$ref": "#/components/schemas/WFNodeMatrix"
          },
          "ownerId": {
            "format": "int32",
            "description": "ID of the user who has started the workflow.",
            "type": "integer"
          },
          "templateId": {
            "format": "int32",
            "description": "The workflow was started based on this workflow template.\nThis member is only valid for active\n and finished workflows.",
            "type": "integer"
          },
          "type": {
            "description": "Typeof template: template, active or finished.",
            "$ref": "#/components/schemas/WFTypeZ"
          },
          "ownerName": {
            "description": "Name of the user who has started the workflow.",
            "type": "string"
          },
          "completionDateIso": {
            "description": "Date of completion in ISO format.",
            "type": "string"
          },
          "TStampSync": {
            "description": "Timestamp of this object's last export by the replication.",
            "type": "string"
          },
          "tStamp": {
            "description": "TStamp",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "Workflow ID.",
            "type": "integer"
          },
          "packageName": {
            "description": "Package name of WFDiagram",
            "type": "string"
          },
          "prio": {
            "format": "int32",
            "description": "Workflow priortiy: 0...high, 1...medium, 2...low.",
            "type": "integer"
          },
          "lockName": {
            "description": "The name of the user who has currently locked the workflow.",
            "type": "string"
          },
          "objType": {
            "format": "int32",
            "description": "Sord type of the associated folder or document.",
            "type": "integer"
          },
          "timeLimitIso": {
            "description": "The entire workflow should be finished by this date. Otherwise the time-limit is exceeded.\nThis\n member is only valid for active and finished workflows. Read-only.",
            "type": "string"
          },
          "callNodeId": {
            "format": "int32",
            "description": "The call node id of the main workflow, which call this sub workflow.",
            "type": "integer"
          },
          "activeAclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "objName": {
            "description": "Sord name. Readonly.",
            "type": "string"
          },
          "version": {
            "description": "Only templates: version information.",
            "$ref": "#/components/schemas/WFVersion"
          },
          "lockId": {
            "format": "int32",
            "description": "The ID of the user who has currently locked the workflow.",
            "type": "integer"
          },
          "timeLimit": {
            "format": "int32",
            "description": "Time-limit for the entire workflow in minutes.",
            "type": "integer"
          },
          "nameTranslationKey": {
            "description": "Translation-keyword for {@link WFDiagram#name}.",
            "type": "string"
          },
          "parentFlowId": {
            "format": "int32",
            "description": "ID of the parent workflow.",
            "type": "integer"
          },
          "deleted": {
            "description": "Flag that indicates whether the workflow template is deleted.\nOnly valid for template\n workflows.",
            "type": "boolean"
          },
          "nodes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFNode"
            }
          },
          "templateName": {
            "description": "The workflow was started based on the workflow template with this name.\nThis member is only\n valid for active and finished workflows.",
            "type": "string"
          },
          "subWorkflows": {
            "description": "Sub workflows.",
            "$ref": "#/components/schemas/MapToWFDiagram"
          },
          "startDateIso": {
            "description": "Date of start in ISO format.",
            "type": "string"
          },
          "aclItems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AclItem"
            }
          },
          "timeLimitUserName": {
            "description": "The name of the user that should be informed, if the time-limit is exceeded.\nWhen writing a\n workflow with checkinWorkFlow, this value has preceedence before timeLimitUserId. Set\n timeLimitUserName to an empty string, if timeLimitUserId should be used.",
            "type": "string"
          },
          "name": {
            "description": "Workflow name.",
            "type": "string"
          },
          "objId": {
            "description": "ID or GUID of the associated folder or document object.\ncheckoutWorkFlow will always return the\n numeric object ID in this field. checkinWorkFlow is able to receive a GUID too.",
            "type": "string"
          },
          "guid": {
            "description": "GUID",
            "type": "string"
          },
          "timeLimitUserId": {
            "format": "int32",
            "description": "The ID of the user that should be informed,if the time-limit for the workflow is exceeded.\nThe\n Indexserver does not send any notification to the user. The client application is responsible\n for doing this.",
            "type": "integer"
          }
        }
      },
      "MapToString": {
        "additionalProperties": {
          "type": "string"
        },
        "type": "object"
      },
      "RepliHistC": {
        "description": "<p>Bit constants for members of RepliHist<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbTSBegin": {
            "description": "DB column: rhtsbegin",
            "type": "string"
          },
          "mbId": {
            "description": "DB column: rhrowid",
            "type": "string"
          },
          "mbArcShort": {
            "description": "DB column: rharcshort",
            "type": "string"
          },
          "mbImEx": {
            "description": "DB column: rhimex",
            "type": "string"
          },
          "lnArcShort": {
            "format": "int32",
            "description": "DB column: rharcshort",
            "type": "integer"
          },
          "lnTSEnd": {
            "format": "int32",
            "description": "DB column: rhtsend",
            "type": "integer"
          },
          "mbTSDate": {
            "description": "DB column: rhtsdate",
            "type": "string"
          },
          "mbArcDesc": {
            "description": "DB column: rharcdesc",
            "type": "string"
          },
          "lnArcGuid": {
            "format": "int32",
            "description": "DB column: rharcguid",
            "type": "integer"
          },
          "mbArcGuid": {
            "description": "DB column: rharcguid",
            "type": "string"
          },
          "mbTSEnd": {
            "description": "DB column: rhtsend",
            "type": "string"
          },
          "lnArcDesc": {
            "format": "int32",
            "description": "DB column: rharcdesc",
            "type": "integer"
          },
          "mbArcPriorityLocal": {
            "description": "DB column: rhpriolocal",
            "type": "string"
          },
          "mbArcPriorityRemote": {
            "description": "DB column: rhprioremote",
            "type": "string"
          },
          "lnTSBegin": {
            "format": "int32",
            "description": "DB column: rhtsbegin",
            "type": "integer"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "lnTSDate": {
            "format": "int32",
            "description": "DB column: rhtsdate",
            "type": "integer"
          },
          "mbSucc": {
            "description": "DB column: rhsucc",
            "type": "string"
          }
        }
      },
      "BRequest_PluginService_install": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "location": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_provideCryptPassword": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "encryptionSet": {
            "type": "string"
          },
          "pwd": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutStorage": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          }
        }
      },
      "SetOfString": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "DateRangeValue": {
        "description": "<p>\nPerform a range query with date values.\n <\/p>\n \n <p>\n Range queries for dates:<br>\n <ul>\n <li>If from contains a value for roundTo, it is always rounded down by roundTo.<\/li>\n <li>If to contains a value for roundTo, it is always rounded up by roundTo.<\/li>\n <li>If one of from or to is of type DateNowValue and contains a value for relative, it is always\n ignored for range queries.<\/li>\n <li>To perform an open range query (e.g. from now to infinite), only submit either a value for\n from or to<\/li>\n <\/ul>\n <\/p>",
        "type": "object",
        "properties": {
          "from": {
            "$ref": "#/components/schemas/DateSingleValue"
          },
          "to": {
            "$ref": "#/components/schemas/DateSingleValue"
          }
        }
      },
      "NoteTemplateDataC": {
        "description": "<p>Bit constants for members of NoteTemplate<\/p>\n<p>Copyright: Copyright (c) 2003<\/p>\n <p>Organisation: ELO Digital Office GmbH<\/p>",
        "type": "object",
        "properties": {
          "mbOptKey": {
            "description": "DB column: optkey",
            "type": "string"
          },
          "lnOptKey": {
            "format": "int32",
            "description": "DB column: optkey",
            "type": "integer"
          },
          "lnOptValue": {
            "format": "int32",
            "description": "DB column: optvalue",
            "type": "integer"
          },
          "mbAllMembers": {
            "description": "All valid member bits.",
            "type": "string"
          },
          "mbOptValue": {
            "description": "DB column: optvalue",
            "type": "string"
          },
          "mbUserIdInt": {
            "description": "DB column: userid",
            "type": "string"
          }
        }
      },
      "ListOfLicenseCounter": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/LicenseCounter"
        }
      },
      "EloFtOptC": {
        "description": "Internal class.",
        "type": "object"
      },
      "AspectC": {
        "description": "<p>\nConstants related to class <code>Aspect<\/code>.",
        "type": "object",
        "properties": {
          "mbAll": {
            "description": "Read or write all elements.",
            "$ref": "#/components/schemas/AspectZ"
          },
          "mbOnlyLock": {
            "description": "Only lock or unlock",
            "$ref": "#/components/schemas/AspectZ"
          },
          "mbAllMembers": {
            "description": "Member bit: read or write all elements.",
            "type": "string"
          },
          "mbAspectLines": {
            "description": "Member bit: read or write index lines.",
            "type": "string"
          }
        }
      },
      "FindInfoAsInternalSQL": {
        "description": "SQL command that is built from a FindInfo object.\nThis class contains the elements of an internal\n SQL statement for finding Sord objects. Modifying this elements might cause errors or wrong\n results in subsequent versions of IX.",
        "type": "object",
        "properties": {
          "whereClause": {
            "description": "SQL WHERE clause.",
            "type": "string"
          },
          "groupByClause": {
            "description": "SQL GROUP BY clause.",
            "type": "string"
          },
          "orderByClause": {
            "description": "SQL ORDER BY clause.",
            "type": "string"
          },
          "fromTables": {
            "description": "Comma separated list of table names.",
            "type": "string"
          }
        }
      },
      "FindNotificationInfo": {
        "description": "FindInfo for FindFirstNotifications.",
        "type": "object",
        "properties": {
          "userGuidOrID": {
            "description": "GUID or ID or Name of the User. If null, current user will be set.\nIf GUID/ID is not the\n current user, admin rights are needed to preform the search",
            "type": "string"
          },
          "what": {
            "format": "int32",
            "description": "Reserved.",
            "type": "integer"
          },
          "sordZ": {
            "description": "Sord element selector.",
            "$ref": "#/components/schemas/SordZ"
          },
          "actionZ": {
            "description": "Action element selector.",
            "$ref": "#/components/schemas/ActionZ"
          },
          "createDateIso": {
            "description": "Search by create date. A date range can be specified by using the default range delimiter \"...\n\"\n or the one defined in {@link de.elo.ix.client.FindOptions#getRangeDelimiter()}.",
            "type": "string"
          },
          "inclImportant": {
            "description": "If true and createDateIso is set, it will also return all Notifications marked as Important\neven if they are not in the specified createDate range. If true and createDateIso is not set,\n it will return only Notifications marked as Important",
            "type": "boolean"
          },
          "findFeeds": {
            "description": "If true a Map&lt;String, Feed&gt; will be set in the FindResult.\nby default true",
            "type": "boolean"
          },
          "findSubscriptions": {
            "description": "If true a Map&lt;String, Subscription&gt; will be set in the FindResult",
            "type": "boolean"
          },
          "findHashTags": {
            "description": "If true a List&lt;HashTagRelation&gt; and a Map&lt;String, HashTag&gt; will be set in the\nFindResult",
            "type": "boolean"
          }
        }
      },
      "ExecuteScriptParams": {
        "description": "This class is used to specify which script has to be executed in function executeScript.\nThe\n script has to be an ELO Windows CLIENT OLE-Automation script.",
        "type": "object",
        "properties": {
          "functionParams": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scriptCode": {
            "description": "This object contains the script code to be executed as a byte array. The FileData.\ncontentType\n is either \"text/javascript\" or \"text/vbscript\". FileData.data has to be encoded in UTF-8. The\n scriptCode.data length must be less or equal than 65535. If this member is set, the members\n scriptString and scriptObjId should be null.",
            "$ref": "#/components/schemas/FileData"
          },
          "functionName": {
            "description": "Call this function in the script code.\nA function defined in script code that was supplied in a\n previsious call can be invoked too, as long as this object does not specify scriptCode,\n scriptString or scriptObjId.",
            "type": "string"
          },
          "scriptString": {
            "description": "This object contains the script code to be executed as a string object.\nThe string must either\n start with \"javascript:\" or \"vbscript:\". The maximum scriptString length is 65535 UTF-8\n characters. If this member is set, the members scriptCode and scriptObjId should be null.",
            "type": "string"
          },
          "scriptEngine": {
            "description": "This value defines the scripting engine to be used to execute the script.\nCurrently, this value\n must be null or empty or \"EloixAuto\". If the value is null or empty, EloixAuto is used by\n default.",
            "type": "string"
          },
          "scriptObjId": {
            "description": "If the script to be executed is available in the ELO archive, this member can specify the\nobject ID (or ARCPATH: - see checkoutSord) of the script document. The file is assumed to be\n encoded in characterset ISO-8859-1, if it does not start with a BOM. If this member is set, the\n members scriptCode and scriptString should be null.",
            "type": "string"
          }
        }
      },
      "StartAdHocWorkflowInfo": {
        "description": "This class contains several options that are used to start the AdHocWorkflow",
        "type": "object",
        "properties": {
          "nodeName": {
            "description": "Start node name.",
            "type": "string"
          },
          "acceptMessage": {
            "description": "This message is shown if the workflow is accepted by a person.",
            "type": "string"
          },
          "actionRejectMessage": {
            "description": "This message is shown if the workflow is rejected.",
            "type": "string"
          },
          "cancelMessage": {
            "description": "The message that is send to the user specified with <code>cancelUserId<\/code>, if the workflow\nis canceled.",
            "type": "string"
          },
          "finishedScript": {
            "description": "This script is executed, when the workflow is finished.",
            "type": "string"
          },
          "finishedUserId": {
            "description": "If the workflow is finished, this user receives a message, <code>finishedMessage<\/code>.",
            "type": "string"
          },
          "timeLimitEscalations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WFTimeLimit"
            }
          },
          "cancelUserId": {
            "description": "If the workflow is canceled, this user receives a message, <code>cancelMessage<\/code>.",
            "type": "string"
          },
          "breakWorkflowMessage": {
            "description": "This message is send to the user who started the workflow if the workflow is canceled.",
            "type": "string"
          },
          "flags": {
            "format": "int32",
            "description": "Control flags for the node, a combination of WFNode.C.FLAG_* constants.",
            "type": "integer"
          },
          "nodeInfos": {
            "description": "The information of all nodes in the workflow.",
            "$ref": "#/components/schemas/ListOfValueClass"
          },
          "serialFlow": {
            "description": "If true, the workflow routes the object from user to user.\nThe workflow finishes when the last\n user has edited their node. If <code>serialFlow<\/code> is false, the workflow routes the object\n to all users. The first user who edits their node terminates the workflow.",
            "type": "boolean"
          },
          "deactivateNodes": {
            "description": "If true, all person nodes are deactivated when the workflow is canceled.\nThis option is only\n used for \"parallel for validation\" workflow. Otherwise this option is ignored.",
            "type": "boolean"
          },
          "noticeMessage": {
            "description": "This message is shown if the a person was informed about the workflow.",
            "type": "string"
          },
          "finishedMessage": {
            "description": "The message that is send to the user specified with <code>finishedUserId<\/code>, if the\nworkflow is finished.",
            "type": "string"
          },
          "successMessage": {
            "description": "This message is shown if the workflow is successfully processed.",
            "type": "string"
          },
          "forValidation": {
            "description": "If true, the workflow comes back to the user who started it.",
            "type": "boolean"
          },
          "workflowRepeatMessage": {
            "description": "This message is send to the user who started the workflow if the workflow is repeated.",
            "type": "string"
          },
          "userIdsToDeactivate": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "timeLimit": {
            "description": "Time-limit for the entire workflow.",
            "$ref": "#/components/schemas/WFTimeLimit"
          }
        }
      },
      "ListOfActionHistory": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ActionHistory"
        }
      },
      "CheckInDocMaskLineTemplateOptions": {
        "description": "Option class for the methode CheckInDocMaskLineTemplate",
        "type": "object",
        "properties": {
          "keepModifiedLineMembers": {
            "description": "Modified line members in the table masklines are kept.",
            "type": "boolean"
          },
          "dmltZ": {
            "description": "Specifies which elements are passed to the document mask lines, which are using this template.",
            "$ref": "#/components/schemas/DocMaskLineTemplateZ"
          },
          "onlyModifiedTemplateMembers": {
            "description": "Only change template members are passed to the document mask lines, which are using this\ntemplate. This variable is ignored if dmltZ does not equal NULL.",
            "type": "boolean"
          }
        }
      },
      "ReplSetName": {
        "description": "Properties of a replication set.\n<p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "TStamp": {
            "description": "Timestamp of the last change. The format is JJJJ.MM.DD.hh.mm.\nss",
            "type": "string"
          },
          "image": {
            "format": "int32",
            "description": "Image used for the replication set in list function in the client application.",
            "type": "integer"
          },
          "TStampSync": {
            "description": "Timestamp of this object's last export by the replication.",
            "type": "string"
          },
          "mobile": {
            "format": "int32",
            "description": "Replication set is used for archive synchronisation(ELO MOBIL).",
            "type": "integer"
          },
          "name": {
            "description": "Name of the replication set.",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "Identifier for the replication set.",
            "type": "integer"
          },
          "priority": {
            "format": "int32",
            "description": "Priority of this replication set.",
            "type": "integer"
          },
          "desc": {
            "description": "Descriptive text for the replication set.",
            "type": "string"
          }
        }
      },
      "LdapConfig": {
        "description": "Configuration data for LDAP plugin.",
        "type": "object",
        "properties": {
          "READ_CONFIG": {
            "description": "Read configuration.\nThis symbol used as paramter for\n {@link LdapService#configure(de.elo.ix.client.ClientInfo, LdapConfig)} to read the current\n configuration without changing it.",
            "$ref": "#/components/schemas/LdapConfig"
          },
          "READ_AUTO_CONFIG": {
            "description": "Create a configuration.\nThis symbol used as parameter for\n {@link LdapService#configure(de.elo.ix.client.ClientInfo, LdapConfig)} to create a\n configuration based on the current environment. The current configuration is not changed.",
            "$ref": "#/components/schemas/LdapConfig"
          },
          "assignGroups": {
            "description": "If authentication succeeds, update the user's memberships in ELO groups.",
            "type": "boolean"
          },
          "notResponsibleForUserOrGroupIds": {
            "description": "List of user IDs, or user GUIDs, or group IDs (not group GUIDs) that cannot be authenticated by\nthis UserDirectory. If the user passed in UserDirectory.authenticate, parameter loginName, is\n associated to an ID found in this list, function authenticate returns\n NOT_RESPONSIBLE_FOR_AUTHENTICATION. This value is also returned, if one of the user's groups is\n included in the list. The list contains user ID 0 (Administrator) and\n {@link UserInfoC#GUID_ELOSERVICE} (ELO Service), if this LdapConfig object is initialized by\n {@link LdapService#createConfig(de.elo.ix.client.ClientInfo)}.",
            "$ref": "#/components/schemas/SetOfString"
          },
          "name": {
            "description": "Configuration name. Optional configuration name.",
            "type": "string"
          },
          "domains": {
            "description": "List of configuration data for each domain.",
            "$ref": "#/components/schemas/ListOfDomain"
          },
          "createNewUser": {
            "description": "If authentication succeeds, create a new ELO user if she does not already exist.",
            "type": "boolean"
          },
          "enabled": {
            "description": "Enable/disable authentication via LDAP.",
            "type": "boolean"
          }
        }
      },
      "OcrResult": {
        "description": "This class contains the informations about an OCR result.",
        "type": "object",
        "properties": {
          "exception": {
            "description": "Error message. Null or empty, if no error has occurred.\nThis value is used only in asynchronous\n processing in order to inform the client application, that an error has occured. In synchronous\n processing, the error is thrown as an exception.",
            "type": "string"
          },
          "eventId": {
            "description": "Event ID. The same value as submitted in {@link OcrInfo#eventId}.",
            "type": "string"
          },
          "exceptionID": {
            "format": "int32",
            "description": "Error id.\n0, if no error has occurred",
            "type": "integer"
          },
          "recognizeFile": {
            "description": "Recognize file result. This member is returned, if {@link OcrInfo#recognizeFile} was set.",
            "$ref": "#/components/schemas/OcrResultRecognizeFile"
          },
          "queryLanguages": {
            "description": "Supported languages. This member is returned, if {@link OcrInfo#queryLanguages} was set.",
            "$ref": "#/components/schemas/OcrResultQueryLanguages"
          }
        }
      },
      "OcrInfoRecognizeFile": {
        "description": "This class describes an OCR analysis request.",
        "type": "object",
        "properties": {
          "originalFileName": {
            "description": "Original Filename. allows tracking through the log files of the different modules.",
            "type": "string"
          },
          "singleColumnMode": {
            "description": "Disable table recognition.\nSet this member to true, if the OCR should not try to recognized\n columns and rows of tables. Optional.",
            "type": "boolean"
          },
          "imageData": {
            "description": "Image file content. Either imageData or objId must be set.",
            "$ref": "#/components/schemas/FileData"
          },
          "pageNumbers": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "recognizeRects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OcrRect"
            }
          },
          "accuracy": {
            "format": "int32",
            "description": "Recognition accuracy.\nA value of 0 activates the fast mode, a value of 1 activates the exact\n mode.",
            "type": "integer"
          },
          "encoding": {
            "format": "int32",
            "description": "OcrInfoC.\nENCODING_UTF8 / _UTF16 / _UTF16LE",
            "type": "integer"
          },
          "minCharConfidence": {
            "format": "int32",
            "description": "Minimum confidence of character recognition in percent.\nCharacters that are recognized with a\n lower confidence are replaced by {@link #replaceChar}. Optional.",
            "type": "integer"
          },
          "pdfQuality": {
            "format": "int32",
            "description": "OcrInfoC.\nPDF_QUALITY_MAXQUALITY / _BALANCED / _MINSIZE / _MAXSPEED",
            "type": "integer"
          },
          "pageNo": {
            "format": "int32",
            "description": "Page number. The first page number is 0. If all pages should be analyzed, set pageNo = -1.",
            "type": "integer"
          },
          "replaceChar": {
            "format": "int32",
            "description": "Replacement for characters.\nCharacters that are recognized with a lower confidence than\n {@link #minCharConfidence} are replaced this character. Optional.",
            "type": "integer"
          },
          "objId": {
            "description": "Object ID of an archived document to be analyzed. Either imageData or objId must be set.",
            "type": "string"
          },
          "recognizeLangs": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "spaces": {
            "format": "int32",
            "description": "OcrInfoC.\nNORMAL/TWOSPACES/EXACT",
            "type": "integer"
          },
          "timeoutSeconds": {
            "format": "int32",
            "description": "Recognition timeout. Cancel recognition if it least longer than this number of seconds.\nOptional.",
            "type": "integer"
          },
          "pageTimeout": {
            "format": "int32",
            "description": "Recognition timeout for a single page.\nCancel recognition if it least longer than this number\n of seconds. Optional.",
            "type": "integer"
          },
          "pdfCompliance": {
            "format": "int32",
            "description": "OcrInfoC.\nCOMPLIANCE_PDFA_3U / _3A / _2U / _2A / _1B / _1A / _NONE",
            "type": "integer"
          },
          "whitespace": {
            "format": "int32",
            "description": "OCR returns whitespace characters.\n<table>\n <tr>\n <td>Name<\/td>\n <td>HEX code<\/td>\n <\/tr>\n <tr>\n <td>Line break<\/td>\n <td>2028<\/td>\n <\/tr>\n <tr>\n <td>Paragraph break<\/td>\n <td>2029<\/td>\n <\/tr>\n <tr>\n <td>Tabulation<\/td>\n <td>00AC<\/td>\n <\/tr>\n <tr>\n <td>Soft hyphen<\/td>\n <td>0009<\/td>\n <\/tr>\n <tr>\n <td>Object replacement character<\/td>\n <td>FFFC<\/td>\n <\/tr>\n <\/table>\n Must be one of the following: {@link OcrInfoC#WHITESPACE_DEFAULT},\n {@link OcrInfoC#WHITESPACE_REPLACE}",
            "type": "integer"
          },
          "outputFormat": {
            "format": "int32",
            "description": "Output format.\nMust be one of the following: {@link OcrInfoC#TEXT},\n {@link OcrInfoC#CHAR_AND_RECT}, {@link OcrInfoC#CHAR_AND_RECT_EX} {@link OcrInfoC#PDF},\n {@link OcrInfoC#XML}",
            "type": "integer"
          },
          "rectUnit": {
            "format": "int32",
            "description": "Rectangle coordinates are based on this unit. Use on of the constants OcrInfoC.UNIT_*.\nOptional.",
            "type": "integer"
          }
        }
      },
      "UserReport": {
        "description": "User report for AdminConsole.",
        "type": "object",
        "properties": {
          "subadminIds": {
            "description": "List of subadmin IDs.",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "childIds": {
            "description": "List of child IDs.",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "counterTotal": {
            "format": "int32",
            "description": "Total count of all users.",
            "type": "integer"
          },
          "counterNoLogin": {
            "format": "int32",
            "description": "Count of users without login flag.",
            "type": "integer"
          },
          "userNames": {
            "description": "All user names.",
            "$ref": "#/components/schemas/ListOfUserName"
          },
          "counterGroup": {
            "format": "int32",
            "description": "Count of groups.",
            "type": "integer"
          },
          "counterUser": {
            "format": "int32",
            "description": "Count of users.",
            "type": "integer"
          },
          "dmsDesktopUserIds": {
            "description": "List of DMS Desktop user IDs.",
            "$ref": "#/components/schemas/ListOfInteger"
          },
          "optionGroupIds": {
            "description": "List of option group IDs.",
            "$ref": "#/components/schemas/ListOfInteger"
          }
        }
      },
      "BRequest_IXServicePortIF_deleteMapDomain": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "domainName": {
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_checkinSubs": {
        "type": "object",
        "properties": {
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "deps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubsInfo"
            }
          }
        }
      },
      "EloFtStop": {
        "description": "Internal class.",
        "type": "object",
        "properties": {
          "stopword": {
            "description": "DB column: stopword",
            "type": "string"
          }
        }
      },
      "LicenseResult": {
        "description": "Result of license check.\nAn object of this class is returned by\n {@link IXServicePortIF#checkLicense(ClientInfo, LicenseInfo)} if the given license information is\n valid.",
        "type": "object"
      },
      "NotificationZ": {
        "description": "<p>\nThis class encapsulates the constants of <code>NotificationC<\/code>\n <\/p>\n\n <p>\n Copyright: Copyright (c) 2015\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants from the NotificationC class.",
            "type": "string"
          }
        }
      },
      "PublicDownloadC": {
        "description": "Constants for class PublicDownload.",
        "type": "object"
      },
      "ArcPath": {
        "description": "Archive path.",
        "type": "object",
        "properties": {
          "path": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          },
          "pathAsString": {
            "description": "Path as string. The first charachter is the path separator.",
            "type": "string"
          }
        }
      },
      "BRequest_PackageService_deletePackages": {
        "type": "object",
        "properties": {
          "deleteInfo": {
            "$ref": "#/components/schemas/PackageDeleteInfo"
          },
          "unlockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "AclItem": {
        "description": "<p>\nHuman readable ACL entry.\n <\/p>\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "access": {
            "format": "int32",
            "description": "Access mode. Bitset of LUR_*.",
            "type": "integer"
          },
          "name": {
            "description": "Name of user, group, key.",
            "type": "string"
          },
          "andGroups": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdName"
            }
          },
          "id": {
            "format": "int32",
            "description": "ID of user, group, key.",
            "type": "integer"
          },
          "type": {
            "format": "int32",
            "description": "Item type: user, group, key, ...",
            "type": "integer"
          }
        }
      },
      "BRequest_IXServicePortIF_checkoutCounters": {
        "type": "object",
        "properties": {
          "incrementCounters": {
            "type": "boolean"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "lockZ": {
            "$ref": "#/components/schemas/LockZ"
          },
          "counterNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ContextTermQuery": {
        "description": "<p>\nSubmit a ContextTermQuery for each ContextTerm to be retrieved.\n <\/p>\n <p>\n Describe the contextTerm in with filter. If a value is committed, this value is used to calculate\n every other ContextTerm in ContextTermOptions.contextTermQueries\n <p>\n <p>\n Specify a return type for each contextTerm: {@link ContextTermReturnTypeE}\n <\/p>\n <p>\n To exclude a value from contextTerms, use set isNegated=true. Defaults to false.\n <\/p>",
        "type": "object",
        "properties": {
          "filter": {
            "description": "Specify the field and type for which a context term should be returned.",
            "$ref": "#/components/schemas/QueryFilter"
          },
          "isNegated": {
            "description": "To exclude a value from contextTerms, use set isNegated=true. Defaults to false.",
            "type": "boolean"
          },
          "returnType": {
            "description": "Specify the return type of this ContextTerm.",
            "$ref": "#/components/schemas/ContextTermReturnTypeE"
          }
        }
      },
      "DocHistory": {
        "description": "Document version data, e. g.\ndocument version ID and GUID, version comment, MD5 hash of document\n file. Internal use only.",
        "type": "object",
        "properties": {
          "docId": {
            "format": "int32",
            "description": "Document version ID.\nDB column: documentid",
            "type": "integer"
          },
          "docMD5": {
            "description": "The MD5 hash of the document file.\nDB column: docmd5",
            "type": "string"
          },
          "flags": {
            "format": "int32",
            "description": "MFG_BURNIN DB column: docflags",
            "type": "integer"
          },
          "sigId": {
            "format": "int32",
            "description": "Document signature ID.\nDB column: docsignature",
            "type": "integer"
          },
          "language": {
            "description": "Language of the document content.\nThis value is estimated by ELO Textreader when the document is sent for fulltext extraction.\n See {@link TranslateTermC#DEFAULT_LANGUAGES} for a list of language-tags.",
            "type": "string"
          },
          "type": {
            "format": "int32",
            "description": "The type of this DocHistory makes the difference between attachments and document versions.",
            "type": "integer"
          },
          "version": {
            "description": "The version number (like 1.0) of the document version.\nDB column: histversion",
            "type": "string"
          },
          "nbOfValidSignatures": {
            "format": "int32",
            "description": "Number of valid signatures.",
            "type": "integer"
          },
          "TStampSync": {
            "description": "Timestamp of this object's last export by the replication.",
            "type": "string"
          },
          "tStamp": {
            "description": "The last update time of the version in ISO format (with dots).\nDB column: doctstamp",
            "type": "string"
          },
          "objId": {
            "format": "int32",
            "description": "Document version belongs to this object.\nDB column: objectid",
            "type": "integer"
          },
          "guid": {
            "description": "GUID of the document version.\nDB column: docguid",
            "type": "string"
          },
          "comment": {
            "description": "The user can enter a comment that describes the version.\nDB column: histcomment",
            "type": "string"
          },
          "user": {
            "format": "int32",
            "description": "The user who inserts the version into the archive.\nDB column: userid",
            "type": "integer"
          },
          "createDate": {
            "format": "int32",
            "description": "The version is created at this date. The value is an ELO date format.\nDB column: createdate",
            "type": "integer"
          },
          "status": {
            "format": "int32",
            "description": "Deleted versions have Status=1.\nDB column: docstatus",
            "type": "integer"
          },
          "deleteDate": {
            "format": "int32",
            "description": "The version is deleted at this date. The value is an ELO date format.\nThe value is zero, if\n isDeleted() returns false.",
            "type": "integer"
          }
        }
      },
      "AnyC": {
        "description": "This class defines the constants for the type member in Any.",
        "type": "object",
        "properties": {
          "TYPE_HANDLE": {
            "format": "int32",
            "type": "integer"
          },
          "TYPE_INT": {
            "format": "int32",
            "type": "integer"
          },
          "TYPE_DOUBLE": {
            "format": "int32",
            "type": "integer"
          },
          "TYPE_ARRAY_BYTE": {
            "format": "int32",
            "type": "integer"
          },
          "TYPE_ARRAY_ANY": {
            "format": "int32",
            "type": "integer"
          },
          "TYPE_STRING": {
            "format": "int32",
            "type": "integer"
          },
          "TYPE_BOOLEAN": {
            "format": "int32",
            "type": "integer"
          },
          "TYPE_LONG": {
            "format": "int32",
            "type": "integer"
          },
          "TYPE_OBJECT": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "UserTask": {
        "description": "Describes the tasks assigned to a user. ix.\nfindFirstTasks returns the tasks for a user in the\n form of UserTask objects. Either activity, reminder or workflow is set depending upon whether the\n task is an activity, reminder or workflow task.\n\n <p>\n Copyright: Copyright (c) 2004\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "wfNode": {
            "description": "Task is a workflow task.",
            "$ref": "#/components/schemas/WFCollectNode"
          },
          "activity": {
            "description": "Task is an activity.",
            "$ref": "#/components/schemas/Activity"
          },
          "reminder": {
            "description": "Task is a reminder item.",
            "$ref": "#/components/schemas/Reminder"
          },
          "sord": {
            "description": "Associated Sord object.\nThis member is set, if\n {@link IXServicePortIF#findFirstTasks(ClientInfo, FindTasksInfo, int)} is called with\n {@link FindTasksInfo#sordZ} != null. This member contains the associatied Sord object to the\n task. Its valid members are defined by the element selector given in\n {@link FindTasksInfo#sordZ}.",
            "$ref": "#/components/schemas/Sord"
          }
        }
      },
      "StringRangeValue": {
        "description": "<p>\nClass to commit a range filter of String values.\n <\/p>\n \n <p>\n To perform an open range query (e.g. from now to infinite), only submit either a value for from\n or to\n <\/p>",
        "type": "object",
        "properties": {
          "from": {
            "$ref": "#/components/schemas/StringSingleValue"
          },
          "to": {
            "$ref": "#/components/schemas/StringSingleValue"
          }
        }
      },
      "BResult_18214274": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/UserReport"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "BRequest_HealthCheckService_uploadAll": {
        "type": "object",
        "properties": {
          "reserved": {
            "type": "string"
          },
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          }
        }
      },
      "ArrayOfPointInfo": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/PointInfo"
        }
      },
      "NotificationC": {
        "description": "Constants for class Notification. This class is used internally.",
        "type": "object"
      },
      "AspectZ": {
        "description": "This class encapsulates the constants of the AspectC class.\n<p>\n Copyright: Copyright (c) 2019\n <\/p>\n <p>\n Organisation: ELO Digital Office GmbH\n <\/p>",
        "type": "object",
        "properties": {
          "bset": {
            "description": "Bitset field for constants from the AspectC class.",
            "type": "string"
          }
        }
      },
      "Exception": {
        "type": "object"
      },
      "BResult_1698025638": {
        "type": "object",
        "properties": {
          "result": {
            "$ref": "#/components/schemas/HtCloudData"
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "EloDmOpt": {
        "description": "Internal class.",
        "type": "object",
        "properties": {
          "instanceName": {
            "description": "DB column: instance",
            "type": "string"
          },
          "remark": {
            "description": "DB column: remark",
            "type": "string"
          },
          "id": {
            "format": "int32",
            "description": "DB column: optno",
            "type": "integer"
          },
          "value": {
            "description": "DB column: optval",
            "type": "string"
          }
        }
      },
      "BRequest_IXServicePortIF_createSord": {
        "type": "object",
        "properties": {
          "ci": {
            "$ref": "#/components/schemas/ClientInfo"
          },
          "maskId": {
            "type": "string"
          },
          "editInfoZ": {
            "$ref": "#/components/schemas/EditInfoZ"
          },
          "parentId": {
            "type": "string"
          }
        }
      },
      "ValuesOfObjKey": {
        "description": "Objects of this class contain the returned data from IXServicePortIF.getDistinctValuesOfObjKey.",
        "type": "object",
        "properties": {
          "usageCounts": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "totalCount": {
            "format": "int32",
            "description": "The sum of all usageCounts.",
            "type": "integer"
          }
        }
      },
      "ESearchOptions": {
        "description": "Class for various iSearch options.",
        "type": "object"
      },
      "ContextTermOptions": {
        "description": "<p>\nUse this class if context terms should be retrieved by\n {@link de.elo.ix.client.IXServicePortIF#findContextTerms(de.elo.ix.client.ClientInfo, de.elo.ix.client.FindInfo, int)}.<br>\n Query is submitted by {@link de.elo.ix.client.esearch.ESearchParams}.\n <\/p>\n <p>\n Submit a list of ContextTermQuerys to retrieve context terms for each of them.<br>\n For every ContextTermQuerys, context terms are returned by adding all other ContextTermQuerys to\n the query but itself.<br>\n This means, if you want have various values for one index field, use one ContextTermQuery with a\n ValueList to submit the values instead of one ContextTermQuery for each value.<br>\n If a QueryFilter.value == null, it is not used to restrict the query. Context terms for this\n ContextTermQuery are returned.<br>\n <\/p>\n <p>\n The resulting list {@link ContextTermResults#contextTerms} is provided in the same order as the\n submitted list contextTermQueries\n <\/p>\n <\/p>",
        "type": "object",
        "properties": {
          "contextTermQueries": {
            "description": "List of contextTermQueries.",
            "$ref": "#/components/schemas/ListOfContextTermQuery"
          }
        }
      },
      "SingleValueMetricsAggregationQueryParams": {
        "description": "Defines parameters to run an aggregation of one of the types Min, Max, Sum, Avg\n(single-value-metrics-aggregations).<br>\n This aggregation query doesn't allow sub-aggregations.<br>\n <br>\n Note: The value_count aggregation gets an an own query params class although it is a\n single-value-metrics-aggregation, because it has a different return value type (long).",
        "type": "object",
        "properties": {
          "missingValue": {
            "description": "The missing parameter defines how documents that are missing a value should be treated.\nBy\n default they will be ignored but it is also possible to treat them as if they had a value.<br>\n Note: At ELO this is currently only supported for string-based values.<br>\n Note: This field will be ignored if type is VALUE_COUNT.",
            "type": "string"
          }
        }
      },
      "BResult_100361105": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "format": "int32",
              "type": "integer"
            }
          },
          "exception": {
            "description": "Error message",
            "type": "string"
          }
        }
      },
      "ListOfObject": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "WorkflowExportOptionsC": {
        "description": "Contants related to the workflow export.",
        "type": "object",
        "properties": {
          "FORMAT_JSON": {
            "format": "int32",
            "description": "JSON format.",
            "type": "integer"
          },
          "FORMAT_PLAIN_TABLE": {
            "format": "int32",
            "description": "Workflow table format for compatibility with Windows Client.",
            "type": "integer"
          }
        }
      }
    },
    "securitySchemes": {
      "apiKey": {
        "in": "cookie",
        "name": "JSESSIONID",
        "type": "apiKey"
      },
      "bearer": {
        "scheme": "bearer",
        "type": "http"
      },
      "basic": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "servers": [
    {
      "description": "Production Endpoint",
      "url": "/ix-Christian/rest"
    }
  ],
  "openapi": "3.0.1",
  "paths": {
    "/FeedService/findFirstHashTagRelation": {
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_findFirstHashTagRelation"
              }
            }
          }
        },
        "operationId": "FeedService_findFirstHashTagRelation",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "FeedService"
        ]
      },
      "description": "Interface de.elo.ix.client.feed.FeedService, method findFirstHashTagRelation"
    },
    "/SystemInformation/archivReport": {
      "summary": "Not used anymore and not implemented.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_SystemInformation_archivReport"
              }
            }
          }
        },
        "operationId": "SystemInformation_archivReport",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1383534582"
                }
              }
            }
          }
        },
        "tags": [
          "SystemInformation"
        ]
      },
      "description": "Interface de.elo.ix.client.system.SystemInformation, method archivReport"
    },
    "/IXServicePortIF/createDocMask": {
      "summary": "Creates a storage mask object and assigns default values.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createDocMask"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createDocMask",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2054753789"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This function does not insert the mask object into the database. Initial values can be copied\n from the mask specified with <code>maskId<\/code>.\n <p>"
    },
    "/HealthCheckService/updateAll": {
      "summary": "Update given values.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_HealthCheckService_updateAll"
              }
            }
          }
        },
        "operationId": "HealthCheckService_updateAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "HealthCheckService"
        ]
      },
      "description": "Interface de.elo.ix.client.health.HealthCheckService, method updateAll"
    },
    "/IXServicePortIF/invalidateCache2": {
      "summary": "Invalidate the internally used caches.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_invalidateCache2"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_invalidateCache2",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1712381166"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method invalidateCache2"
    },
    "/IXServicePortIF/checkoutCounters": {
      "summary": "Get counter information.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutCounters"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutCounters",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1698110251"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutCounters"
    },
    "/IXServicePortIF/findFirstNotes": {
      "summary": "Find first notes.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findFirstNotes"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findFirstNotes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "This function starts a search for Note object and returns the first objects\n found in {@link FindResult#notes}. At least {@link FindInfo#findByNotes} must be set. The\n member {@link FindInfo#findChildren} optionally constrain the results to a folder. The search\n must be closed with {@link #findClose(ClientInfo, String)} in order to release internally\n cached data."
    },
    "/FeedService/createAction": {
      "summary": "Initialize a document feed item object.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_createAction"
              }
            }
          }
        },
        "operationId": "FeedService_createAction",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_736351635"
                }
              }
            }
          }
        },
        "tags": [
          "FeedService"
        ]
      },
      "description": "This function does not store the created action in the\n database. Use {@link #checkinAction(ClientInfo, Action, ActionZ)} to make an Action object\n persistent. The returned object allows read access for everyone."
    },
    "/HealthCheckService/update": {
      "summary": "Update one value.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_HealthCheckService_update"
              }
            }
          }
        },
        "operationId": "HealthCheckService_update",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "HealthCheckService"
        ]
      },
      "description": "Example: <code><pre>\n IXConnection conn = ...\n HealthCheckInfo hci = new HealthCheckInfo();\n hci.setName(\"valuename\");\n hci.setStringValue(\"string1\");\n conn.getHealthCheckService().update(hci); \n <\/pre><\/code>"
    },
    "/IXServicePortIF/getSearchTerms": {
      "summary": "Get alternative terms for an iSearch search.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getSearchTerms"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getSearchTerms",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1888107655"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This function can be used to list all index values currently used for a given index group. To\n achieve this, pass termType=SearchTermsC.TERMS and set findInfo.findDirect.query = \"LINE.\" +\n indexgroup + \":\" + valueprefix. If more than 10 values shoud be returned, set\n findInfo.findOptions.totalCount to the maximum values to be returned.\n <\/p>"
    },
    "/IXServicePortIF/checkoutNotes": {
      "summary": "Read notes of a given Sord.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutNotes"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutNotes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_776454091"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutNotes"
    },
    "/PackageService/createPackage": {
      "summary": "Create a {@link PackageData} object.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PackageService_createPackage"
              }
            }
          }
        },
        "operationId": "PackageService_createPackage",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1959732439"
                }
              }
            }
          }
        },
        "tags": [
          "PackageService"
        ]
      },
      "description": "Interface de.elo.ix.client.PackageService, method createPackage"
    },
    "/IXServicePortIF/deleteUserProfile": {
      "summary": "Deletes profile options.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteUserProfile"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteUserProfile",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteUserProfile"
    },
    "/IXServicePortIF/checkinOrgUnits": {
      "summary": "Inserts or updates organizational units.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinOrgUnits"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinOrgUnits",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_893011331"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n When inserting a new OU, <code>OrgUnitInfo.id=-1<\/code> has to be set. More than one OU can be\n checked in with a single call of <code>checkinOrgUnit<\/code>. Therefore the names, IDs and\n GUIDs in the submitted <code>OrgUnitInfo<\/code> objects must be unique and cannot be used by\n other OUs in the archive database.\n <\/p>\n <p>\n If only the user and OU data is to be unlocked then the method should be called with\n <code>orgUnitInfos=null<\/code> and <code>lockZ=lockZ.YES<\/code>.\n <\/p>"
    },
    "/IXServicePortIF/endEditWorkFlowNode": {
      "summary": "Stores an edited person node of an active workflow into the database and unlocks the workflow.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_endEditWorkFlowNode"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_endEditWorkFlowNode",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The workflow is forwarded to the successor nodes as passed in parameter\n <code>arrEnterNodesIds<\/code>.\n <\/p>"
    },
    "/IXServicePortIF/checkinTranslateTerms": {
      "summary": "Write or insert terms into the translation table.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinTranslateTerms"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinTranslateTerms",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1888107655"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This function should not be called frequently, because it causes the translation cache to be\n reloaded.\n <\/p>"
    },
    "/IXServicePortIF/startWorkFlow": {
      "summary": "Starts a workflow from a workflow template.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_startWorkFlow"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_startWorkFlow",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method startWorkFlow"
    },
    "/IXServicePortIF/checkoutReplNames": {
      "summary": "Reads replication set names.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutReplNames"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutReplNames",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_884364631"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutReplNames"
    },
    "/IXServicePortIF/importWorkFlow2": {
      "summary": "Imports a workflow template from a file.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_importWorkFlow2"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_importWorkFlow2",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n To export a workflow template into a file, use the workflow design dialogue in ELO-CLIENT.\n <\/p>"
    },
    "/IXServicePortIF/evalAutoFiling": {
      "summary": "Evaluate the destination archive path based on filing definitions of a keywording from.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_evalAutoFiling"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_evalAutoFiling",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1881161566"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This function evaluates the parent folder of a Sord object based on the filing definition of a\n keywording form WITHOUT storing the Sord object. This is in contrast to the checkinSord and\n checkinDocEnd functions which store the Sord object in the resulting parent.\n <\/p>"
    },
    "/IXServicePortIF/deleteWorkflowTemplate": {
      "summary": "Deletes a workflow template version.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteWorkflowTemplate"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteWorkflowTemplate",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteWorkflowTemplate"
    },
    "/IXServicePortIF/encryptStringRsa": {
      "summary": "Encrypt or decrypt a string using the RSA algorithm.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_encryptStringRsa"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_encryptStringRsa",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This function encrypts or decrypts the string <code>data<\/code> using the RSA algorithm. The\n string must not be longer than 768 characters. Pass the public RSA key in <code>key<\/code>, if\n the string should be encrypted. In order to decrypt the string, the private key has to be\n passed. Both keys must be created with <code>createRsaKeys<\/code>.\n <\/p>"
    },
    "/IXServicePortIF/deleteUsers": {
      "summary": "Deletes users or groups.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteUsers"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteUsers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<\/p>\n <p>\n Since this function requires exclusive access to the user data, the data must be locked for the\n current user or must not be locked for anyone. To check in regardless of a lock\n <code>lockZ.FORCE<\/code> in <code>lockZ<\/code> must be supplied.\n <\/p>\n <p>\n If more than 100 users are passed to this function, a background task is started to avoid a\n timeout error. The task status can be queried by\n {@link #collectJobStates(ClientInfo, boolean, boolean, boolean)}. and\n {@link #queryJobState(ClientInfo, String, boolean, boolean, boolean)}.\n <\/p>"
    },
    "/IXServicePortIF/checkinActivityProject": {
      "summary": "This function writes an activity project into the database.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinActivityProject"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinActivityProject",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The current session must have the permission AccessC.FLAG_EDITACT in order to call this\n function.\n <\/p>"
    },
    "/IXServicePortIF/checkinReportOptions": {
      "summary": "Writes the report options.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinReportOptions"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinReportOptions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinReportOptions"
    },
    "/IXServicePortIF/deleteNotification": {
      "summary": "Deleting the Notification identified by objGuid / userGuid combination if the Notification has",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteNotification"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteNotification",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "child Notifications, they will be deleted as well."
    },
    "/IXServicePortIF/checkinKeys": {
      "summary": "Writes or inserts key objects.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinKeys"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinKeys",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_100361105"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n If key data is only to be unlocked then the method should be called with\n <code>keyInfos=null<\/code> and <code>lockZ=lockZ.YES<\/code>.\n <\/p>\n <p>\n The key objects with <code>KeyInfo[].id=-1<\/code> will be inserted in the database. Objects\n with <code>KeyInfo[].id>=0<\/code> will be updated.\n <\/p>\n <p>\n Since the function requires an exclusive access to the user data, the data must be locked for\n the current user or must not be locked for anyone. To check in regardless of a lock supply\n <code>lockZ.FORCE<\/code> in <code>lockZ<\/code>."
    },
    "/IXServicePortIF/beginForwardWorkflowNode": {
      "summary": "Prepare forwarding of a workflow node.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_beginForwardWorkflowNode"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_beginForwardWorkflowNode",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1822579866"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Use this function to lock a workflow and get the data\n required for forwarding a node."
    },
    "/IXServicePortIF/findFirstReportInfos": {
      "summary": "Finds report entries.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findFirstReportInfos"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findFirstReportInfos",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findFirstReportInfos"
    },
    "/IXServicePortIF/getConstants": {
      "summary": "Retrieves the constants.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getConstants"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getConstants",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1264954948"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n Constants are provided as objects to provide the advantage of type checking. (Java 1.4 does not\n support enumeration types).\n <\/p>"
    },
    "/IXServicePortIF/checkinDocsEnd": {
      "summary": "This method checks-in uploaded documents.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinDocsEnd"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinDocsEnd",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1047127860"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Utilized in the same manner as\n <code>checkinDocEnd<\/code> but for multiple documents and sords."
    },
    "/IXServicePortIF/checkoutDocMask": {
      "summary": "Reads a storage mask from the database.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutDocMask"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutDocMask",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2054753789"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutDocMask"
    },
    "/SystemInformation/userReport": {
      "summary": "Implementation for AdminConsoles user statistics.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_SystemInformation_userReport"
              }
            }
          }
        },
        "operationId": "SystemInformation_userReport",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_18214274"
                }
              }
            }
          }
        },
        "tags": [
          "SystemInformation"
        ]
      },
      "description": "Interface de.elo.ix.client.system.SystemInformation, method userReport"
    },
    "/IXServicePortIF/findNextUsers": {
      "summary": "Find next user data.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findNextUsers"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findNextUsers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findNextUsers"
    },
    "/ConfigService/deleteConfiguration2": {
      "summary": "Deletes configuration entries that match the criteria in deleteInfo.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_ConfigService_deleteConfiguration2"
              }
            }
          }
        },
        "operationId": "ConfigService_deleteConfiguration2",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_86336767"
                }
              }
            }
          }
        },
        "tags": [
          "ConfigService"
        ]
      },
      "description": "Interface de.elo.ix.client.config.ConfigService, method deleteConfiguration2"
    },
    "/IXServicePortIF/getSessionInfos": {
      "summary": "Returns the SessionInfo-Objects about all the active connections.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getSessionInfos"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getSessionInfos",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1376733713"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getSessionInfos"
    },
    "/IXServicePortIF/checkoutConfigFiles": {
      "summary": "Read config file names and file data.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutConfigFiles"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutConfigFiles",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1737266313"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The <code>names<\/code> parameter selects the config files. Each element in this array contains\n the virtual path to a file. A path private to a user starts with the user s name. Paths may\n contain the wildcard <code>*<\/code> instead of a file name. In this case all files in the\n directory are returned.\n <\/p>\n <p>\n <table border=\"2\">\n <tr>\n <td>Example<\/td>\n <td>Description<\/td>\n <\/tr>\n <tr>\n <td><code>name[.]=peter/template/*<\/code><\/td>\n <td>Selects all private document templates of user peter (document templates are currently not\n supported!)<\/td>\n <\/tr>\n <tr>\n <td><code>name[.]=peter/postbox/*<\/code><\/td>\n <td>Selects peters server side postbox files<\/td>\n <\/tr>\n <tr>\n <td><code>name[.]=template/*<\/code><\/td>\n <td>Selects all document templates available for all users (document templates are currently\n not supported!)<\/td>\n <\/tr>\n <tr>\n <td><code>name[.]=eloscripts/*<\/code><\/td>\n <td>Selects all scripts<\/td>\n <\/tr>\n <\/table>\n <\/p>"
    },
    "/IXServicePortIF/checkoutWorkflowTemplate": {
      "summary": "Check out versions of a workflow template.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutWorkflowTemplate"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutWorkflowTemplate",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1663767661"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutWorkflowTemplate"
    },
    "/IXServicePortIF/getSessionFromTicket": {
      "summary": "Returns the LoginResult object that represents the session of the ticket contained in the given",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getSessionFromTicket"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getSessionFromTicket",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_777531606"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "ClientInfo object."
    },
    "/IXServicePortIF/checkoutMap": {
      "summary": "Reads a map or parts of a map.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutMap"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutMap",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2011132580"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n Since ELO10: In order to access BLOB values, lookup the value in the returned element\n {@link MapData#mapItems} or cast the related object in {@link MapData#items} to\n {@link MapValue}.\n \n <pre>\n <code>\n MapData map = conn.ix().checkoutMap( mapDomainName, \"1\", new String[] {\"myfile\"}, LockC.NO );\n MapValue mapValue = map.getMapItems().get(\"myfile\");\n InputStream istream = mapValueR.getBlobValue().getStream();\n try {\n   ...\n } finally {\n   istream.close();\n }\n <\/code>\n <\/pre>\n <\/p>"
    },
    "/IXServicePortIF/controlBackup": {
      "summary": "Query the status of the backup and purge tasks of the ELOdm.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_controlBackup"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_controlBackup",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_52201250"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n In addition, the backup and purge tasks can be started or stopped. The user calling this method\n must have the main administrator right (AccessC.FLAG_ADMIN).\n <\/p>"
    },
    "/FeedService/checkoutAction": {
      "summary": "Read a document feed entry.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_checkoutAction"
              }
            }
          }
        },
        "operationId": "FeedService_checkoutAction",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_736351635"
                }
              }
            }
          }
        },
        "tags": [
          "FeedService"
        ]
      },
      "description": "Interface de.elo.ix.client.feed.FeedService, method checkoutAction"
    },
    "/PluginService/install": {
      "summary": "Install a plugin from the location of a JAR file.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PluginService_install"
              }
            }
          }
        },
        "operationId": "PluginService_install",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_6"
                }
              }
            }
          }
        },
        "tags": [
          "PluginService"
        ]
      },
      "description": "Interface de.elo.ix.client.plugin.PluginService, method install"
    },
    "/IXServicePortIF/refSord": {
      "summary": "Creates a new object relationship.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_refSord"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_refSord",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method refSord"
    },
    "/FeedService/findHashTagByActions": {
      "summary": "Returns all HashTags which occurs in a given Array of Actions",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_findHashTagByActions"
              }
            }
          }
        },
        "operationId": "FeedService_findHashTagByActions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1535847981"
                }
              }
            }
          }
        },
        "tags": [
          "FeedService"
        ]
      },
      "description": "Interface de.elo.ix.client.feed.FeedService, method findHashTagByActions"
    },
    "/IXServicePortIF/setServerInfo": {
      "summary": "Sets the writable members of ServerInfo.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_setServerInfo"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_setServerInfo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method setServerInfo"
    },
    "/IXServicePortIF/checkinDocsBegin": {
      "summary": "This method prepares the Index Server to allow multiple documents to be checked in at one time.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinDocsBegin"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinDocsBegin",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1047127860"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Utilized in the same manner as <code>checkinDocBegin<\/code> but is for multiple documents."
    },
    "/IXServicePortIF/deleteAspect": {
      "summary": "Delete an {@link Aspect} object.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteAspect"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteAspect",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "This function requires permission\n {@link AccessC#FLAG_EDITMASK}. An exception is thrown, if access is denied or if the aspect\n does not exist."
    },
    "/IXServicePortIF/checkinMapDomain": {
      "summary": "Creates or updates a map domain.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinMapDomain"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinMapDomain",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinMapDomain"
    },
    "/IXServicePortIF/forwardSubstitution": {
      "summary": "Forward or transfer a substitution to an other user.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_forwardSubstitution"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_forwardSubstitution",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n A substitution can be forwarded or transfered to an other user if\n {@link SubstitutionSettings#canBeForwarded} is set to true and the current user is allowed to\n forward the substitution.\n <\/p>\n <p>\n Define how the substitution is forwarded by setting the corresponding parameters in\n {@link ForwardSubstitutionInfo}.\n <\/p>\n \n <p>\n The current user is allowed to forward a substitution, if:\n <\/p>\n <ul>\n <li>The current user is the substitute ({@link Substitution#substituteId}\n <li>The current user is member of the group who is the substitute\n <li>The current user is sub administrator of the substitute\n <li>The current user is the direct superior of the substitute (ignoring groups,\n {@link UserInfo#superiorId} of the substitute must be the current user)\n <li>The current user has main administrator rights.\n <\/ul>"
    },
    "/IXServicePortIF/createNewEncryptionSet": {
      "summary": "ToBeFilled",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createNewEncryptionSet"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createNewEncryptionSet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method createNewEncryptionSet"
    },
    "/IXServicePortIF/checkinColors": {
      "summary": "Check-in the marker definitions (colors for the archive entries).",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinColors"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinColors",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "This method deletes the\n current markers and inserts the supplied ones in <code>colors<\/code>. To insert a new color,\n set its Id to -1. If the supplied <code>colors<\/code> array does not contain a system color (Id\n == 0), a new system color object is created. The objects must have unique IDs (or -1) and\n unique names. Since the existing colors are entirely replaced by this function, use\n {@link #checkoutColors2(ClientInfo, int, LockZ)} with option {@link ColorDataC#ALL_COLORS} to\n obtain all existing colors to prepare a call to this function."
    },
    "/IXServicePortIF/checkinMap": {
      "summary": "Inserts or updates the given key-value-pairs in <code>data<\/code> in the map specified by",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinMap"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinMap",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<code>id<\/code>.\n <p>\n The map can be associated to a Sord object by setting the parameter <code>objId<\/code> to a\n valid Sord ID. This implies, that the map is deleted, if the Sord object is finally deleted.\n Furthermore, the map can be copied with the Sord object. Therefore, the map ID must be equal to\n the Sord ID and the map domain must be prepared to copy items by setting\n <code>MapDomain.copy=true<\/code>.\n <\/p>\n <p>\n If domainName is set to MapDomainC.DOMAIN_IX_OPTIONS, the Indexserver configuration options\n from table eloixopt can be written. Therefore the key items in <code>data<\/code> must be\n formatted as data[.].key = &qt;[&qt; + ixid + &qt;]&qt; + optname. Whereby ixid is &qt;_ALL&qt;\n or the Indexserver ID specified in the web.xml or config.xml. The parameter <code>id<\/code> is\n ignored when reading Indexserver options. The <code>unlockZ<\/code> parameter is ignored too,\n because the options table does not support locking. Only Administrators are allowed to access\n the Indexserver options.\n <\/p>\n <p>\n Since ELO10: Map items can be of type {@link MapValue} which allows to store a BLOB. The\n maximum BLOB size should be at most {@link FileDataC#MAX_BLOB_LENGTH}.\n \n <pre>\n <code>\n InputStream istream = new FileInputStream(new File(\"c:\\test.txt\")); // is closed in checkinMap\n FileData fileData = new FileData();\n fileData.setContentType(\"text/plain\");\n fileData.setStream(istream);\n MapValue mapValue = new MapValue();\n mapValue.setKey(\"myfile\");\n mapValue.setBlobValue(fileData);\n conn.ix().checkinMap( \"MyMapDomain\", \"1\", 0, new KeyValue[] { mapValue }, LockC.NO );\n <\/code>\n <\/pre>\n <\/p>"
    },
    "/IXServicePortIF/getWebDAVPathFromObjID": {
      "summary": "Returns the WebDAV path from an Object ID.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getWebDAVPathFromObjID"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getWebDAVPathFromObjID",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getWebDAVPathFromObjID"
    },
    "/ConfigService/checkinConfigurations": {
      "summary": "Insert or update configuration entries.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_ConfigService_checkinConfigurations"
              }
            }
          }
        },
        "operationId": "ConfigService_checkinConfigurations",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_86336767"
                }
              }
            }
          }
        },
        "tags": [
          "ConfigService"
        ]
      },
      "description": "To update an existing entry, supply a non-zero {@link ConfigRecord#id} or an existing tuple of\n {@link ConfigRecord#packageName}, {@link ConfigRecord#component}, {@link ConfigRecord#key},\n {@link ConfigRecord#level}, {@link ConfigRecord#groupId}, and {@link ConfigRecord#instanceId}."
    },
    "/IXServicePortIF/createAspectMask": {
      "summary": "Initializes a {@link DocMask} object as a keywording form for aspects.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createAspectMask"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createAspectMask",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2054753789"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Use\n {@link #checkinDocMask(ClientInfo, DocMask, DocMaskZ, LockZ)} to store the keywording form in\n the database. Note that the name of an aspect association can be set only initially. Aspect\n associations cannot be renamed via checkinDocMask."
    },
    "/HealthCheckService/uploadAll": {
      "summary": "Force uploading health check data to web service.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_HealthCheckService_uploadAll"
              }
            }
          }
        },
        "operationId": "HealthCheckService_uploadAll",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_21"
                }
              }
            }
          }
        },
        "tags": [
          "HealthCheckService"
        ]
      },
      "description": "This function should only be used in test\n scenarios. Indexserver automatically uploads health check data one time per month."
    },
    "/IXServicePortIF/configureFulltext": {
      "summary": "Get or set the fulltext configuration.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_configureFulltext"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_configureFulltext",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_239574905"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Note: deprecated. Use checkinEsSettings and checkoutEsSettings instead."
    },
    "/IXServicePortIF/deleteOrgUnits": {
      "summary": "Delete OUs.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteOrgUnits"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteOrgUnits",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteOrgUnits"
    },
    "/IXServicePortIF/sendEvents": {
      "summary": "Send events to event busses.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_sendEvents"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_sendEvents",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n Call this function to send events to event busses.\n <\/p>"
    },
    "/IXServicePortIF/getServerInfoDM": {
      "summary": "Gets DM configuration information.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getServerInfoDM"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getServerInfoDM",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1425760760"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getServerInfoDM"
    },
    "/IXServicePortIF/checkinSubs": {
      "summary": "Insert deputy/substitute information.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinSubs"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinSubs",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinSubs"
    },
    "/IXServicePortIF/closeEventBus": {
      "summary": "Close an event bus opened by <code>openEventBus<\/code>.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_closeEventBus"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_closeEventBus",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n Any subscriber that knows the bus ID can close this event bus. When a bus is closed, all\n outstanding events in the ELOix are deleted. After a bus is closed, neither listener will\n receive anymore events from this bus. This function ignores unknown or already closed bus IDs\n or bus IDs defined in <code>EventBusC<\/code>.\n <\/p>"
    },
    "/IXServicePortIF/findNextSubscriptions": {
      "summary": "Find next max subscriptions beginning at index idx.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findNextSubscriptions"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findNextSubscriptions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findNextSubscriptions"
    },
    "/IXServicePortIF/checkoutWorkFlow": {
      "summary": "Reads a workflow definition.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutWorkFlow"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutWorkFlow",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1663767661"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutWorkFlow"
    },
    "/ConfigService/deleteConfigurations": {
      "summary": "Deletes a list of configuration entries.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_ConfigService_deleteConfigurations"
              }
            }
          }
        },
        "operationId": "ConfigService_deleteConfigurations",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "ConfigService"
        ]
      },
      "description": "Interface de.elo.ix.client.config.ConfigService, method deleteConfigurations"
    },
    "/PackageService/exportPackageContent": {
      "summary": "Export {@link PackageData} objects.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PackageService_exportPackageContent"
              }
            }
          }
        },
        "operationId": "PackageService_exportPackageContent",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1067648097"
                }
              }
            }
          }
        },
        "tags": [
          "PackageService"
        ]
      },
      "description": "Interface de.elo.ix.client.PackageService, method exportPackageContent"
    },
    "/IXServicePortIF/collectMapDomains": {
      "summary": "Collects the existing map domains.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_collectMapDomains"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_collectMapDomains",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1963952629"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This function does not return the special domain MapDomainC.DOMAIN_IX_OPTIONS.\n <\/p>"
    },
    "/MyELOService/readContent": {
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_MyELOService_readContent"
              }
            }
          }
        },
        "operationId": "MyELOService_readContent",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1585309177"
                }
              }
            }
          }
        },
        "tags": [
          "MyELOService"
        ]
      },
      "description": "Interface de.elo.ix.client.myelo.MyELOService, method readContent"
    },
    "/IXServicePortIF/checkinSordPath": {
      "summary": "Checks the existence of an archive path and creates missing entries if necessary by traversing",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinSordPath"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinSordPath",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_100361105"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "top-down through the Sords array.\n <p>\n The folders are inserted inside the same database transaction. Thus either all folders are\n created or none.\n <\/p>\n <p>\n This function allows only one process at a given time to create a structure. This prevents from\n creating the same archive path twice by two parallel working processes.\n <\/p>\n <p>\n In order to write index values (Sord.objKeys/Sord.aspects), parameter sordZ has to contain\n SordC.mbObjKeys or SordC.mbAspectObjects resp. If sord.objKeys == null or sord.aspects=null or\n sordZ does not contain SordC.mbObjKeys/SordC.mbAspectObjects, the index values defaults defined\n by the keywording form are written.\n <\/p>"
    },
    "/IXServicePortIF/checkoutKeywordsDynamic": {
      "summary": "Queries dynamic keyword lists.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutKeywordsDynamic"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutKeywordsDynamic",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1552114559"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n A server script generates the data of dynamic keyword lists from external resources. Such\n resources may be databases of CRMs, webservices like twitter, an e-M@il provider, etc. The\n default installation does not provide any server scripts. They must be implemented by the\n end-user.\n <\/p>"
    },
    "/IXServicePortIF/checkoutKeywords": {
      "summary": "Collects keywords and their children.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutKeywords"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutKeywords",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_206201524"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The keyword objects with the given <code>kwids[.]<\/code> will be read.\n <table border=\"2\">\n <tr>\n <td rowspan=4><code>kwids[.]=<\/code><\/td>\n <td><code>KeywordC.KWID_*<\/code>,<\/td>\n <\/tr>\n <tr>\n <td>an index row name,<\/td>\n <\/tr>\n <tr>\n <td>an ID of a previously read keyword.<\/td>\n <\/tr>\n <tr>\n <td>null, to read all toplevel keyword lists. Parameter <code>max<\/code> is ignored.<\/td>\n <\/tr>\n <\/table>\n <\/p>\n <p>\n The parameter <code>max<\/code> controls how many keywords will be read.\n <table border=\"2\">\n <tr>\n <td>max = 0<\/td>\n <td>Only the first level directly below the given <code>kwids[.]<\/code> is read (up to 676\n keywords). The children of the returned keywords are <code>null<\/code><\/td>\n <\/tr>\n <tr>\n <td><code>max<\/code> = -1<\/td>\n <td>Entire tree below <code>kwid<\/code> is read.<\/td>\n <\/tr>\n <tr>\n <td><code>max<\/code> &gt; 0<\/td>\n <td>Approximately up to this number of keywords are read. The children of a keyword are always\n read completely or they are <code>null<\/code>. Thus up to <code>max<\/code>+675 keywords could\n be returned.<\/td>\n <\/tr>\n <\/table>\n <\/p>\n <p>\n Hint: if <code>max<\/code> &gt;= 0 and the <code>Keyword.children<\/code> of a keyword is an\n empty array (not <code>null<\/code>), the keyword has definitely no children. If\n <code>Keyword.children = null<\/code>, query the children with a further call to\n <code>collectKeywords<\/code>.\n <\/p>\n <p>\n Before one of the returned keywords can be used as an index value the members\n <code>Keyword.enabled<\/code> and <code>Keyword.raw<\/code> must be analyzed, see\n <code>Keyword<\/code> documentation.\n <\/p>\n <p>\n You need the access right <code>AccessC.FLAG_EDITCONFIG<\/code> to lock keywords against\n concurrent modification.\n <p>"
    },
    "/RawStreamService/upload": {
      "summary": "Upload a stream.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_RawStreamService_upload"
              }
            }
          }
        },
        "operationId": "RawStreamService_upload",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "tags": [
          "RawStreamService"
        ]
      },
      "description": "Interface de.elo.ix.client.compatibility.RawStreamService, method upload"
    },
    "/IXServicePortIF/getDebuggerPort": {
      "summary": "This function returns debugger's port.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getDebuggerPort"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getDebuggerPort",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getDebuggerPort"
    },
    "/IXServicePortIF/getServerInfo": {
      "summary": "Retrieves configurational information, e.g. license key, additional Indexservers, etc.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getServerInfo"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getServerInfo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1701204890"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "In order\n to update the current license information call {@link #configureLicense(ClientInfo, String)}."
    },
    "/IXServicePortIF/findFirstConfigFiles": {
      "summary": "Finds configuration or postbox files.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findFirstConfigFiles"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findFirstConfigFiles",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findFirstConfigFiles"
    },
    "/IXServicePortIF/forwardWorkflowNode": {
      "summary": "Forward a workflow node, terminate a workflow or modify node data.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_forwardWorkflowNode"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_forwardWorkflowNode",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1699606509"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<h2>Example 1: Forward a workflow node:<\/h2>\n <p>\n \n <pre>\n <code class=\"example\">\n // Lock workflow and read node data\n WFEditNode editNode = conn.ix().beginForwardWorkflowNode(flowId, nodeId, null, LockC.IF_FREE);\n // Select successor nodes to be activated\n // Make sure to select only one successor if: (editNode.getNode().getFlags() &amp; WFNodeC.FLAG_ONE_SUCCESSOR) != 0\n List<Integer> succNodes = Arrays.asList(editNode.getSuccNodes()[0].getId());\n // Optionally: change node name and comment\n WFNode activeNode = editNode.getNode();\n activeNode.setName(\"new name\");\n activeNode.setComment(\"new comment\");\n // Forward\n ForwardWorkflowNodeInfo fwdInfo = new ForwardWorkflowNodeInfo();\n fwdInfo.setNode(activeNode);\n fwdInfo.setSuccessorNodesToActivate(succNodes); \n connU.ix().forwardWorkflowNode(flowId, nodeId, fwdInfo, LockC.YES);\n <\/code>\n <\/pre>\n <\/p>\n <h2>Example 2: Cancel forwarding after beginForwardWorkflowNode has locked the workflow<\/h2>\n <p>\n \n <pre>\n <code class=\"example\">\n // Lock workflow and read node data\n WFEditNode editNode = conn.ix().beginForwardWorkflowNode(flowId, nodeId, null, LockC.IF_FREE);\n // Cancel forward\n ForwardWorkflowNodeInfo fwdInfo = null;\n connU.ix().forwardWorkflowNode(flowId, nodeId, fwdInfo, LockC.YES);\n <\/code>\n <\/pre>\n <\/p>\n <h2>Example 3: Change node priority, name and comment<\/h2>\n <p>\n \n <pre>\n <code class=\"example\">\n <\/p>\n // Lock workflow \n WFEditNode editNode = conn.ix().beginForwardWorkflowNode(flowId, nodeId, null, LockC.IF_FREE);\n // Change node priority, name and comment\n WFNode activeNode = editNode.getNode();\n activeNode.setPrio(UserTaskPriorityC.HIGHEST);\n activeNode.setName(\"new name\");\n activeNode.setComment(\"new comment\");\n // Update node and unlock\n ForwardWorkflowNodeInfo fwdInfo = new ForwardWorkflowNodeInfo();\n fwdInfo.setNode(activeNode);\n connU.ix().forwardWorkflowNode(flowId, nodeId, fwdInfo, LockC.YES);\n <\/code>\n <\/pre>\n <\/p>"
    },
    "/LdapService/createConfig": {
      "summary": "Create an empty LDAP configuration with initialized members.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_LdapService_createConfig"
              }
            }
          }
        },
        "operationId": "LdapService_createConfig",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_944564842"
                }
              }
            }
          }
        },
        "tags": [
          "LdapService"
        ]
      },
      "description": "Interface de.elo.ix.client.ldap.LdapService, method createConfig"
    },
    "/IXServicePortIF/checkoutTranslateTerms": {
      "summary": "Read terms from translation table for viewing or editing.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutTranslateTerms"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutTranslateTerms",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1088095067"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n It can also be used to retrieve the supported languages. Use this function, if only a few terms\n should be returned. Otherwise call <code>findFirstTranslateTerms<\/code>.\n <\/p>"
    },
    "/MyELOService/checkState": {
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_MyELOService_checkState"
              }
            }
          }
        },
        "operationId": "MyELOService_checkState",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1426941339"
                }
              }
            }
          }
        },
        "tags": [
          "MyELOService"
        ]
      },
      "description": "Interface de.elo.ix.client.myelo.MyELOService, method checkState"
    },
    "/IXServicePortIF/controlBackgroundThread": {
      "summary": "Query the status of the job and control its state.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_controlBackgroundThread"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_controlBackgroundThread",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1436376940"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n Using this method the job can be cancelled. The user calling this method must have started the\n job or must have the administrator right (AccessC.FLAG_ADMIN).\n <\/p>"
    },
    "/IXServicePortIF/checkoutSordPath": {
      "summary": "Gets the list of Sord object which are the predecessors of the sord given by the objId.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutSordPath"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutSordPath",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1835331414"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n If csi.inclRefPaths is set, all the sord of the referenced paths are also returned.\n <\/p>"
    },
    "/IXServicePortIF/deleteWorkFlow": {
      "summary": "Deletes a workflow.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteWorkFlow"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteWorkFlow",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n WOrkflows that are deleted are not physically deleted and can be retrieved using\n checkoutWorkFlow(). Deleted workflows return true when the WFDiagram.isDeleted() method is\n called.\n <\/p>"
    },
    "/IXServicePortIF/getCompiledScripts": {
      "summary": "This function returns a map containing information of all compiled scripts.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getCompiledScripts"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getCompiledScripts",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_498630295"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getCompiledScripts"
    },
    "/IXServicePortIF/deleteDocMask": {
      "summary": "Deletes a storage mask.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteDocMask"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteDocMask",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<\/p>\n <p>\n If archive entries connected to the mask still exist in the database, another mask\n <code>assignMaskId<\/code> can be assigned to them.\n <\/p>\n <p>\n If <code>assignMaskId<\/code> is not defined and there are objects connected to the mask in the\n database the method throws an exception.\n <\/p>\n <p>"
    },
    "/IXServicePortIF/findNextSords": {
      "summary": "Retrieves further results of a previous search with <code>findFirstSords<\/code>.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findNextSords"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findNextSords",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findNextSords"
    },
    "/IXServicePortIF/deleteEventBusSubscriber": {
      "summary": "Deletes an event bus subscriber.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteEventBusSubscriber"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteEventBusSubscriber",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This function deletes a subscriber an all its event listeners.\n <\/p>"
    },
    "/IXServicePortIF/checkLicense": {
      "summary": "Check licensing information.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkLicense"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkLicense",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_545905411"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "This function checks the given license information using\n proprietary algorithms."
    },
    "/IXServicePortIF/computeDocumentHash": {
      "summary": "Compute the hash value of an archived document.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_computeDocumentHash"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_computeDocumentHash",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_847213937"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method computeDocumentHash"
    },
    "/IXServicePortIF/login": {
      "summary": "Log on to Indexserver.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_login"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_login",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_777531606"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n If the function succeeds, the return value is an object containing a ticket that allows access\n to all the other interface functions.\n <\/p>\n <p>\n This ticket has a limited lifetime as returned in <code>LoginResult.ticketDuration<\/code>. The\n life time can be extended by calling <code>alive<\/code>.\n <\/p>\n <p>\n The <code>runAsUser<\/code> parameter is used in Single-Sign-On environments. The login is\n performed for every user with the same SSO account specific to the application and the\n <runAsUser> parameter specifies the security context for the Indexserver connection. The SSO\n account must have administrator privileges.\n <\/p>"
    },
    "/IXServicePortIF/logout": {
      "summary": "Log out user.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_logout"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_logout",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The ticket contained in <code>ci<\/code> becomes invalid.\n <\/p>"
    },
    "/IXServicePortIF/adminMode": {
      "summary": "Queries, enters or leaves the administration mode.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_adminMode"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_adminMode",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n In administration mode, only main administrators can logon to the archive.\n <\/p>"
    },
    "/IXServicePortIF/executeRegisteredFunction": {
      "summary": "Execute a registered function defined in a JavaScript or in an event handler.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_executeRegisteredFunction"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_executeRegisteredFunction",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1191976387"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method executeRegisteredFunction"
    },
    "/FeedService/findFirstNotification": {
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_findFirstNotification"
              }
            }
          }
        },
        "operationId": "FeedService_findFirstNotification",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "FeedService"
        ]
      },
      "description": "Interface de.elo.ix.client.feed.FeedService, method findFirstNotification"
    },
    "/IXServicePortIF/takeWorkFlowNode": {
      "summary": "Assign a node to a user.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_takeWorkFlowNode"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_takeWorkFlowNode",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This function is useful in two situations:<br/>\n 1. A user calls this function to assume a task for exclusive use. The task must be assigned to\n one of the user s groups or to a user substituted by the current user. Supply an empty\n <code>sUserId<\/code>.<br/>\n 2. A user calls this function to pass the task to another user. The task must be assigned to\n the current user. Supply any user name or ID in sUserId.\n <\/p>\n The function assigns in addition to the given node all nodes with the same\n {@link WFNode#departmentGroup}."
    },
    "/IXServicePortIF/createActivity": {
      "summary": "This function creates an activity in memory based on the given project and assigned to the",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createActivity"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createActivity",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_460199434"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "given object.\n <p>\n The current session must have read access to the Sord, if parameter objId is specified.\n <\/p>"
    },
    "/IXServicePortIF/checkinDocMask": {
      "summary": "Writes a keywording form into the database. A new mask is inserted when <code>docMask.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinDocMask"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinDocMask",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "no<\/code>\n is less than 0.\n <p>\n If an existing keywording form is written with modified group names (DocMaskLine.key), a\n background thread is started to update the existing index values (Sord.objKeys[.].name). Use\n collectJobState to watch the state of the background job. Its name is &quot;Update existing\n index values for keywording form=...&quot;\n <\/p>"
    },
    "/IXServicePortIF/getUserNames": {
      "summary": "Reads user or group names and IDs.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getUserNames"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getUserNames",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1001617329"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The method performs an internal call to <code>checkoutUsers<\/code>. <b>Note:<\/b> Only the names\n and IDs are returned and not the complete user data.\n <\/p>\n <p>\n If the current user is assigned to organisation units, the function returns only users and\n groups assigned to at least one of the users organisation units.\n <\/p>"
    },
    "/IXServicePortIF/createSubscription": {
      "summary": "Initialize a subscription object.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createSubscription"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createSubscription",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_323351719"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method createSubscription"
    },
    "/IXServicePortIF/getContextTerms": {
      "summary": "Find terms for faceted search.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getContextTerms"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getContextTerms",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1005790586"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getContextTerms"
    },
    "/MyELOService/cleanUpNotifications": {
      "summary": "Delete Notifications of a user.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_MyELOService_cleanUpNotifications"
              }
            }
          }
        },
        "operationId": "MyELOService_cleanUpNotifications",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "tags": [
          "MyELOService"
        ]
      },
      "description": "Interface de.elo.ix.client.myelo.MyELOService, method cleanUpNotifications"
    },
    "/IXServicePortIF/checkinKeywordList": {
      "summary": "Write or insert a keyword list.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinKeywordList"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinKeywordList",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This function internally calls checkinKeywords.\n <\/p>"
    },
    "/IXServicePortIF/applyForNotifications": {
      "summary": "Specify, which notifications should be sent by the server.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_applyForNotifications"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_applyForNotifications",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_77743605"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method applyForNotifications"
    },
    "/IXServicePortIF/deleteMap": {
      "summary": "Delete map items.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteMap"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteMap",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteMap"
    },
    "/IXServicePortIF/findFirstSubscriptions": {
      "summary": "Find first max subscriptions. This function finds the subscriptions of the current user.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findFirstSubscriptions"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findFirstSubscriptions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findFirstSubscriptions"
    },
    "/IXServicePortIF/checkinKeywords": {
      "summary": "Insert keywords and all their children. The keyword IDs specify whether to insert or update.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinKeywords"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinKeywords",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n <table border=\"2\">\n <tr>\n <td><code>kws[.].id={existing ID}<\/code><\/td>\n <td>Updates the keyword tree branch below the keyword with <code>kws[.].id<\/code>. The keyword\n must exist.<\/td>\n <\/tr>\n <tr>\n <td><code>kws[.].id={new root ID}<\/code><\/td>\n <td>Inserts or updates a new keyword list.<\/td>\n <\/tr>\n <\/table>\n <\/p>\n <p>\n <table border=\"2\">\n <tr>\n <th>Operations<\/th>\n <th>Solution<\/td>\n <tr>\n <td>Insert a new child into an existing parent keyword<\/td>\n <td>Check-in the parent keyword with all current children plus the new child. Setting the text\n members and children arrays of the current children to <code>null<\/code> leaves them unchanged.\n <\/td>\n <\/tr>\n <tr>\n <td>Delete a child of an existing parent keyword<\/td>\n <td>Check-in the parent keyword with all current children minus the child to be deleted.\n Setting the text members and children arrays of the current children to <code>null<\/code>\n leaves them unchanged.<\/td>\n <\/tr>\n <tr>\n <td>Update <code>text, add, enabled<\/code> of an existing keyword<\/td>\n <td>Check-in the keyword with a non empty text member. Only when the text is not\n <code>null<\/code> and not an empty string will the members <code>add<\/code> and\n <code>enabled<\/code> be written into the database.<\/td>\n <\/tr>\n <\/table>\n <\/p>\n <p>\n <b>IMPORTANT: This function assigns new IDs to all branches of the keyword trees below the\n parent keywords of the given keywords. The client program should read the parent keyword and\n all children below again to receive the new IDs. <\/b>\n <\/p>\n <p>\n The access rights <code>AccessC.FLAG_EDITCONFIG<\/code> and <code>AccessC.FLAG_EDITSWL<\/code>\n are required to check-in keywords.\n <p>"
    },
    "/IXServicePortIF/checkinNotes": {
      "summary": "Write or insert Notes.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinNotes"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinNotes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_100361105"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n Only Sord objects that reference documents can have notes. It is also possible to delete a\n Note: <code>notes[.].setDeleted(true);<\/code>.\n <\/p>\n <p>\n NOTE: When checking changed notes of annotation in stamp type notes or annotations can only be\n checked in once. When attempting to check in stamp type notes that already exist an exception\n will be returned. Use <code>MbOnlyLock<\/code> to unlock notes and annotations.\n <\/p>"
    },
    "/IXServicePortIF/checkinNotification": {
      "summary": "Inserts or updates a Notification object",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinNotification"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinNotification",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_494610451"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "if userGuid is null, the own Guid will be taken if userGuid is not the own Guid, admin rights\n are needed"
    },
    "/HealthCheckService/read": {
      "summary": "Read given health check values.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_HealthCheckService_read"
              }
            }
          }
        },
        "operationId": "HealthCheckService_read",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_333475674"
                }
              }
            }
          }
        },
        "tags": [
          "HealthCheckService"
        ]
      },
      "description": "Interface de.elo.ix.client.health.HealthCheckService, method read"
    },
    "/HealthCheckService/updateDoubleValue": {
      "summary": "Update one value. This function overwrites an existing value.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_HealthCheckService_updateDoubleValue"
              }
            }
          }
        },
        "operationId": "HealthCheckService_updateDoubleValue",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "HealthCheckService"
        ]
      },
      "description": "Example: <code><pre>\n IXConnection conn = ...\n conn.getHealthCheckService().updateDoubleValue(\"valuename\", 1.2); \n <\/pre><\/code>"
    },
    "/IXServicePortIF/checkinAspect": {
      "summary": "Update or insert an {@link Aspect} object.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinAspect"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinAspect",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "This function requires permission\n {@link AccessC#FLAG_EDITMASK}. An exception is thrown, if access is denied or if the aspect\n does not exist. Note: The name and type of an aspect line is fixed with the initial value\n during the first check in and cannot be changed later."
    },
    "/IXServicePortIF/createEventBusListener": {
      "summary": "Creates an event bus listener.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createEventBusListener"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createEventBusListener",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_6"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This function creates an event bus listener that filters events from the event bus as described\n in the filter list of the <code>eventListener<\/code> parameter. Event bus listeners have to be\n deleted by either <code>deleteEventBusListener<\/code> or by deleting the subscriber with\n <code>deleteEventBusSubscriber<\/code>.\n <\/p>"
    },
    "/IXServicePortIF/createNoteTemplate": {
      "summary": "Initializes a new NoteTemplate object.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createNoteTemplate"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createNoteTemplate",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1995912373"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method createNoteTemplate"
    },
    "/IXServicePortIF/loginKerberos": {
      "summary": "Login using Kerberos ticket.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_loginKerberos"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_loginKerberos",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_777531606"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method loginKerberos"
    },
    "/IXServicePortIF/checkinSordTypes": {
      "summary": "Write or insert sord type information.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinSordTypes"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinSordTypes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinSordTypes"
    },
    "/IXServicePortIF/deleteSord": {
      "summary": "Deletes an archive entry and all child entries or deletes a relation (logical copy).",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteSord"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteSord",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<\/p>\n <p>\n A reference is deleted if <code>parentId<\/code> specifies an entry which is not the main parent\n of <code>objId<\/code>. The main parent can be found in <code>Sord.parent<\/code> after reading\n the indexing information for <code>objId<\/code> using <code>checkoutSord<\/code>. References are\n never deleted physically.\n <\/p>\n <p>\n A archive entry is deleted if <code>parentId<\/code> is set to <code>null<\/code> or the id of\n its main parent.\n <\/p>\n <p>\n If <code>deleteFinally=true<\/code>, all already logically deleted objects in the subtree of\n objId will be deleted physically. All related data (document versions, attachments, workflows,\n etc.) will also be physically deleted. Use this parameter with caution, since a reverse\n operation does not exist.\n <\/p>\n <p>\n To delete logically set <code>deleteFinally=false<\/code>, which only sets the the delete flag\n within the database.\n <\/p>\n <p>"
    },
    "/IXServicePortIF/reload": {
      "summary": "This function reloads all internal objects.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_reload"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_reload",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n Call this function with administrator privileges, if configuration options, scripts or\n configuration files are modified. Current sessions and processes are tried to be kept alive.\n But under some conditions, sessions get lost and running processes terminate with an exception!\n <\/p>"
    },
    "/IXServicePortIF/changeSordMask": {
      "summary": "Changes the storage mask of a archive entry.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_changeSordMask"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_changeSordMask",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_820228328"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The function does not update the object in the database. The method <code>checkinSord<\/code>\n must be used to write the changes into the database.\n <\/p>\n <p>\n For new Sord objects (Sord.id &lt; 0), ACL items are replaced by the definitions of the mask.\n Existing objects keep the previous ACL setting.\n <\/p>\n <p>\n ObjKeys with IDs &lt; ID_LINK (=50) are converted into the format of the new associated\n DocMaskLine. ObjKeys with IDs &gt;= ID_LINK are not changed.\n <\/p>"
    },
    "/IXServicePortIF/getEditInfoFromESW": {
      "summary": "Returns the EditInfo-Objects from the FileData-Objects.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getEditInfoFromESW"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getEditInfoFromESW",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_785380175"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The rows \"IXDTEXT\", \"ISCRYPT\", \"ATTACHID\" and \"SIGID\" in the esw-file are not supported in this\n version.\n <\/p>"
    },
    "/IXServicePortIF/configureBackup": {
      "summary": "Query or send backup profile information of the ELOdm.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_configureBackup"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_configureBackup",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1233469422"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The user calling this method must have the main administrator right (AccessC.FLAG_ADMIN).\n <\/p>"
    },
    "/IXServicePortIF/createDoc": {
      "summary": "Creates a new document with indexing information.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createDoc"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createDoc",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_820228328"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<\/p>\n <p>\n Currently the same as <code>createSord<\/code> but the type member of the returned indexing\n information (if any) is set to <code>SordC.LBT_DOCUMENT<\/code>.\n <\/p>\n <p>\n If <code>maskId<\/code> is null or empty, the function tries to assign the mask defined in the\n configuration options of the Windows CLIENT. If this mask cannot be found, the behavior is\n unpredictable and -1 might be returned in sord.mask.\n <\/p>"
    },
    "/IXServicePortIF/checkinActivity": {
      "summary": "This function inserts or updates an activity.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinActivity"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinActivity",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The current session must have read access to the given Sord. In order to update an existing\n activity, the current session must be sender or receiver of the activity (Acitivty.senderId,\n Activity.receiverId).\n <\/p>"
    },
    "/IXServicePortIF/checkoutAspects": {
      "summary": "Read and maybe lock a list of {@link Aspect} objects (EIX-2437).",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutAspects"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutAspects",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_8006547"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "An exception is thrown, if\n access is denied or if one of the aspects does not exist."
    },
    "/IXServicePortIF/checkoutDoc": {
      "summary": "Reads the indexing information and the download URL of a document.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutDoc"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutDoc",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_820228328"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<\/p>\n <p>\n At least one of the parameters <code>objId<\/code> and <code>docId<\/code> must be supplied. If\n only <code>objId<\/code> is supplied, the function reads the information for the current work\n version of the document. If <code>docId<\/code> is supplied, the function reads the information\n for a specific document or attachment version. All versions are returned if\n <code>docId=\"-1\"<\/code> is supplied.\n <\/p>\n <p>\n The document member of the returned object contains the URL from where the document file can be\n read. Use raw HTTP functions to download the file.\n <\/p>\n <p>\n If the document is only to be unlocked, see <code>checkinSord<\/code>.\n <\/p>"
    },
    "/IXServicePortIF/invalidateCache": {
      "summary": "Invalidate the internally used caches for users, storage masks, etc.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_invalidateCache"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_invalidateCache",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method invalidateCache"
    },
    "/IXServicePortIF/runEsProcess": {
      "summary": "Run a iSearch process now (if it is not running) or interrupt it if its running.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_runEsProcess"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_runEsProcess",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method runEsProcess"
    },
    "/IXServicePortIF/resolveRights": {
      "summary": "Resolves the rights of a user.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_resolveRights"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_resolveRights",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_907729609"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This function calculates the effective rights of a given user. Hereby, the given parameter\n userInfo will not be checked in. This way it is possible to set hypothetical groups for the\n user and retrieve the results of the change without applying them. The effective rights always\n are calculated for every right.\n <\/p>\n <p>\n The groups of the given users will be combined with the groups he already is a member of. This\n combination works like the logical \"or\" function. If you want the result without a specific\n group, ignore the corresponding {@link ResolveRightsResult} which has set\n {@link ResolveRightsResult#type}= {@link ResolveRightsResultC#DIRECT}.\n <\/p>"
    },
    "/IXServicePortIF/getESWFromEditInfo": {
      "summary": "Returns the FileData-Objects from the EditInfo-Objects.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getESWFromEditInfo"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getESWFromEditInfo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1078168929"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n Caution: sord.XDateIso and sord.IDateIso have to contain a value related to the servers\n timezone.\n <\/p>"
    },
    "/PluginService/uninstall": {
      "summary": "Uninstall plugin with given ID.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PluginService_uninstall"
              }
            }
          }
        },
        "operationId": "PluginService_uninstall",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "PluginService"
        ]
      },
      "description": "Interface de.elo.ix.client.plugin.PluginService, method uninstall"
    },
    "/PackageService/deletePackages": {
      "summary": "Delete {@link PackageData} objects.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PackageService_deletePackages"
              }
            }
          }
        },
        "operationId": "PackageService_deletePackages",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "PackageService"
        ]
      },
      "description": "Interface de.elo.ix.client.PackageService, method deletePackages"
    },
    "/IXServicePortIF/createEventBusSubscriber": {
      "summary": "Create an event bus subscriber.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createEventBusSubscriber"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createEventBusSubscriber",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_6"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n A subscriber sends events to an event bus or receives events from an event bus. An application\n resp. an <code>IXConnection<\/code> can open any number of subscribers. A subscriber has to be\n deleted with <code>deleteEventBusSubscriber<\/code> when it is no more needed. A bus is also\n deleted, if the last event listener is deleted. This might happen when\n <code>deleteEventBusSubscriber<\/code> or <code>deleteEventBusListener<\/code> is called. In this\n case, it is not necessary to call <code>deleteEventBusSubscriber<\/code>.\n <\/p>"
    },
    "/IXServicePortIF/setServerInfoDM": {
      "summary": "Sets the writable members of the DM configuration.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_setServerInfoDM"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_setServerInfoDM",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method setServerInfoDM"
    },
    "/IXServicePortIF/importWorkFlow": {
      "summary": "Imports a workflow template from a file.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_importWorkFlow"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_importWorkFlow",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n To export a workflow template into a file, use the workflow design dialogue in ELO-CLIENT.\n <\/p>"
    },
    "/FeedService/findNextActions": {
      "summary": "Continue reading results from a search started with findFirstActions.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_findNextActions"
              }
            }
          }
        },
        "operationId": "FeedService_findNextActions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "FeedService"
        ]
      },
      "description": "Interface de.elo.ix.client.feed.FeedService, method findNextActions"
    },
    "/IXServicePortIF/findFirstTranslateTerms": {
      "summary": "Find terms for which a translation is available.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findFirstTranslateTerms"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findFirstTranslateTerms",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n Close the search results with a call to findClose.\n <\/p>"
    },
    "/IXServicePortIF/getSessionOptions": {
      "summary": "Retrieve the current session options.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getSessionOptions"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getSessionOptions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1197100286"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getSessionOptions"
    },
    "/IXServicePortIF/lockArchive": {
      "summary": "Locks the archive for users or retrieves the lock on the archive.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_lockArchive"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_lockArchive",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "The behavior of this function\n has changed with ELO11 since the security concept of keys is no more supported. In order to\n prevent particular users from using the archive, constrain the usage to members of a group. If\n all users should be able to login, pass {@link UserInfoC#UNLOCK_ARCHIVE}."
    },
    "/IXServicePortIF/checkoutAspect": {
      "summary": "Read and maybe lock an {@link Aspect} object.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutAspect"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutAspect",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_382788180"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "An exception is thrown, if access is denied or if\n the aspect does not exist."
    },
    "/IXServicePortIF/setSessionOptions": {
      "summary": "This function sets options related to the session identified by the given ticket.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_setSessionOptions"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_setSessionOptions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method setSessionOptions"
    },
    "/IXServicePortIF/checkinUsers": {
      "summary": "Updates or inserts users or groups.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinUsers"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinUsers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_100361105"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n When inserting users or groups either <code>UserInfo.id=-1<\/code> should be set or the bit\n <code>CheckinUsersC.NEW_USER<\/code> in <code>checkinUsersC<\/code> should be used. The second\n case allows a complete user and group structure to be checked in with a single call of\n <code>checkinUsers<\/code>. Therefore the IDs in the submitted <code>UserInfo<\/code> objects\n must be unique and cannot be used by other users or groups in the archive database.\n <\/p>\n <p>\n If only the user data is to be unlocked then the method should be called with\n <code>userInfos=null<\/code> and <code>lockZ=lockZ.YES<\/code>.\n <\/p>\n <p>\n If the user of the current session is a sub-administrator (has right AccessC.FLAG_SUBADMIN) the\n <code>UserInfo.parent<\/code> members of the users in <code>userInfos<\/code> are internally set\n to the current users ID. In other words: sub-administrators are not free to define the parent\n of the users or groups.\n <\/p>\n <p>\n The method checks whether the users or groups to be checked-in have more rights than their\n parents (administrators).\n <\/p>\n <p>\n Since the function requires an exclusive access to the user data, the data must be locked for\n the current user or must not be locked for anyone. To check in regardless of a lock\n <code>lockZ.FORCE<\/code> must be supplied in <code>lockZ<\/code>.\n <\/p>\n <p>\n The users password is only written for new users or if <code>CheckinUsersC.PASSWORD<\/code> for\n the parameter <code>checkinUsersZ<\/code> is supplied along with the password member\n <code>UserInfo.pwd!=null<\/code>. In this case, the userInfos array must be of length=1. The\n user does not need to have the right AccessC.FLAG_SUBADMIN, but must have the right\n AccessC.FLAG_CHANGEPW. Only the members UserInfo.id and UserInfo.pwd are taken into account.\n This is how to change a password: <code>UserInfo ui = new UserInfo();<\/code><br/>\n <code>ui.id = current user id;<\/code><br/>\n <code>ui.pwd = new password;<\/code><br/>\n <code>ix.checkinUsers(ci, new UserInfo[] {ui}, CheckinUsersC.PASSWORD, LockC.NO);<\/code>\n <\/p>\n <p>\n Password rules are checked, if the user changes the password or if a new user is stored. The\n password rules are defined in the user profile value at key UserProfileC.KEY_PASSWORD_RULES. If\n the password violates the password rules, an exception is throw with message \"[ELOIX:3007]...\".\n The error number (3007) is defined in IXExceptionC.PASSWORD_DENIED.\n <\/p>\n <p>\n The password expiring date is handled. If the password is changed, the expiring date in the\n user data is updated: UserInfo.userProps[UserInfoC.PROP_ACTION] = \"EX{iso-date-without-time}\".\n Interactive client applications should check the action field in order display a dialog, if the\n password has to be changed. They do not need to check the \"EX&lt;iso-date&gt;\", because it is\n replaced by \"PWf\" (must change password) for the UserInfo object in the LoginResult object\n return by the login() functions, resp. the create() functions of IXConnFactory. The following\n code is recommended: <code>IXConnection conn = ...<\/code><br/>\n <code>String action = conn.getLoginResult().getUser().userProps[UserInfoC.PROP_ACTION];<\/code><br/>\n <code>boolean userShouldChangePassword = action.indexOf(UserInfoC.PROP_ACTION_USER_SHOULD_CHANGE_PASSWORD) >= 0;<\/code><br/>\n <code>boolean userMustChangePassword = action.indexOf(UserInfoC.PROP_ACTION_USER_MUST_CHANGE_PASSWORD) >= 0;<\/code>\n <\/p>\n <p>\n If more than 100 users are passed to this function, a background task is started to avoid a\n timeout error. The task status can be queried by\n {@link #collectJobStates(ClientInfo, boolean, boolean, boolean)}. and\n {@link #queryJobState(ClientInfo, String, boolean, boolean, boolean)}.\n <\/p>"
    },
    "/IXServicePortIF/deleteSordTypes": {
      "summary": "Delete sord type information.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteSordTypes"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteSordTypes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteSordTypes"
    },
    "/IXServicePortIF/delegateWorkFlowNode": {
      "summary": "Delegates the specified workflow node to another user.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_delegateWorkFlowNode"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_delegateWorkFlowNode",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n An additional person node is inserted into the workflow for the given user and the workflow is\n forwarded to this node. If {@link WFDelegateNodeInfo#backNodeName} is set, a further node is\n added after the delegation node for the current user.\n <\/p>"
    },
    "/IXServicePortIF/copySord": {
      "summary": "Moves an archive entry or creates a relation (logical copy).",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_copySord"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_copySord",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n <b>1. Move<\/b><br/>\n To move an archive entry into another parent set bit <code>CopySordC.MOVE<\/code> in\n <code>copySordC<\/code>. Put the ID or GUID of the new parent into <code>newParentId<\/code>. If\n a reference shold be moved instead of an original, parameter <code>copyInfo<\/code> has to be\n passed with {@link CopyInfo#oldParentId} set to the current parent ID of the relation. In order\n to control the manual sort order, supply a <code>copyInfo<\/code> object with\n {@link CopyInfo#manSortIdx}.\n <\/p>\n <p>\n <b>2. Relation<\/b><br/>\n Bit <code>CopySordC.REFERENCE<\/code> in <code>copySordC<\/code> should be used to create a\n logical copy of the archive entry in <code>newParentId<\/code>. <br/>\n Set <code>copyInfo=null<\/code> or supply an object and set the <code>CopyInfo.manSortIdx<\/code>\n to control the manual sort order. <br/>\n <p>\n References can be deleted with <code>deleteSord<\/code>\n <\/p>"
    },
    "/IXServicePortIF/deleteActivity": {
      "summary": "This function deletes an activity.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteActivity"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteActivity",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The current session must be sender or receiver of the activity (Acitivty.senderId,\n Activity.receiverId).\n <\/p>"
    },
    "/IXServicePortIF/provideCryptPassword": {
      "summary": "Provide a password to be used in the current session for encrypting and decrypting of",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_provideCryptPassword"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_provideCryptPassword",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "documents.\n <p>\n The given password must be encrypted with the IXClient.encryptPassword function to hide it from\n administrators. An unencrypted password will cause an exception.\n <\/p>\n <p>\n To use the encryption/decryption functionality of Indexserver, the session option\n &lt;ix.encryptDocuments&gt; resp. &lt;ix.decryptDocuments&gt; has to be &lt;true&gt;. Then,\n Indexserver generates special URLs that cause it to encrypt documents on upload and decrypt\n documents on download.\n <\/p>\n Be aware of the fact that encryption/decryption happens between Indexserver and Document\n Manager communication and not between Indexserver and the client application. Thus it is\n strongly recommended to use HTTPS between the client application and Indexserver. The\n Indexserver configuration option &quot;ixUrlBase&quot; can be helpful to achieve this."
    },
    "/IXServicePortIF/findCompletion": {
      "summary": "Autocompletion/ Type as you search<br>",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findCompletion"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findCompletion",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Use {@link de.elo.ix.client.esearch.CompletionOptions} in findInfo.indByElastic.eSearchOptions."
    },
    "/IXServicePortIF/combineAcl": {
      "summary": "Compares the given ACLs and computes the sum, difference and intersection.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_combineAcl"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_combineAcl",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1034263904"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n To remove the duplicate entries in an ACL, call this function with a null value for the rhs\n parameter. The CombineAclResult.sum contains the ACL without duplicates.\n <\/p>"
    },
    "/IXServicePortIF/checkinUserProfile": {
      "summary": "Write (add) user profile options.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinUserProfile"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinUserProfile",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinUserProfile"
    },
    "/IXServicePortIF/deleteUser": {
      "summary": "Deletes user or group.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteUser"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteUser",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteUser"
    },
    "/IXServicePortIF/deleteDocMaskLineTemplates": {
      "summary": "Delete keyword templates This function requires ELO 10 license.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteDocMaskLineTemplates"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteDocMaskLineTemplates",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteDocMaskLineTemplates"
    },
    "/IXServicePortIF/deleteKeywordList": {
      "summary": "Deletes a keyword list.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteKeywordList"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteKeywordList",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteKeywordList"
    },
    "/IXServicePortIF/findFirstSords": {
      "summary": "Find archive entries and retrieve the first <code>max<\/code> objects.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findFirstSords"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findFirstSords",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This function performs a search over indexing information, full text, or hierarchy (child\n lists).\n <\/p>\n <p>\n It returns either an ID array or a <code>Sord<\/code> object array. The maximum array length is\n restricted to the value of the <code>max<\/code> parameter. Further results can be read with\n <code>findNextSords<\/code> using the search ID <code>FindResult.searchId<\/code> returned by\n this function. The search ID has a limited lifetime which can be configured. The default value\n is 5 minutes. The search results can be explicitly deleted with <code>findClose<\/code> to save\n memory on the server side.\n <\/p>\n <p>\n This function does not write report entries ReportInfoC.ACT_IX_CHECKOUT_SORD for the results\n although it can return as much indexing information as checkoutSord does.\n <\/p>"
    },
    "/IXServicePortIF/processOcr": {
      "summary": "Compute OCR on the given image data or on an archived document.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_processOcr"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_processOcr",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_998509414"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n <i>In order to use this function, the ELO OCR Service 8.0 has to be installed somewhere on the\n network and has to be configured for Indexserver access.<\/i>\n <\/p>\n <p>\n The request can be performed synchronously or asynchronously. In asynchronous processing, the\n result is sent via the Indexserver Event API. In order to receive the result, the client\n application has to register a listener for the event type EventBusC.EVENT_OCR_RESULT.\n <\/p>\n <p>\n Use an empty OcrInfo object to check, whether OCR is available.\n <\/p>\n <p>\n This is a simple example for synchronous OCR processing:\n \n <pre>\n <code class=\"example\">\n IXConnection conn = ...\n String imageFile = ... // Input file in TIFF, etc. format\n String textFile = ... // Output file in text format\n <br/>\n // Is OCR via IX available? - Pass an empty OcrInfo object to processOcr in order to find it out. \n OcrInfo ocrInfo = new OcrInfo();\n bool isOcrAvail = conn.Ix.processOcr(ocrInfo) != null;\n if (!isOcrAvail) return;\n <br/>\n // Query the languages supported by the OCR Engine\n OcrInfo ocrInfoLangs = new OcrInfo();\n ocrInfoLangs.queryLanguages = new OcrInfoQueryLanguages();\n OcrResult ocrResultLangs = conn.Ix.processOcr(ocrInfoLangs);\n <br/>\n // Anaylze file\n // Load entire image into memory\n OcrInfo ocrInfo = new OcrInfo();\n ocrInfo.recognizeFile = new OcrInfoRecognizeFile();\n ocrInfo.recognizeFile.imageData = new FileData();\n ocrInfo.recognizeFile.imageData.data = File.ReadAllBytes(imageFile);\n ocrInfo.recognizeFile.imageData.contentType = Path.GetExtension(imageFile);\n ocrInfo.recognizeFile.pageNo = -1; // analyze all pages\n ocrInfo.recognizeFile.outputFormat = OcrInfoC.TEXT; // return result as String\n ocrInfo.recognizeFile.recognizeLangs = new String[] {\"German\", \"Czech\"}; // Choosen from ocrResultLangs.internalLangs  \n <br/>\n // Process OCR\n OcrResult ocrResult = conn.Ix.processOcr(ocrInfo);\n <br/>\n // Write text output to file\n File.WriteAllText(textFile, ocrResult.recognizeFile.text, Encoding.UTF8);\n <\/code>\n <\/pre>\n <\/p>"
    },
    "/IXServicePortIF/deleteNotes": {
      "summary": "Deletes notes.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteNotes"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteNotes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n After a note or annotation has been deleted it should not be checked in again with MbAll. In\n this case the isDeleted() value is overwritten and the note or annotation will no longer be\n deleted. In this case MbOnlyLock should be used to remove the lock on the notes.\n <\/p>"
    },
    "/PluginService/upload": {
      "summary": "Install a plugin which JAR is uploaded from a stream.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PluginService_upload"
              }
            }
          }
        },
        "operationId": "PluginService_upload",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_6"
                }
              }
            }
          }
        },
        "tags": [
          "PluginService"
        ]
      },
      "description": "Interface de.elo.ix.client.plugin.PluginService, method upload"
    },
    "/IXServicePortIF/checkoutEsSettings": {
      "summary": "Check out the ElasticSearch settings for ESConfigPage only. <b><i>Note: For internal use only.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutEsSettings"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutEsSettings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_460462395"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Might change in the near future.<\/i><\/b>"
    },
    "/IXServicePortIF/queryJobProtocol": {
      "summary": "Query the protocol of a background thread.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_queryJobProtocol"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_queryJobProtocol",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_222450704"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The method returns all log messages that matches the restrictions given by the parameter\n queryJobProtocolInfo, and that are cached at the Indexserver. The amount of cached entries is\n configurable at the log4j configuration file.\n <\/p>"
    },
    "/IXServicePortIF/provideSystemCryptPassword": {
      "summary": "Provide a system password to be used in the current session for encrypting and decrypting of",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_provideSystemCryptPassword"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_provideSystemCryptPassword",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "documents.\n <p>\n The given password must be encrypted with the IXClient.encryptPassword function. An unencrypted\n password will cause an exception.\n <\/p>\n <p>\n To use the encryption/decryption functionality of Indexserver, the session option\n &lt;ix.encryptDocuments&gt; resp. &lt;ix.decryptDocuments&gt; has to be &lt;true&gt;. Then,\n Indexserver generates special URLs that cause it to encrypt documents on upload and decrypt\n documents on download.\n <\/p>\n Be aware of the fact that encryption/decryption happens between Indexserver and Document\n Manager communication and not between Indexserver and the client application. Thus it is\n strongly recommended to use HTTPS between the client application and Indexserver. The\n Indexserver configuration option &quot;ixUrlBase&quot; can be helpful to achieve this."
    },
    "/IXServicePortIF/processTrees": {
      "summary": "<code>processTrees<\/code> extends ValueClass implements a generic tree walk for all subtrees",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_processTrees"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_processTrees",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1436376940"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "specified in <code>navInfo<\/code>.\n <p>\n Specific operations for each node are queued in <code>procInfo<\/code> and will be applied in\n order of appearance.\n <\/p>"
    },
    "/IXServicePortIF/checkoutKeys": {
      "summary": "Reads a list of key objects.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutKeys"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutKeys",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1112009864"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutKeys"
    },
    "/IXServicePortIF/activateSubstitution": {
      "summary": "Activate the submitted substitution.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_activateSubstitution"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_activateSubstitution",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n Activates a submitted substitution if it the substitution can be activated manually\n (Substitution's {@link SubstitutionSettings#canBeActivatedManually} must be set to\n <code>true<\/code>) and it is outside of any substitution period (defined in\n {@link Substitution#substitutionPeriods}\n <\/p>\n \n <p>\n A substitution can be activated by the current user, if:\n <ul>\n <li>The current user is the substitute ({@link Substitution#substituteId}\n <li>The current user is member of the group who is the substitute\n <li>The current user is sub administrator of the substitute\n <li>The current user is the direct superior of the substitute (ignoring groups,\n {@link UserInfo#superiorId} of the substitute must be the current user)\n <li>The current user has main administrator rights.\n <\/ul>"
    },
    "/IXServicePortIF/startExportExt": {
      "summary": "Starts an export-job.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_startExportExt"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_startExportExt",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This is an enhanced version which works with the same options as the ones in Windows Client\n <\/p>"
    },
    "/FeedService/findNextNotification": {
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_findNextNotification"
              }
            }
          }
        },
        "operationId": "FeedService_findNextNotification",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "FeedService"
        ]
      },
      "description": "Interface de.elo.ix.client.feed.FeedService, method findNextNotification"
    },
    "/IXServicePortIF/checkoutReportOptions": {
      "summary": "Reads the report options.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutReportOptions"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutReportOptions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1057373949"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutReportOptions"
    },
    "/IXServicePortIF/startWorkFlow2": {
      "summary": "Starts a workflow from a workflow template.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_startWorkFlow2"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_startWorkFlow2",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method startWorkFlow2"
    },
    "/IXServicePortIF/findNextConfigFiles": {
      "summary": "Finds next configuration files.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findNextConfigFiles"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findNextConfigFiles",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findNextConfigFiles"
    },
    "/IXServicePortIF/deleteKeys": {
      "summary": "Deletes keys.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteKeys"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteKeys",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n Since the function requires an exclusive access to the user data, the data must be locked for\n the current user or must not be locked for anyone. To check in regardless of a lock supply\n <code>lockZ.FORCE<\/code> in <code>lockZ<\/code>."
    },
    "/IXServicePortIF/checkoutColors": {
      "summary": "Checkout the markers definitions (colors of archive entries).",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutColors"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutColors",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1870182600"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "This function returns only\n visible and non-deleted colors. It returns the same result as\n {@link #checkoutColors2(ClientInfo, int, LockZ)} passing {@link ColorDataC#SORD_COLORS} in\n options parameter. In order to receive all colors, call function\n {@link #checkoutColors2(ClientInfo, int, LockZ)}."
    },
    "/IXServicePortIF/checkoutOrgUnits": {
      "summary": "Read the data of all OUs.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutOrgUnits"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutOrgUnits",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_893011331"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutOrgUnits"
    },
    "/FeedService/findNextHashTagRelation": {
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_findNextHashTagRelation"
              }
            }
          }
        },
        "operationId": "FeedService_findNextHashTagRelation",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "FeedService"
        ]
      },
      "description": "Interface de.elo.ix.client.feed.FeedService, method findNextHashTagRelation"
    },
    "/IXServicePortIF/findBackgroundThreads": {
      "summary": "Query all jobs executed in the background.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findBackgroundThreads"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findBackgroundThreads",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The method returns all jobs started by the calling user. If the user has the administrator\n right (AccessC.FLAG_ADMIN) the findBackgroundThreadOptions parameter can filter for users.\n <\/p>"
    },
    "/FioService/startImport": {
      "summary": "Reserved.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FioService_startImport"
              }
            }
          }
        },
        "operationId": "FioService_startImport",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1700162512"
                }
              }
            }
          }
        },
        "tags": [
          "FioService"
        ]
      },
      "description": "Interface de.elo.ix.client.fio.FioService, method startImport"
    },
    "/IXServicePortIF/findClose": {
      "summary": "Deletes the search results explicitly in the Indexserver process to save memory.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findClose"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findClose",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findClose"
    },
    "/IXServicePortIF/restoreSord": {
      "summary": "Restores an archive entry, its references and notes.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_restoreSord"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_restoreSord",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n Passing true for <code>singleObject<\/code> restores only the object represented by\n <code>objId<\/code>.<br/>\n Otherwise, the complete subtree beginning at <code>objId<\/code> will be restored.\n <\/p>\n <p>"
    },
    "/DocumentEvents/beginUpload": {
      "summary": "Provide a document processor object for a stream being uploaded.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_DocumentEvents_beginUpload"
              }
            }
          }
        },
        "operationId": "DocumentEvents_beginUpload",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_770771503"
                }
              }
            }
          }
        },
        "tags": [
          "DocumentEvents"
        ]
      },
      "description": "Return null, if this stream\n should not be processed. If {@link UpDownloadEventInfo#preliminaryTest} is true, the returned\n document processor is only checked to be not null. It is not called to process a stream."
    },
    "/IXServicePortIF/createReminder": {
      "summary": "Creates a reminder for the Sord specified by objId.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createReminder"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createReminder",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_256674679"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method createReminder"
    },
    "/IXServicePortIF/checkinReport": {
      "summary": "Inserts custom report entries.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinReport"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinReport",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This function writes new entries into the report table. These entries always are appended to\n the report table. Once in the report table, no data will be overwritten by this function. The\n ReportInfo element must provide an action number {@link ReportInfo#actionNo} at least. The\n action number has to be within the range {@link ReportInfoC#ACT_CUSTOM_FIRST} and\n {@link ReportInfoC#ACT_CUSTOM_LAST}. Besides the action number, the report entry can hold\n custom data in the fields objId, extra1, extra2, text and extraInfo. If specified, the object\n in extraInfo must be Serializable. If the report entry to insert does not belong to a\n {@link Sord}, set the objId value to 0.\n <\/p>"
    },
    "/IXServicePortIF/notifyServer": {
      "summary": "This function notifies the Indexserver about an operation of the client program.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_notifyServer"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_notifyServer",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_810727301"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n Use this function in order to notify the license management, when a write access has been\n processed, e.g. scan a document or perform OCR analysis on a document.\n <\/p>"
    },
    "/IXServicePortIF/checkinDocDupl": {
      "summary": "Checks-in already existing documents again.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinDocDupl"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinDocDupl",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_341056676"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This method is used to reduce transmission time as the document does not have to be\n checked-out.\n <\/p>"
    },
    "/IXServicePortIF/unlinkSords": {
      "summary": "Remove links between archive entries.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_unlinkSords"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_unlinkSords",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method unlinkSords"
    },
    "/IXServicePortIF/findFirstActivities": {
      "summary": "This function reads the activities of an object.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findFirstActivities"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findFirstActivities",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findFirstActivities"
    },
    "/FeedService/checkinAction": {
      "summary": "Create or update a document feed entry.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_checkinAction"
              }
            }
          }
        },
        "operationId": "FeedService_checkinAction",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "tags": [
          "FeedService"
        ]
      },
      "description": "Interface de.elo.ix.client.feed.FeedService, method checkinAction"
    },
    "/IXServicePortIF/collectJobStates": {
      "summary": "<code>collectJobStates<\/code> lists all the states of currently existing jobs from the IX",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_collectJobStates"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_collectJobStates",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1788243283"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "backround job pool running or finished, but still listed."
    },
    "/SystemInformation/countDocsInStorePath": {
      "summary": "Counts the documents defined by SystemInfo.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_SystemInformation_countDocsInStorePath"
              }
            }
          }
        },
        "operationId": "SystemInformation_countDocsInStorePath",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_276702696"
                }
              }
            }
          }
        },
        "tags": [
          "SystemInformation"
        ]
      },
      "description": "Interface de.elo.ix.client.system.SystemInformation, method countDocsInStorePath"
    },
    "/PluginService/stop": {
      "summary": "Stop plugin with given ID.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PluginService_stop"
              }
            }
          }
        },
        "operationId": "PluginService_stop",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "PluginService"
        ]
      },
      "description": "Interface de.elo.ix.client.plugin.PluginService, method stop"
    },
    "/IXServicePortIF/findAggregations": {
      "summary": "Find aggregation data for dashboards and statistics.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findAggregations"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findAggregations",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findAggregations"
    },
    "/IXServicePortIF/parseException": {
      "summary": "Parses the given string of an exception into a structured IXExceptionData object.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_parseException"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_parseException",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_784089396"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n If the given string does not represent an IXException, the exceptionType NOT_IX is returned\n (value -1) and the given exception string can be found in \"message\"."
    },
    "/IXServicePortIF/cookKeyword": {
      "summary": "Replaces control sequences in the text of a keyword.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_cookKeyword"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_cookKeyword",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method cookKeyword"
    },
    "/DocumentEvents/beginDownload": {
      "summary": "Provide a document processor object for a stream being downloaded.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_DocumentEvents_beginDownload"
              }
            }
          }
        },
        "operationId": "DocumentEvents_beginDownload",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_770771503"
                }
              }
            }
          }
        },
        "tags": [
          "DocumentEvents"
        ]
      },
      "description": "Return null, if this stream\n should not be processed."
    },
    "/IXServicePortIF/getWebDAVPathFromObjID2": {
      "summary": "Returns the WebDAV path from an Object ID.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getWebDAVPathFromObjID2"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getWebDAVPathFromObjID2",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_148564345"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getWebDAVPathFromObjID2"
    },
    "/IXServicePortIF/checkinNoteTemplates": {
      "summary": "Writes the given stamp definition into the database.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinNoteTemplates"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinNoteTemplates",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_100361105"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinNoteTemplates"
    },
    "/IXServicePortIF/cleanupState": {
      "summary": "<code>cleanupState(ClientInfo ci)<\/code> returns state information in a",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_cleanupState"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_cleanupState",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1436376940"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<code>BackgroundThreadInfo<\/code>.\n <p>\n <table>\n <tr>\n <td>IsRunning<\/td>\n <td>true/false;<\/td>\n <\/tr>\n <tr>\n <td>ThreadStart<\/td>\n <td>ISO date containing the cleaner s start;<\/td>\n <\/tr>\n <tr>\n <td>CountProcessed<\/td>\n <td>visited archive entries<\/td>\n <\/tr>\n <tr>\n <td>CountErrors<\/td>\n <td>erroneous entries<\/td>\n <\/tr>\n <tr>\n <td>LastID<\/td>\n <td>object ID of the last visited entry<\/td>\n <\/tr>\n <tr>\n <td>LastGUID<\/td>\n <td>object GUID of the last visited entry<\/td>\n <\/tr>\n <\/table>\n <\/p>"
    },
    "/IXServicePortIF/checkoutSordTypes": {
      "summary": "Get sord type information.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutSordTypes"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutSordTypes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_133130047"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n SordType objects give access to labels, icons and extensions corresponding to\n <code>Sord.type.<\/code>\n <\/p>\n <p>\n Parameter <code>sordTypes<\/code> can be:\n <table border=\"2\">\n <tr>\n <th>sordType<\/th>\n <th>return<\/th>\n <\/tr>\n <tr>\n <td>Array of type numbers or names<\/td>\n <td>Returns for each type number (resp. name) the associated SordType information<\/td>\n <\/tr>\n <tr>\n <td>null<\/td>\n <td>Returns SordType information for all types<\/td>\n <\/tr>\n <\/table>\n <\/p>\n <p>\n Parameter <code>sordTypeZ<\/code> specifies which members of the returned objects should be\n filled. It also contains the content type of the image data to be returned. This content type\n correspond to directories named \"jpg\", \"ico\" resp. \"bmp\" below\n \".../am-eloam/configuration/initdata/images/sordtypes/\". Use ELO CLIENT to fill the directories\n with images of the required type.\n <\/p>"
    },
    "/IXServicePortIF/executeScript": {
      "summary": "Execute a script.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_executeScript"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_executeScript",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_63967077"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method executeScript"
    },
    "/IXServicePortIF/findNextTranslateTerms": {
      "summary": "Find next terms.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findNextTranslateTerms"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findNextTranslateTerms",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findNextTranslateTerms"
    },
    "/IXServicePortIF/checkoutSubs": {
      "summary": "Read the substitute information for the given user.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutSubs"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutSubs",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_105830886"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The returned array contains the relations/users for which the given user is the substituted\n person or the substitute.\n <\/p>"
    },
    "/IXServicePortIF/checkinReplNames": {
      "summary": "Writes replication set names.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinReplNames"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinReplNames",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinReplNames"
    },
    "/IXServicePortIF/checkoutUserProfile": {
      "summary": "Read user profile options.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutUserProfile"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutUserProfile",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1401065069"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n Set <code>userProfile.userId<\/code> to the current user, to read her or his entire option set.\n This means that the default values for all users and the options inherited from the users\n groups are included too.\n <\/p>\n <p>\n In order to read the user specific options without defaults and group options, set\n <code>userProfile.excludeDefaultValues=true<\/code> and\n <code>userProfile.excludeGroupValues=true<\/code>.\n <\/p>"
    },
    "/IXServicePortIF/checkinCounters": {
      "summary": "Update counter values or create new counters.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinCounters"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinCounters",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinCounters"
    },
    "/IXServicePortIF/startExport": {
      "summary": "Starts an export-job.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_startExport"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_startExport",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The given IDs and their children will be exported as specified in the options.\n <\/p>"
    },
    "/IXServicePortIF/checkinStorage": {
      "summary": "This method passes path information to the document manager.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinStorage"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinStorage",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_231031238"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinStorage"
    },
    "/IXServicePortIF/checkoutUsers": {
      "summary": "Reads the user data for users or groups.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutUsers"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutUsers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1132956238"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The function has various options for specifying which users are to read, e. g. all users, users\n of a specific group or groups of a specific user. The options are controlled with the bit-mask\n parameter <code>checkoutUsersC<\/code>. Possible values are combinations of\n <code>CheckoutUsersC<\/code> values.\n <\/p>\n <p>\n Supplying <code>lockZ.YES<\/code> or <code>lockZ.FORCE<\/code> for the parameter\n <code>lockZ<\/code> locks the user data against concurrent modification. The lock can be\n released with <code>checkinUsers<\/code> or <code>deleteUsers<\/code>.\n <\/p>\n <p>\n All returned <code>UserInfo<\/code> objects have empty passwords because the passwords cannot be\n read from the archive database.\n <\/p>"
    },
    "/IXServicePortIF/deleteConfigFiles": {
      "summary": "Deletes configuration files.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteConfigFiles"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteConfigFiles",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteConfigFiles"
    },
    "/IXServicePortIF/openEventBus": {
      "summary": "Open a new event bus.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_openEventBus"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_openEventBus",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_6"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n Caution: the event bus API functions cannot be used with SOAP communication.\n <\/p>\n <p>\n An event bus is like a communication channel between two or more subscribers. One subscriber\n sends an event and the bus dispatches it to the subscribers that are listening.\n <\/p>\n <p>\n Before an application can send events, it has to call the function\n <code>createEventBusSubscriber<\/code> in order to create a subscriber ID. A subscriber can send\n events to an event bus or listen to events from an event bus. To send an event, the function\n <code>sendEvents<\/code> has to be called.<br>\n In order to revive events from event busses, event listeners have to be registered with the\n event busses first. An event listener specifies a list of <code>EventFilter<\/code> objects\n which describe the requested event types and busses from which to receive events. A subscriber\n can register any number of event listeners to potentially different event busses with a single\n call to <code>createEventBusListener<\/code>. Further event listeners can be added by this\n function or deleted with <code>deleteEventBusListener<\/code> at any time.\n <\/p>\n <p>\n A helper object of <code>IXConnection<\/code>, which can be obtained by\n <code>IXConnection.getEventBusApi()<\/code>, listens for incoming events and forwards them to an\n object that implements the <code>IXEventBusHandler<\/code> interface. This object has to be\n provided by the client application and must be passed in a call to\n <code>IXConnection.getEventBusApi().setHandler(...)<\/code>.\n <\/p>\n <p>\n Normally, client applications will use the predefined busses listed in <code>EventBusC<\/code>.\n This class defines a broadcast bus and busses related to users. Any subscriber can receive\n events from the broadcast bus. In difference to that, user busses can be listened only by the\n owner - a user bus acts somewhat like a mailbox.\n <p>\n <\/p>\n There is no constraint to subscribers for sending events to busses. A subscriber can send any\n event to a bus, if it knows the bus ID.\n <p>\n <\/p>\n In some circumstances, it is useful to work with a private channel between particular\n subscribers. This could be a channel used for chat messages between users. Another example is a\n channel between separated components of an application that share the same ticket an have to\n synchronize the user interfaces.\n <p>\n <\/p>\n Use this function to open an event bus e.g. to establish a private communication channel\n between two or more applications. The returned bus ID is built upon the given information in\n <code>params<\/code>. Two applications, that supply equal params objects, will receive equal bus\n IDs. At least one of the applications has to close the bus with <code>closeEventBus<\/code> if\n it is needed no more.\n <\/p>"
    },
    "/IXServicePortIF/deleteEventBusListener": {
      "summary": "Deletes an event bus listener.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteEventBusListener"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteEventBusListener",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This function deletes an event bus listener that was created by a call to\n <code>createEventBusListener<\/code>. The function does not throw an exception, if the Listener\n ID does not exist.\n <\/p>"
    },
    "/IXServicePortIF/getPublicDownloads": {
      "summary": "Gets the public downloads.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getPublicDownloads"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getPublicDownloads",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_881442092"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getPublicDownloads"
    },
    "/IXServicePortIF/checkinDocBegin2": {
      "summary": "Prepares the Indexserver to enable a document to be checked in.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinDocBegin2"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinDocBegin2",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_341056676"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n Retrieves path id and encryption set from the sord object and sets these values in document\n versions of this document. In case of limited release document, work version is set to false.\n Document id will not be set to 0, if \"keepIds\" is true in option \"opts\" (when no new document\n but only signature should be added for a version controlled document, up to this version\n clients had to reset the actual document id after running method checkinDocBegin)\n <\/p>"
    },
    "/IXServicePortIF/loginAdmin": {
      "summary": "Login any user as an administrator.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_loginAdmin"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_loginAdmin",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_777531606"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This function logs on the user given in <code>reportAsUser<\/code> as an administrator. The\n effective rights of the resulting session are not constrained to the rights of the given user.\n The client application is responsible for access checking.\n <\/p>"
    },
    "/IXServicePortIF/configurePurge": {
      "summary": "Query or send the purge task settings of the ELOdm.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_configurePurge"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_configurePurge",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1576340510"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The user calling this method must have the main administrator right (AccessC.FLAG_ADMIN).\n <\/p>"
    },
    "/IXServicePortIF/checkinWorkflowTemplate": {
      "summary": "Check in a workflow template as a new version or overwrite an existing version.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinWorkflowTemplate"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinWorkflowTemplate",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_100361105"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinWorkflowTemplate"
    },
    "/IXServicePortIF/queryJobState": {
      "summary": "Returns the job state for a given job GUID.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_queryJobState"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_queryJobState",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1436376940"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method queryJobState"
    },
    "/FeedService/unregisterNotify": {
      "summary": "Unregister a callback interface. Remove callback interface from internal list.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_unregisterNotify"
              }
            }
          }
        },
        "operationId": "FeedService_unregisterNotify",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "FeedService"
        ]
      },
      "description": "Interface de.elo.ix.client.feed.FeedService, method unregisterNotify"
    },
    "/IXServicePortIF/checkoutUser": {
      "summary": "Reads the user data for a user or group.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutUser"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutUser",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1485735592"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "This function internally calls\n {@link #checkoutUsers(ClientInfo, String[], CheckoutUsersZ, LockZ)}"
    },
    "/IXServicePortIF/getWorkflowTemplateVersions": {
      "summary": "Reads the version information of all versions of the given workflow.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getWorkflowTemplateVersions"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getWorkflowTemplateVersions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1768472140"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getWorkflowTemplateVersions"
    },
    "/IXServicePortIF/createRsaKeys": {
      "summary": "Helper function to create a RSA key pair.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createRsaKeys"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createRsaKeys",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1888107655"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method createRsaKeys"
    },
    "/IXServicePortIF/checkinDocBegin": {
      "summary": "Prepares the Indexserver to enable a document to be checked in.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinDocBegin"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinDocBegin",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_341056676"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The check in procedure consists of three steps. First a call to <code>checkinDocBegin<\/code>\n prepares the Indexserver to upload a document. The function returns among other things the URL\n to which the document must be up loaded. In the second step the document is uploaded to this\n URL. The final step is to call <code>checkinDocEnd<\/code> with the result of the upload\n process. The upload result is interpreted by the Indexserver and the document is inserted into\n the database.\n <\/p>\n <p>\n The upload URL accesses the ELODM (document manager service) directly due to performance\n reasons . The URL is valid as long as the session ticket is valid.\n <\/p>\n <p>\n It is possible to insert more than one document or attachment versions and a signature file.\n <\/p>\n <p>\n The parameter <code>document<\/code> of <code>checkinDocBegin<\/code> must contain a minimum of\n one version in <code>document.docs<\/code>, <code>document.atts<\/code> or\n <code>document.sig<\/code>. The minimum that must be set in the version object is the member\n <code>DocVersion.ext<\/code>.\n <\/p>"
    },
    "/IXServicePortIF/deleteCounters": {
      "summary": "Delete counters.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteCounters"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteCounters",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This function is currently not implemented and always throws an exception. Counters cannot be\n deleted.\n <\/p>"
    },
    "/IXServicePortIF/checkoutSubstitutions": {
      "summary": "Checkout substitutions.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutSubstitutions"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutSubstitutions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_954316611"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n Substitutions are checked out by the provided {@link CheckoutSubstitutionsInfo} and the\n selected members in {@link SubscriptionZ} are returned.\n <\/p>\n \n <p>\n Every user is allowed to checkout any substitution.\n <\/p>"
    },
    "/IXServicePortIF/startImport": {
      "summary": "Starts an import-job.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_startImport"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_startImport",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The given IDs and their children will be imported as specified in the options.\n <\/p>"
    },
    "/PackageService/checkoutPackages": {
      "summary": "Read and maybe lock {@link PackageData} objects.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PackageService_checkoutPackages"
              }
            }
          }
        },
        "operationId": "PackageService_checkoutPackages",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1116629552"
                }
              }
            }
          }
        },
        "tags": [
          "PackageService"
        ]
      },
      "description": "Interface de.elo.ix.client.PackageService, method checkoutPackages"
    },
    "/IXServicePortIF/deleteSubscription": {
      "summary": "Delete a subscription.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteSubscription"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteSubscription",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteSubscription"
    },
    "/IXServicePortIF/checkoutColors2": {
      "summary": "Checkout the markers definitions (colors of archive entries) for administration purposes.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutColors2"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutColors2",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1870182600"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "This\n function returns all colors, inclusive hidden and deleted colors."
    },
    "/IXServicePortIF/deleteSubs": {
      "summary": "Delete deputy information.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteSubs"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteSubs",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteSubs"
    },
    "/FeedService/internalInsertSystemAction": {
      "summary": "Reserved.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_internalInsertSystemAction"
              }
            }
          }
        },
        "operationId": "FeedService_internalInsertSystemAction",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_736351635"
                }
              }
            }
          }
        },
        "tags": [
          "FeedService"
        ]
      },
      "description": "Interface de.elo.ix.client.feed.FeedService, method internalInsertSystemAction"
    },
    "/IXServicePortIF/collectWorkFlows": {
      "summary": "Collects workflow names.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_collectWorkFlows"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_collectWorkFlows",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_755261279"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n <b>This method will be deprecated in future versions of the ELO Indexserver<\/b>. It is\n recommended that the findFirstTasks() and findNextTasks() methods are used for retrieving\n workflow information from the Indexserver.\n <\/p>"
    },
    "/IXServicePortIF/createActivityProject": {
      "summary": "This function creates an activity project in memory.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createActivityProject"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createActivityProject",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2121298555"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n If projectName is not null and not empty, the function checks whether the name is already used.\n The current session must have the permission AccessC.FLAG_EDITACT in order to call this\n function.\n <\/p>"
    },
    "/FeedService/findHashTags": {
      "summary": "Returns all HashTags.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_findHashTags"
              }
            }
          }
        },
        "operationId": "FeedService_findHashTags",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1556767716"
                }
              }
            }
          }
        },
        "tags": [
          "FeedService"
        ]
      },
      "description": "FindHashTagInfo filter the result by, createDateIso, lastUsedIso and\n minCount"
    },
    "/IXServicePortIF/moveDocuments": {
      "summary": "Move documents from one storage path to another storage path.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_moveDocuments"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_moveDocuments",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1436376940"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method moveDocuments"
    },
    "/BUtility/upload": {
      "summary": "Upload file.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/octet-stream": {
              "schema": {
                "format": "binary",
                "type": "string"
              }
            }
          }
        },
        "operationId": "BUtility_upload",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_BUtility_upload"
                }
              }
            }
          }
        },
        "tags": [
          "BUtility"
        ]
      }
    },
    "/IXServicePortIF/createSuperiorSubstitution": {
      "summary": "Create a Substitution as a superior.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createSuperiorSubstitution"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createSuperiorSubstitution",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n A superior is able to substitute any of his users (he must be the direct superior (ignoring\n groups, {@link UserInfo#superiorId} of the user to be substituted must be the current user).\n <\/p>\n <p>\n The created substitution grants the superior access to the user's postbox, can be forwarded and\n can be activated manually, but does not have any SubstitutionPeriods set. It also contains a\n flag to show its a superior substituion ({@link SubstitutionSettings#superiorSubstitution} is\n set to true.\n <\/p>\n <p>\n The created substitution is saved, but is not yet active. It can be activated by adding\n {@link SubstitutionPeriod} or calling {@link #activateSubstitution}."
    },
    "/IXServicePortIF/checkinWorkFlow": {
      "summary": "Write/create a workflow.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinWorkFlow"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinWorkFlow",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n In case of a new workflow object of type WFTypeC.ACTIVE, the workflow is immediately started\n after written into database. This requires a valid WFDiagram.getObjId().\n <\/p>"
    },
    "/PluginService/send": {
      "summary": "Send a message to a plugin.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PluginService_send"
              }
            }
          }
        },
        "operationId": "PluginService_send",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1652390957"
                }
              }
            }
          }
        },
        "tags": [
          "PluginService"
        ]
      },
      "description": "This function directs the message to the {@link ConfigurePlugin}\n interface of the plugin."
    },
    "/IXServicePortIF/deleteKeywords": {
      "summary": "Deletes the keywords with the given IDs.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteKeywords"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteKeywords",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n <b>IMPORTANT: This function assigns new IDs to all branches of the keyword trees below the\n parent keywords of the given IDs. The client program should read the parent keyword and all\n children below again to receive the new IDs. <\/b>\n <\/p>\n <p>\n The access rights <code>AccessC.FLAG_EDITCONFIG<\/code> and <code>AccessC.FLAG_EDITSWL<\/code>\n are required to delete keywords.\n <p>"
    },
    "/IXServicePortIF/checkoutEsStatus": {
      "summary": "Checkout status of iSearch and updaters and reindexers, for ESConfigPage only.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutEsStatus"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutEsStatus",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_202623104"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutEsStatus"
    },
    "/IXServicePortIF/startAdHocWorkFlow": {
      "summary": "Starts an Ad Hoc Workflow.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_startAdHocWorkFlow"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_startAdHocWorkFlow",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method startAdHocWorkFlow"
    },
    "/IXServicePortIF/checkoutDocMaskLineTemplates": {
      "summary": "Check out keyword templates. This function requires ELO 10 license.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutDocMaskLineTemplates"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutDocMaskLineTemplates",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1107316733"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutDocMaskLineTemplates"
    },
    "/IXServicePortIF/checkoutWorkflowHistory": {
      "summary": "Reads the histories of a node or a whole workflow.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutWorkflowHistory"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutWorkflowHistory",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1754570852"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutWorkflowHistory"
    },
    "/PluginService/configure": {
      "summary": "Read and/or modify plugin configuration.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PluginService_configure"
              }
            }
          }
        },
        "operationId": "PluginService_configure",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "tags": [
          "PluginService"
        ]
      },
      "description": "If the plugin does not support configuration, an\n exception with code {@link IXExceptionC#UNSUPPORTED_FUNCTION} is thrown. This function\n internally calls the interface de.elo.ix.plugin.ConfigurePlugin.configure()."
    },
    "/LdapService/configure": {
      "summary": "Get or set LDAP configuration from plugin.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_LdapService_configure"
              }
            }
          }
        },
        "operationId": "LdapService_configure",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_944564842"
                }
              }
            }
          }
        },
        "tags": [
          "LdapService"
        ]
      },
      "description": "Interface de.elo.ix.client.ldap.LdapService, method configure"
    },
    "/IXServicePortIF/getScriptsToDebug": {
      "summary": "This function returns the list of the scripts which are currently debugged, i.e.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getScriptsToDebug"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getScriptsToDebug",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "the property\n \"scriptsToDebug\"."
    },
    "/IXServicePortIF/findNextReportInfos": {
      "summary": "Finds report entries.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findNextReportInfos"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findNextReportInfos",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findNextReportInfos"
    },
    "/IXServicePortIF/findNextWorkflows": {
      "summary": "Finds more active workflows.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findNextWorkflows"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findNextWorkflows",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This method returns all active workflows for the current user.\n <\/p>"
    },
    "/HealthCheckService/computeDoubleValue": {
      "summary": "Compute value. This function computes a new value using the specified operation.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_HealthCheckService_computeDoubleValue"
              }
            }
          }
        },
        "operationId": "HealthCheckService_computeDoubleValue",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "HealthCheckService"
        ]
      },
      "description": "Example:\n <code><pre>\n IXConnection conn = ...\n conn.getHealthCheckService().computeDoubleValue(\"valuename\", 1.2, HealthCheckValueOperation.ADD); \n <\/pre><\/code>"
    },
    "/PluginService/getHistory": {
      "summary": "Get the history of a plugin.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PluginService_getHistory"
              }
            }
          }
        },
        "operationId": "PluginService_getHistory",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1159353819"
                }
              }
            }
          }
        },
        "tags": [
          "PluginService"
        ]
      },
      "description": "Interface de.elo.ix.client.plugin.PluginService, method getHistory"
    },
    "/IXServicePortIF/getDistinctValuesOfObjKey": {
      "summary": "Read all distinct values from the database that are used for the given ObjKey name,",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getDistinctValuesOfObjKey"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getDistinctValuesOfObjKey",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1153931872"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "potentionally causing an enormous database load."
    },
    "/IXServicePortIF/collectWorkFlowNodes": {
      "summary": "Collect workflow nodes.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_collectWorkFlowNodes"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_collectWorkFlowNodes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2006133032"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method collectWorkFlowNodes"
    },
    "/IXServicePortIF/reloadScripts": {
      "summary": "This function reloads all scripts.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_reloadScripts"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_reloadScripts",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n Call this function with administrator privileges,\n <\/p>\n if some scripts are modified."
    },
    "/IXServicePortIF/setScriptsToDebug": {
      "summary": "This function allows to set the the property \"scriptsToDebug\".",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_setScriptsToDebug"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_setScriptsToDebug",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method setScriptsToDebug"
    },
    "/IXServicePortIF/loginEloProf": {
      "summary": "This login is used by ELOprofessional applications if the Indexserver is used to forward",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_loginEloProf"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_loginEloProf",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_777531606"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "workflows (WorkflowServer).\n <p>\n This login returns a limited connection to the Indexserver. It is not possible to access\n documents or user data.\n <\/p>"
    },
    "/IXServicePortIF/findContextTerms": {
      "summary": "Find terms for faceted search.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findContextTerms"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findContextTerms",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findContextTerms"
    },
    "/IXServicePortIF/beginEditWorkFlowNode": {
      "summary": "Locks a person task node of an active workflow inside the database and returns data needed to",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_beginEditWorkFlowNode"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_beginEditWorkFlowNode",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1822579866"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "edit it. If lockZ is not set to <code>LockC.NO<\/code>, <code>WFNode.inUseDate<\/code> will be\n set to now."
    },
    "/IXServicePortIF/linkSords2": {
      "summary": "Links archive entries like {@link #linkSords}.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_linkSords2"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_linkSords2",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This method provides the additional parameter {@link LinkSordInfo} to specify more options for\n linking sords together.\n <\/p>"
    },
    "/PluginService/start": {
      "summary": "Start plugin with given ID.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PluginService_start"
              }
            }
          }
        },
        "operationId": "PluginService_start",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "PluginService"
        ]
      },
      "description": "Interface de.elo.ix.client.plugin.PluginService, method start"
    },
    "/HealthCheckService/updateMeanValue": {
      "summary": "Update arithmetic mean.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_HealthCheckService_updateMeanValue"
              }
            }
          }
        },
        "operationId": "HealthCheckService_updateMeanValue",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "HealthCheckService"
        ]
      },
      "description": "This function adds the given mean value to the already existing value\n in the database. The new value is computed as: (db-meanValue * db-sampleSize + meanValue *\n sampleSize) / (db-sampleSize + sampleSize). Example: <code><pre>\n IXConnection conn = ...\n double value = (1.1 + 1.2 + 1.3) / 3;\n conn.getHealthCheckService().updateMeanValue(\"valuename\", 1.2, 3); \n <\/pre><\/code>"
    },
    "/IXServicePortIF/findFirstUsers": {
      "summary": "Find user data.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findFirstUsers"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findFirstUsers",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "This function allows to find users by their name, description, or one of their\n properties. Wildcards can be used as defined in the session options, see\n {@link SessionOptionsC#DB_WILDCARDS}.\n <p>\n Example:\n \n <pre>\n <code class=\"example\">\n FindUserInfo findUserInfo = new FindUserInfo();\n findUserInfo.setName(\"testFind?sers-*\");\n int idx = 0, max = 100;\n FindResult fr = conn.ix().findFirstUsers(findUserInfo, max);\n try {\n   while (true) {\n     for (UserName userName : fr.getUserNames().values()) {\n       // process userName object\n     }\n    \n     if (!fr.isMoreResults()) break;\n   \n     idx += fr.getUserNames().length;\n     fr = conn.ix().findNextUsers(fr.getSearchId(), idx, max);\n   }\n }\n catch (RemoteException e) {\n   // process exception\n   throw e;\n }\n finally {\n   conn.ix().findClose(fr.getSearchId());\n }\n <\/code>\n <\/pre>\n <\/p>\n Additionally, FindResult#sortedResult returns a sorted list of either UserInfo or UserName\n objects, depending on {@link FindUserInfo#returnUserInfoMap}."
    },
    "/IXServicePortIF/findNextNotes": {
      "summary": "Find next notes.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findNextNotes"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findNextNotes",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "This function continues a search for Note objects startet with function\n {@link #findFirstNotes(ClientInfo, FindInfo, int, NoteZ)}."
    },
    "/FeedService/findPostActions": {
      "summary": "Returns a Feedpost with all comments.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_findPostActions"
              }
            }
          }
        },
        "operationId": "FeedService_findPostActions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2013723887"
                }
              }
            }
          }
        },
        "tags": [
          "FeedService"
        ]
      },
      "description": "Interface de.elo.ix.client.feed.FeedService, method findPostActions"
    },
    "/ConfigService/checkinConfigurationsBatch": {
      "summary": "Insert, update, or delete configuration entries.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_ConfigService_checkinConfigurationsBatch"
              }
            }
          }
        },
        "operationId": "ConfigService_checkinConfigurationsBatch",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_86336767"
                }
              }
            }
          }
        },
        "tags": [
          "ConfigService"
        ]
      },
      "description": "Interface de.elo.ix.client.config.ConfigService, method checkinConfigurationsBatch"
    },
    "/IXServicePortIF/configureLicense": {
      "summary": "Read or update license information.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_configureLicense"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_configureLicense",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1330120264"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method configureLicense"
    },
    "/FeedService/checkoutHashTag": {
      "summary": "Read a HashTag Object from Database",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_checkoutHashTag"
              }
            }
          }
        },
        "operationId": "FeedService_checkoutHashTag",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1143177929"
                }
              }
            }
          }
        },
        "tags": [
          "FeedService"
        ]
      },
      "description": "Interface de.elo.ix.client.feed.FeedService, method checkoutHashTag"
    },
    "/IXServicePortIF/finishExport": {
      "summary": "Removes temp-files after an export.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_finishExport"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_finishExport",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This method should be called, after the generated ZIP-archive has been successfully downloaded.\n <\/p>"
    },
    "/IXServicePortIF/terminateWorkFlow": {
      "summary": "Terminates a workflow.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_terminateWorkFlow"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_terminateWorkFlow",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method terminateWorkFlow"
    },
    "/IXServicePortIF/checkoutMapDomain": {
      "summary": "Reads the data of a map domain.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutMapDomain"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutMapDomain",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_42339713"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutMapDomain"
    },
    "/IXServicePortIF/checkoutEsInfo": {
      "summary": "Check out the ElasticSearch informations for ESConfigPage only.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutEsInfo"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutEsInfo",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_736983867"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<b><i>Note: For internal use\n only. Might change in the near future.<\/i><\/b>"
    },
    "/IXServicePortIF/alive": {
      "summary": "Extends the ticket lifetime.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_alive"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_alive",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method alive"
    },
    "/IXServicePortIF/findSearchTerms": {
      "summary": "Corrections and synonyms.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findSearchTerms"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findSearchTerms",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findSearchTerms"
    },
    "/FeedService/createHashTagSubscription": {
      "summary": "Creates a HashTag Subscription",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_createHashTagSubscription"
              }
            }
          }
        },
        "operationId": "FeedService_createHashTagSubscription",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_323351719"
                }
              }
            }
          }
        },
        "tags": [
          "FeedService"
        ]
      },
      "description": "Interface de.elo.ix.client.feed.FeedService, method createHashTagSubscription"
    },
    "/PackageService/checkinPackage": {
      "summary": "Create a {@link PackageData} object.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PackageService_checkinPackage"
              }
            }
          }
        },
        "operationId": "PackageService_checkinPackage",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "tags": [
          "PackageService"
        ]
      },
      "description": "Interface de.elo.ix.client.PackageService, method checkinPackage"
    },
    "/IXServicePortIF/checkinConfigFiles": {
      "summary": "Uploads configuration files to the configuration directory on the server.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinConfigFiles"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinConfigFiles",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinConfigFiles"
    },
    "/IXServicePortIF/checkoutSord": {
      "summary": "Reads the data needed to edit an existing archive entry.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutSord"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutSord",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_820228328"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<table border=\"2\">\n <tr>\n <td>Possible object identifiers (parameter objId)<\/td>\n <td>Usage<\/td>\n <\/tr>\n <tr>\n <td>ID<\/td>\n <td>A numeric object number corresponding to Sord.getId() converted to string<\/td>\n <\/tr>\n <tr>\n <td>GUID<\/td>\n <td>A GUID corresponding to Sord.getGuid()<\/td>\n <\/tr>\n <tr>\n <td>Index value<\/td>\n <td>Use \"OKEY:&lt;index-group-name&gt;=&lt;index-value&gt;\" to select an object by an index\n value, example: \"OKEY:SAPPATH=123124109824123/data\". The wildcards &quot;%&quot; or\n &quot;*&quot; can be used in &lt;index-group-name&gt; or &lt;index-value&gt; to return all or\n any data that matches.<\/td>\n <\/tr>\n <tr>\n <td>Index match value<\/td>\n <td>Use \"LMATCH:&lt;index-group-name&gt;=&lt;fix-value&gt;%&lt;match-value&gt;\" to select an\n object by an index value that starts with &lt;fix-value&gt; and might be followed by\n &lt;match-value&gt;. The object that fits most characters in &lt;match-value&gt; is selected.\n Example: \"LMATCH:ELOINDEX=S%CH\". The wildcards &quot;%&quot; or &quot;*&quot; can be used in\n &lt;index-group-name&gt; or &lt;match-value&gt; to return all or any data that matches. This\n selection mode only be utilized on non-deleted Sords.<\/td>\n <\/tr>\n <tr>\n <td>Archive path<\/td>\n <td>Use \"ARCPATH:&lt;delim-char&gt;&lt;SordName1&gt;&lt;delim-char&gt;&lt;SordName2&gt;...\" to\n select an object by an archive path. This selection mode only be utilized on non-deleted Sords.\n <\/td>\n <\/tr>\n <tr>\n <td>Archive path with base ID<\/td>\n <td>Use\n \"ARCPATH[&lt;ID&gt;]:&lt;delim-char&gt;&lt;SordName1&gt;&lt;delim-char&gt;&lt;SordName2&gt;...\"\n to select an object by an archive path<\/td>\n <\/tr>\n <\/tr>\n <tr>\n <td>MD5 hash<\/td>\n <td>Use \"MD5:&lt;MD5-hash-hex-string&gt;\" to select an object by an MD5 hash. Use upper case\n letters for hexadecimal characters for the hash value.<\/td>\n <\/tr>\n <\/table>\n <p>\n The object can be locked against concurrent modification if <code>lockZ<\/code> is set to\n <code>lockZ.YES<\/code>."
    },
    "/IXServicePortIF/findFirstTasks": {
      "summary": "Finds reminders, activities and active workflow nodes.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findFirstTasks"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findFirstTasks",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findFirstTasks"
    },
    "/IXServicePortIF/insertPublicDownload": {
      "summary": "Creates and inserts a new public download",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_insertPublicDownload"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_insertPublicDownload",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2062827124"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method insertPublicDownload"
    },
    "/IXServicePortIF/createWFNode": {
      "summary": "Initalizes a WFNode object.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createWFNode"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createWFNode",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2015686193"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n WFNode.userId is set to WFNodeC.USERID_OWNER if the supplied type is a person node.\n <\/p>"
    },
    "/RawStreamService/download": {
      "summary": "Download a stream",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_RawStreamService_download"
              }
            }
          }
        },
        "operationId": "RawStreamService_download",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_15"
                }
              }
            }
          }
        },
        "tags": [
          "RawStreamService"
        ]
      },
      "description": "Interface de.elo.ix.client.compatibility.RawStreamService, method download"
    },
    "/IXServicePortIF/createNote": {
      "summary": "Returns an initialized, temporary Note object.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createNote"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createNote",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_937420667"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method createNote"
    },
    "/IXServicePortIF/findFirstWorkflows": {
      "summary": "Finds active workflows.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findFirstWorkflows"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findFirstWorkflows",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This method returns all active workflows for the current user.\n <\/p>"
    },
    "/IXServicePortIF/checkoutMapHistory": {
      "summary": "Reads the history entries for the given map.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutMapHistory"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutMapHistory",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1756288553"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n History entries are only written for MapDomain objects with {@link MapDomain#history}=true. For\n MapDomain objects with {@link MapDomain#history}=false, an empty array is returned. If no\n history entries exist for the given domainName and mapId, an empty array is returned.\n <\/p>"
    },
    "/FioService/finishExport": {
      "summary": "Reserved.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FioService_finishExport"
              }
            }
          }
        },
        "operationId": "FioService_finishExport",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1700162512"
                }
              }
            }
          }
        },
        "tags": [
          "FioService"
        ]
      },
      "description": "Interface de.elo.ix.client.fio.FioService, method finishExport"
    },
    "/IXServicePortIF/createAspect": {
      "summary": "Initialize an {@link Aspect} object.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createAspect"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createAspect",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_382788180"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Note: The name and type of an aspect line is fixed with\n the initial value during the first check in and cannot be changed later."
    },
    "/IXServicePortIF/createAspectAssoc": {
      "summary": "Initializes an {@link AspectAssoc} object. All parameters are mandatory.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createAspectAssoc"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createAspectAssoc",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1696936442"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method createAspectAssoc"
    },
    "/IXServicePortIF/addUrlParams": {
      "summary": "Adds additional params to an upload or download URL.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_addUrlParams"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_addUrlParams",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n Currently, additional params are only available for download URLs.\n <\/p>"
    },
    "/IXServicePortIF/findNextTasks": {
      "summary": "Continues the find process started with findFirstTasks.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findNextTasks"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findNextTasks",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findNextTasks"
    },
    "/IXServicePortIF/deleteActivityProject": {
      "summary": "This function deletes an activity project from the database.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteActivityProject"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteActivityProject",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The current session must have the permission AccessC.FLAG_EDITACT in order to call this\n function.\n <\/p>"
    },
    "/MyELOService/readHashTagCloud": {
      "summary": "Returns HashTagCloud informations.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_MyELOService_readHashTagCloud"
              }
            }
          }
        },
        "operationId": "MyELOService_readHashTagCloud",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1698025638"
                }
              }
            }
          }
        },
        "tags": [
          "MyELOService"
        ]
      },
      "description": "Currently HtCloudInfo is not used. Set null instead. Default values for HashTagCloud:\n Timeperiod: 8 Weeks. HashTagCount: 20."
    },
    "/IXServicePortIF/getAclAccess": {
      "summary": "Returns the access of the given ACL.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getAclAccess"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getAclAccess",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_200528028"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getAclAccess"
    },
    "/IXServicePortIF/cleanupStop": {
      "summary": "<code>cleanupStop(ClientInfo ci)<\/code> stops the cleaning as soon as possible finishing open",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_cleanupStop"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_cleanupStop",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "transactions first.\n <p>\n The call returns, when the background cleaner has been stopped. Only users owning main\n administrative rights may clean up archives.\n <\/p>"
    },
    "/IXServicePortIF/getExportZipUrl": {
      "summary": "Gets the URL for downloading the generated ZIP-archive of this export.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getExportZipUrl"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getExportZipUrl",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getExportZipUrl"
    },
    "/IXServicePortIF/deleteReport": {
      "summary": "Deletes report entries until <code>endDateISO<\/code>.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteReport"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteReport",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteReport"
    },
    "/IXServicePortIF/checkoutNoteTemplates": {
      "summary": "Read the stamp definitions from the users options.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutNoteTemplates"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutNoteTemplates",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1443841819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutNoteTemplates"
    },
    "/IXServicePortIF/checkinEsSettings": {
      "summary": "Check in ElasticSearch settings for ESConfigPage only. <b><i>Note: For internal use only.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinEsSettings"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinEsSettings",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_460462395"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Might\n change in the near future.<\/i><\/b>"
    },
    "/IXServicePortIF/checkoutCryptInfos": {
      "summary": "Read and optionally lock the password information for document encryption.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutCryptInfos"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutCryptInfos",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_809229049"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutCryptInfos"
    },
    "/IXServicePortIF/checkinDocEnd": {
      "summary": "Checks in an uploaded document.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinDocEnd"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinDocEnd",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_341056676"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n See <code>checkinDocBegin<\/code>, if you want to checkin new document or attachment version(s).\n <\/p>\n <p>\n Changing the document or attachment work version, version number, comment, flags or status: <code><br/><br/>\n Document doc = new Document();<br/>\n doc.objId = an object ID or GUID<br/>\n doc.docs = new DocVersion[] {new DocVersion()};<br/>\n doc.docs[0].id = a document ID;<br/>\n doc.docs[0].workVersion = true;<br/>\n doc.docs[0].version = \"2.0\";<br/>\n doc.docs[0].comment = \"new comment\";<br/>\n doc.docs[0].milestone = true;<br/>\n doc.docs[0].deleted = false;<br/>\n ix.checkinDocEnd(ci, null, null, doc, LOCK.NO);<br/>\n <\/code>\n <\/p>\n <p>\n If the supplied sord has <code>sord.type==LBT_DOCUMENT<\/code>, sord.type will be detected from the file extension\n of the given work version.\n <\/p>\n <p>\n If the document is only to be unlocked, see <code>checkinSord<\/code>.\n <\/p>"
    },
    "/IXServicePortIF/deleteSubstitutions": {
      "summary": "Delete substitutions by its GUIDs.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteSubstitutions"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteSubstitutions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The current user is allowed to delete a substitution where Substitution.user is user A, if:\n <\/p>\n <ul>\n <li>The current user created the substitution ({@link Substitution#creatorId}\n <li>The current user is a sub administrator of A\n <li>The current user is a direct superior of A (ignoring groups, {@link UserInfo#superiorId} of\n A must be the current user)\n <li>The current user has main administrator rights.\n <\/ul>"
    },
    "/IXServicePortIF/editPublicDownloadUrls": {
      "summary": "Edits the public downloads",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_editPublicDownloadUrls"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_editPublicDownloadUrls",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method editPublicDownloadUrls"
    },
    "/IXServicePortIF/findActivityProjects": {
      "summary": "This function reads all activity projects.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findActivityProjects"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findActivityProjects",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_607287445"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findActivityProjects"
    },
    "/IXServicePortIF/deleteMapDomain": {
      "summary": "Deletes a map domain and removes the associated database tables.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteMapDomain"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteMapDomain",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteMapDomain"
    },
    "/IXServicePortIF/linkSords": {
      "summary": "Links archive entries.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_linkSords"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_linkSords",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n Links are associations between archive entries and are independent from the archive hierarchy.\n <\/p>\n <p>\n The links to or from an archive entry are listed in <code>Sord.linksGoOut<\/code> and\n <code>Sord.linksComeIn<\/code>. In the database structure and in the Indexserver API, links are\n vectors that point from one Sord to one or more other Sords. But the client applications\n usually do not take care of the direction. They add the links found in Sord.linksGoOut and\n Sord.linksComeIn in order to show the liked objects.\n <\/p>\n <p>\n There are two different types of links: pairs and cross-links. A pair connects exactly two Sord\n objects. Each pair has its own link-ID in the database. A cross-link connects a group of\n objects under the same link-ID. At the first glance it seems, that each object has a pair-link\n to each other object. But there is a significant difference when deleting links. E.g. if the\n Sord objects sord1, sord2, sord3 are connected with a cross-link, function checkoutSord will\n return for sord1: {sord2, sord3}, sord2: {sord1, sord3} and sord3: {sord1, sord2}. If function\n unlinkSords is called for the link sord1-sord2 (fromSord=sord1, toSords=[sord2]), the next\n calls to checkoutSord will return for sord1: {sord3}, sord2: {}, sord3: {sord1}. If the objects\n were connected by pair-links, the result would be sord1: {sord3}, sord2: {sord3}, sord3:\n {sord1, sord2}.\n <\/p>"
    },
    "/IXServicePortIF/checkinDocMaskLineTemplate": {
      "summary": "Writes a keyword template into the database.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinDocMaskLineTemplate"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinDocMaskLineTemplate",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "If this keyword template is already used in\n keywording forms, these keywording forms will be updated. This function requires ELO 10\n license."
    },
    "/IXServicePortIF/exportWorkflow": {
      "summary": "Exports the workflow-version.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_exportWorkflow"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_exportWorkflow",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_888671717"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method exportWorkflow"
    },
    "/FeedService/registerNotify": {
      "summary": "Register a callback interface.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_registerNotify"
              }
            }
          }
        },
        "operationId": "FeedService_registerNotify",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "FeedService"
        ]
      },
      "description": "The server calls functions of this interface if the document\n feed is modified."
    },
    "/IXServicePortIF/checkinConfigFilesEnd": {
      "summary": "Finishes a check-in procedure for configuration files.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinConfigFilesEnd"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinConfigFilesEnd",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1737266313"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n For files that have been uploaded into the in-tray folder of other users, no\n <code>ConfigFile<\/code> object can be returned, because the in-tray folders of other users are\n not readable.\n <\/p>"
    },
    "/IXServicePortIF/createWorkFlow": {
      "summary": "Prepares a WFDiagram structure.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createWorkFlow"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createWorkFlow",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1663767661"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method createWorkFlow"
    },
    "/IXServicePortIF/createUser": {
      "summary": "Creates an object for user data.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createUser"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createUser",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1485735592"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The returned <code>UserInfo<\/code> object is initialized with default values. User rights and\n keys are copied from the user <code>rightsAsUserId<\/code>.\n <\/p>\n\n <p>\n This function does not create a new user in the archive database. To insert a new user into the\n database the function <code>checkinUsers<\/code> must be used after the user has been created\n with<code>createUser<\/code>.\n <\/p>\n\n <p>\n If the user calling this function is a main administrator (has right AccessC.FLAG_ADMIN), the\n created user will have the same <code>UserInfo.parent<\/code> as the user specified in\n <code>rightsAsUserId<\/code>. If the user calling this function is a sub-administrator (has\n right AccessC.FLAG_SUBADMIN), the parent of the created user is the id of the calling user.\n <\/p>"
    },
    "/IXServicePortIF/checkoutReminders": {
      "summary": "Reads and locks a reminder object.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutReminders"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutReminders",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1701141707"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutReminders"
    },
    "/IXServicePortIF/checkinConfigFilesBegin": {
      "summary": "Prepare ConfigFile objects with URLs to upload configuration or intray files.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinConfigFilesBegin"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinConfigFilesBegin",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1737266313"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "The\n <code>names[.]<\/code> the must contain the destination directory and file name.\n <table border=\"2\">\n <tr>\n <td>example for file names<\/td>\n <td>description<\/td>\n <\/tr>\n <tr>\n <td><code>names[.]=peter/postbox/file1.txt<\/code><\/td>\n <td>Prepares a <code>ConfigFile<\/code> object to write file1.txt into peter s server side\n intray directory<\/td>\n <\/tr>\n <tr>\n <td><code>configFile[.].dir=eloscripts/file1.txt<\/code><\/td>\n <td>Prepares a <code>ConfigFile<\/code> object to write file1.txt into the directory for\n scripts.<\/td>\n <\/tr>\n <\/table>\n \n <pre>\n <code>\n //Example for uploading a file into the server side intray of a user.\n IXConnection conn = ...\n String userName = ...\n File file = ...\n String destFile = userName + \"/\" + CONST.CONFIG_FILE.POSTBOX + \"/\" + file.getName();\n ConfigFile[] configFiles = conn.ix().checkinConfigFilesBegin(new String[] {destFile});\n String uploadResult = conn.upload(configFiles[0].url, file);\n configFiles[0].setUploadResult(uploadResult);\n configFiles = conn.ix().checkinConfigFilesEnd(configFiles);<br/>\n <\/code>\n <\/pre>\n <\/p>"
    },
    "/IXServicePortIF/checkinSord": {
      "summary": "Writes or inserts a archive entry into the database.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinSord"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinSord",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n A new object does not have to be created with <code>createSord<\/code>. If the object is missing\n a GUID then a new one is created.\n <\/p>\n <p>\n If the Sord object is only to be unlocked <code>sordZ = SordC.mbOnlyUnlock<\/code> should be\n used and a minimum of <code>Sord.id<\/code> or <code>Sord.guid<\/code> must be set.\n <\/p>"
    },
    "/IXServicePortIF/checkoutKeywordList": {
      "summary": "Reads a keyword list.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutKeywordList"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutKeywordList",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1495731174"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This function internally calls checkoutKeywords.\n <\/p>"
    },
    "/IXServicePortIF/checkoutPreviewImageURLs": {
      "summary": "Generates URLs for preview images of documents.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutPreviewImageURLs"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutPreviewImageURLs",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_661820173"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutPreviewImageURLs"
    },
    "/IXServicePortIF/processFindResult": {
      "summary": "Executes the processing information given by <code>processInfo<\/code> for all objects found by",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_processFindResult"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_processFindResult",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1436376940"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "a <code>findFirstSords<\/code> call."
    },
    "/IXServicePortIF/checkinCryptInfos": {
      "summary": "Write and optionally unlock encryption information.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinCryptInfos"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinCryptInfos",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The passwords supplied in cryptInfos must be encrypted with the IXClient.encryptPassword\n function.\n <\/p>\n <p>\n Administrators are allowed to alter internal keys and encryption set names.\n <table border=\"2\">\n <tr>\n <td>cryptInfos[.].keyInfo<\/td>\n <td>Description<\/td>\n <\/tr>\n <tr>\n <td>*<\/td>\n <td>Generate new internal keys and set cryptInfos[.].pwd as external password.<\/td>\n <\/tr>\n <tr>\n <td>Value from another ELO system<\/td>\n <td>Set this value as internal and external key pair. cryptInfos[.].pwd is ignored.<\/td>\n <\/tr>\n <\/table>\n <\/p>"
    },
    "/IXServicePortIF/startAdHocWorkFlow3": {
      "summary": "Starts an Ad Hoc Workflow.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_startAdHocWorkFlow3"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_startAdHocWorkFlow3",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method startAdHocWorkFlow3"
    },
    "/IXServicePortIF/startAdHocWorkFlow2": {
      "summary": "Starts an Ad Hoc Workflow.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_startAdHocWorkFlow2"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_startAdHocWorkFlow2",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method startAdHocWorkFlow2"
    },
    "/IXServicePortIF/testAdapter": {
      "summary": "This function is used for testing.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_testAdapter"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_testAdapter",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1888107655"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n In productive environments it always throws an exception.\n <\/p>"
    },
    "/IXServicePortIF/terminatePublicDownloadUrls": {
      "summary": "Deletes the public downloads",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_terminatePublicDownloadUrls"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_terminatePublicDownloadUrls",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method terminatePublicDownloadUrls"
    },
    "/FioService/startExport": {
      "summary": "Reserved.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FioService_startExport"
              }
            }
          }
        },
        "operationId": "FioService_startExport",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1700162512"
                }
              }
            }
          }
        },
        "tags": [
          "FioService"
        ]
      },
      "description": "Interface de.elo.ix.client.fio.FioService, method startExport"
    },
    "/IXServicePortIF/deleteNoteTemplates": {
      "summary": "Delete the stamp definition with the given ID.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteNoteTemplates"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteNoteTemplates",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteNoteTemplates"
    },
    "/IXServicePortIF/executeRegisteredFunctionString": {
      "summary": "Execute a registered function defined in a JavaScript or in an event handler.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_executeRegisteredFunctionString"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_executeRegisteredFunctionString",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method executeRegisteredFunctionString"
    },
    "/IXServicePortIF/checkoutStorage": {
      "summary": "checkoutStorage retrieves an array of configured paths from the Document Manager.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutStorage"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutStorage",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_231031238"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "The contents\n matches the table &lt;elodmpath&gt;."
    },
    "/IXServicePortIF/registerOcrWorker": {
      "summary": "This function is called from an OCR worker process to notify Indexserver about its state.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_registerOcrWorker"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_registerOcrWorker",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_730157667"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The behavior of a OCR worker process is beyond the API documentation. Contact ELO support, if a\n different OCR has to be integrated.\n <\/p>"
    },
    "/FeedService/findFirstActions": {
      "summary": "Find actions of document feeds.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_FeedService_findFirstActions"
              }
            }
          }
        },
        "operationId": "FeedService_findFirstActions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "FeedService"
        ]
      },
      "description": "<p>\n In order to receive all actions for a document feed, call this function with\n {@link FindActionsInfo#objId} set to a Sord ID, GUID, etc. The results are returned in\n {@link FindResult#getActions()}. The Feed object associated to the Sord is returned in\n {@link FindResult#getFeeds()}.\n <\/p>\n <p>\n Call IXServicePortIF.findClose to release internal resources when finished.\n <\/p>"
    },
    "/IXServicePortIF/findNextActivities": {
      "summary": "This function reads the next activites of an object.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_findNextActivities"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_findNextActivities",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1301335819"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method findNextActivities"
    },
    "/IXServicePortIF/checkinSubscription": {
      "summary": "Add a subscription.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinSubscription"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinSubscription",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_323351719"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkinSubscription"
    },
    "/ConfigService/checkoutConfigurations": {
      "summary": "Read configuration entries.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_ConfigService_checkoutConfigurations"
              }
            }
          }
        },
        "operationId": "ConfigService_checkoutConfigurations",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_86336767"
                }
              }
            }
          }
        },
        "tags": [
          "ConfigService"
        ]
      },
      "description": "Interface de.elo.ix.client.config.ConfigService, method checkoutConfigurations"
    },
    "/IXServicePortIF/checkoutNotification": {
      "summary": "Reads Notification for a watchGuid / userGuid combination",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutNotification"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutNotification",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_494610451"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "if userGuid is null, the own Guid will be taken if userGuid is not the own Guid, admin rights\n are needed"
    },
    "/IXServicePortIF/checkoutActivityProject": {
      "summary": "This function reads and optionally locks an activity project.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutActivityProject"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutActivityProject",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2121298555"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutActivityProject"
    },
    "/IXServicePortIF/createNote2": {
      "summary": "Returns an initialized, temporary Note object.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createNote2"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createNote2",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_937420667"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The object is initialized by the given note template. Placeholders are replaced by the current\n values.\n <\/p>"
    },
    "/IXServicePortIF/deleteTranslateTerms": {
      "summary": "Delete terms from the translation table.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteTranslateTerms"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteTranslateTerms",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This function should not be called frequently, because it causes the translation cache to be\n reloaded.\n <\/p>"
    },
    "/SystemInformation/licenseReport": {
      "summary": "Delegeates the AM license report.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_SystemInformation_licenseReport"
              }
            }
          }
        },
        "operationId": "SystemInformation_licenseReport",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1320348587"
                }
              }
            }
          }
        },
        "tags": [
          "SystemInformation"
        ]
      },
      "description": "Interface de.elo.ix.client.system.SystemInformation, method licenseReport"
    },
    "/IXServicePortIF/createKey": {
      "summary": "Creates and initializes a key object.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createKey"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createKey",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1537059480"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method createKey"
    },
    "/IXServicePortIF/checkinReminder": {
      "summary": "Inserts or updates a reminder object.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinReminder"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinReminder",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_100361105"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n <code>Reminder.receiverId = -1<\/code> should be set if receiverId is to be ignored.\n <code>Reminder.receiverName = null<\/code> should be set if the receiverName is to be ignored.\n <\/p>"
    },
    "/IXServicePortIF/cleanupStart": {
      "summary": "<code>cleanupStart(ClientInfo ci)<\/code> removes all deleted objects and related entries from",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_cleanupStart"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_cleanupStart",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "the archive database.\n <p>\n Once started the call returns immediately, while the unique background thread cleans the\n archive until it finishes or <code>cleanupStart(ClientInfo ci)<\/code> is called. Only users\n owning main administrator rights may clean up archives.\n <\/p>"
    },
    "/PluginService/getPlugin": {
      "summary": "Return the plugin with the given symbolic name.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PluginService_getPlugin"
              }
            }
          }
        },
        "operationId": "PluginService_getPlugin",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1597637633"
                }
              }
            }
          }
        },
        "tags": [
          "PluginService"
        ]
      },
      "description": "If no plugin with the given name is running, an\n exception with code IXExceptionC#NOT_FOUND is thrown."
    },
    "/IXServicePortIF/checkoutSordHistory": {
      "summary": "<code>checkoutSordHistory<\/code> retrieves all history entries related to a given object.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutSordHistory"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutSordHistory",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_491352407"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method checkoutSordHistory"
    },
    "/IXServicePortIF/deleteReminders": {
      "summary": "Deletes the reminders (logically) with the the given IDs.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deleteReminders"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deleteReminders",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method deleteReminders"
    },
    "/IXServicePortIF/deactivateSubstitution": {
      "summary": "Deactivate the submitted substitution.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deactivateSubstitution"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deactivateSubstitution",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n Deactivates a submitted substitution if the substitution was activated manually (Substitution's\n {@link SubstitutionSettings#canBeActivatedManually} must be set to <code>true<\/code>) and it is\n outside of any substitution period (defined in {@link Substitution#substitutionPeriods}\n <\/p>\n \n <p>\n A substitution can be deactivated by the current user, if:\n <ul>\n <li>The current user is the substitute ({@link Substitution#substituteId}\n <li>The current user is member of the group who is the substitute\n <li>The current user is sub administrator of the substitute\n <li>The current user is the direct superior of the substitute (ignoring groups,\n {@link UserInfo#superiorId} of the substitute must be the current user)\n <li>The current user has main administrator rights.\n <\/ul>"
    },
    "/ConfigService/deleteConfiguration": {
      "summary": "Deletes a configuration entry.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_ConfigService_deleteConfiguration"
              }
            }
          }
        },
        "operationId": "ConfigService_deleteConfiguration",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "ConfigService"
        ]
      },
      "description": "Interface de.elo.ix.client.config.ConfigService, method deleteConfiguration"
    },
    "/IXServicePortIF/checkinUser": {
      "summary": "Update or insert a user or group.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinUser"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinUser",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_5"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "This function internally calls\n {@link #checkinUsers(ClientInfo, UserInfo[], CheckinUsersZ, LockZ)} for one user object."
    },
    "/IXServicePortIF/checkoutActivity": {
      "summary": "This function reads and optionally locks an activity.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkoutActivity"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkoutActivity",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_460199434"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n The current session must be sender or receiver of the activity (Acitivty.senderId,\n Activity.receiverId).\n <\/p>"
    },
    "/IXServicePortIF/internalReceiveEvents": {
      "summary": "Read events from the server.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_internalReceiveEvents"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_internalReceiveEvents",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_910482075"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n This function should not be called directly. It is used internally by the event bus helper\n object of <code>IXConnection<\/code>.\n <\/p>"
    },
    "/IXServicePortIF/getArchiveStatistics": {
      "summary": "Read characteristical properties of the archive.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getArchiveStatistics"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getArchiveStatistics",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_2056457945"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getArchiveStatistics"
    },
    "/IXServicePortIF/deferWorkFlowNode": {
      "summary": "<p>",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_deferWorkFlowNode"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_deferWorkFlowNode",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_19"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Sets the value userDelayDateIso of the given node.\n <\/p>"
    },
    "/IXServicePortIF/getImportZipUrl": {
      "summary": "Retrieves the URL for uploading the ZIP-archive for this import.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_getImportZipUrl"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_getImportZipUrl",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_10"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "Interface de.elo.ix.client.IXServicePortIF, method getImportZipUrl"
    },
    "/PluginService/getPlugins": {
      "summary": "Return a list of installed plugins.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_PluginService_getPlugins"
              }
            }
          }
        },
        "operationId": "PluginService_getPlugins",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_1118179461"
                }
              }
            }
          }
        },
        "tags": [
          "PluginService"
        ]
      },
      "description": "Interface de.elo.ix.client.plugin.PluginService, method getPlugins"
    },
    "/IXServicePortIF/checkinSubstitutions": {
      "summary": "Insert new substitutions or update existing ones.",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_checkinSubstitutions"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_checkinSubstitutions",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_954316611"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "<p>\n New substitutions are added if {@link Substitution#guid} is empty, existing ones are updated if\n {@link Substitution#guid} is set.\n <\/p>\n \n <p>\n The current user is allowed to create a substitution where Substitution.user is user A, if:\n <\/p>\n <ul>\n <li>The current user is user A\n <li>The current user is a sub administrator of A\n <li>The current user is a direct superior of A (ignoring groups, {@link UserInfo#superiorId} of\n A must be the current user)\n <li>The current user has main administrator rights.\n <\/ul>\n \n <p>\n The current user is allowed to change a substitution where Substitution.user is user A, if:\n <\/p>\n <ul>\n <li>The current user is a sub administrator of A\n <li>The current user is a direct superior of A (ignoring groups, {@link UserInfo#superiorId} of\n A must be the current user)\n <li>The current user has main administrator rights.\n <li>The current user created the substitution ({@link Substitution#creatorId}\n <\/ul>"
    },
    "/IXServicePortIF/createSord": {
      "summary": "Creates an object containing all the data needed to edit the indexing information of a new",
      "post": {
        "security": [
          {
            "apiKey": [],
            "bearer": [],
            "basic": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BRequest_IXServicePortIF_createSord"
              }
            }
          }
        },
        "operationId": "IXServicePortIF_createSord",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BResult_820228328"
                }
              }
            }
          }
        },
        "tags": [
          "IXServicePortIF"
        ]
      },
      "description": "archive entry.\n <p>\n The function does not insert the new object into the database. <code>checkinSord<\/code> is used\n to insert a new object in the database.\n <\/p>\n <p>\n This function can also be used to retrieve the lists of storage masks, markers (colours) etc.\n For this purpose parameter <code>parentId=null<\/code> must be set along with\n <code>maskId=null<\/code> and supply <code>EditInfoC.mbBasicData<\/code> for\n <code>editInfoZ<\/code>.\n <\/p>\n <p>\n To create and initialize an object for indexing information, parameter <code>editInfoZ<\/code>\n must include bit <code>EditInfoZ.mbSordMembers<\/code>, e. g. <code>EditInfoZ.mbSord<\/code>.\n Parameter <code>parentId<\/code> can specify the ID or GUID of the parent entry in the archive\n hierarchy. Access rights and replication information are initialized from the parent.\n <\/p>\n <p>\n The <code>maskId<\/code> parameter is the name or ID of a storage mask that defines a template\n for the indexing information. If <code>maskId<\/code> is null or empty, the function tries to\n assign the mask with GUID <code>DocMaskC.GUID_FOLDER<\/code>. If this mask cannot be found, the\n default folder mask defined in the configuration options of the Windows CLIENT is used. If this\n mask is also not found, the behavior is unpredictable and a -1 might be returned in sord.mask.\n <\/p>\n <p>\n The parameters <code>parentId<\/code> and <code>maskId<\/code> are unchecked if an event script\n {@link IXServerEvents#onCreateSord(IXServerEventsContext, String, String, EditInfoZ)} is\n configured. In this case, both can have arbitrary values.\n <\/p>"
    }
  },
  "info": {
    "title": "Indexserver",
    "version": "23.0.0.0"
  }
}