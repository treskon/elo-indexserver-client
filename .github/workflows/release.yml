name: release
on:
  push:
    tags:
      - 'releases/stable-*'
      - 'releases/test-release/*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: Run tests
        env:
          TEST_ELO_IX_URL: ${{ secrets.TEST_ELO_IX_URL }}
          TEST_ELO_IX_USER: ${{ secrets.TEST_ELO_IX_USER }}
          TEST_ELO_IX_PASSWORD: ${{ secrets.TEST_ELO_IX_PASSWORD }}
        run: poetry run python -m unittest discover test
      - name: Build documentation
        run: make html SPHINXBUILD="poetry run sphinx-build"
      - name: Fix permissions on documentation
        run: |
          chmod -c -R +rX "_build/html/" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done
      - name: Archive documentation
        uses:  actions/upload-pages-artifact@v3
        with:
          path: _build/html
  deploy-documentation:
    needs: build

    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
        - name: Deploy Doc to githubpages
          uses: actions/deploy-pages@v4
  release-pypip:
    needs:
        - build
        - deploy-documentation
    environment: pypi
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install
      - name: release to pypi
        run: poetry publish --build
        env:
          POETRY_PYPI_TOKEN: ${{ secrets.POETRY_PYPI_TOKEN }}

